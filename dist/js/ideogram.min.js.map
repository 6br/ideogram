{"version":3,"sources":["range.js","model-adapter.js","model-no-bands-adapter.js","layouts/layout.js","layouts/horizontal-layout.js","layouts/vertical-layout.js","layouts/paired-layout.js","layouts/small-layout.js","ploidy.js","color.js","views/chromosome.js","views/telocentric-chromosome.js","views/metacentric-chromosome.js","lib.js","views/chromosome-util.js","core.js","filter.js"],"names":["Range","data","this","_data","ModelAdapter","model","_model","_class","ModelNoBandsAdapter","call","Layout","config","ideo","_config","_ideo","_ploidy","_translate","undefined","_tickSize","_isRotated","HorizontalLayout","_margin","left","top","VerticalLayout","PairedLayout","SmallLayout","Ploidy","_description","_normalize","ploidyDesc","Color","Chromosome","adapter","_adapter","getModel","_color","_bumpCoefficient","TelocentricChromosome","_pArmOffset","MetacentricChromosome","naturalSort","a","b","q","r","c","d","e","f","g","h","i","insensitive","toLowerCase","replace","j","k","l","split","m","n","parseInt","match","length","Date","parse","o","p","parseFloat","s","t","u","v","Math","max","isNaN","test","localeCompare","w","abs","slugify","value","ChromosomeUtil","node","_node","prototype","getStart","start","getStop","stop","getLength","getColor","chrNumber","ploidy","_getColor","Array","isArray","color","getInstance","bands","getCssClass","Object","create","width","push","name","px","perspective","rows","orientation","_getLeftMargin","_getYScale","chrWidth","getChromosomeLabels","chrElement","util","getSetLabel","getLabel","filter","rotateBack","Error","rotateForward","rotate","chrSetNumber","otherChrs","d3","selectAll","selector","style","getChromosomeLabelClass","_getAdditionalOffset","annotationHeight","numAnnotTracks","_getChromosomeSetSize","setSize","getSetSize","getMargin","getHeight","getChromosomeBandTickY1","getChromosomeBandTickY2","getChromosomeBandLabelTranslate","getChromosomeSetLabelAnchor","getChromosomeBandLabelAnchor","getChromosomeLabelXPosition","getChromosomeLabelYPosition","getChromosomeSetLabelYPosition","getChromosomeSetLabelXPosition","getChromosomeSetLabelTranslate","getChromosomeSetTranslate","getChromosomeSetYTranslate","margin","setNumber","callback","xOffset","ideoBox","select","getBoundingClientRect","chrBox","scaleX","height","scaleY","yOffset","transform","parentNode","transition","attr","on","labels","getSvg","append","enter","text","String","translate","remove","taxId","numChromosomes","chromosomes","lastSetOffset","lastSetSize","band","x","round","y","leftMargin","chromosomeSetYTranslate","chrMargin","self","chrHeight","marginTop","pad","annotationsLayout","prevTranslate","translateY","Number","organisms","getTaxids","taxIdList","size","rowSize","additionalPadding","getChromosomesNumber","chrSetCode","keys","description","normalized","key","ancestors","existence","_getexistenceArray","array","getAncestor","exists","armNumber","desc","getArmColor","armColors","_getPolyploidArmColor","getBorderColor","ancestor","centromerePosition","_addPArmShape","clipPath","isPArmRendered","concat","_getPArmShape","_addQArmShape","isQArmRendered","_getQArmShape","render","container","id","_renderPArm","_renderQArm","_renderRangeSet","strokeWidth","path","class","rangeSet","range","chr","map","rangesContainer","bandsXOffset","_bandsXOffset","startPx","convertBpToPx","lengthPx","_getShapeData","firstQBand","lastBand","rightTerminalPosition","x1","x2","x3","x2b","_renderBands","arm","fill","stain","Boolean","G","Q","process","nextTick","B","X","document","createTextNode","observe","characterData","MessageChannel","port1","onmessage","port2","postMessage","setTimeout","J","tt","require","runOnLoop","runOnContext","constructor","rt","_state","arguments","_result","E","_","TypeError","then","ut","error","S","_label","it","st","et","resolve","nt","A","_onerror","T","ot","_subscribers","M","P","ct","C","O","at","Y","_t","promise","I","F","D","K","L","N","_instanceConstructor","_input","_remaining","_enumerate","U","W","global","Function","Promise","toString","cast","pt","z","H","R","window","V","MutationObserver","WebKitMutationObserver","Z","$","Uint8ClampedArray","importScripts","random","substring","ft","lt","ht","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","_settledAt","_willSettleAt","dt","vt","polyfill","define","amd","module","exports","ES6Promise","slice","apply","forEach","Ideogram","rect","JSON","stringify","_layout","debug","dataDir","resolution","showChromosomeLabels","querySelector","showBandLabels","showFullyBanded","brush","bump","adjustedBump","chromosome","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","9606","commonName","scientificName","scientificNameAbbr","assemblies","default","GRCh38","GRCh37","10090","4641","chromosomesArray","bandsToShow","bandData","init","getBands","content","taxid","lines","delimiter","tsvLines","columns","line","tsvLinesLength","source","firstColumn","tmp","chrBands","eval","indexOf","chromosomeName","getChromosomeModel","chrIndex","pxStop","chrLength","cs","hasBands","type","fullChromosomeLabels","orgName","csLength","pcenIndex","scale","multiorganism","drawChromosomeLabels","chromosomeLabelClass","chrSetLabelXPosition","chrSetLabelTranslate","each","reverse","fullLabels","setLabelTranslate","drawBandLabels","chrs","chrModel","textOffsets","overlappingLabelXRight","index","prevHiddenBoxIndex","xLeft","prevLabelXRight","textPadding","textsLength","indexesToShow","prevTextBoxLeft","prevTextBoxWidth","selectorsToShow","ithLength","rotateChromosomeLabels","scaleSvg","tracksHeight","hasOwnProperty","ci","chrMargin2","rotateBandLabels","bandLabels","coord","drawChromosome","rotateAndToggleDisplay","_groups","bpToIscnScale","offset","pxStart","pxLength","iscnStart","iscnStop","iscnLength","bpStart","bpStop","bpLength","convertPxToBp","pxToIscnScale","drawSynteny","syntenicRegions","r1","r2","syntenies","opacity","regionID","t0","getTime","insert","regions","stopPx","syntenicRegion","activeRegion","others","classed","t1","console","log","annotationsPath","localAnnotationsPath","annots","annotations","annotHeight","annotationTracks","barWidth","annotationsColor","drawAnnots","friendlyAnnots","annot","rawAnnot","rawAnnots","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","getHistogramBars","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","histogramScaling","firstGet","numBins","count","barAnnots","barCount","fillAnnots","filledAnnots","chrArray","layout","triangle","circle","chrAnnot","y1","y2","thisChrWidth","createBrush","from","to","extent","event","selection","xScale","invert","floor","ceil","selectedRegion","x0","chrLengthBp","scaleLinear","domain","right","brushX","yTranslate","move","getBandColorGradients","colors","color1","color2","color3","css","gradients","getTaxidFromEutils","organism","taxonomySearch","json","esearchresult","idlist","taxids","org","orgs","taxidInit","tmpChrs","assembly","urlOrg","fullyBandedTaxids","chromosomesUrl","request","get","asmAndChrArray","seenChrs","response","chromsomes","sort","sortChromosomes","getAssemblyAndChromosomesFromEutils","asmChrArray","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","links","ntSummary","results","result","cnIndex","rsuid","assemblyaccession","qs","linksets","linksetdbs","join","genome","subtype","subname","substr","slen","initDrawChromosomes","bandsArray","defs","processBandData","bandsByChr","chrsByTaxid","t0B","t1B","writeContainer","svgClass","svgHeight","html","finishInit","pa","timeout","clearTimeout","crossfilter","initCrossFilter","t0A","checkAnnotData","t0C","t1C","chrID","t1A","numBandDataResponses","accession","bandFileName","bandDataFileNames","unpackAnnots","unpackedAnnots","packAnnots","facet","annotsByFacet","facets","dimension","filterAnnots","selections","fn","now","counts","group","Infinity","filterAll","label","setLabel"],"mappings":"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","file":"ideogram.min.js","sourcesContent":["/**\n * Chromosome range.\n * @public\n * @class\n * @param {Object} data - range data.\n * @param {Integer} data.chr - chromosome index.\n * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n * @param {Integer} data.start - range start.\n * @param {Integer} data.stop - range end.\n * @param {String} data.color - range color.\n */\nfunction Range(data) {\n  this._data = data;\n}\n\nRange.prototype.getStart = function() {\n  return this._data.start;\n};\n\nRange.prototype.getStop = function() {\n  return this._data.stop;\n};\n\nRange.prototype.getLength = function() {\n  return this._data.stop - this._data.start;\n};\n\nRange.prototype.getColor = function(chrNumber) {\n  if (!('ploidy' in this._data)) {\n    return this._getColor(chrNumber);\n  } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n    return this._getColor(chrNumber);\n  } else {\n    return 'transparent';\n  }\n};\n\nRange.prototype._getColor = function(chrNumber) {\n  if (Array.isArray(this._data.color)) {\n    return this._data.color[chrNumber];\n  } else {\n    return this._data.color;\n  }\n};\n","function ModelAdapter(model) {\n  this._model = model;\n  this._class = 'ModelAdapter';\n}\n\nModelAdapter.getInstance = function(model) {\n  if (model.bands) {\n    return new ModelAdapter(model);\n  } else {\n    return new ModelNoBandsAdapter(model);\n  }\n};\n\nModelAdapter.prototype.getModel = function() {\n  return this._model;\n};\n\nModelAdapter.prototype.getCssClass = function() {\n  return '';\n};\n","function ModelNoBandsAdapter(model) {\n    /*\n     * Call parent constructor.\n     */\n  ModelAdapter.call(this, model);\n  this._class = 'ModelNoBandsAdapter';\n}\n\nModelNoBandsAdapter.prototype = Object.create(ModelAdapter.prototype);\n\nModelNoBandsAdapter.prototype.getModel = function() {\n  this._model.bands = [];\n\n    // If chromosome width more, then 1 add single band to bands array\n  if (this._model.width > 1) {\n    this._model.bands.push({\n      name: 'q',\n      px: {\n        start: 0,\n        stop: this._model.width,\n        width: this._model.width\n      }\n    });\n  }\n\n  return this._model;\n};\n\nModelNoBandsAdapter.prototype.getCssClass = function() {\n  return 'noBands';\n};\n","function Layout(config, ideo) {\n  this._config = config;\n  this._ideo = ideo;\n  this._ploidy = this._ideo._ploidy;\n  this._translate = undefined;\n\n  // Chromosome band's size.\n  this._tickSize = 8;\n\n  // Chromosome rotation state.\n  this._isRotated = false;\n}\n\n// Factory method\nLayout.getInstance = function(config, ideo) {\n  if (\"perspective\" in config && config.perspective === \"comparative\") {\n    return new PairedLayout(config, ideo);\n  } else if (\"rows\" in config && config.rows > 1) {\n    return new SmallLayout(config, ideo);\n  } else if (config.orientation === 'vertical') {\n    return new VerticalLayout(config, ideo);\n  } else if (config.orientation === 'horizontal') {\n    return new HorizontalLayout(config, ideo);\n  } else {\n    return new VerticalLayout(config, ideo);\n  }\n};\n\n// Get chart left margin\nLayout.prototype._getLeftMargin = function() {\n  return this._margin.left;\n};\n\n// Get rotated chromosome y scale\nLayout.prototype._getYScale = function() {\n    // 20 is width of rotated chromosome.\n  return 20 / this._config.chrWidth;\n};\n\n// Get chromosome labels\nLayout.prototype.getChromosomeLabels = function(chrElement) {\n  var util = new ChromosomeUtil(chrElement);\n\n  return [util.getSetLabel(), util.getLabel()].filter(function(d) {\n    return d.length > 0;\n  });\n};\n\n// Rotate chromosome to original position\nLayout.prototype.rotateBack = function() {\n  throw new Error(this._class + '#rotateBack not implemented');\n};\n\n// Rotate chromosome to opposite position\nLayout.prototype.rotateForward = function() {\n  throw new Error(this._class + '#rotateForward not implemented');\n};\n\nLayout.prototype.rotate = function(chrSetNumber, chrNumber, chrElement) {\n\n  var ideo = this._ideo;\n\n    // Find chromosomes which should be hidden\n  var otherChrs = d3.selectAll(ideo.selector + \" g.chromosome\")\n    .filter(function() {\n      return this !== chrElement;\n    });\n\n  if (this._isRotated) {\n        // Reset _isRotated flag\n    this._isRotated = false;\n        // Rotate chromosome back\n    this.rotateBack(chrSetNumber, chrNumber, chrElement, function() {\n            // Show all other chromosomes and chromosome labels\n      otherChrs.style(\"display\", null);\n      d3.selectAll(ideo.selector + \" .chrSetLabel, .chrLabel\")\n        .style(\"display\", null);\n    });\n  } else {\n        // Set _isRotated flag\n    this._isRotated = true;\n\n        // Hide all other chromosomes and chromosome labels\n    otherChrs.style(\"display\", \"none\");\n    d3.selectAll(ideo.selector + \" .chrSetLabel, .chrLabel\")\n      .style(\"display\", \"none\");\n\n        // Rotate chromosome\n    this.rotateForward(chrSetNumber, chrNumber, chrElement);\n  }\n};\n\nLayout.prototype.getChromosomeLabelClass = function() {\n  if (this._config.ploidy === 1) {\n    return 'chrLabel';\n  } else {\n    return 'chrSetLabel';\n  }\n};\n\nLayout.prototype._getAdditionalOffset = function() {\n  return (\n    (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1)\n  );\n};\n\nLayout.prototype._getChromosomeSetSize = function(chrSetNumber) {\n    // Get last chromosome set size.\n  var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n    // Increase offset by last chromosome set size\n  return (\n    setSize * this._config.chrWidth * 2 + (this._config.ploidy > 1 ? 20 : 0)\n  );\n};\n\n// Get layout margin\nLayout.prototype.getMargin = function() {\n  return this._margin;\n};\n\n// Get SVG element height\nLayout.prototype.getHeight = function() {\n  throw new Error(this._class + '#getHeight not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY1 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY2 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n};\n\n// Get chromosome's band translate attribute\nLayout.prototype.getChromosomeBandLabelTranslate = function() {\n  throw new Error(\n    this._class + '#getChromosomeBandLabelTranslate not implemented'\n  );\n};\n\n// Get chromosome set label anchor property\nLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'middle';\n};\n\n// Get chromosome's band label text-anchor value\nLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  throw (\n    new Error(this._class + '#getChromosomeBandLabelAnchor not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeLabelXPosition = function() {\n  throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n};\n\n// Get chromosome label y position.\nLayout.prototype.getChromosomeLabelYPosition = function() {\n  return -5.5;\n};\n\n// \"i\" is chromosome number\nLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelYPosition(i);\n  } else {\n    return -2 * this._config.chrWidth;\n  }\n};\n\nLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelXPosition not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelTranslate not implemented')\n  );\n};\n\n// Get chromosome set translate attribute\nLayout.prototype.getChromosomeSetTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n};\n\n// Get chromosome set translate's y offset\nLayout.prototype.getChromosomeSetYTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n};\n","function HorizontalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'HorizontalLayout';\n  this._margin = {\n    left: 20,\n    top: 30\n  };\n}\n\nHorizontalLayout.prototype = Object.create(Layout.prototype);\n\nHorizontalLayout.prototype._getLeftMargin = function() {\n  var margin = Layout.prototype._getLeftMargin.call(this);\n  if (this._config.ploidy > 1) {\n    margin *= 1.8;\n  }\n\n  return margin;\n};\n\nHorizontalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var xOffset = 30;\n\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.height / (chrBox.width + xOffset / 2)) * 0.9;\n  var scaleY = this._getYScale();\n\n  var yOffset = (chrNumber + 1) * ((this._config.chrWidth * 2) * scaleY);\n\n  var transform = (\n    'rotate(90) ' +\n    'translate(' + xOffset + ', -' + yOffset + ') ' +\n    'scale(' + scaleX + ', ' + scaleY + ')'\n  );\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  d3.select(this._ideo.getSvg())\n        .append('g')\n        .attr('class', 'tmp')\n        .selectAll('text')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', function(d, i) {\n          return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n        })\n        .attr('x', 30)\n        .attr('y', function(d, i) {\n          return (i + 1 + labels.length % 2) * 12;\n        })\n        .style('text-anchor', 'middle')\n        .style('opacity', 0)\n        .text(String)\n        .transition()\n        .style('opacity', 1);\n};\n\nHorizontalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll(this._ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nHorizontalLayout.prototype.getHeight = function(taxId) {\n    // Get last chromosome set offset.\n  var numChromosomes = this._config.chromosomes[taxId].length;\n  var lastSetOffset = this.getChromosomeSetYTranslate(numChromosomes - 1);\n\n    // Get last chromosome set size.\n  var lastSetSize = this._getChromosomeSetSize(numChromosomes - 1);\n\n    // Increase offset by last chromosome set size\n  lastSetOffset += lastSetSize;\n\n  return lastSetOffset + this._getAdditionalOffset() * 2;\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'end';\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY1 = function() {\n  return 2;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY2 = function() {\n  return 10;\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelTranslate = function(band) {\n  var x = this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n  var y = -10;\n\n  return {\n    x: x,\n    y: y,\n    translate: 'translate(' + x + ',' + y + ')'\n  };\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var leftMargin = this._getLeftMargin();\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return \"translate(\" + leftMargin + \", \" + chromosomeSetYTranslate + \")\";\n};\n\nHorizontalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  // If no detailed description provided just use one formula for all cases.\n  if (!this._config.ploidyDesc) {\n    return this._config.chrMargin * (setNumber + 1);\n  }\n\n  // Id detailed description provided start to calculate offsets\n  //  for each chromosome set separately. This should be done only once.\n  if (!this._translate) {\n    // First offset equals to zero.\n    this._translate = [1];\n\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      this._translate[i] =\n        this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelXPosition(i);\n  } else {\n    return -20;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return (this._ploidy.getSetSize(i) * this._config.chrWidth) / 2 + 3;\n  } else {\n    return this._ploidy.getSetSize(i) * this._config.chrWidth;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -8;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelYPosition = function() {\n  return this._config.chrWidth;\n};\n","\nfunction VerticalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'VerticalLayout';\n    // Layout margins\n  this._margin = {\n    top: 30,\n    left: 15\n  };\n}\n\nVerticalLayout.prototype = Object.create(Layout.prototype);\n\nVerticalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n\n  var xOffset = 20;\n\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  var transform =\n    \"translate(\" + xOffset + \", 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  var y = (xOffset + self._config.chrWidth) * 1.3;\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(labels)\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', y).style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nVerticalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll(this._ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nVerticalLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nVerticalLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nVerticalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var marginTop = this._margin.top;\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nVerticalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation/histogram tracks\n  var pad = this._getAdditionalOffset(),\n    margin = this._config.chrMargin,\n    width = this._config.chrWidth,\n    translate;\n\n    // If no detailed description provided just use one formula for all cases\n  if (!this._config.ploidyDesc) {\n   // TODO:\n   // This part of code contains a lot magic numbers and if\n   // statements for exactly corresponing to original ideogram examples.\n   // But all this stuff should be removed. Calculation of translate\n   // should be a simple formula applied for all cases listed below.\n   // Now they are diffirent because of Layout:_getAdditionalOffset do\n   // not meet for cases when no annotation, when annotation exists and\n   // when histogram used\n\n    if (this._config.annotationsLayout === \"histogram\") {\n      return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n    } else {\n      translate = width + setNumber * (margin + width) + pad * 2;\n      if (pad > 0) {\n        return translate;\n      } else {\n        return translate + 4 + (2 * setNumber);\n      }\n    }\n  }\n\n    // If detailed description provided start to calculate offsets\n    // for each chromosome set separately. This should be done only once\n  if (!this._translate) {\n    // First offset equals to zero\n    this._translate = [this._ploidy.getSetSize(0) * width * 2];\n    var prevTranslate;\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      prevTranslate = this._translate[i - 1];\n      this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nVerticalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function PairedLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'PairedLayout';\n\n  this._margin = {\n    left: 30\n  };\n}\n\nPairedLayout.prototype = Object.create(Layout.prototype);\n\nPairedLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n  var ideo = this._ideo;\n\n    // Get ideo container and chromosome set dimensions\n  var ideoBox = d3.select(ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n    // Evaluate dimensions scale coefficients\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n    // Evaluate y offset of chromosome. It is different for first and the second one\n  var yOffset = setNumber ? 150 : 25;\n\n  var transform =\n    'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n    .transition()\n    .attr(\"transform\", transform)\n    .on('end', function() {\n        // Run callback function if provided\n      if (callback) {\n        callback();\n      }\n\n      var translateY = (6 * Number(!setNumber));\n\n      // Rotate band labels\n      d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n        .attr('transform', 'rotate(90) translate(0, ' + translateY + ')')\n        .attr(\"text-anchor\", \"middle\");\n\n      // Hide syntenic regions\n      d3.selectAll(ideo.selector + ' .syntenicRegion').style(\"display\", 'none');\n    });\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(this.getChromosomeLabels(chrElement))\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', yOffset + (self._config.chrWidth * scaleX / 2) * 1.15)\n    .style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nPairedLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n\n  var ideo = this._ideo;\n\n    // Get intial transformation string for chromosome set\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', function() {\n            // Run callback fnuction if provided\n          callback();\n            // Show syntenic regions\n          d3.selectAll(ideo.select + ' .syntenicRegion').style(\"display\", null);\n            // Reset changed attributes to original state\n          d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n            .attr('transform', null)\n            .attr(\"text-anchor\", setNumber ? null : 'end');\n        });\n\n  d3.selectAll(ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nPairedLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.left * 1.5;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n  return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n  var width = this._config.chrWidth;\n  return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n  return chrNumber % 2 ? null : 'end';\n};\n\nPairedLayout.prototype.getChromosomeBandLabelTranslate = function(band,\n  chrNumber) {\n  var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n  var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n  return {\n    x: y,\n    y: y,\n    translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n  };\n};\n\nPairedLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nPairedLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nPairedLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  return 200 * (setNumber + 1);\n};\n","function SmallLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'SmallLayout';\n\n  this._margin = {\n    left: 36.5,\n    top: 10\n  };\n}\n\nSmallLayout.prototype = Object.create(Layout.prototype);\n\nSmallLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  transform = \"translate(5, 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.getHeight = function() {\n  return this._config.rows * (this._config.chrHeight + this._margin.top * 1.5);\n};\n\nSmallLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nSmallLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nSmallLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n    // Get organisms id list\n  var organisms = [];\n  this._ideo.getTaxids(function(taxIdList) {\n    organisms = taxIdList;\n  });\n    // Get first organism chromosomes amount\n  var size = this._ideo.config.chromosomes[organisms[0]].length;\n    // Amount of chromosomes per number\n  var rowSize = size / this._config.rows;\n\n  var xOffset;\n  var yOffset;\n\n  if (setNumber > rowSize - 1) {\n    xOffset = this._margin.left + this._config.chrHeight * 1.4;\n    yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n  } else {\n    xOffset = this._margin.left;\n    yOffset = this.getChromosomeSetYTranslate(setNumber);\n  }\n\n  return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n};\n\nSmallLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation tracks\n  var additionalPadding = this._getAdditionalOffset();\n    // If no detailed description provided just use one formula for all cases\n  return (\n    this._margin.left * (setNumber) + this._config.chrWidth +\n    additionalPadding * 2 + additionalPadding * setNumber\n  );\n};\n\nSmallLayout.prototype.getChromosomeSetLabelXPosition = function(setNumber) {\n  return (\n    ((this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2) +\n    (this._config.ploidy > 1 ? 0 : this._config.chrWidth)\n  );\n};\n\nSmallLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function Ploidy(config) {\n  this._config = config;\n  this._description = this._normalize(this._config.ploidyDesc);\n}\n\n// Get number of chromosomes in a chromosome set\nPloidy.prototype.getChromosomesNumber = function(setNumber) {\n  if (this._config.ploidyDesc) {\n    var chrSetCode = this._config.ploidyDesc[setNumber];\n    if (chrSetCode instanceof Object) {\n      return Object.keys(chrSetCode)[0].length;\n    } else {\n      return chrSetCode.length;\n    }\n  } else {\n    return this._config.ploidy || 1;\n  }\n};\n\n// Normalize use defined description\nPloidy.prototype._normalize = function(description) {\n    // Return the same if no description provided\n  if (!description) {\n    return description;\n  }\n\n    // Array of normalized description objects\n  var normalized = [];\n\n     // Loop through description and normalize\n  for (var key in description) {\n    if (typeof description[key] === 'string') {\n      normalized.push({\n        ancestors: description[key],\n        existence: this._getexistenceArray(description[key].length)\n      });\n    } else {\n      normalized.push({\n        ancestors: Object.keys(description[key])[0],\n        existence: description[key][Object.keys(description[key])[0]]\n      });\n    }\n  }\n\n  return normalized;\n};\n\n// Get array filled by '11' elements\nPloidy.prototype._getexistenceArray = function(length) {\n  var array = [];\n\n  for (var i = 0; i < length; i++) {\n    array.push('11');\n  }\n\n  return array;\n};\n\nPloidy.prototype.getSetSize = function(chrSetNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors.length;\n  } else {\n    return 1;\n  }\n};\n\n// Get ancestor letter\nPloidy.prototype.getAncestor = function(chrSetNumber, chrNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors[chrNumber];\n  } else {\n    return '';\n  }\n};\n\n// Check if chromosome's arm should be rendered.\n// If no description was provided, method returns true and\n// something another depending on user provided description.\nPloidy.prototype.exists = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._description) {\n    var desc = this._description[chrSetNumber].existence[chrNumber][armNumber];\n    return Number(desc) > 0;\n  } else {\n    return true;\n  }\n};\n","function Color(config) {\n    // Ideogram config\n  this._config = config;\n  this._ploidy = new Ploidy(this._config);\n}\n\nColor.prototype.getArmColor = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._config.armColors) {\n    return this._config.armColors[armNumber];\n  } else if (this._config.ancestors) {\n    return this._getPolyploidArmColor(chrSetNumber, chrNumber, armNumber);\n  } else {\n    return null;\n  }\n};\n\nColor.prototype.getBorderColor = function(chrSetNumber, chrNumber, armNumber) {\n  if (chrNumber < this._config.ploidy) {\n    return '#000';\n  } else if (this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return '#000';\n  } else {\n    return '#fff';\n  }\n};\n\nColor.prototype._getPolyploidArmColor = function(chrSetNumber, chrNumber,\n  armNumber) {\n  if (!this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return 'transparent';\n  } else {\n    var ancestor = this._ploidy.getAncestor(chrSetNumber, chrNumber, armNumber);\n    return this._config.ancestors[ancestor];\n  }\n};\n","function Chromosome(adapter, config, ideo) {\n  this._adapter = adapter;\n  this._model = this._adapter.getModel();\n  this._config = config;\n  this._ideo = ideo;\n  this._color = new Color(this._config);\n  this._bumpCoefficient = 5;\n}\n\n// Factory method\nChromosome.getInstance = function(adapter, config, ideo) {\n  if (adapter.getModel().centromerePosition === 'telocentric') {\n    return new TelocentricChromosome(adapter, config, ideo);\n  } else {\n    return new MetacentricChromosome(adapter, config, ideo);\n  }\n};\n\nChromosome.prototype._addPArmShape = function(clipPath, isPArmRendered) {\n  if (isPArmRendered) {\n    return clipPath.concat(this._getPArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype._addQArmShape = function(clipPath, isQArmRendered) {\n  if (isQArmRendered) {\n    return clipPath.concat(this._getQArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype.render = function(container, chrSetNumber, chrNumber) {\n    // Append bands container and apply clip-path on it\n  container = container.append('g')\n    .attr('class', 'bands')\n    .attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n    // Render chromosome arms\n  var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n  var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n    // Render range set\n  this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n    // Push arms shape string into clipPath array\n  var clipPath = [];\n  clipPath = this._addPArmShape(clipPath, isPArmRendered);\n  clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n  // Render chromosome border\n  var self = this;\n  container.append('g')\n        .attr('class', 'chromosome-border')\n        .selectAll('path')\n        .data(clipPath)\n        .enter()\n        .append('path')\n        .attr('fill', 'transparent')\n        .attr('stroke', function(d, i) {\n          return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n        })\n        .attr('stroke-width', function(d) {\n          return ('strokeWidth' in d ? d.strokeWidth : 1);\n        })\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n\n  return clipPath;\n};\n\nChromosome.prototype._renderRangeSet = function(container, chrSetNumber,\n  chrNumber) {\n  if (!('rangeSet' in this._config)) {\n    return;\n  }\n\n  var rangeSet = this._config.rangeSet.filter(function(range) {\n    return range.chr - 1 === chrSetNumber;\n  }).map(function(range) {\n    return new Range(range);\n  });\n\n  var rangesContainer = container.append('g')\n        .attr('class', 'range-set');\n\n  var self = this;\n  var ideo = self._ideo;\n  var bandsXOffset = ideo._bandsXOffset;\n\n  rangesContainer.selectAll('rect.range')\n        .data(rangeSet)\n        .enter()\n        .append('rect')\n        .attr('class', 'range')\n        .attr('x', function(range) {\n          var startPx = ideo.convertBpToPx(self._model, range.getStart());\n          return startPx - bandsXOffset;\n        }).attr('y', 0)\n        .attr('width', function(range) {\n          var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n          return lengthPx - bandsXOffset;\n        }).attr('height', this._config.chrWidth)\n        .style('fill', function(range) {\n          return range.getColor(chrNumber);\n        });\n};\n\n// Get chromosome's shape main values\nChromosome.prototype._getShapeData = function() {\n    // First q band from bands sequence\n  var firstQBand;\n  for (var i = 0; i < this._model.bands.length; i++) {\n    if (this._model.bands[i].name[0] === 'q') {\n      firstQBand = this._model.bands[i];\n      break;\n    }\n  }\n\n  // Chromosome's right position\n  var lastBand = this._model.bands.length - 1;\n  var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n    // Properties description:\n    // x1 - left terminal start position\n    // x2 - centromere position\n    // x3 - right terminal end position\n    // w - chromosome width\n    // b - bump size\n  return {\n    x1: 0,\n    x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n    x3: rightTerminalPosition,\n    w: this._config.chrWidth,\n    b: this._config.chrWidth / this._bumpCoefficient\n  };\n};\n\nChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x2 - d.b;\n\n  if (\n    this._model.bands &&\n    (this._model.bands[0].name[0] === 'q' || this._model.bands.length !== 2) ||\n    '_config' in this._color._ploidy &&\n    'ancestors' in this._color._ploidy._config\n  ) {\n    // Encountered when chromosome has any of:\n    //  - One placeholder \"band\", e.g. pig genome GCF_000003025.5\n    //  - Many (> 2) bands, e.g. human reference genome\n    //  - Ancestor colors in ploidy configuration, as in ploidy_basic.html\n    return {\n      class: '',\n      path:\n        'M' + d.b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + d.b + ',' + d.w + ' ' +\n        'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      class: '',\n      path:\n        'M' + d.b + ',0 ' +\n        'L' + (x - 2) + ',0 ' +\n        'L' + (x - 2) + ',' + d.w + ' ' +\n        'L' + d.b + ',' + d.w + ' ' +\n        'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n    }, {\n      class: 'acen',\n      path:\n        'M' + x + ',0 ' +\n        'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x + ',' + d.w + ' ' +\n        'L' + (x - 2) + ',' + d.w + ' ' +\n        'L' + (x - 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b,\n    x2b = d.x2 + d.b;\n\n  if (\n    this._model.bands &&\n    (this._model.bands[0].name[0] === 'q' || this._model.bands.length !== 2) ||\n    '_config' in this._color._ploidy &&\n    'ancestors' in this._color._ploidy._config\n  ) {\n    return {\n      class: '',\n      path:\n        'M' + x2b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w + ' ' +\n        'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + x2b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      path:\n        'M' + x2b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w + ' ' +\n        'L' + x2b + ',0'\n    }, {\n      class: 'acen',\n      path:\n        'M' + x2b + ',0' +\n        'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + x2b + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w +\n        'L' + (x2b + 2) + ',' + d.w +\n        'L' + (x2b + 2) + ',0'\n    }];\n  }\n};\n\n// Render arm bands\nChromosome.prototype._renderBands = function(container, chrSetNumber,\n  chrNumber, bands, arm) {\n  var self = this;\n  var armNumber = arm === 'p' ? 0 : 1;\n  var fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n\n  container.selectAll(\"path.band.\" + arm)\n    .data(bands)\n    .enter()\n    .append(\"path\")\n    .attr(\"id\", function(d) {\n      return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n    })\n    .attr(\"class\", function(d) {\n      return 'band ' + arm + '-band ' + d.stain;\n    })\n    .attr(\"d\", function(d) {\n      var start = self._ideo.round(d.px.start);\n      var length = self._ideo.round(d.px.width);\n\n      x = start + length;\n\n      return \"M \" + start + \", 0\" +\n            \"l \" + length + \" 0 \" +\n            \"l 0 \" + self._config.chrWidth + \" \" +\n            \"l -\" + length + \" 0 z\";\n    })\n    .style('fill', fill);\n};\n\n// Render chromosome's p arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderPArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'p';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n  return Boolean(bands.length);\n};\n\n// Render chromosome's q arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderQArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'q';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n  return Boolean(bands.length);\n};\n","function TelocentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'TelocentricChromosome';\n  this._pArmOffset = 3;\n}\n\nTelocentricChromosome.prototype = Object.create(Chromosome.prototype);\n\nTelocentricChromosome.prototype._addPArmShape = function(clipPath) {\n  return clipPath.concat(this._getPArmShape());\n};\n\nTelocentricChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData();\n  d.o = this._pArmOffset;\n\n  return [{\n    class: 'acen',\n    path: 'M' + (d.x2 + 2) + ',1' +\n            'L' + (d.x2 + d.o + 3.25) + ',1 ' +\n            'L' + (d.x2 + d.o + 3.25) + ',' + (d.w - 1) + ' ' +\n            'L' + (d.x2 + 2) + ',' + (d.w - 1)\n  }, {\n    class: 'gpos66',\n    path: 'M' + (d.x2 - d.o + 5) + ',0' +\n        'L' + (d.x2 - d.o + 3) + ',0 ' +\n        'L' + (d.x2 - d.o + 3) + ',' + d.w + ' ' +\n        'L' + (d.x2 - d.o + 5) + ',' + d.w,\n    strokeWidth: 0.5\n  }];\n};\n\nTelocentricChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b,\n    o = this._pArmOffset + 3;\n\n  return {\n    class: '',\n    path:\n      'M' + (d.x2 + o) + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + (d.x2 + o) + ',' + d.w\n  };\n};\n","function MetacentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'MetacentricChromosome';\n}\n\nMetacentricChromosome.prototype = Object.create(Chromosome.prototype);\n","// https://github.com/stefanpenner/es6-promise\n(function(){\"use strict\";function t(t){return\"function\"==typeof t||\"object\"==typeof t&&null!==t}function e(t){return\"function\"==typeof t}function n(t){G=t}function r(t){Q=t}function o(){return function(){process.nextTick(a)}}function i(){return function(){B(a)}}function s(){var t=0,e=new X(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){t.port2.postMessage(0)}}function c(){return function(){setTimeout(a,1)}}function a(){for(var t=0;J>t;t+=2){var e=tt[t],n=tt[t+1];e(n),tt[t]=void 0,tt[t+1]=void 0}J=0}function f(){try{var t=require,e=t(\"vertx\");return B=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[rt]&&k(r);var o=n._state;if(o){var i=arguments[o-1];Q(function(){x(o,r,i,n._result)})}else E(n,r,t,e);return r}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function _(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function v(t){try{return t.then}catch(e){return ut.error=e,ut}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){Q(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===it?S(t,e._result):e._state===st?j(t,e._result):E(e,void 0,function(e){g(t,e)},function(e){j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===et&&constructor.resolve===nt?b(t,n):r===ut?j(t,ut.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,_()):t(n)?w(e,n,v(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===ot&&(t._result=e,t._state=it,0!==t._subscribers.length&&Q(T,t))}function j(t,e){t._state===ot&&(t._state=st,t._result=e,Q(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+it]=n,o[i+st]=r,0===i&&t._state&&Q(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r,o,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return ct.error=n,ct}}function x(t,n,r,o){var i,s,u,c,a=e(r);if(a){if(i=P(r,o),i===ct?(c=!0,s=i.error,i=null):u=!0,n===i)return void j(n,d())}else i=o,u=!0;n._state!==ot||(a&&u?g(n,i):c?j(n,s):t===it?S(n,i):t===st&&j(n,i))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return at++}function k(t){t[rt]=at++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t){return new _t(this,t).promise}function q(t){var e=this;return new e(I(t)?function(n,r){for(var o=t.length,i=0;o>i;i++)e.resolve(t[i]).then(n,r)}:function(t,e){e(new TypeError(\"You must pass an array to race.\"))})}function F(t){var e=this,n=new e(p);return j(n,t),n}function D(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function K(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function L(t){this[rt]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&D(),this instanceof L?C(this,t):K())}function N(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[rt]||k(this.promise),I(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,U())}function U(){return new Error(\"Array Methods must be provided an Array\")}function W(){var t;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;(!n||\"[object Promise]\"!==Object.prototype.toString.call(n.resolve())||n.cast)&&(t.Promise=pt)}var z;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B,G,H,I=z,J=0,Q=function(t,e){tt[J]=t,tt[J+1]=e,J+=2,2===J&&(G?G(a):H())},R=\"undefined\"!=typeof window?window:void 0,V=R||{},X=V.MutationObserver||V.WebKitMutationObserver,Z=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),$=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,tt=new Array(1e3);H=Z?o():X?s():$?u():void 0===R&&\"function\"==typeof require?f():c();var et=l,nt=h,rt=Math.random().toString(36).substring(16),ot=void 0,it=1,st=2,ut=new M,ct=new M,at=0,ft=Y,lt=q,ht=F,pt=L;L.all=ft,L.race=lt,L.resolve=nt,L.reject=ht,L._setScheduler=n,L._setAsap=r,L._asap=Q,L.prototype={constructor:L,then:et,\"catch\":function(t){return this.then(null,t)}};var _t=N;N.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===ot&&t>n;n++)this._eachEntry(e[n],n)},N.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===nt){var o=v(t);if(o===et&&t._state!==ot)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===pt){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){e(t)}),e)}else this._willSettleAt(r(t),e)},N.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===ot&&(this._remaining--,t===st?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},N.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){n._settledAt(it,e,t)},function(t){n._settledAt(st,e,t)})};var dt=W,vt={Promise:pt,polyfill:dt};\"function\"==typeof define&&define.amd?define(function(){return vt}):\"undefined\"!=typeof module&&module.exports?module.exports=vt:\"undefined\"!=typeof this&&(this.ES6Promise=vt),dt()}).call(this);\n\n// https://github.com/kristw/d3.promise\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"d3\"],b):\"object\"==typeof exports?module.exports=b(require(\"d3\")):a.d3.promise=b(a.d3)}(this,function(a){var b=function(){function b(a,b){return function(){var c=Array.prototype.slice.call(arguments);return new Promise(function(d,e){var f=function(a,b){return a?void e(Error(a)):void d(b)};b.apply(a,c.concat(f))})}}var c={};return[\"csv\",\"tsv\",\"json\",\"xml\",\"text\",\"html\",\"get\"].forEach(function(d){c[d]=b(a,a[d])}),c}();return a.promise=b,b});\n\n// https://github.com/overset/javascript-natural-sort\nfunction naturalSort(a,b){var q,r,c=/(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,d=/^\\s+|\\s+$/g,e=/\\s+/g,f=/(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,g=/^0x[0-9a-f]+$/i,h=/^0/,i=function(a){return(naturalSort.insensitive&&(\"\"+a).toLowerCase()||\"\"+a).replace(d,\"\")},j=i(a),k=i(b),l=j.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),m=k.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),n=parseInt(j.match(g),16)||1!==l.length&&Date.parse(j),o=parseInt(k.match(g),16)||n&&k.match(f)&&Date.parse(k)||null,p=function(a,b){return(!a.match(h)||1==b)&&parseFloat(a)||a.replace(e,\" \").replace(d,\"\")||0};if(o){if(n<o)return-1;if(n>o)return 1}for(var s=0,t=l.length,u=m.length,v=Math.max(t,u);s<v;s++){if(q=p(l[s]||\"\",t),r=p(m[s]||\"\",u),isNaN(q)!==isNaN(r))return isNaN(q)?1:-1;if(/[^\\x00-\\x80]/.test(q+r)&&q.localeCompare){var w=q.localeCompare(r);return w/Math.abs(w)}if(q<r)return-1;if(q>r)return 1}}\n\n// e.g. \"Homo sapiens\" -> \"homo-sapiens\"\nfunction slugify(value){return value.toLowerCase().replace(' ', '-')};\n","// Chromosome's view utility class\nfunction ChromosomeUtil(node) {\n  this._node = node;\n}\n\nChromosomeUtil.prototype.getLabel = function() {\n  var label =\n    d3\n      .select(this._node)\n      .select('text.chrLabel')\n      .text();\n  return label;\n};\n\n// Get chromosome set label\nChromosomeUtil.prototype.getSetLabel = function() {\n  var setLabel =\n    d3\n      .select(this._node.parentNode)\n      .select('text.chromosome-set-label')\n      .text();\n  return setLabel;\n};\n","// Developed by Eric Weitz (https://github.com/eweitz)\n\n/* Constructs a prototypal Ideogram class */\nvar Ideogram = function(config) {\n  var orientation,\n    chrWidth, chrHeight,\n    container, rect;\n\n  // Clone the config object, to allow multiple instantiations\n  // without picking up prior ideogram's settings\n  this.config = JSON.parse(JSON.stringify(config));\n\n  // Organism ploidy description\n  this._ploidy = new Ploidy(this.config);\n\n  // Chromosome's layout\n  this._layout = Layout.getInstance(this.config, this);\n\n  // TODO: Document this\n  this._bandsXOffset = 30;\n\n  this.debug = false;\n\n  if (!this.config.dataDir) {\n    this.config.dataDir = \"../data/bands/native/\";\n  }\n\n  if (!this.config.ploidy) {\n    this.config.ploidy = 1;\n  }\n\n  if (!this.config.container) {\n    this.config.container = \"body\";\n  }\n\n  this.selector = this.config.container + ' #_ideogram';\n\n  if (!this.config.resolution) {\n    this.config.resolution = 850;\n  }\n\n  if (\"showChromosomeLabels\" in this.config === false) {\n    this.config.showChromosomeLabels = true;\n  }\n\n  if (!this.config.chrMargin) {\n    this.config.chrMargin = 10;\n  }\n\n  if (!this.config.orientation) {\n    orientation = \"vertical\";\n    this.config.orientation = orientation;\n  }\n\n  if (!this.config.chrHeight) {\n    container = this.config.container;\n    rect = document.querySelector(container).getBoundingClientRect();\n\n    if (orientation === \"vertical\") {\n      chrHeight = rect.height;\n    } else {\n      chrHeight = rect.width;\n    }\n\n    if (container === \"body\") {\n      chrHeight = 500;\n    }\n    this.config.chrHeight = chrHeight;\n  }\n\n  if (!this.config.chrWidth) {\n    chrWidth = 10;\n    chrHeight = this.config.chrHeight;\n\n    if (chrHeight < 900 && chrHeight > 500) {\n      chrWidth = Math.round(chrHeight / 40);\n    } else if (chrHeight >= 900) {\n      chrWidth = Math.round(chrHeight / 45);\n    }\n    this.config.chrWidth = chrWidth;\n  }\n\n  if (!this.config.showBandLabels) {\n    this.config.showBandLabels = false;\n  }\n\n  if ('showFullyBanded' in this.config) {\n    this.config.showFullyBanded = this.config.showFullyBanded;\n  } else {\n    this.config.showFullyBanded = true;\n  }\n\n  if (!this.config.brush) {\n    this.config.brush = false;\n  }\n\n  if (!this.config.rows) {\n    this.config.rows = 1;\n  }\n\n  this.bump = Math.round(this.config.chrHeight / 125);\n  this.adjustedBump = false;\n  if (this.config.chrHeight < 200) {\n    this.adjustedBump = true;\n    this.bump = 4;\n  }\n\n  if (config.showBandLabels) {\n    this.config.chrMargin += 20;\n  }\n\n  if (config.chromosome) {\n    this.config.chromosomes = [config.chromosome];\n    if (\"showBandLabels\" in config === false) {\n      this.config.showBandLabels = true;\n    }\n    if (\"rotatable\" in config === false) {\n      this.config.rotatable = false;\n    }\n  }\n\n  if (!this.config.showNonNuclearChromosomes) {\n    this.config.showNonNuclearChromosomes = false;\n  }\n\n  this.initAnnotSettings();\n\n  this.config.chrMargin = (\n    this.config.chrMargin +\n    this.config.chrWidth +\n    this.config.annotTracksHeight * 2\n  );\n\n  if (config.onLoad) {\n    this.onLoadCallback = config.onLoad;\n  }\n\n  if (config.onDrawAnnots) {\n    this.onDrawAnnotsCallback = config.onDrawAnnots;\n  }\n\n  if (config.onBrushMove) {\n    this.onBrushMoveCallback = config.onBrushMove;\n  }\n\n  this.coordinateSystem = \"iscn\";\n\n  this.maxLength = {\n    bp: 0,\n    iscn: 0\n  };\n\n  // The E-Utilies In Depth: Parameters, Syntax and More:\n  // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n  this.eutils = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/\";\n  this.esearch = this.eutils + \"esearch.fcgi?retmode=json\";\n  this.esummary = this.eutils + \"esummary.fcgi?retmode=json\";\n  this.elink = this.eutils + \"elink.fcgi?retmode=json\";\n\n  this.organisms = {\n    9606: {\n      commonName: \"Human\",\n      scientificName: \"Homo sapiens\",\n      scientificNameAbbr: \"H. sapiens\",\n      assemblies: {\n        default: \"GCF_000001405.26\", // GRCh38\n        GRCh38: \"GCF_000001405.26\",\n        GRCh37: \"GCF_000001405.13\"\n      }\n    },\n    10090: {\n      commonName: \"Mouse\",\n      scientificName: \"Mus musculus\",\n      scientificNameAbbr: \"M. musculus\",\n      assemblies: {\n        default: \"GCF_000001635.20\"\n      }\n    },\n    4641: {\n      commonName: \"banana\",\n      scientificName: \"Musa acuminata\",\n      scientificNameAbbr: \"M. acuminata\",\n      assemblies: {\n        default: \"mock\"\n      }\n    }\n  };\n\n  // A flat array of chromosomes\n  // (this.chromosomes is an object of\n  // arrays of chromosomes, keyed by organism)\n  this.chromosomesArray = [];\n\n  this.bandsToShow = [];\n\n  this.chromosomes = {};\n  this.numChromosomes = 0;\n  this.bandData = {};\n\n  this.init();\n};\n\n/**\n* Gets chromosome band data from a\n* TSV file, or, if band data is prefetched, from an array\n*\n* UCSC: #chrom chromStart  chromEnd  name  gieStain\n* http://genome.ucsc.edu/cgi-bin/hgTables\n*  - group: Mapping and Sequencing\n*  - track: Chromosome Band (Ideogram)\n*\n* NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n* ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n*/\nIdeogram.prototype.getBands = function(content, taxid, chromosomes) {\n  var lines = {},\n    delimiter, tsvLines, columns, line, stain, chr,\n    i, init, tsvLinesLength, source,\n    start, stop, firstColumn, tmp;\n\n  if (content.slice(0, 8) === \"chrBands\") {\n    source = \"native\";\n  }\n\n  if (\n    chromosomes instanceof Array &&\n    typeof chromosomes[0] === 'object'\n  ) {\n    tmp = [];\n    for (i = 0; i < chromosomes.length; i++) {\n      tmp.push(chromosomes[i].name);\n    }\n    chromosomes = tmp;\n  }\n\n  if (typeof chrBands === \"undefined\" && source !== \"native\") {\n    delimiter = /\\t/;\n    tsvLines = content.split(/\\r\\n|\\n/);\n    init = 1;\n  } else {\n    delimiter = / /;\n    if (source === \"native\") {\n      tsvLines = eval(content);\n    } else {\n      tsvLines = content;\n    }\n    init = 0;\n  }\n\n  firstColumn = tsvLines[0].split(delimiter)[0];\n  if (firstColumn === '#chromosome') {\n    source = 'ncbi';\n  } else if (firstColumn === '#chrom') {\n    source = 'ucsc';\n  } else {\n    source = 'native';\n  }\n\n  tsvLinesLength = tsvLines.length;\n\n  if (source === 'ncbi' || source === 'native') {\n    for (i = init; i < tsvLinesLength; i++) {\n      columns = tsvLines[i].split(delimiter);\n\n      chr = columns[0];\n\n      if (\n        // If a specific set of chromosomes has been requested, and\n        // the current chromosome\n        typeof (chromosomes) !== \"undefined\" &&\n        chromosomes.indexOf(chr) === -1\n      ) {\n        continue;\n      }\n\n      if (chr in lines === false) {\n        lines[chr] = [];\n      }\n\n      stain = columns[7];\n      if (columns[8]) {\n        // For e.g. acen and gvar, columns[8] (density) is undefined\n        stain += columns[8];\n      }\n\n      line = {\n        chr: chr,\n        bp: {\n          start: parseInt(columns[5], 10),\n          stop: parseInt(columns[6], 10)\n        },\n        iscn: {\n          start: parseInt(columns[3], 10),\n          stop: parseInt(columns[4], 10)\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[1] + columns[2],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  } else if (source === 'ucsc') {\n    for (i = init; i < tsvLinesLength; i++) {\n      // #chrom chromStart  chromEnd  name  gieStain\n      // e.g. for fly:\n      // chr4\t69508\t108296\t102A1\tn/a\n      columns = tsvLines[i].split(delimiter);\n\n      if (columns[0] !== 'chr' + chromosomeName) {\n        continue;\n      }\n\n      stain = columns[4];\n      if (stain === 'n/a') {\n        stain = 'gpos100';\n      }\n      start = parseInt(columns[1], 10);\n      stop = parseInt(columns[2], 10);\n\n      line = {\n        chr: columns[0].split('chr')[1],\n        bp: {\n          start: start,\n          stop: stop\n        },\n        iscn: {\n          start: start,\n          stop: stop\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[3],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  }\n\n  return lines;\n};\n\n/**\n* Generates a model object for each chromosome\n* containing information on its name, DOM ID,\n* length in base pairs or ISCN coordinates,\n* cytogenetic bands, centromere position, etc.\n*/\nIdeogram.prototype.getChromosomeModel = function(bands, chromosome, taxid,\n  chrIndex) {\n  var chr = {},\n    band,\n    width, pxStop,\n    chrHeight = this.config.chrHeight,\n    maxLength = this.maxLength,\n    chrLength,\n    cs, hasBands;\n\n  cs = this.coordinateSystem;\n  hasBands = (typeof bands !== \"undefined\");\n\n  if (hasBands) {\n    chr.name = chromosome;\n    chr.length = bands[bands.length - 1][cs].stop;\n    chr.type = \"nuclear\";\n  } else {\n    chr = chromosome;\n  }\n\n  chr.chrIndex = chrIndex;\n\n  chr.id = \"chr\" + chr.name + \"-\" + taxid;\n\n  if (this.config.fullChromosomeLabels === true) {\n    var orgName = this.organisms[taxid].scientificNameAbbr;\n    chr.name = orgName + \" chr\" + chr.name;\n  }\n\n  chrLength = chr.length;\n\n  pxStop = 0;\n\n  if (hasBands) {\n    for (var i = 0; i < bands.length; i++) {\n      band = bands[i];\n      var csLength = band[cs].stop - band[cs].start;\n      width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n      bands[i].px = {start: pxStop, stop: pxStop + width, width: width};\n\n      pxStop = bands[i].px.stop;\n\n      if (hasBands && band.stain === \"acen\" && band.name[0] === \"p\") {\n        chr.pcenIndex = i;\n      }\n    }\n  } else {\n    pxStop = chrHeight * chr.length / maxLength[cs];\n  }\n\n  chr.width = pxStop;\n\n  chr.scale = {};\n\n  // TODO:\n  //\n  // A chromosome-level scale property is likely\n  // nonsensical for any chromosomes that have cytogenetic band data.\n  // Different bands tend to have ratios between number of base pairs\n  // and physical length.\n  //\n  // However, a chromosome-level scale property is likely\n  // necessary for chromosomes that do not have band data.\n  //\n  // This needs further review.\n  if (this.config.multiorganism === true) {\n    chr.scale.bp = 1;\n    // chr.scale.bp = band.iscn.stop / band.bp.stop;\n    chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n  } else {\n    chr.scale.bp = chrHeight / maxLength.bp;\n    if (hasBands) {\n      chr.scale.iscn = chrHeight / maxLength.iscn;\n    }\n  }\n  chr.bands = bands;\n\n  chr.centromerePosition = \"\";\n  if (\n    hasBands && bands[0].name[0] === 'p' && bands[1].name[0] === 'q' &&\n    bands[0].bp.stop - bands[0].bp.start < 2E6\n  ) {\n    // As with almost all mouse chromosome, chimpanzee chr22\n    chr.centromerePosition = \"telocentric\";\n\n    // Remove placeholder pter band\n    chr.bands = chr.bands.slice(1);\n  }\n\n  if (hasBands && chr.bands.length === 1) {\n    // Encountered when processing an assembly that has chromosomes with\n    // centromere data, but this chromosome does not.\n    // Example: chromosome F1 in Felis catus.\n    delete chr.bands;\n  }\n\n  return chr;\n};\n\n/**\n* Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n* If ideogram configuration has 'fullChromosomeLabels: True',\n* then labels includes name of taxon, which can help when\n* depicting orthologs.\n*/\nIdeogram.prototype.drawChromosomeLabels = function() {\n  var ideo = this;\n\n  var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n  var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n  var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes set's labels\n  d3.selectAll(ideo.selector + \" .chromosome-set-container\")\n        .append(\"text\")\n        .data(ideo.chromosomesArray)\n        .attr(\"class\", 'chromosome-set-label ' + chromosomeLabelClass)\n        .attr(\"transform\", chrSetLabelTranslate)\n        .attr(\"x\", chrSetLabelXPosition)\n        .attr(\"y\", function(d, i) {\n          return ideo._layout.getChromosomeSetLabelYPosition(i);\n        })\n        .attr(\"text-anchor\", ideo._layout.getChromosomeSetLabelAnchor())\n        .each(function(d) {\n            // Get label lines\n          var lines;\n          if (d.name.indexOf(' ') === -1) {\n            lines = [d.name];\n          } else {\n            lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n          }\n\n          // Render label lines\n          d3.select(this).selectAll('tspan')\n            .data(lines)\n            .enter()\n            .append('tspan')\n            .attr('dy', function(d, i) {\n              return i * -1.2 + 'em';\n            })\n            .attr('x', ideo._layout.getChromosomeSetLabelXPosition())\n            .attr('class', function(a, i) {\n              var fullLabels = ideo.config.fullChromosomeLabels;\n              return i === 1 && fullLabels ? 'italic' : null;\n            }).text(String);\n        });\n\n  var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes labels\n  d3.selectAll(ideo.selector + \" .chromosome-set-container\")\n        .each(function(a, chrSetNumber) {\n          d3.select(this).selectAll(\".chromosome\")\n                .append(\"text\")\n                .attr(\"class\", \"chrLabel\")\n                .attr(\"transform\", setLabelTranslate)\n                .attr(\"x\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelXPosition(i);\n                }).attr(\"y\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelYPosition(i);\n                }).text(function(d, chrNumber) {\n                  return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n                }).attr(\"text-anchor\", \"middle\");\n        });\n};\n\n/**\n* Draws labels and stalks for cytogenetic bands.\n*\n* Band labels are text like \"p11.11\".\n* Stalks are small lines that visually connect labels to their bands.\n*/\nIdeogram.prototype.drawBandLabels = function(chromosomes) {\n  var i, chr, chrs, taxid, ideo, chrModel;\n\n  ideo = this;\n\n  chrs = [];\n\n  for (taxid in chromosomes) {\n    for (chr in chromosomes[taxid]) {\n      chrs.push(chromosomes[taxid][chr]);\n    }\n  }\n\n  var textOffsets = {};\n\n  chrIndex = 0;\n  for (i = 0; i < chrs.length; i++) {\n    chrIndex += 1;\n\n    chrModel = chrs[i];\n\n    chr = d3.select(ideo.selector + \" #\" + chrModel.id);\n\n    // var chrMargin = this.config.chrMargin * chrIndex,\n    //   lineY1, lineY2;\n    //\n    // lineY1 = chrMargin;\n    // lineY2 = chrMargin - 8;\n    //\n    // if (\n    //   chrIndex === 1 &&\n    //   \"perspective\" in this.config && this.config.perspective === \"comparative\"\n    // ) {\n    //   lineY1 += 18;\n    //   lineY2 += 18;\n    // }\n\n    textOffsets[chrModel.id] = [];\n\n    chr.selectAll(\"text\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n        .attr(\"class\", function(d, i) {\n          return \"bandLabel bsbsl-\" + i;\n        })\n        .attr(\"transform\", function(d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          // var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        })\n        .append(\"text\")\n        .attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i))\n        .text(function(d) {\n          return d.name;\n        });\n\n    // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n    // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n    chr.selectAll(\"line.bandLabelStalk\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", function(d, i) {\n        return \"bandLabelStalk bsbsl-\" + i;\n      })\n      .attr(\"transform\", function(d) {\n        var x, y;\n\n        x = ideo.round(d.px.start + d.px.width / 2);\n\n        textOffsets[chrModel.id].push(x + 13);\n        y = -10;\n\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n        .append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", function() {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        }).attr(\"x2\", 0)\n        .attr(\"y2\", function() {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n  }\n\n  for (i = 0; i < chrs.length; i++) {\n    chrModel = chrs[i];\n\n    var textsLength = textOffsets[chrModel.id].length,\n      overlappingLabelXRight,\n      index,\n      indexesToShow = [],\n      prevHiddenBoxIndex,\n      xLeft,\n      prevLabelXRight,\n      textPadding;\n\n    overlappingLabelXRight = 0;\n\n    textPadding = 5;\n\n    for (index = 0; index < textsLength; index++) {\n      // Ensures band labels don't overlap\n\n      xLeft = textOffsets[chrModel.id][index];\n\n      if (xLeft < overlappingLabelXRight + textPadding === false) {\n        indexesToShow.push(index);\n      } else {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n        continue;\n      }\n\n      if (prevHiddenBoxIndex !== index) {\n        // This getBoundingClientRect() forces Chrome's\n        // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n        // TODO: This forced synchronous layout would be nice to eliminate.\n        // prevTextBox = texts[index].getBoundingClientRect();\n        // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n        // TODO: Account for number of characters in prevTextBoxWidth,\n        // maybe also zoom.\n        prevTextBoxLeft = textOffsets[chrModel.id][index];\n        prevTextBoxWidth = 36;\n\n        prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n      }\n\n      if (\n        xLeft < prevLabelXRight + textPadding\n      ) {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n      } else {\n        indexesToShow.push(index);\n      }\n    }\n\n    var selectorsToShow = [],\n      ithLength = indexesToShow.length,\n      j;\n\n    for (j = 0; j < ithLength; j++) {\n      index = indexesToShow[j];\n      selectorsToShow.push(\"#\" + chrModel.id + \" .bsbsl-\" + index);\n    }\n\n    this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n  }\n};\n\n// Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\nIdeogram.prototype.rotateChromosomeLabels = function(chr, chrIndex,\n  orientation, scale) {\n  var chrMargin, chrWidth, ideo, x, y,\n    numAnnotTracks, scaleSvg, tracksHeight;\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n  numAnnotTracks = this.config.numAnnotTracks;\n\n  ideo = this;\n\n  if (\n    typeof (scale) !== \"undefined\" &&\n    scale.hasOwnProperty(\"x\") &&\n    !(scale.x === 1 && scale.y === 1)\n  ) {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n    x = -6;\n    y = (scale === \"\" ? -16 : -14);\n  } else {\n    x = -8;\n    y = -16;\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  }\n\n  if (orientation === \"vertical\" || orientation === \"\") {\n    var ci = chrIndex - 1;\n\n    if (numAnnotTracks > 1 || orientation === \"\") {\n      ci -= 1;\n    }\n\n    chrMargin2 = -4;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n    }\n\n    chrMargin = ideo.config.chrMargin * ci;\n\n    if (numAnnotTracks > 1 === false) {\n      chrMargin += 1;\n    }\n\n    y = chrMargin + chrMargin2;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", scaleSvg)\n      .selectAll(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y);\n  } else {\n    chrIndex -= 1;\n\n    chrMargin2 = -chrWidth - 2;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + 8;\n    }\n\n    tracksHeight = ideo.config.annotTracksHeight;\n    if (ideo.config.annotationsLayout !== \"overlay\") {\n      tracksHeight *= 2;\n    }\n\n    chrMargin = ideo.config.chrMargin * chrIndex;\n    x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n    x /= scale.x;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", \"rotate(-90)\" + scaleSvg)\n      .selectAll(\"tspan\")\n      .attr(\"x\", x)\n      .attr(\"y\", y);\n  }\n};\n\n/**\n* Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n*\n* This method includes proportional scaling, which ensures that\n* while the parent chromosome group is scaled strongly in one dimension to fill\n* available space, the text in the chromosome's band labels is\n* not similarly distorted, and remains readable.\n*/\nIdeogram.prototype.rotateBandLabels = function(chr, chrIndex, scale) {\n  var chrMargin, scaleSvg,\n    orientation, bandLabels,\n    ideo = this;\n\n  bandLabels = chr.selectAll(\".bandLabel\");\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n\n  orientation = chr.attr(\"data-orientation\");\n\n  if (typeof (scale) === \"undefined\") {\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  } else {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n  }\n\n  if (\n    chrIndex === 1 &&\n    \"perspective\" in this.config && this.config.perspective === \"comparative\"\n  ) {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = (8 - chrMargin) - 26;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"text-anchor\", \"end\");\n  } else if (orientation === \"vertical\") {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = 8 - chrMargin;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n  } else {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n        y = chrMargin - 10;\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n\n    chr.selectAll(\".bandLabelStalk line\")\n      .attr(\"transform\", scaleSvg);\n  }\n};\n\nIdeogram.prototype.round = function(coord) {\n  // Rounds an SVG coordinates to two decimal places\n  // e.g. 42.1234567890 -> 42.12\n  // Per http://stackoverflow.com/a/9453447, below method is fastest\n  return Math.round(coord * 100) / 100;\n};\n\n/**\n* Renders all the bands and outlining boundaries of a chromosome.\n*/\nIdeogram.prototype.drawChromosome = function(chrModel, chrIndex, container, k) {\n    // Get chromosome model adapter class\n  var adapter = ModelAdapter.getInstance(chrModel);\n\n    // Append chromosome's container\n  var chromosome = container\n        .append(\"g\")\n        .attr(\"id\", chrModel.id)\n        .attr(\"class\", \"chromosome \" + adapter.getCssClass())\n        .attr(\"transform\", \"translate(0, \" + k * 20 + \")\");\n\n    // Render chromosome\n  return Chromosome.getInstance(adapter, this.config, this)\n        .render(chromosome, chrIndex, k);\n};\n\n/**\n* Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n* Useful for focusing or defocusing a particular chromosome\n*/\nIdeogram.prototype.rotateAndToggleDisplay = function(chromosome) {\n  /*\n   * Do nothing if taxId not defined. But it should be defined.\n   * To fix that bug we should have a way to find chromosome set number.\n   */\n  if (!this.config.taxid) {\n    return;\n  }\n\n  var chrSetNumber =\n    Number(d3.select(chromosome.parentNode).attr('data-set-number'));\n\n  var chrNumber = Array.prototype.slice.call(\n          d3.select(chromosome.parentNode).selectAll(\"g.chromosome\")._groups[0]\n      ).indexOf(chromosome);\n\n  return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertBpToPx = function(chr, bp) {\n  var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart,\n    iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    offset = this._bandsXOffset;\n    bpStart = band.bp.start;\n    bpStop = band.bp.stop;\n    bpLength = bpStop - bpStart;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n    iscnLength = iscnStop - iscnStart;\n    pxStart = band.px.start;\n    pxLength = band.px.width;\n\n    if (bp >= bpStart && bp <= bpStop) {\n      bpToIscnScale = iscnLength / bpLength;\n      iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n      px = offset + pxStart + (pxLength * (iscn - iscnStart) / (iscnLength));\n\n      return px;\n    }\n  }\n\n  throw new Error(\n    \"Base pair out of range.  \" +\n    \"bp: \" + bp + \"; length of chr\" + chr.name + \": \" + band.bp.stop\n  );\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertPxToBp = function(chr, px) {\n  var i, band, pxToIscnScale, iscn,\n    pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    pxStart = band.px.start;\n    pxStop = band.px.stop;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n\n    if (px >= pxStart && px <= pxStop) {\n      iscnLength = iscnStop - iscnStart;\n      pxLength = pxStop - pxStart;\n      bpLength = band.bp.stop - band.bp.start;\n\n      pxToIscnScale = iscnLength / pxLength;\n      iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n      bp = band.bp.start + (bpLength * (iscn - iscnStart) / iscnLength);\n\n      return Math.round(bp);\n    }\n  }\n\n  throw new Error(\n    \"Pixel out of range.  \" +\n    \"px: \" + bp + \"; length of chr\" + chr.name + \": \" + pxStop\n  );\n};\n\n/**\n* Draws a trapezoid connecting a genomic range on\n* one chromosome to a genomic range on another chromosome;\n* a syntenic region.\n*/\nIdeogram.prototype.drawSynteny = function(syntenicRegions) {\n  var t0 = new Date().getTime();\n\n  var r1, r2,\n    syntenies,\n    i, color, opacity,\n    regionID,\n    ideo = this;\n\n  syntenies = d3.select(ideo.selector)\n    .insert(\"g\", \":first-child\")\n    .attr(\"class\", \"synteny\");\n\n  for (i = 0; i < syntenicRegions.length; i++) {\n    regions = syntenicRegions[i];\n\n    r1 = regions.r1;\n    r2 = regions.r2;\n\n    color = \"#CFC\";\n    if (\"color\" in regions) {\n      color = regions.color;\n    }\n\n    opacity = 1;\n    if (\"opacity\" in regions) {\n      opacity = regions.opacity;\n    }\n\n    r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n    r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n    r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n    r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n    regionID = (\n      r1.chr.id + \"_\" + r1.start + \"_\" + r1.stop + \"_\" +\n      \"__\" +\n      r2.chr.id + \"_\" + r2.start + \"_\" + r2.stop\n    );\n\n    syntenicRegion = syntenies.append(\"g\")\n      .attr(\"class\", \"syntenicRegion\")\n      .attr(\"id\", regionID)\n      .on(\"click\", function() {\n        var activeRegion = this;\n        var others = d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          });\n\n        others.classed(\"hidden\", !others.classed(\"hidden\"));\n      })\n      .on(\"mouseover\", function() {\n        var activeRegion = this;\n        d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          })\n          .classed(\"ghost\", true);\n      })\n      .on(\"mouseout\", function() {\n        d3.selectAll(ideo.selector + \" .syntenicRegion\").classed(\"ghost\", false);\n      });\n\n    var x1 = this._layout.getChromosomeSetYTranslate(0);\n    var x2 = this._layout.getChromosomeSetYTranslate(1) - ideo.config.chrWidth;\n\n    syntenicRegion.append(\"polygon\")\n      .attr(\"points\",\n        x1 + ', ' + r1.startPx + ' ' +\n        x1 + ', ' + r1.stopPx + ' ' +\n        x2 + ', ' + r2.stopPx + ' ' +\n        x2 + ', ' + r2.startPx\n      )\n      .attr('style', \"fill: \" + color + \"; fill-opacity: \" + opacity);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.startPx)\n      .attr(\"y2\", r2.startPx);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.stopPx)\n      .attr(\"y2\", r2.stopPx);\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in drawSyntenicRegions: \" + (t1 - t0) + \" ms\");\n  }\n};\n\n/**\n* Initializes various annotation settings.  Constructor help function.\n*/\nIdeogram.prototype.initAnnotSettings = function() {\n  if (this.config.annotationsPath || this.config.localAnnotationsPath ||\n    this.annots || this.config.annotations) {\n    if (!this.config.annotationHeight) {\n      var annotHeight = Math.round(this.config.chrHeight / 100);\n      this.config.annotationHeight = annotHeight;\n    }\n\n    if (this.config.annotationTracks) {\n      this.config.numAnnotTracks = this.config.annotationTracks.length;\n    } else {\n      this.config.numAnnotTracks = 1;\n    }\n    this.config.annotTracksHeight =\n      this.config.annotationHeight * this.config.numAnnotTracks;\n\n    if (typeof this.config.barWidth === \"undefined\") {\n      this.config.barWidth = 3;\n    }\n  } else {\n    this.config.annotTracksHeight = 0;\n  }\n\n  if (typeof this.config.annotationsColor === \"undefined\") {\n    this.config.annotationsColor = \"#F00\";\n  }\n};\n\n/**\n* Draws annotations defined by user\n*/\nIdeogram.prototype.drawAnnots = function(friendlyAnnots) {\n  var ideo = this,\n    i, j, annot,\n    rawAnnots = [],\n    rawAnnot, keys,\n    chr,\n    chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n  // Occurs when filtering\n  if (\"annots\" in friendlyAnnots[0]) {\n    return ideo.drawProcessedAnnots(friendlyAnnots);\n  }\n\n  for (chr in chrs) {\n    rawAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < friendlyAnnots.length; i++) {\n    annot = friendlyAnnots[i];\n\n    for (j = 0; j < rawAnnots.length; j++) {\n      if (annot.chr === rawAnnots[j].chr) {\n        rawAnnot = [\n          annot.name,\n          annot.start,\n          annot.stop - annot.start\n        ];\n        if (\"color\" in annot) {\n          rawAnnot.push(annot.color);\n        }\n        if (\"shape\" in annot) {\n          rawAnnot.push(annot.shape);\n        }\n        rawAnnots[j].annots.push(rawAnnot);\n        break;\n      }\n    }\n  }\n\n  keys = [\"name\", \"start\", \"length\"];\n  if (\"color\" in friendlyAnnots[0]) {\n    keys.push(\"color\");\n  }\n  if (\"shape\" in friendlyAnnots[0]) {\n    keys.push(\"shape\");\n  }\n  ideo.rawAnnots = {keys: keys, annots: rawAnnots};\n\n  ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n  ideo.drawProcessedAnnots(ideo.annots);\n};\n\n/**\n* Proccesses genome annotation data.\n* Genome annotations represent features like a gene, SNP, etc. as\n* a small graphical object on or beside a chromosome.\n* Converts raw annotation data from server, which is structured as\n* an array of arrays, into a more verbose data structure consisting\n* of an array of objects.\n* Also adds pixel offset information.\n*/\nIdeogram.prototype.processAnnotData = function(rawAnnots) {\n  var keys,\n    i, j, annot, annots, annotsByChr,\n    chr,\n    chrModel, ra,\n    startPx, stopPx, px,\n    color,\n    ideo = this;\n\n  keys = rawAnnots.keys;\n  rawAnnots = rawAnnots.annots;\n\n  annots = [];\n\n  for (i = 0; i < rawAnnots.length; i++) {\n    annotsByChr = rawAnnots[i];\n\n    annots.push({chr: annotsByChr.chr, annots: []});\n\n    for (j = 0; j < annotsByChr.annots.length; j++) {\n      chr = annotsByChr.chr;\n      ra = annotsByChr.annots[j];\n      annot = {};\n\n      for (var k = 0; k < keys.length; k++) {\n        annot[keys[k]] = ra[k];\n      }\n\n      annot.stop = annot.start + annot.length;\n\n      chrModel = ideo.chromosomes[ideo.config.taxid][chr];\n\n      startPx = ideo.convertBpToPx(chrModel, annot.start);\n      stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n      px = Math.round((startPx + stopPx) / 2) - 28;\n\n      color = ideo.config.annotationsColor;\n      if (ideo.config.annotationTracks) {\n        annot.trackIndex = ra[3];\n        color = ideo.config.annotationTracks[annot.trackIndex].color;\n      } else {\n        annot.trackIndex = 0;\n      }\n\n      if ('color' in annot) {\n        color = annot.color;\n      }\n\n      annot.chr = chr;\n      annot.chrIndex = i;\n      annot.px = px;\n      annot.startPx = startPx - 30;\n      annot.stopPx = stopPx - 30;\n      annot.color = color;\n\n      annots[i].annots.push(annot);\n    }\n  }\n\n  return annots;\n};\n\n/*\n* Can be used for bar chart or sparkline\n*/\nIdeogram.prototype.getHistogramBars = function(annots) {\n  var t0 = new Date().getTime();\n\n  var i, j, chr,\n    chrModels, chrPxStop, px,\n    chrAnnots, chrName, chrIndex, annot,\n    bars, bar, barPx, nextBarPx, barWidth,\n    maxAnnotsPerBar, color,\n    firstGet = false,\n    histogramScaling,\n    ideo = this;\n\n  bars = [];\n\n  barWidth = ideo.config.barWidth;\n  chrModels = ideo.chromosomes[ideo.config.taxid];\n  color = ideo.config.annotationsColor;\n\n  if (\"histogramScaling\" in ideo.config) {\n    histogramScaling = ideo.config.histogramScaling;\n  } else {\n    histogramScaling = \"relative\";\n  }\n\n  if (typeof ideo.maxAnnotsPerBar === \"undefined\") {\n    ideo.maxAnnotsPerBar = {};\n    firstGet = true;\n  }\n\n  for (chr in chrModels) {\n    chrModel = chrModels[chr];\n    chrIndex = chrModel.chrIndex;\n    lastBand = chrModel.bands[chrModel.bands.length - 1];\n    chrPxStop = lastBand.px.stop;\n    numBins = Math.round(chrPxStop / barWidth);\n    bar = {chr: chr, annots: []};\n    for (i = 0; i < numBins; i++) {\n      px = i * barWidth - ideo.bump;\n      bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n      bar.annots.push({\n        bp: bp,\n        px: px - ideo.bump,\n        count: 0,\n        chrIndex: chrIndex,\n        chrName: chr,\n        color: color,\n        annots: []\n      });\n    }\n    bars.push(bar);\n  }\n\n  for (chr in annots) {\n    chrAnnots = annots[chr].annots;\n    chrName = annots[chr].chr;\n    chrModel = chrModels[chrName];\n    chrIndex = chrModel.chrIndex - 1;\n    barAnnots = bars[chrIndex].annots;\n    for (i = 0; i < chrAnnots.length; i++) {\n      annot = chrAnnots[i];\n      px = annot.px - ideo.bump;\n      for (j = 0; j < barAnnots.length; j++) {\n        barPx = barAnnots[j].px;\n        nextBarPx = barPx + barWidth;\n        if (j === barAnnots.length - 1) {\n          nextBarPx += barWidth;\n        }\n        if (px >= barPx && px < nextBarPx) {\n          bars[chrIndex].annots[j].count += 1;\n          bars[chrIndex].annots[j].annots.push(annot);\n          break;\n        }\n      }\n    }\n  }\n\n  if (firstGet === true || histogramScaling === \"relative\") {\n    maxAnnotsPerBar = 0;\n    for (i = 0; i < bars.length; i++) {\n      annots = bars[i].annots;\n      for (j = 0; j < annots.length; j++) {\n        barCount = annots[j].count;\n        if (barCount > maxAnnotsPerBar) {\n          maxAnnotsPerBar = barCount;\n        }\n      }\n    }\n    ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n  }\n\n  // Set each bar's height to be proportional to\n  // the height of the bar with the most annotations\n  for (i = 0; i < bars.length; i++) {\n    annots = bars[i].annots;\n    for (j = 0; j < annots.length; j++) {\n      barCount = annots[j].count;\n      height = (barCount / ideo.maxAnnotsPerBar[chr]) * ideo.config.chrMargin;\n      // console.log(height)\n      bars[i].annots[j].height = height;\n    }\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time spent in getHistogramBars: \" + (t1 - t0) + \" ms\");\n  }\n\n  ideo.bars = bars;\n\n  return bars;\n};\n\n/**\n* Fills out annotations data structure such that its top-level list of arrays\n* matches that of this ideogram's chromosomes list in order and number\n* Fixes https://github.com/eweitz/ideogram/issues/66\n*/\nIdeogram.prototype.fillAnnots = function(annots) {\n  var filledAnnots, chrs, chrArray, i, chr, annot, chrIndex;\n\n  filledAnnots = [];\n  chrs = [];\n  chrArray = this.chromosomesArray;\n\n  for (i = 0; i < chrArray.length; i++) {\n    chr = chrArray[i].name;\n    chrs.push(chr);\n    filledAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < annots.length; i++) {\n    annot = annots[i];\n    chrIndex = chrs.indexOf(annot.chr);\n    if (chrIndex !== -1) {\n      filledAnnots[chrIndex] = annot;\n    }\n  }\n\n  return filledAnnots;\n};\n\n/**\n* Draws genome annotations on chromosomes.\n* Annotations can be rendered as either overlaid directly\n* on a chromosome, or along one or more \"tracks\"\n* running parallel to each chromosome.\n*/\nIdeogram.prototype.drawProcessedAnnots = function(annots) {\n  var chrWidth, layout,\n    annotHeight, triangle, circle, r, chrAnnot,\n    x1, x2, y1, y2,\n    filledAnnots,\n    ideo = this;\n\n  chrMargin = this.config.chrMargin;\n  chrWidth = this.config.chrWidth;\n\n  layout = \"tracks\";\n  if (this.config.annotationsLayout) {\n    layout = this.config.annotationsLayout;\n  }\n\n  if (layout === \"histogram\") {\n    annots = ideo.getHistogramBars(annots);\n  }\n\n  annotHeight = ideo.config.annotationHeight;\n\n  triangle =\n    'l -' + annotHeight + ' ' +\n    (2 * annotHeight) +\n    ' l ' + (2 * annotHeight) + ' 0 z';\n\n  // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n  // Circles are supported natively via <circle>, but having it as a path\n  // simplifies handling triangles, circles and other shapes in the same\n  // D3 call\n  r = annotHeight;\n  circle =\n    'm -' + r + ', ' + r +\n    'a ' + r + ',' + r + ' 0 1,0 ' + (r * 2) + ',0' +\n    'a ' + r + ',' + r + ' 0 1,0 -' + (r * 2) + ',0';\n\n  filledAnnots = ideo.fillAnnots(annots);\n\n  chrAnnot = d3.selectAll(ideo.selector + \" .chromosome\")\n    .data(filledAnnots)\n      .selectAll(\"path.annot\")\n      .data(function(d) {\n        return d.annots;\n      })\n      .enter();\n\n  if (layout === \"tracks\") {\n    chrAnnot\n      .append(\"g\")\n      .attr(\"id\", function(d) {\n        return d.id;\n      })\n      .attr(\"class\", \"annot\")\n      .attr(\"transform\", function(d) {\n        var y = ideo.config.chrWidth + (d.trackIndex * annotHeight * 2);\n        return \"translate(\" + d.px + \",\" + y + \")\";\n      })\n      .append(\"path\")\n      .attr(\"d\", function(d) {\n        if (!d.shape || d.shape === \"triangle\") {\n          return \"m0,0\" + triangle;\n        } else if (d.shape === \"circle\") {\n          return circle;\n        }\n      })\n      .attr(\"fill\", function(d) {\n        return d.color;\n      });\n  } else if (layout === \"overlay\") {\n      // Overlaid annotations appear directly on chromosomes\n\n    chrAnnot.append(\"polygon\")\n        .attr(\"id\", function(d) {\n          return d.id;\n        })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          if (d.stopPx - d.startPx > 1) {\n            x1 = d.startPx;\n            x2 = d.stopPx;\n          } else {\n            x1 = d.px - 0.5;\n            x2 = d.px + 0.5;\n          }\n          y1 = chrWidth;\n          y2 = 0;\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  } else if (layout === \"histogram\") {\n    chrAnnot.append(\"polygon\")\n        // .attr(\"id\", function(d, i) { return d.id; })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  }\n\n  if (ideo.onDrawAnnotsCallback) {\n    ideo.onDrawAnnotsCallback();\n  }\n};\n\nIdeogram.prototype.onBrushMove = function() {\n  call(this.onBrushMoveCallback);\n};\n\nIdeogram.prototype.createBrush = function(from, to) {\n  var ideo = this,\n    width = ideo.config.chrWidth + 6.5,\n    length = ideo.config.chrHeight,\n    chr = ideo.chromosomesArray[0],\n    chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n    x0, x1,\n    xOffset = this._layout.getMargin().left,\n    xScale = d3.scaleLinear()\n          .domain([0, d3.max(chr.bands, function(band) {\n            return band.bp.stop;\n          })]).range([xOffset, d3.max(chr.bands, function(band) {\n            return band.px.stop;\n          }) + xOffset]);\n\n  if (typeof from === \"undefined\") {\n    from = Math.floor(chrLengthBp / 10);\n  }\n\n  if (typeof right === \"undefined\") {\n    to = Math.ceil(from * 2);\n  }\n\n  x0 = ideo.convertBpToPx(chr, from);\n  x1 = ideo.convertBpToPx(chr, to);\n\n  ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n  ideo.brush = d3.brushX()\n    .extent([[xOffset, 0], [length + xOffset, width]])\n    .on(\"brush\", onBrushMove);\n\n  var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n  var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n  d3.select(ideo.selector).append(\"g\")\n    .attr(\"class\", \"brush\")\n    .attr(\"transform\", \"translate(0, \" + yOffset + \")\")\n    .call(ideo.brush)\n    .call(ideo.brush.move, [x0, x1]);\n\n  function onBrushMove() {\n    var extent = d3.event.selection.map(xScale.invert),\n      from = Math.floor(extent[0]),\n      to = Math.ceil(extent[1]);\n\n    ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n    if (ideo.onBrushMove) {\n      ideo.onBrushMoveCallback();\n    }\n  }\n};\n\n/**\n* Called when Ideogram has finished initializing.\n* Accounts for certain ideogram properties not being set until\n* asynchronous requests succeed, etc.\n*/\nIdeogram.prototype.onLoad = function() {\n  call(this.onLoadCallback);\n};\n\nIdeogram.prototype.onDrawAnnots = function() {\n  call(this.onDrawAnnotsCallback);\n};\n\nIdeogram.prototype.getBandColorGradients = function() {\n  var colors,\n    stain, color1, color2, color3,\n    css,\n    gradients = \"\";\n\n  colors = [\n    [\"gneg\", \"#FFF\", \"#FFF\", \"#DDD\"],\n    [\"gpos25\", \"#C8C8C8\", \"#DDD\", \"#BBB\"],\n    [\"gpos33\", \"#BBB\", \"#BBB\", \"#AAA\"],\n    [\"gpos50\", \"#999\", \"#AAA\", \"#888\"],\n    [\"gpos66\", \"#888\", \"#888\", \"#666\"],\n    [\"gpos75\", \"#777\", \"#777\", \"#444\"],\n    [\"gpos100\", \"#444\", \"#666\", \"#000\"],\n    [\"acen\", \"#FEE\", \"#FEE\", \"#FDD\"],\n    [\"noBands\", \"#BBB\", \"#BBB\", \"#AAA\"]\n  ];\n\n  for (var i = 0; i < colors.length; i++) {\n    stain = colors[i][0];\n    color1 = colors[i][1];\n    color2 = colors[i][2];\n    color3 = colors[i][3];\n    gradients +=\n      '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n    if (stain === \"gneg\") {\n      gradients +=\n        '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' +\n        '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n    } else {\n      gradients +=\n        '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' +\n        '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n    }\n    gradients +=\n      '</linearGradient>';\n  }\n\n  gradients +=\n    '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' +\n        'stroke-width:0.7;\" />' +\n    '</pattern>' +\n    '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(-30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' +\n          'stroke-width:0.7;\" />' +\n    '</pattern>';\n\n  gradients = \"<defs>\" + gradients + \"</defs>\";\n  css = \"<style>\" +\n    '.gneg {fill: url(\"#gneg\")} ' +\n    '.gpos25 {fill: url(\"#gpos25\")} ' +\n    '.gpos33 {fill: url(\"#gpos33\")} ' +\n    '.gpos50 {fill: url(\"#gpos50\")} ' +\n    '.gpos66 {fill: url(\"#gpos66\")} ' +\n    '.gpos75 {fill: url(\"#gpos75\")} ' +\n    '.gpos100 {fill: url(\"#gpos100\")} ' +\n    '.gpos {fill: url(\"#gpos100\")} ' +\n    '.acen {fill: url(\"#acen\")} ' +\n    '.stalk {fill: url(\"#stalk\")} ' +\n    '.gvar {fill: url(\"#gvar\")} ' +\n    '.noBands {fill: url(\"#noBands\")} ' +\n    '.chromosome {fill: url(\"#noBands\")} ' +\n  '</style>';\n  gradients = css + gradients;\n\n  // alert(gradients)\n\n  return gradients;\n};\n\n/*\n  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n*/\nIdeogram.prototype.getTaxidFromEutils = function(callback) {\n  var organism, taxonomySearch, taxid,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  taxonomySearch = ideo.esearch + \"&db=taxonomy&term=\" + organism;\n\n  d3.json(taxonomySearch, function(data) {\n    taxid = data.esearchresult.idlist[0];\n    return callback(taxid);\n  });\n};\n\n/**\n* Returns an array of taxids for the current ideogram\n* Also sets configuration parameters related to taxid(s), whether ideogram is\n* multiorganism, and adjusts chromosomes parameters as needed\n**/\nIdeogram.prototype.getTaxids = function(callback) {\n  var ideo = this,\n    taxid, taxids,\n    org, orgs, i,\n    taxidInit, tmpChrs,\n    assembly, chromosomes,\n    multiorganism;\n\n  taxidInit = \"taxid\" in ideo.config;\n\n  ideo.config.multiorganism = (\n    (\"organism\" in ideo.config && ideo.config.organism instanceof Array) ||\n    (taxidInit && ideo.config.taxid instanceof Array)\n  );\n\n  multiorganism = ideo.config.multiorganism;\n\n  if (\"organism\" in ideo.config) {\n    // Ideogram instance was constructed using common organism name(s)\n    if (multiorganism) {\n      orgs = ideo.config.organism;\n    } else {\n      orgs = [ideo.config.organism];\n    }\n\n    taxids = [];\n    tmpChrs = {};\n    for (i = 0; i < orgs.length; i++) {\n      // Gets a list of taxids from common organism names\n      org = orgs[i];\n      for (taxid in ideo.organisms) {\n        if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n          taxids.push(taxid);\n          if (multiorganism) {\n            // Adjusts 'chromosomes' configuration parameter to make object\n            // keys use taxid instead of common organism name\n            tmpChrs[taxid] = ideo.config.chromosomes[org];\n          }\n        }\n      }\n    }\n\n    if (taxids.length === 0) {\n      promise = new Promise(function(resolve) {\n        ideo.getTaxidFromEutils(resolve);\n      });\n\n      promise.then(function(data) {\n        var organism = ideo.config.organism,\n          dataDir = ideo.config.dataDir,\n          urlOrg = organism.replace(\" \", \"-\");\n\n        taxid = data;\n        taxids.push(taxid);\n\n        ideo.config.taxids = taxids;\n        ideo.organisms[taxid] = {\n          commonName: \"\",\n          scientificName: ideo.config.organism,\n          scientificNameAbbr: \"\"\n        };\n\n        var fullyBandedTaxids = ['9606', '10090', '10116'];\n        if (\n          fullyBandedTaxids.indexOf(taxid) !== -1 &&\n          ideo.config.showFullyBanded === false\n        ) {\n          urlOrg += '-no-bands';\n        }\n        var chromosomesUrl = dataDir + urlOrg + \".js\";\n\n        var promise = new Promise(function(resolve, reject) {\n          d3.request(chromosomesUrl).get(function(error, data) {\n            if (error) {\n              reject(Error(error));\n            }\n            resolve(data);\n          });\n        });\n\n        return promise\n          .then(\n            function(data) {\n              // Check if chromosome data exists locally.\n              // This is used for pre-processed centromere data,\n              // which is not accessible via EUtils.  See get_chromosomes.py.\n\n              var asmAndChrArray = [],\n                chromosomes = [],\n                seenChrs = {},\n                chr;\n\n              eval(data.response);\n\n              asmAndChrArray.push('');\n\n              for (var i = 0; i < chrBands.length; i++) {\n                chr = chrBands[i].split(' ')[0];\n                if (chr in seenChrs) {\n                  continue;\n                } else {\n                  chromosomes.push({name: chr, type: 'nuclear'});\n                  seenChrs[chr] = 1;\n                }\n              }\n              chromsomes = chromosomes.sort(ideo.sortChromosomes);\n              asmAndChrArray.push(chromosomes);\n              ideo.coordinateSystem = \"iscn\";\n              return asmAndChrArray;\n            },\n            function() {\n              return new Promise(function(resolve) {\n                ideo.coordinateSystem = \"bp\";\n                ideo.getAssemblyAndChromosomesFromEutils(resolve);\n              });\n            }\n          );\n      })\n      .then(function(asmChrArray) {\n        assembly = asmChrArray[0];\n        chromosomes = asmChrArray[1];\n\n        ideo.config.chromosomes = chromosomes;\n        ideo.organisms[taxid].assemblies = {\n          default: assembly\n        };\n\n        callback(taxids);\n      });\n    } else {\n      ideo.config.taxids = taxids;\n      if (multiorganism) {\n        ideo.config.chromosomes = tmpChrs;\n      }\n\n      callback(taxids);\n    }\n  } else {\n    if (multiorganism) {\n      ideo.coordinateSystem = \"bp\";\n      if (taxidInit) {\n        taxids = ideo.config.taxid;\n      }\n    } else {\n      if (taxidInit) {\n        taxids = [ideo.config.taxid];\n      }\n      ideo.config.taxids = taxids;\n    }\n\n    callback(taxids);\n  }\n};\n\nIdeogram.prototype.sortChromosomes = function(a, b) {\n  var aIsNuclear = a.type === \"nuclear\",\n    bIsNuclear = b.type === \"nuclear\",\n    aIsCP = a.type === \"chloroplast\",\n    bIsCP = b.type === \"chloroplast\",\n    aIsMT = a.type === \"mitochondrion\",\n    bIsMT = b.type === \"mitochondrion\";\n    // aIsPlastid = aIsMT && a.name !== \"MT\", // e.g. B1 in rice genome GCF_001433935.1\n    // bIsPlastid = bIsMT && b.name !== \"MT\";\n\n  if (aIsNuclear && bIsNuclear) {\n    return naturalSort(a.name, b.name);\n  } else if (!aIsNuclear && bIsNuclear) {\n    return 1;\n  } else if (aIsMT && bIsCP) {\n    return 1;\n  } else if (aIsCP && bIsMT) {\n    return -1;\n  } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n    return -1;\n  }\n};\n\n/**\n  Returns names and lengths of chromosomes for an organism's best-known\n  genome assembly.  Gets data from NCBI EUtils web API.\n*/\nIdeogram.prototype.getAssemblyAndChromosomesFromEutils = function(callback) {\n  var asmAndChrArray, // [assembly_accession, chromosome_objects_array]\n    assemblyAccession, chromosomes, asmSearch,\n    asmUid, asmSummary,\n    rsUid, nuccoreLink,\n    links, ntSummary,\n    results, result, cnIndex, chrName, chrLength, chromosome, type,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  asmAndChrArray = [];\n  chromosomes = [];\n\n  asmSearch =\n    ideo.esearch +\n    \"&db=assembly\" +\n    \"&term=%22\" + organism + \"%22[organism]\" +\n      \"AND%20(%22latest%20refseq%22[filter])%20\" +\n      \"AND%20(%22chromosome%20level%22[filter]%20\" +\n      \"OR%20%22complete%20genome%22[filter])\";\n\n  var promise = d3.promise.json(asmSearch);\n\n  promise\n      .then(function(data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + \"&db=assembly&id=\" + asmUid;\n\n        return d3.promise.json(asmSummary);\n      })\n      .then(function(data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        var qs = \"&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=\" + rsUid;\n        nuccoreLink = ideo.elink + qs;\n\n        return d3.promise.json(nuccoreLink);\n      })\n      .then(function(data) {\n        links = data.linksets[0].linksetdbs[0].links.join(\",\");\n        ntSummary = ideo.esummary + \"&db=nucleotide&id=\" + links;\n\n        return d3.promise.json(ntSummary);\n      })\n      .then(function(data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === \"uids\") {\n            continue;\n          }\n\n          if (result.genome === \"mitochondrion\") {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split(\"|\").indexOf(\"plasmid\");\n              if (cnIndex === -1) {\n                chrName = \"MT\";\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                  // genome: \"mitochondrion\",\n                  // subtype: \"cell_line|plasmid\",\n                  // subname: \"A-58 CMS|B1\",\n                chrName = result.subname.split(\"|\")[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (\n            result.genome === \"chloroplast\" ||\n            result.genome === \"plastid\"\n          ) {\n            type = \"chloroplast\";\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = \"CP\";\n            } else {\n              continue;\n            }\n          } else {\n            type = \"nuclear\";\n            cnIndex = result.subtype.split(\"|\").indexOf(\"chromosome\");\n\n            chrName = result.subname.split(\"|\")[cnIndex];\n\n            if (\n              typeof chrName !== \"undefined\" &&\n              chrName.substr(0, 3) === \"chr\"\n            ) {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = \"bp\";\n\n        return callback(asmAndChrArray);\n      });\n};\n\nIdeogram.prototype.initDrawChromosomes = function(bandsArray) {\n  var ideo = this,\n    taxids = ideo.config.taxids,\n    taxid,\n    chrIndex = 0,\n    chrSetNumber = 0,\n    bands,\n    i, j, chrs, chromosome, chrModel,\n    defs, transform;\n\n  defs = d3.select(ideo.selector + \" defs\");\n\n  for (i = 0; i < taxids.length; i++) {\n    taxid = taxids[i];\n    chrs = ideo.config.chromosomes[taxid];\n\n    ideo.chromosomes[taxid] = {};\n\n    for (j = 0; j < chrs.length; j++) {\n      chromosome = chrs[j];\n      bands = bandsArray[chrIndex];\n      chrIndex += 1;\n\n      chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n      ideo.chromosomes[taxid][chromosome] = chrModel;\n      ideo.chromosomesArray.push(chrModel);\n\n      transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n      chrSetNumber += 1;\n\n      // Append chromosome set container\n      var container = d3.select(ideo.selector)\n        .append(\"g\")\n        .attr(\"class\", \"chromosome-set-container\")\n        .attr(\"data-set-number\", j)\n        .attr(\"transform\", transform)\n        .attr(\"id\", chrModel.id + \"-chromosome-set\");\n\n      var shape;\n      for (var k = 0; k < this._ploidy.getChromosomesNumber(j); k++) {\n        shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n      }\n\n      defs.append(\"clipPath\")\n        .attr(\"id\", chrModel.id + \"-chromosome-set-clippath\")\n        .selectAll('path')\n        .data(shape)\n        .enter()\n        .append('path')\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n    }\n\n    if (ideo.config.showBandLabels === true) {\n      ideo.drawBandLabels(ideo.chromosomes);\n    }\n  }\n};\n\n// Get ideogram SVG container\nIdeogram.prototype.getSvg = function() {\n  return d3.select(this.selector).node();\n};\n\n/*\n* Completes default ideogram initialization\n* by calling downstream functions to\n* process raw band data into full JSON objects,\n* render chromosome and cytoband figures and labels,\n* apply initial graphical transformations,\n* hide overlapping band labels, and\n* execute callbacks defined by client code\n*/\nIdeogram.prototype.processBandData = function() {\n  var bandsArray, j, k, chromosome, bands,\n    chrLength, chr,\n    bandData, bandsByChr,\n    taxid, taxids, chrs, chrsByTaxid,\n    ideo = this;\n\n  bandsArray = [];\n  maxLength = 0;\n\n  if (ideo.config.multiorganism === true) {\n    ideo.coordinateSystem = \"bp\";\n    taxids = ideo.config.taxids;\n    for (i = 0; i < taxids.length; i++) {\n      taxid = taxids[i];\n    }\n  } else {\n    if (typeof ideo.config.taxid === \"undefined\") {\n      ideo.config.taxid = ideo.config.taxids[0];\n    }\n    taxid = ideo.config.taxid;\n    taxids = [taxid];\n    ideo.config.taxids = taxids;\n  }\n\n  if (\"chromosomes\" in ideo.config) {\n    chrs = ideo.config.chromosomes;\n  }\n  if (ideo.config.multiorganism) {\n    chrsByTaxid = chrs;\n  }\n\n  ideo.config.chromosomes = {};\n\n  var t0B = new Date().getTime();\n\n  for (j = 0; j < taxids.length; j++) {\n    taxid = taxids[j];\n\n    if (ideo.config.multiorganism) {\n      chrs = chrsByTaxid[taxid];\n    }\n\n    if (ideo.coordinateSystem === \"iscn\" || ideo.config.multiorganism) {\n      bandData = ideo.bandData[taxid];\n\n      bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n      chrs = Object.keys(bandsByChr).sort(function(a, b) {\n        return naturalSort(a, b);\n      });\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chromosome = chrs[k];\n        bands = bandsByChr[chromosome];\n        bandsArray.push(bands);\n\n        chrLength = {\n          iscn: bands[bands.length - 1].iscn.stop,\n          bp: bands[bands.length - 1].bp.stop\n        };\n\n        if (chrLength.iscn > ideo.maxLength.iscn) {\n          ideo.maxLength.iscn = chrLength.iscn;\n        }\n\n        if (chrLength.bp > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chrLength.bp;\n        }\n      }\n    } else if (ideo.coordinateSystem === \"bp\") {\n      // If lacking band-level data\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chr = chrs[k];\n        if (chr.length > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chr.length;\n        }\n      }\n    }\n  }\n\n  var t1B = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in processBandData: \" + (t1B - t0B) + \" ms\");\n  }\n\n  return bandsArray;\n};\n\n/**\n* Initializes an ideogram.\n* Sets some high-level properties based on instance configuration,\n* fetches band and annotation data if needed, and\n* writes an SVG element to the document to contain the ideogram\n*\n*/\nIdeogram.prototype.init = function() {\n  var taxid, i, svgClass;\n\n  var ideo = this;\n\n  var t0 = new Date().getTime();\n\n  var bandsArray = [],\n    numBandDataResponses = 0,\n    resolution = this.config.resolution,\n    accession;\n\n  var promise = new Promise(function(resolve) {\n    ideo.getTaxids(resolve);\n  });\n\n  promise.then(function(taxids) {\n    taxid = taxids[0];\n    ideo.config.taxid = taxid;\n    ideo.config.taxids = taxids;\n\n    var assemblies,\n      bandFileName;\n\n    var bandDataFileNames = {\n      9606: '',\n      10090: ''\n    };\n\n    for (i = 0; i < taxids.length; i++) {\n      taxid = String(taxids[i]);\n\n      if (!ideo.config.assembly) {\n        ideo.config.assembly = \"default\";\n      }\n      assemblies = ideo.organisms[taxid].assemblies;\n      accession = assemblies[ideo.config.assembly];\n\n      bandFileName = [];\n      bandFileName.push(slugify(ideo.organisms[taxid].scientificName));\n      if (accession !== assemblies.default) {\n        bandFileName.push(accession);\n      }\n      if (\n        taxid === '9606' &&\n        (accession !== assemblies.default || resolution !== 850)\n      ) {\n        bandFileName.push(resolution);\n      }\n      bandFileName = bandFileName.join('-') + '.js';\n\n      if (taxid === '9606' || taxid === '10090') {\n        bandDataFileNames[taxid] = bandFileName;\n      }\n\n      if (typeof chrBands === \"undefined\" && taxid in bandDataFileNames) {\n        d3.request(ideo.config.dataDir + bandDataFileNames[taxid])\n        .on(\"beforesend\", function(data) {\n          // Ensures correct taxid is processed in response callback; using\n          // simply 'taxid' variable gives the last *requested* taxid, which\n          // fails when dealing with multiple taxa.\n          data.taxid = taxid;\n        })\n        .get(function(error, data) {\n          eval(data.response);\n\n          ideo.bandData[data.taxid] = chrBands;\n          numBandDataResponses += 1;\n\n          if (numBandDataResponses === taxids.length) {\n            bandsArray = ideo.processBandData();\n            writeContainer();\n          }\n        });\n      } else {\n        if (typeof chrBands !== \"undefined\") {\n          // If bands already available,\n          // e.g. via <script> tag in initial page load\n          ideo.bandData[taxid] = chrBands;\n        }\n        bandsArray = ideo.processBandData();\n        writeContainer();\n      }\n    }\n  });\n\n  function writeContainer() {\n    if (ideo.config.annotationsPath) {\n      d3.json(\n        ideo.config.annotationsPath, // URL\n        function(data) { // Callback\n          ideo.rawAnnots = data;\n        }\n      );\n    }\n\n    svgClass = \"\";\n    if (ideo.config.showChromosomeLabels) {\n      if (ideo.config.orientation === \"horizontal\") {\n        svgClass += \"labeledLeft \";\n      } else {\n        svgClass += \"labeled \";\n      }\n    }\n\n    if (\n      ideo.config.annotationsLayout &&\n      ideo.config.annotationsLayout === \"overlay\"\n    ) {\n      svgClass += \"faint\";\n    }\n\n    var gradients = ideo.getBandColorGradients();\n    var svgHeight = ideo._layout.getHeight(taxid);\n\n    d3.select(ideo.config.container)\n      .append(\"svg\")\n        .attr(\"id\", \"_ideogram\")\n        .attr(\"class\", svgClass)\n        .attr(\"width\", \"97%\")\n        .attr(\"height\", svgHeight)\n        .html(gradients);\n\n    finishInit();\n  }\n\n  function finishInit() {\n    try {\n      var t0A = new Date().getTime();\n\n      var i;\n\n      ideo.initDrawChromosomes(bandsArray);\n\n      // Waits for potentially large annotation dataset\n      // to be received by the client, then triggers annotation processing\n      if (ideo.config.annotationsPath) {\n        function pa() {\n          if (typeof timeout !== \"undefined\") {\n            window.clearTimeout(timeout);\n          }\n\n          ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n          ideo.drawProcessedAnnots(ideo.annots);\n\n          if (typeof crossfilter !== 'undefined' && ideo.initCrossFilter) {\n            ideo.initCrossFilter();\n          }\n        }\n\n        if (ideo.rawAnnots) {\n          pa();\n        } else {\n          (function checkAnnotData() {\n            timeout = setTimeout(function() {\n              if (!ideo.rawAnnots) {\n                checkAnnotData();\n              } else {\n                pa();\n              }\n            },\n            50\n          );\n          })();\n        }\n      }\n\n      if (ideo.config.showBandLabels === true) {\n        var bandsToShow = ideo.bandsToShow.join(\",\");\n\n      // d3.selectAll resolves to querySelectorAll (QSA).\n      // QSA takes a surprisingly long time to complete,\n      // and scales with the number of selectors.\n      // Most bands are hidden, so we can optimize by\n      // Hiding all bands, then QSA'ing and displaying the\n      // relatively few bands that are shown.\n        var t0C = new Date().getTime();\n        d3.selectAll(ideo.selector + \" .bandLabel, .bandLabelStalk\")\n          .style(\"display\", \"none\");\n        d3.selectAll(bandsToShow).style(\"display\", \"\");\n        var t1C = new Date().getTime();\n        if (ideo.debug) {\n          console.log(\"Time in showing bands: \" + (t1C - t0C) + \" ms\");\n        }\n\n        if (ideo.config.orientation === \"vertical\") {\n          var chrID;\n          for (i = 0; i < ideo.chromosomesArray.length; i++) {\n            chrID = \"#\" + ideo.chromosomesArray[i].id;\n            ideo.rotateChromosomeLabels(d3.select(chrID), i);\n          }\n        }\n      }\n\n      if (ideo.config.showChromosomeLabels === true) {\n        ideo.drawChromosomeLabels(ideo.chromosomes);\n      }\n\n      if (ideo.config.brush === true) {\n        ideo.createBrush();\n      }\n\n      if (ideo.config.annotations) {\n        ideo.drawAnnots(ideo.config.annotations);\n      }\n\n      var t1A = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time in drawChromosome: \" + (t1A - t0A) + \" ms\");\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time constructing ideogram: \" + (t1 - t0) + \" ms\");\n      }\n\n      if (ideo.onLoadCallback) {\n        ideo.onLoadCallback();\n      }\n\n      if (!(\"rotatable\" in ideo.config && ideo.config.rotatable === false)) {\n        d3.selectAll(ideo.selector + \" .chromosome\").on(\"click\", function() {\n          ideo.rotateAndToggleDisplay(this);\n        });\n      } else {\n        d3.selectAll(ideo.selector + \" .chromosome\").style(\"cursor\", \"default\");\n      }\n    } catch (e) {\n      // console.log(e);\n      throw e;\n    }\n  }\n};\n","/* Decompresses ideogram's annotations for crossfilter initialization\nBy default, annotations are clustered by chromosome, e.g.\n[\n  {\"chr\": \"1\", \"annots\": [{\"from\": 100, \"to\", 101, \"chr\": \"1\", ...}, ...]},\n  {\"chr\": \"2\", \"annots\": [{\"from\": 500, \"to\", 501, \"chr\": \"2\", ...}, ...]},\n  ...\n]\nThis method flattens that structure to e.g.\n[\n  {\"from\": 100, \"to\": 101, \"chr\": \"1\", ...},\n  ...\n  {\"from\": 500, \"to\": 501, \"chr\": \"2\", ...},\n]\nSee also: packAnnots\n*/\nIdeogram.prototype.unpackAnnots = function() {\n  var chr, annots, i,\n    unpackedAnnots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots = chr.annots;\n    unpackedAnnots = unpackedAnnots.concat(annots);\n  }\n\n  return unpackedAnnots;\n};\n\n/*\n  Compresses annots back to default state.  Inverse of unpackAnnots.\n*/\nIdeogram.prototype.packAnnots = function(unpackedAnnots) {\n  var chr, annot, i,\n    annots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (chr in chrs) {\n    annots.push({chr: chrs[chr].chr, annots: []});\n  }\n\n  for (i = 0; i < unpackedAnnots.length; i++) {\n    annot = unpackedAnnots[i];\n    annots[annot.chrIndex].annots.push(annot);\n  }\n\n  return annots;\n};\n\n/*\n  Initializes crossfilter.  Needed for client-side filtering.\n  More: https://github.com/square/crossfilter/wiki/API-Reference\n*/\nIdeogram.prototype.initCrossFilter = function() {\n  var ideo = this,\n    keys = ideo.rawAnnots.keys,\n    i, facet;\n\n  ideo.unpackedAnnots = ideo.unpackAnnots();\n  ideo.crossfilter = crossfilter(ideo.unpackedAnnots);\n\n  ideo.annotsByFacet = {};\n\n  ideo.facets = keys.slice(3, keys.length);\n\n  for (i = 0; i < ideo.facets.length; i++) {\n    facet = ideo.facets[i];\n    ideo.annotsByFacet[facet] =\n      ideo.crossfilter\n        .dimension(function(d) {\n          return d[facet];\n        });\n  }\n};\n\n/*\n  Filters annotations based on the given selections\n  \"selections\" is an object of objects, e.g.\n\n    {\n      \"tissue-type\": {          <-- a facet\n        \"cerebral-cortex\": 1,   <-- a filter; \"1\" means it is selected\n        \"liver\": 1\n      },\n      \"gene-type\": {\n        mirna\": 1\n      }\n    }\n\n  Translation:\n  select where:\n      (tissue-type is cerebral-cortex OR liver) and (gene-type is mirna)\n\n  TODO:\n    * Filter counts\n    * Range filters\n    * Integrate server-side filtering for very large datasets\n*/\nIdeogram.prototype.filterAnnots = function(selections) {\n  var t0 = Date.now();\n\n  var i, facet,\n    // prevFacet = null,\n    results, fn,\n    counts = {},\n    ideo = this;\n\n  if (Object.keys(selections).length === 0) {\n    results = ideo.unpackedAnnots;\n  } else {\n    for (i = 0; i < ideo.facets.length; i++) {\n      facet = ideo.facets[i];\n      if (facet in selections) {\n        fn = function(d) {\n          if (d in selections[facet]) {\n            return true;\n          }\n        };\n      } else {\n        fn = null;\n      }\n      ideo.annotsByFacet[facet].filter(fn);\n      counts[facet] = ideo.annotsByFacet[facet].group().top(Infinity);\n    }\n\n    results = ideo.annotsByFacet[facet].top(Infinity);\n  }\n\n  for (i < 0; i < ideo.facets.length; i++) {\n    ideo.annotsByFacet[facet].filterAll(); // clear filters\n  }\n\n  results = ideo.packAnnots(results);\n\n  d3.selectAll(ideo.selector + \" polygon.annot\").remove();\n  ideo.drawAnnots(results);\n\n  console.log(\"Time in filterAnnots: \" + (Date.now() - t0) + \" ms\");\n\n  return counts;\n};\n"]}