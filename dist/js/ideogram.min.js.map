{"version":3,"sources":["range.js","model-adapter.js","model-no-bands-adapter.js","layouts/layout.js","layouts/horizontal-layout.js","layouts/vertical-layout.js","layouts/paired-layout.js","layouts/small-layout.js","ploidy.js","color.js","views/chromosome.js","views/telocentric-chromosome.js","views/metacentric-chromosome.js","lib.js","views/chromosome-util.js","core.js","filter.js"],"names":["Range","data","this","_data","ModelAdapter","model","_model","_class","ModelNoBandsAdapter","call","Layout","config","ideo","_config","_ideo","_ploidy","_translate","undefined","chrSetMargin","k","chrMargin","ploidy","_tickSize","_isRotated","HorizontalLayout","_margin","left","top","VerticalLayout","PairedLayout","SmallLayout","Ploidy","_description","_normalize","ploidyDesc","Color","Chromosome","adapter","_adapter","getModel","_color","_bumpCoefficient","TelocentricChromosome","_pArmOffset","MetacentricChromosome","naturalSort","a","b","q","r","c","d","e","f","g","h","i","insensitive","toLowerCase","replace","j","l","split","m","n","parseInt","match","length","Date","parse","o","p","parseFloat","s","t","u","v","Math","max","isNaN","test","localeCompare","w","abs","slugify","value","ChromosomeUtil","node","_node","prototype","getStart","start","getStop","stop","getLength","getColor","chrNumber","_getColor","Array","isArray","color","getInstance","bands","getCssClass","Object","create","width","push","name","px","perspective","rows","orientation","_getLeftMargin","_getYScale","chrWidth","getChromosomeLabels","chrElement","util","getSetLabel","getLabel","filter","rotateBack","Error","rotateForward","rotate","chrSetNumber","otherChrs","d3","selectAll","selector","style","getChromosomeLabelClass","_getAdditionalOffset","annotationHeight","numAnnotTracks","_getChromosomeSetSize","setSize","getSetSize","getMargin","getHeight","getChromosomeBandTickY1","getChromosomeBandTickY2","getChromosomeBandLabelTranslate","getChromosomeSetLabelAnchor","getChromosomeBandLabelAnchor","getChromosomeLabelXPosition","getChromosomeLabelYPosition","getChromosomeSetLabelYPosition","getChromosomeSetLabelXPosition","getChromosomeSetLabelTranslate","getChromosomeSetTranslate","getChromosomeSetYTranslate","margin","setNumber","callback","xOffset","ideoBox","select","getBoundingClientRect","chrBox","scaleX","height","scaleY","yOffset","transform","parentNode","transition","attr","on","labels","getSvg","append","enter","text","String","translate","remove","taxId","numChromosomes","chromosomes","lastSetOffset","lastSetSize","getWidth","chrHeight","band","x","round","y","leftMargin","chromosomeSetYTranslate","self","marginTop","pad","annotationsLayout","prevTranslate","translateY","Number","organisms","getTaxids","taxIdList","size","rowSize","additionalPadding","getChromosomesNumber","chrSetCode","keys","description","normalized","key","ancestors","existence","_getexistenceArray","array","getAncestor","exists","armNumber","desc","getArmColor","armColors","_getPolyploidArmColor","getBorderColor","ancestor","centromerePosition","_addPArmShape","clipPath","isPArmRendered","concat","_getPArmShape","_addQArmShape","isQArmRendered","_getQArmShape","render","container","id","_renderPArm","_renderQArm","_renderRangeSet","opacity","fill","isFullyBanded","strokeWidth","path","class","rangeSet","range","chr","map","rangesContainer","bandsXOffset","_bandsXOffset","startPx","convertBpToPx","lengthPx","_getShapeData","firstQBand","lastBand","rightTerminalPosition","x1","x2","x3","x2b","_renderBands","arm","stain","Boolean","G","Q","process","nextTick","B","X","document","createTextNode","observe","characterData","MessageChannel","port1","onmessage","port2","postMessage","setTimeout","J","tt","require","runOnLoop","runOnContext","constructor","rt","_state","arguments","_result","E","_","TypeError","then","ut","error","S","_label","it","st","et","resolve","nt","A","_onerror","T","ot","_subscribers","M","P","ct","C","O","at","Y","_t","promise","I","F","D","K","L","N","_instanceConstructor","_input","_remaining","_enumerate","U","W","global","Function","Promise","toString","cast","pt","z","H","R","window","V","MutationObserver","WebKitMutationObserver","Z","$","Uint8ClampedArray","importScripts","random","substring","ft","lt","ht","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","_settledAt","_willSettleAt","dt","vt","polyfill","define","amd","module","exports","ES6Promise","slice","apply","forEach","Ideogram","rect","JSON","stringify","debug","dataDir","resolution","showChromosomeLabels","querySelector","showBandLabels","showFullyBanded","brush","bump","adjustedBump","chromosome","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","9606","commonName","scientificName","scientificNameAbbr","assemblies","default","GRCh38","GRCh37","10090","4641","chromosomesArray","bandsToShow","bandData","_layout","init","getBands","content","taxid","lines","delimiter","tsvLines","columns","line","tsvLinesLength","source","firstColumn","tmp","chrBands","eval","indexOf","chromosomeName","getChromosomeModel","chrIndex","pxStop","chrLength","cs","hasBands","type","fullChromosomeLabels","orgName","csLength","pcenIndex","scale","multiorganism","drawChromosomeLabels","chromosomeLabelClass","chrSetLabelXPosition","chrSetLabelTranslate","each","reverse","fullLabels","setLabelTranslate","drawBandLabels","chrs","chrModel","textOffsets","overlappingLabelXRight","index","prevHiddenBoxIndex","xLeft","prevLabelXRight","textPadding","textsLength","indexesToShow","prevTextBoxLeft","prevTextBoxWidth","selectorsToShow","ithLength","rotateChromosomeLabels","scaleSvg","tracksHeight","hasOwnProperty","ci","chrMargin2","rotateBandLabels","bandLabels","coord","drawChromosome","rotateAndToggleDisplay","_groups","bpToIscnScale","offset","pxStart","pxLength","iscnStart","iscnStop","iscnLength","bpStart","bpStop","bpLength","convertPxToBp","pxToIscnScale","drawSynteny","syntenicRegions","r1","r2","syntenies","regionID","t0","getTime","insert","regions","stopPx","syntenicRegion","activeRegion","others","classed","t1","console","log","annotationsPath","localAnnotationsPath","annots","annotations","annotHeight","annotationTracks","barWidth","annotationsColor","drawAnnots","friendlyAnnots","annot","rawAnnot","rawAnnots","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","getHistogramBars","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","histogramScaling","firstGet","numBins","count","barAnnots","barCount","fillAnnots","filledAnnots","chrArray","layout","triangle","circle","chrAnnot","y1","y2","thisChrWidth","createBrush","from","to","extent","event","selection","xScale","invert","floor","ceil","selectedRegion","x0","chrLengthBp","scaleLinear","domain","right","brushX","yTranslate","move","getBandColorGradients","colors","color1","color2","color3","css","gradients","getTaxidFromEutils","organism","taxonomySearch","json","esearchresult","idlist","taxids","org","orgs","taxidInit","tmpChrs","assembly","urlOrg","fullyBandedTaxids","chromosomesUrl","request","get","asmAndChrArray","seenChrs","response","chromsomes","sort","sortChromosomes","getAssemblyAndChromosomesFromEutils","asmChrArray","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","links","ntSummary","results","result","cnIndex","rsuid","assemblyaccession","qs","linksets","linksetdbs","join","genome","subtype","subname","substr","slen","initDrawChromosomes","bandsArray","defs","processBandData","bandsByChr","chrsByTaxid","t0B","t1B","writeContainer","svgClass","svgWidth","svgHeight","html","finishInit","pa","timeout","clearTimeout","crossfilter","initCrossFilter","t0A","checkAnnotData","t0C","t1C","chrID","t1A","numBandDataResponses","accession","bandFileName","bandDataFileNames","unpackAnnots","unpackedAnnots","packAnnots","facet","annotsByFacet","facets","dimension","filterAnnots","selections","fn","now","counts","group","Infinity","filterAll","label","setLabel"],"mappings":"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","file":"ideogram.min.js","sourcesContent":["/**\n * Chromosome range.\n * @public\n * @class\n * @param {Object} data - range data.\n * @param {Integer} data.chr - chromosome index.\n * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n * @param {Integer} data.start - range start.\n * @param {Integer} data.stop - range end.\n * @param {String} data.color - range color.\n */\nfunction Range(data) {\n  this._data = data;\n}\n\nRange.prototype.getStart = function() {\n  return this._data.start;\n};\n\nRange.prototype.getStop = function() {\n  return this._data.stop;\n};\n\nRange.prototype.getLength = function() {\n  return this._data.stop - this._data.start;\n};\n\nRange.prototype.getColor = function(chrNumber) {\n  if (!('ploidy' in this._data)) {\n    return this._getColor(chrNumber);\n  } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n    return this._getColor(chrNumber);\n  } else {\n    return 'transparent';\n  }\n};\n\nRange.prototype._getColor = function(chrNumber) {\n  if (Array.isArray(this._data.color)) {\n    return this._data.color[chrNumber];\n  } else {\n    return this._data.color;\n  }\n};\n","function ModelAdapter(model) {\n  this._model = model;\n  this._class = 'ModelAdapter';\n}\n\nModelAdapter.getInstance = function(model) {\n  if (model.bands) {\n    return new ModelAdapter(model);\n  } else {\n    return new ModelNoBandsAdapter(model);\n  }\n};\n\nModelAdapter.prototype.getModel = function() {\n  return this._model;\n};\n\nModelAdapter.prototype.getCssClass = function() {\n  return '';\n};\n","function ModelNoBandsAdapter(model) {\n    /*\n     * Call parent constructor.\n     */\n  ModelAdapter.call(this, model);\n  this._class = 'ModelNoBandsAdapter';\n}\n\nModelNoBandsAdapter.prototype = Object.create(ModelAdapter.prototype);\n\nModelNoBandsAdapter.prototype.getModel = function() {\n  this._model.bands = [];\n\n    // If chromosome width more, then 1 add single band to bands array\n  if (this._model.width > 1) {\n    this._model.bands.push({\n      name: 'q',\n      px: {\n        start: 0,\n        stop: this._model.width,\n        width: this._model.width\n      }\n    });\n  }\n\n  return this._model;\n};\n\nModelNoBandsAdapter.prototype.getCssClass = function() {\n  return 'noBands';\n};\n","function Layout(config, ideo) {\n  this._config = config;\n  this._ideo = ideo;\n  this._ploidy = this._ideo._ploidy;\n  this._translate = undefined;\n\n  if ('chrSetMargin' in config) {\n    this.chrSetMargin = config.chrSetMargin;\n  } else {\n    var k = this._config.chrMargin;\n    this.chrSetMargin = (this._config.ploidy > 1 ? k : 0);\n  }\n\n  // Chromosome band's size.\n  this._tickSize = 8;\n\n  // Chromosome rotation state.\n  this._isRotated = false;\n}\n\n// Factory method\nLayout.getInstance = function(config, ideo) {\n  if (\"perspective\" in config && config.perspective === \"comparative\") {\n    return new PairedLayout(config, ideo);\n  } else if (\"rows\" in config && config.rows > 1) {\n    return new SmallLayout(config, ideo);\n  } else if (config.orientation === 'vertical') {\n    return new VerticalLayout(config, ideo);\n  } else if (config.orientation === 'horizontal') {\n    return new HorizontalLayout(config, ideo);\n  } else {\n    return new VerticalLayout(config, ideo);\n  }\n};\n\n// Get chart left margin\nLayout.prototype._getLeftMargin = function() {\n  return this._margin.left;\n};\n\n// Get rotated chromosome y scale\nLayout.prototype._getYScale = function() {\n    // 20 is width of rotated chromosome.\n  return 20 / this._config.chrWidth;\n};\n\n// Get chromosome labels\nLayout.prototype.getChromosomeLabels = function(chrElement) {\n  var util = new ChromosomeUtil(chrElement);\n\n  return [util.getSetLabel(), util.getLabel()].filter(function(d) {\n    return d.length > 0;\n  });\n};\n\n// Rotate chromosome to original position\nLayout.prototype.rotateBack = function() {\n  throw new Error(this._class + '#rotateBack not implemented');\n};\n\n// Rotate chromosome to opposite position\nLayout.prototype.rotateForward = function() {\n  throw new Error(this._class + '#rotateForward not implemented');\n};\n\nLayout.prototype.rotate = function(chrSetNumber, chrNumber, chrElement) {\n  var ideo = this._ideo;\n\n    // Find chromosomes which should be hidden\n  var otherChrs = d3.selectAll(ideo.selector + \" g.chromosome\")\n    .filter(function() {\n      return this !== chrElement;\n    });\n\n  if (this._isRotated) {\n        // Reset _isRotated flag\n    this._isRotated = false;\n        // Rotate chromosome back\n    this.rotateBack(chrSetNumber, chrNumber, chrElement, function() {\n            // Show all other chromosomes and chromosome labels\n      otherChrs.style(\"display\", null);\n      d3.selectAll(ideo.selector + \" .chrSetLabel, .chrLabel\")\n        .style(\"display\", null);\n    });\n  } else {\n        // Set _isRotated flag\n    this._isRotated = true;\n\n        // Hide all other chromosomes and chromosome labels\n    otherChrs.style(\"display\", \"none\");\n    d3.selectAll(ideo.selector + \" .chrSetLabel, .chrLabel\")\n      .style(\"display\", \"none\");\n\n        // Rotate chromosome\n    this.rotateForward(chrSetNumber, chrNumber, chrElement);\n  }\n};\n\nLayout.prototype.getChromosomeLabelClass = function() {\n  if (this._config.ploidy === 1) {\n    return 'chrLabel';\n  } else {\n    return 'chrSetLabel';\n  }\n};\n\nLayout.prototype._getAdditionalOffset = function() {\n  return (\n    (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1)\n  );\n};\n\nLayout.prototype._getChromosomeSetSize = function(chrSetNumber) {\n  // Get last chromosome set size.\n  var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n  // Increase offset by last chromosome set size\n  return (\n    setSize * this._config.chrWidth * 2 + (this.chrSetMargin)\n  );\n};\n\n// Get layout margin\nLayout.prototype.getMargin = function() {\n  return this._margin;\n};\n\n// Get SVG element height\nLayout.prototype.getHeight = function() {\n  throw new Error(this._class + '#getHeight not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY1 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY2 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n};\n\n// Get chromosome's band translate attribute\nLayout.prototype.getChromosomeBandLabelTranslate = function() {\n  throw new Error(\n    this._class + '#getChromosomeBandLabelTranslate not implemented'\n  );\n};\n\n// Get chromosome set label anchor property\nLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'middle';\n};\n\n// Get chromosome's band label text-anchor value\nLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  throw (\n    new Error(this._class + '#getChromosomeBandLabelAnchor not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeLabelXPosition = function() {\n  throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n};\n\n// Get chromosome label y position.\nLayout.prototype.getChromosomeLabelYPosition = function() {\n  return -5.5;\n};\n\n// \"i\" is chromosome number\nLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelYPosition(i);\n  } else {\n    return -2 * this._config.chrWidth;\n  }\n};\n\nLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelXPosition not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelTranslate not implemented')\n  );\n};\n\n// Get chromosome set translate attribute\nLayout.prototype.getChromosomeSetTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n};\n\n// Get chromosome set translate's y offset\nLayout.prototype.getChromosomeSetYTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n};\n","function HorizontalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'HorizontalLayout';\n  this._margin = {\n    left: 20,\n    top: 30\n  };\n}\n\nHorizontalLayout.prototype = Object.create(Layout.prototype);\n\nHorizontalLayout.prototype._getLeftMargin = function() {\n  var margin = Layout.prototype._getLeftMargin.call(this);\n  if (this._config.ploidy > 1) {\n    margin *= 1.8;\n  }\n\n  return margin;\n};\n\nHorizontalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var xOffset = 30;\n\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.height / (chrBox.width + xOffset / 2)) * 0.9;\n  var scaleY = this._getYScale();\n\n  var yOffset = (chrNumber + 1) * ((this._config.chrWidth * 2) * scaleY);\n\n  var transform = (\n    'rotate(90) ' +\n    'translate(' + xOffset + ', -' + yOffset + ') ' +\n    'scale(' + scaleX + ', ' + scaleY + ')'\n  );\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  d3.select(this._ideo.getSvg())\n        .append('g')\n        .attr('class', 'tmp')\n        .selectAll('text')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', function(d, i) {\n          return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n        })\n        .attr('x', 30)\n        .attr('y', function(d, i) {\n          return (i + 1 + labels.length % 2) * 12;\n        })\n        .style('text-anchor', 'middle')\n        .style('opacity', 0)\n        .text(String)\n        .transition()\n        .style('opacity', 1);\n};\n\nHorizontalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll(this._ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nHorizontalLayout.prototype.getHeight = function(taxId) {\n    // Get last chromosome set offset.\n  var numChromosomes = this._config.chromosomes[taxId].length;\n  var lastSetOffset = this.getChromosomeSetYTranslate(numChromosomes - 1);\n\n    // Get last chromosome set size.\n  var lastSetSize = this._getChromosomeSetSize(numChromosomes - 1);\n\n    // Increase offset by last chromosome set size\n  lastSetOffset += lastSetSize;\n\n  return lastSetOffset + this._getAdditionalOffset() * 2;\n};\n\nHorizontalLayout.prototype.getWidth = function() {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'end';\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY1 = function() {\n  return 2;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY2 = function() {\n  return 10;\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelTranslate = function(band) {\n  var x = this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n  var y = -10;\n\n  return {\n    x: x,\n    y: y,\n    translate: 'translate(' + x + ',' + y + ')'\n  };\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var leftMargin = this._getLeftMargin();\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return \"translate(\" + leftMargin + \", \" + chromosomeSetYTranslate + \")\";\n};\n\nHorizontalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  // If no detailed description provided just use one formula for all cases.\n  if (!this._config.ploidyDesc) {\n    return this._config.chrMargin * (setNumber + 1);\n  }\n\n  // Id detailed description provided start to calculate offsets\n  //  for each chromosome set separately. This should be done only once.\n  if (!this._translate) {\n    // First offset equals to zero.\n    this._translate = [1];\n\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      this._translate[i] =\n        this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelXPosition(i);\n  } else {\n    return -20;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return (this._ploidy.getSetSize(i) * this._config.chrWidth) / 2 + 3;\n  } else {\n    return this._ploidy.getSetSize(i) * this._config.chrWidth;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -8;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelYPosition = function() {\n  return this._config.chrWidth;\n};\n","\nfunction VerticalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'VerticalLayout';\n    // Layout margins\n  this._margin = {\n    top: 30,\n    left: 15\n  };\n}\n\nVerticalLayout.prototype = Object.create(Layout.prototype);\n\nVerticalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n\n  var xOffset = 20;\n\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  var transform =\n    \"translate(\" + xOffset + \", 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  var y = (xOffset + self._config.chrWidth) * 1.3;\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(labels)\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', y).style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nVerticalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll(this._ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nVerticalLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nVerticalLayout.prototype.getWidth = function() {\n  return '97%';\n};\n\nVerticalLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nVerticalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var marginTop = this._margin.top;\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nVerticalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation/histogram tracks\n  var pad = this._getAdditionalOffset(),\n    margin = this._config.chrMargin,\n    width = this._config.chrWidth,\n    translate;\n\n    // If no detailed description provided just use one formula for all cases\n  if (!this._config.ploidyDesc) {\n   // TODO:\n   // This part of code contains a lot magic numbers and if\n   // statements for exactly corresponing to original ideogram examples.\n   // But all this stuff should be removed. Calculation of translate\n   // should be a simple formula applied for all cases listed below.\n   // Now they are diffirent because of Layout:_getAdditionalOffset do\n   // not meet for cases when no annotation, when annotation exists and\n   // when histogram used\n\n    if (this._config.annotationsLayout === \"histogram\") {\n      return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n    } else {\n      translate = width + setNumber * (margin + width) + pad * 2;\n      if (pad > 0) {\n        return translate;\n      } else {\n        return translate + 4 + (2 * setNumber);\n      }\n    }\n  }\n\n    // If detailed description provided start to calculate offsets\n    // for each chromosome set separately. This should be done only once\n  if (!this._translate) {\n    // First offset equals to zero\n    this._translate = [this._ploidy.getSetSize(0) * width * 2];\n    var prevTranslate;\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      prevTranslate = this._translate[i - 1];\n      this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nVerticalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function PairedLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'PairedLayout';\n\n  this._margin = {\n    left: 30\n  };\n}\n\nPairedLayout.prototype = Object.create(Layout.prototype);\n\nPairedLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n  var ideo = this._ideo;\n\n    // Get ideo container and chromosome set dimensions\n  var ideoBox = d3.select(ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n    // Evaluate dimensions scale coefficients\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n    // Evaluate y offset of chromosome. It is different for first and the second one\n  var yOffset = setNumber ? 150 : 25;\n\n  var transform =\n    'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n    .transition()\n    .attr(\"transform\", transform)\n    .on('end', function() {\n        // Run callback function if provided\n      if (callback) {\n        callback();\n      }\n\n      var translateY = (6 * Number(!setNumber));\n\n      // Rotate band labels\n      d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n        .attr('transform', 'rotate(90) translate(0, ' + translateY + ')')\n        .attr(\"text-anchor\", \"middle\");\n\n      // Hide syntenic regions\n      d3.selectAll(ideo.selector + ' .syntenicRegion').style(\"display\", 'none');\n    });\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(this.getChromosomeLabels(chrElement))\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', yOffset + (self._config.chrWidth * scaleX / 2) * 1.15)\n    .style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nPairedLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n  var ideo = this._ideo;\n\n    // Get intial transformation string for chromosome set\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', function() {\n            // Run callback fnuction if provided\n          callback();\n            // Show syntenic regions\n          d3.selectAll(ideo.select + ' .syntenicRegion').style(\"display\", null);\n            // Reset changed attributes to original state\n          d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n            .attr('transform', null)\n            .attr(\"text-anchor\", setNumber ? null : 'end');\n        });\n\n  d3.selectAll(ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nPairedLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.left * 1.5;\n};\n\nPairedLayout.prototype.getWidth = function() {\n  return '97%';\n};\n\nPairedLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n  return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n  var width = this._config.chrWidth;\n  return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n  return chrNumber % 2 ? null : 'end';\n};\n\nPairedLayout.prototype.getChromosomeBandLabelTranslate = function(band,\n  chrNumber) {\n  var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n  var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n  return {\n    x: y,\n    y: y,\n    translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n  };\n};\n\nPairedLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nPairedLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nPairedLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  return 200 * (setNumber + 1);\n};\n","function SmallLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'SmallLayout';\n\n  this._margin = {\n    left: 36.5,\n    top: 10\n  };\n}\n\nSmallLayout.prototype = Object.create(Layout.prototype);\n\nSmallLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  transform = \"translate(5, 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.getHeight = function() {\n  return this._config.rows * (this._config.chrHeight + this._margin.top * 1.5);\n};\n\nSmallLayout.prototype.getWidth = function() {\n  return '97%';\n};\n\nSmallLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nSmallLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nSmallLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n    // Get organisms id list\n  var organisms = [];\n  this._ideo.getTaxids(function(taxIdList) {\n    organisms = taxIdList;\n  });\n    // Get first organism chromosomes amount\n  var size = this._ideo.config.chromosomes[organisms[0]].length;\n    // Amount of chromosomes per number\n  var rowSize = size / this._config.rows;\n\n  var xOffset;\n  var yOffset;\n\n  if (setNumber > rowSize - 1) {\n    xOffset = this._margin.left + this._config.chrHeight * 1.4;\n    yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n  } else {\n    xOffset = this._margin.left;\n    yOffset = this.getChromosomeSetYTranslate(setNumber);\n  }\n\n  return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n};\n\nSmallLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation tracks\n  var additionalPadding = this._getAdditionalOffset();\n    // If no detailed description provided just use one formula for all cases\n  return (\n    this._margin.left * (setNumber) + this._config.chrWidth +\n    additionalPadding * 2 + additionalPadding * setNumber\n  );\n};\n\nSmallLayout.prototype.getChromosomeSetLabelXPosition = function(setNumber) {\n  return (\n    ((this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2) +\n    (this._config.ploidy > 1 ? 0 : this._config.chrWidth)\n  );\n};\n\nSmallLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function Ploidy(config) {\n  this._config = config;\n  this._description = this._normalize(this._config.ploidyDesc);\n}\n\n// Get number of chromosomes in a chromosome set\nPloidy.prototype.getChromosomesNumber = function(setNumber) {\n  if (this._config.ploidyDesc) {\n    var chrSetCode = this._config.ploidyDesc[setNumber];\n    if (chrSetCode instanceof Object) {\n      return Object.keys(chrSetCode)[0].length;\n    } else {\n      return chrSetCode.length;\n    }\n  } else {\n    return this._config.ploidy || 1;\n  }\n};\n\n// Normalize use defined description\nPloidy.prototype._normalize = function(description) {\n    // Return the same if no description provided\n  if (!description) {\n    return description;\n  }\n\n    // Array of normalized description objects\n  var normalized = [];\n\n     // Loop through description and normalize\n  for (var key in description) {\n    if (typeof description[key] === 'string') {\n      normalized.push({\n        ancestors: description[key],\n        existence: this._getexistenceArray(description[key].length)\n      });\n    } else {\n      normalized.push({\n        ancestors: Object.keys(description[key])[0],\n        existence: description[key][Object.keys(description[key])[0]]\n      });\n    }\n  }\n\n  return normalized;\n};\n\n// Get array filled by '11' elements\nPloidy.prototype._getexistenceArray = function(length) {\n  var array = [];\n\n  for (var i = 0; i < length; i++) {\n    array.push('11');\n  }\n\n  return array;\n};\n\nPloidy.prototype.getSetSize = function(chrSetNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors.length;\n  } else {\n    return 1;\n  }\n};\n\n// Get ancestor letter\nPloidy.prototype.getAncestor = function(chrSetNumber, chrNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors[chrNumber];\n  } else {\n    return '';\n  }\n};\n\n// Check if chromosome's arm should be rendered.\n// If no description was provided, method returns true and\n// something another depending on user provided description.\nPloidy.prototype.exists = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._description) {\n    var desc = this._description[chrSetNumber].existence[chrNumber][armNumber];\n    return Number(desc) > 0;\n  } else {\n    return true;\n  }\n};\n","function Color(config) {\n    // Ideogram config\n  this._config = config;\n  this._ploidy = new Ploidy(this._config);\n}\n\nColor.prototype.getArmColor = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._config.armColors) {\n    return this._config.armColors[armNumber];\n  } else if (this._config.ancestors) {\n    return this._getPolyploidArmColor(chrSetNumber, chrNumber, armNumber);\n  } else {\n    return null;\n  }\n};\n\nColor.prototype.getBorderColor = function(chrSetNumber, chrNumber, armNumber) {\n  if (chrNumber < this._config.ploidy) {\n    return '#000';\n  } else if (this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return '#000';\n  } else {\n    return '#fff';\n  }\n};\n\nColor.prototype._getPolyploidArmColor = function(chrSetNumber, chrNumber,\n  armNumber) {\n  if (!this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return 'transparent';\n  } else {\n    var ancestor = this._ploidy.getAncestor(chrSetNumber, chrNumber, armNumber);\n    return this._config.ancestors[ancestor];\n  }\n};\n","function Chromosome(adapter, config, ideo) {\n  this._adapter = adapter;\n  this._model = this._adapter.getModel();\n  this._config = config;\n  this._ideo = ideo;\n  this._color = new Color(this._config);\n  this._bumpCoefficient = 5;\n}\n\n// Factory method\nChromosome.getInstance = function(adapter, config, ideo) {\n  if (adapter.getModel().centromerePosition === 'telocentric') {\n    return new TelocentricChromosome(adapter, config, ideo);\n  } else {\n    return new MetacentricChromosome(adapter, config, ideo);\n  }\n};\n\nChromosome.prototype._addPArmShape = function(clipPath, isPArmRendered) {\n  if (isPArmRendered) {\n    return clipPath.concat(this._getPArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype._addQArmShape = function(clipPath, isQArmRendered) {\n  if (isQArmRendered) {\n    return clipPath.concat(this._getQArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype.render = function(container, chrSetNumber, chrNumber) {\n    // Append bands container and apply clip-path on it\n\n  var self = this;\n\n  container = container.append('g')\n    .attr('class', 'bands')\n    .attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n    // Render chromosome arms\n  var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n  var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n    // Render range set\n  this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n    // Push arms shape string into clipPath array\n  var clipPath = [];\n  clipPath = this._addPArmShape(clipPath, isPArmRendered);\n  clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n  var opacity = '0';\n  var fill = '';\n  var isFullyBanded = this.isFullyBanded();\n  if ('ancestors' in this._ideo.config && !('rangeSet' in this._ideo.config)) {\n    // E.g. diploid human genome (with translucent overlay)\n    fill = self._color.getArmColor(chrSetNumber, chrNumber, 0);\n    if (isFullyBanded) {\n      opacity = '0.5';\n    }\n  } else if (isFullyBanded) {\n    // E.g. mouse reference genome\n    opacity = null;\n    fill = 'transparent';\n  } else if (!('ancestors' in this._ideo.config)) {\n    // E.g. chimpanzee assembly Pan_tro 3.0\n    opacity = '1';\n  }\n\n  // Render chromosome border\n  container.append('g')\n        .attr('class', 'chromosome-border')\n        .selectAll('path')\n        .data(clipPath)\n        .enter()\n        .append('path')\n        .attr('fill', fill)\n        .style('fill-opacity', opacity)\n        .attr('stroke', function(d, i) {\n          return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n        })\n        .attr('stroke-width', function(d) {\n          return ('strokeWidth' in d ? d.strokeWidth : 1);\n        })\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n\n  return clipPath;\n};\n\nChromosome.prototype._renderRangeSet = function(container, chrSetNumber,\n  chrNumber) {\n  if (!('rangeSet' in this._config)) {\n    return;\n  }\n\n  var rangeSet = this._config.rangeSet.filter(function(range) {\n    return range.chr - 1 === chrSetNumber;\n  }).map(function(range) {\n    return new Range(range);\n  });\n\n  var rangesContainer = container.append('g')\n        .attr('class', 'range-set');\n\n  var self = this;\n  var ideo = self._ideo;\n  var bandsXOffset = ideo._bandsXOffset;\n\n  rangesContainer.selectAll('rect.range')\n        .data(rangeSet)\n        .enter()\n        .append('rect')\n        .attr('class', 'range')\n        .attr('x', function(range) {\n          var startPx = ideo.convertBpToPx(self._model, range.getStart());\n          return startPx - bandsXOffset;\n        }).attr('y', 0)\n        .attr('width', function(range) {\n          var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n          return lengthPx - bandsXOffset;\n        }).attr('height', this._config.chrWidth)\n        .style('fill', function(range) {\n          return range.getColor(chrNumber);\n        });\n};\n\n// Get chromosome's shape main values\nChromosome.prototype._getShapeData = function() {\n    // First q band from bands sequence\n  var firstQBand;\n  for (var i = 0; i < this._model.bands.length; i++) {\n    if (this._model.bands[i].name[0] === 'q') {\n      firstQBand = this._model.bands[i];\n      break;\n    }\n  }\n\n  // Chromosome's right position\n  var lastBand = this._model.bands.length - 1;\n  var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n    // Properties description:\n    // x1 - left terminal start position\n    // x2 - centromere position\n    // x3 - right terminal end position\n    // w - chromosome width\n    // b - bump size\n  return {\n    x1: 0,\n    x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n    x3: rightTerminalPosition,\n    w: this._config.chrWidth,\n    b: this._config.chrWidth / this._bumpCoefficient\n  };\n};\n\nChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x2 - d.b;\n\n  if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n    // Encountered when chromosome has any of:\n    //  - One placeholder \"band\", e.g. pig genome GCF_000003025.5\n    //  - Many (> 2) bands, e.g. human reference genome\n    //  - Ancestor colors in ploidy configuration, as in ploidy_basic.html\n    return {\n      class: '',\n      path:\n        'M' + d.b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + d.b + ',' + d.w + ' ' +\n        'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      class: '',\n      path:\n        'M' + d.b + ',0 ' +\n        'L' + (x - 2) + ',0 ' +\n        'L' + (x - 2) + ',' + d.w + ' ' +\n        'L' + d.b + ',' + d.w + ' ' +\n        'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n    }, {\n      class: 'acen',\n      path:\n        'M' + x + ',0 ' +\n        'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x + ',' + d.w + ' ' +\n        'L' + (x - 2) + ',' + d.w + ' ' +\n        'L' + (x - 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b,\n    x2b = d.x2 + d.b;\n\n  if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n    return {\n      class: '',\n      path:\n        'M' + x2b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w + ' ' +\n        'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + x2b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      path:\n        'M' + x2b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w + ' ' +\n        'L' + x2b + ',0'\n    }, {\n      class: 'acen',\n      path:\n        'M' + x2b + ',0' +\n        'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + x2b + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w +\n        'L' + (x2b + 2) + ',' + d.w +\n        'L' + (x2b + 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype.isFullyBanded = function() {\n  return (\n    this._model.bands &&\n    (this._model.bands.length !== 2 || this._model.bands[0].name[0] === 'q')\n  );\n}\n\n// Render arm bands\nChromosome.prototype._renderBands = function(container, chrSetNumber,\n  chrNumber, bands, arm) {\n  var self = this;\n  var armNumber = arm === 'p' ? 0 : 1;\n  var fill = '';\n  if ('ancestors' in this._ideo.config && !(this.isFullyBanded())) {\n    fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n  }\n\n  container.selectAll(\"path.band.\" + arm)\n    .data(bands)\n    .enter()\n    .append(\"path\")\n    .attr(\"id\", function(d) {\n      return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n    })\n    .attr(\"class\", function(d) {\n      return 'band ' + arm + '-band ' + d.stain;\n    })\n    .attr(\"d\", function(d) {\n      var start = self._ideo.round(d.px.start);\n      var length = self._ideo.round(d.px.width);\n\n      x = start + length;\n\n      return \"M \" + start + \", 0\" +\n            \"l \" + length + \" 0 \" +\n            \"l 0 \" + self._config.chrWidth + \" \" +\n            \"l -\" + length + \" 0 z\";\n    })\n    .style('fill', fill);\n};\n\n// Render chromosome's p arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderPArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'p';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n  return Boolean(bands.length);\n};\n\n// Render chromosome's q arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderQArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'q';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n  return Boolean(bands.length);\n};\n","function TelocentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'TelocentricChromosome';\n  this._pArmOffset = 3;\n}\n\nTelocentricChromosome.prototype = Object.create(Chromosome.prototype);\n\nTelocentricChromosome.prototype._addPArmShape = function(clipPath) {\n  return clipPath.concat(this._getPArmShape());\n};\n\nTelocentricChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData();\n  d.o = this._pArmOffset;\n\n  return [{\n    class: 'acen',\n    path: 'M' + (d.x2 + 2) + ',1' +\n            'L' + (d.x2 + d.o + 3.25) + ',1 ' +\n            'L' + (d.x2 + d.o + 3.25) + ',' + (d.w - 1) + ' ' +\n            'L' + (d.x2 + 2) + ',' + (d.w - 1)\n  }, {\n    class: 'gpos66',\n    path: 'M' + (d.x2 - d.o + 5) + ',0' +\n        'L' + (d.x2 - d.o + 3) + ',0 ' +\n        'L' + (d.x2 - d.o + 3) + ',' + d.w + ' ' +\n        'L' + (d.x2 - d.o + 5) + ',' + d.w,\n    strokeWidth: 0.5\n  }];\n};\n\nTelocentricChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b,\n    o = this._pArmOffset + 3;\n\n  return {\n    class: '',\n    path:\n      'M' + (d.x2 + o) + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + (d.x2 + o) + ',' + d.w\n  };\n};\n","function MetacentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'MetacentricChromosome';\n}\n\nMetacentricChromosome.prototype = Object.create(Chromosome.prototype);\n","// https://github.com/stefanpenner/es6-promise\n(function(){\"use strict\";function t(t){return\"function\"==typeof t||\"object\"==typeof t&&null!==t}function e(t){return\"function\"==typeof t}function n(t){G=t}function r(t){Q=t}function o(){return function(){process.nextTick(a)}}function i(){return function(){B(a)}}function s(){var t=0,e=new X(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){t.port2.postMessage(0)}}function c(){return function(){setTimeout(a,1)}}function a(){for(var t=0;J>t;t+=2){var e=tt[t],n=tt[t+1];e(n),tt[t]=void 0,tt[t+1]=void 0}J=0}function f(){try{var t=require,e=t(\"vertx\");return B=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[rt]&&k(r);var o=n._state;if(o){var i=arguments[o-1];Q(function(){x(o,r,i,n._result)})}else E(n,r,t,e);return r}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function _(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function v(t){try{return t.then}catch(e){return ut.error=e,ut}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){Q(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===it?S(t,e._result):e._state===st?j(t,e._result):E(e,void 0,function(e){g(t,e)},function(e){j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===et&&constructor.resolve===nt?b(t,n):r===ut?j(t,ut.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,_()):t(n)?w(e,n,v(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===ot&&(t._result=e,t._state=it,0!==t._subscribers.length&&Q(T,t))}function j(t,e){t._state===ot&&(t._state=st,t._result=e,Q(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+it]=n,o[i+st]=r,0===i&&t._state&&Q(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r,o,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return ct.error=n,ct}}function x(t,n,r,o){var i,s,u,c,a=e(r);if(a){if(i=P(r,o),i===ct?(c=!0,s=i.error,i=null):u=!0,n===i)return void j(n,d())}else i=o,u=!0;n._state!==ot||(a&&u?g(n,i):c?j(n,s):t===it?S(n,i):t===st&&j(n,i))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return at++}function k(t){t[rt]=at++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t){return new _t(this,t).promise}function q(t){var e=this;return new e(I(t)?function(n,r){for(var o=t.length,i=0;o>i;i++)e.resolve(t[i]).then(n,r)}:function(t,e){e(new TypeError(\"You must pass an array to race.\"))})}function F(t){var e=this,n=new e(p);return j(n,t),n}function D(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function K(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function L(t){this[rt]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&D(),this instanceof L?C(this,t):K())}function N(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[rt]||k(this.promise),I(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,U())}function U(){return new Error(\"Array Methods must be provided an Array\")}function W(){var t;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;(!n||\"[object Promise]\"!==Object.prototype.toString.call(n.resolve())||n.cast)&&(t.Promise=pt)}var z;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B,G,H,I=z,J=0,Q=function(t,e){tt[J]=t,tt[J+1]=e,J+=2,2===J&&(G?G(a):H())},R=\"undefined\"!=typeof window?window:void 0,V=R||{},X=V.MutationObserver||V.WebKitMutationObserver,Z=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),$=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,tt=new Array(1e3);H=Z?o():X?s():$?u():void 0===R&&\"function\"==typeof require?f():c();var et=l,nt=h,rt=Math.random().toString(36).substring(16),ot=void 0,it=1,st=2,ut=new M,ct=new M,at=0,ft=Y,lt=q,ht=F,pt=L;L.all=ft,L.race=lt,L.resolve=nt,L.reject=ht,L._setScheduler=n,L._setAsap=r,L._asap=Q,L.prototype={constructor:L,then:et,\"catch\":function(t){return this.then(null,t)}};var _t=N;N.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===ot&&t>n;n++)this._eachEntry(e[n],n)},N.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===nt){var o=v(t);if(o===et&&t._state!==ot)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===pt){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){e(t)}),e)}else this._willSettleAt(r(t),e)},N.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===ot&&(this._remaining--,t===st?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},N.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){n._settledAt(it,e,t)},function(t){n._settledAt(st,e,t)})};var dt=W,vt={Promise:pt,polyfill:dt};\"function\"==typeof define&&define.amd?define(function(){return vt}):\"undefined\"!=typeof module&&module.exports?module.exports=vt:\"undefined\"!=typeof this&&(this.ES6Promise=vt),dt()}).call(this);\n\n// https://github.com/kristw/d3.promise\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"d3\"],b):\"object\"==typeof exports?module.exports=b(require(\"d3\")):a.d3.promise=b(a.d3)}(this,function(a){var b=function(){function b(a,b){return function(){var c=Array.prototype.slice.call(arguments);return new Promise(function(d,e){var f=function(a,b){return a?void e(Error(a)):void d(b)};b.apply(a,c.concat(f))})}}var c={};return[\"csv\",\"tsv\",\"json\",\"xml\",\"text\",\"html\",\"get\"].forEach(function(d){c[d]=b(a,a[d])}),c}();return a.promise=b,b});\n\n// https://github.com/overset/javascript-natural-sort\nfunction naturalSort(a,b){var q,r,c=/(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,d=/^\\s+|\\s+$/g,e=/\\s+/g,f=/(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,g=/^0x[0-9a-f]+$/i,h=/^0/,i=function(a){return(naturalSort.insensitive&&(\"\"+a).toLowerCase()||\"\"+a).replace(d,\"\")},j=i(a),k=i(b),l=j.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),m=k.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),n=parseInt(j.match(g),16)||1!==l.length&&Date.parse(j),o=parseInt(k.match(g),16)||n&&k.match(f)&&Date.parse(k)||null,p=function(a,b){return(!a.match(h)||1==b)&&parseFloat(a)||a.replace(e,\" \").replace(d,\"\")||0};if(o){if(n<o)return-1;if(n>o)return 1}for(var s=0,t=l.length,u=m.length,v=Math.max(t,u);s<v;s++){if(q=p(l[s]||\"\",t),r=p(m[s]||\"\",u),isNaN(q)!==isNaN(r))return isNaN(q)?1:-1;if(/[^\\x00-\\x80]/.test(q+r)&&q.localeCompare){var w=q.localeCompare(r);return w/Math.abs(w)}if(q<r)return-1;if(q>r)return 1}}\n\n// e.g. \"Homo sapiens\" -> \"homo-sapiens\"\nfunction slugify(value){return value.toLowerCase().replace(' ', '-')};\n","// Chromosome's view utility class\nfunction ChromosomeUtil(node) {\n  this._node = node;\n}\n\nChromosomeUtil.prototype.getLabel = function() {\n  var label =\n    d3\n      .select(this._node)\n      .select('text.chrLabel')\n      .text();\n  return label;\n};\n\n// Get chromosome set label\nChromosomeUtil.prototype.getSetLabel = function() {\n  var setLabel =\n    d3\n      .select(this._node.parentNode)\n      .select('text.chromosome-set-label')\n      .text();\n  return setLabel;\n};\n","// Developed by Eric Weitz (https://github.com/eweitz)\n\n/* Constructs a prototypal Ideogram class */\nvar Ideogram = function(config) {\n  var orientation,\n    chrWidth, chrHeight,\n    container, rect;\n\n  // Clone the config object, to allow multiple instantiations\n  // without picking up prior ideogram's settings\n  this.config = JSON.parse(JSON.stringify(config));\n\n  // TODO: Document this\n  this._bandsXOffset = 30;\n\n  this.debug = false;\n\n  if (!this.config.dataDir) {\n    this.config.dataDir = \"../data/bands/native/\";\n  }\n\n  if (!this.config.ploidy) {\n    this.config.ploidy = 1;\n  }\n\n  if (!this.config.container) {\n    this.config.container = \"body\";\n  }\n\n  this.selector = this.config.container + ' #_ideogram';\n\n  if (!this.config.resolution) {\n    this.config.resolution = 850;\n  }\n\n  if (\"showChromosomeLabels\" in this.config === false) {\n    this.config.showChromosomeLabels = true;\n  }\n\n  if (!this.config.orientation) {\n    orientation = \"vertical\";\n    this.config.orientation = orientation;\n  }\n\n  if (!this.config.chrHeight) {\n    container = this.config.container;\n    rect = document.querySelector(container).getBoundingClientRect();\n\n    if (orientation === \"vertical\") {\n      chrHeight = rect.height;\n    } else {\n      chrHeight = rect.width;\n    }\n\n    if (container === \"body\") {\n      chrHeight = 500;\n    }\n    this.config.chrHeight = chrHeight;\n  }\n\n  if (!this.config.chrWidth) {\n    chrWidth = 10;\n    chrHeight = this.config.chrHeight;\n\n    if (chrHeight < 900 && chrHeight > 500) {\n      chrWidth = Math.round(chrHeight / 40);\n    } else if (chrHeight >= 900) {\n      chrWidth = Math.round(chrHeight / 45);\n    }\n    this.config.chrWidth = chrWidth;\n  }\n\n\n  if (!this.config.chrMargin) {\n    if (this.config.ploidy === 1) {\n      this.config.chrMargin = 10;\n    } else {\n      // Defaults polyploid chromosomes to relatively small interchromatid gap\n      this.config.chrMargin = Math.round(this.config.chrWidth/4);\n    }\n  }\n\n  if (!this.config.showBandLabels) {\n    this.config.showBandLabels = false;\n  }\n\n  if ('showFullyBanded' in this.config) {\n    this.config.showFullyBanded = this.config.showFullyBanded;\n  } else {\n    this.config.showFullyBanded = true;\n  }\n\n  if (!this.config.brush) {\n    this.config.brush = false;\n  }\n\n  if (!this.config.rows) {\n    this.config.rows = 1;\n  }\n\n  this.bump = Math.round(this.config.chrHeight / 125);\n  this.adjustedBump = false;\n  if (this.config.chrHeight < 200) {\n    this.adjustedBump = true;\n    this.bump = 4;\n  }\n\n  if (config.showBandLabels) {\n    this.config.chrMargin += 20;\n  }\n\n  if (config.chromosome) {\n    this.config.chromosomes = [config.chromosome];\n    if (\"showBandLabels\" in config === false) {\n      this.config.showBandLabels = true;\n    }\n    if (\"rotatable\" in config === false) {\n      this.config.rotatable = false;\n    }\n  }\n\n  if (!this.config.showNonNuclearChromosomes) {\n    this.config.showNonNuclearChromosomes = false;\n  }\n\n  this.initAnnotSettings();\n\n  this.config.chrMargin = (\n    this.config.chrMargin +\n    this.config.chrWidth +\n    this.config.annotTracksHeight * 2\n  );\n\n  if (config.onLoad) {\n    this.onLoadCallback = config.onLoad;\n  }\n\n  if (config.onDrawAnnots) {\n    this.onDrawAnnotsCallback = config.onDrawAnnots;\n  }\n\n  if (config.onBrushMove) {\n    this.onBrushMoveCallback = config.onBrushMove;\n  }\n\n  this.coordinateSystem = \"iscn\";\n\n  this.maxLength = {\n    bp: 0,\n    iscn: 0\n  };\n\n  // The E-Utilies In Depth: Parameters, Syntax and More:\n  // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n  this.eutils = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/\";\n  this.esearch = this.eutils + \"esearch.fcgi?retmode=json\";\n  this.esummary = this.eutils + \"esummary.fcgi?retmode=json\";\n  this.elink = this.eutils + \"elink.fcgi?retmode=json\";\n\n  this.organisms = {\n    9606: {\n      commonName: \"Human\",\n      scientificName: \"Homo sapiens\",\n      scientificNameAbbr: \"H. sapiens\",\n      assemblies: {\n        default: \"GCF_000001405.26\", // GRCh38\n        GRCh38: \"GCF_000001405.26\",\n        GRCh37: \"GCF_000001405.13\"\n      }\n    },\n    10090: {\n      commonName: \"Mouse\",\n      scientificName: \"Mus musculus\",\n      scientificNameAbbr: \"M. musculus\",\n      assemblies: {\n        default: \"GCF_000001635.20\"\n      }\n    },\n    4641: {\n      commonName: \"banana\",\n      scientificName: \"Musa acuminata\",\n      scientificNameAbbr: \"M. acuminata\",\n      assemblies: {\n        default: \"mock\"\n      }\n    }\n  };\n\n  // A flat array of chromosomes\n  // (this.chromosomes is an object of\n  // arrays of chromosomes, keyed by organism)\n  this.chromosomesArray = [];\n\n  this.bandsToShow = [];\n\n  this.chromosomes = {};\n  this.numChromosomes = 0;\n  this.bandData = {};\n\n  // Organism ploidy description\n  this._ploidy = new Ploidy(this.config);\n\n  // Chromosome's layout\n  this._layout = Layout.getInstance(this.config, this);\n\n  this.init();\n};\n\n/**\n* Gets chromosome band data from a\n* TSV file, or, if band data is prefetched, from an array\n*\n* UCSC: #chrom chromStart  chromEnd  name  gieStain\n* http://genome.ucsc.edu/cgi-bin/hgTables\n*  - group: Mapping and Sequencing\n*  - track: Chromosome Band (Ideogram)\n*\n* NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n* ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n*/\nIdeogram.prototype.getBands = function(content, taxid, chromosomes) {\n  var lines = {},\n    delimiter, tsvLines, columns, line, stain, chr,\n    i, init, tsvLinesLength, source,\n    start, stop, firstColumn, tmp;\n\n  if (content.slice(0, 8) === \"chrBands\") {\n    source = \"native\";\n  }\n\n  if (\n    chromosomes instanceof Array &&\n    typeof chromosomes[0] === 'object'\n  ) {\n    tmp = [];\n    for (i = 0; i < chromosomes.length; i++) {\n      tmp.push(chromosomes[i].name);\n    }\n    chromosomes = tmp;\n  }\n\n  if (typeof chrBands === \"undefined\" && source !== \"native\") {\n    delimiter = /\\t/;\n    tsvLines = content.split(/\\r\\n|\\n/);\n    init = 1;\n  } else {\n    delimiter = / /;\n    if (source === \"native\") {\n      tsvLines = eval(content);\n    } else {\n      tsvLines = content;\n    }\n    init = 0;\n  }\n\n  firstColumn = tsvLines[0].split(delimiter)[0];\n  if (firstColumn === '#chromosome') {\n    source = 'ncbi';\n  } else if (firstColumn === '#chrom') {\n    source = 'ucsc';\n  } else {\n    source = 'native';\n  }\n\n  tsvLinesLength = tsvLines.length;\n\n  if (source === 'ncbi' || source === 'native') {\n    for (i = init; i < tsvLinesLength; i++) {\n      columns = tsvLines[i].split(delimiter);\n\n      chr = columns[0];\n\n      if (\n        // If a specific set of chromosomes has been requested, and\n        // the current chromosome\n        typeof (chromosomes) !== \"undefined\" &&\n        chromosomes.indexOf(chr) === -1\n      ) {\n        continue;\n      }\n\n      if (chr in lines === false) {\n        lines[chr] = [];\n      }\n\n      stain = columns[7];\n      if (columns[8]) {\n        // For e.g. acen and gvar, columns[8] (density) is undefined\n        stain += columns[8];\n      }\n\n      line = {\n        chr: chr,\n        bp: {\n          start: parseInt(columns[5], 10),\n          stop: parseInt(columns[6], 10)\n        },\n        iscn: {\n          start: parseInt(columns[3], 10),\n          stop: parseInt(columns[4], 10)\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[1] + columns[2],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  } else if (source === 'ucsc') {\n    for (i = init; i < tsvLinesLength; i++) {\n      // #chrom chromStart  chromEnd  name  gieStain\n      // e.g. for fly:\n      // chr4\t69508\t108296\t102A1\tn/a\n      columns = tsvLines[i].split(delimiter);\n\n      if (columns[0] !== 'chr' + chromosomeName) {\n        continue;\n      }\n\n      stain = columns[4];\n      if (stain === 'n/a') {\n        stain = 'gpos100';\n      }\n      start = parseInt(columns[1], 10);\n      stop = parseInt(columns[2], 10);\n\n      line = {\n        chr: columns[0].split('chr')[1],\n        bp: {\n          start: start,\n          stop: stop\n        },\n        iscn: {\n          start: start,\n          stop: stop\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[3],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  }\n\n  return lines;\n};\n\n/**\n* Generates a model object for each chromosome\n* containing information on its name, DOM ID,\n* length in base pairs or ISCN coordinates,\n* cytogenetic bands, centromere position, etc.\n*/\nIdeogram.prototype.getChromosomeModel = function(bands, chromosome, taxid,\n  chrIndex) {\n  var chr = {},\n    band,\n    width, pxStop,\n    chrHeight = this.config.chrHeight,\n    maxLength = this.maxLength,\n    chrLength,\n    cs, hasBands;\n\n  cs = this.coordinateSystem;\n  hasBands = (typeof bands !== \"undefined\");\n\n  if (hasBands) {\n    chr.name = chromosome;\n    chr.length = bands[bands.length - 1][cs].stop;\n    chr.type = \"nuclear\";\n  } else {\n    chr = chromosome;\n  }\n\n  chr.chrIndex = chrIndex;\n\n  chr.id = \"chr\" + chr.name + \"-\" + taxid;\n\n  if (this.config.fullChromosomeLabels === true) {\n    var orgName = this.organisms[taxid].scientificNameAbbr;\n    chr.name = orgName + \" chr\" + chr.name;\n  }\n\n  chrLength = chr.length;\n\n  pxStop = 0;\n\n  if (hasBands) {\n    for (var i = 0; i < bands.length; i++) {\n      band = bands[i];\n      var csLength = band[cs].stop - band[cs].start;\n      width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n      bands[i].px = {start: pxStop, stop: pxStop + width, width: width};\n\n      pxStop = bands[i].px.stop;\n\n      if (hasBands && band.stain === \"acen\" && band.name[0] === \"p\") {\n        chr.pcenIndex = i;\n      }\n    }\n  } else {\n    pxStop = chrHeight * chr.length / maxLength[cs];\n  }\n\n  chr.width = pxStop;\n\n  chr.scale = {};\n\n  // TODO:\n  //\n  // A chromosome-level scale property is likely\n  // nonsensical for any chromosomes that have cytogenetic band data.\n  // Different bands tend to have ratios between number of base pairs\n  // and physical length.\n  //\n  // However, a chromosome-level scale property is likely\n  // necessary for chromosomes that do not have band data.\n  //\n  // This needs further review.\n  if (this.config.multiorganism === true) {\n    chr.scale.bp = 1;\n    // chr.scale.bp = band.iscn.stop / band.bp.stop;\n    chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n  } else {\n    chr.scale.bp = chrHeight / maxLength.bp;\n    if (hasBands) {\n      chr.scale.iscn = chrHeight / maxLength.iscn;\n    }\n  }\n  chr.bands = bands;\n\n  chr.centromerePosition = \"\";\n  if (\n    hasBands && bands[0].name[0] === 'p' && bands[1].name[0] === 'q' &&\n    bands[0].bp.stop - bands[0].bp.start < 2E6\n  ) {\n    // As with almost all mouse chromosome, chimpanzee chr22\n    chr.centromerePosition = \"telocentric\";\n\n    // Remove placeholder pter band\n    chr.bands = chr.bands.slice(1);\n  }\n\n  if (hasBands && chr.bands.length === 1) {\n    // Encountered when processing an assembly that has chromosomes with\n    // centromere data, but this chromosome does not.\n    // Example: chromosome F1 in Felis catus.\n    delete chr.bands;\n  }\n\n  return chr;\n};\n\n/**\n* Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n* If ideogram configuration has 'fullChromosomeLabels: True',\n* then labels includes name of taxon, which can help when\n* depicting orthologs.\n*/\nIdeogram.prototype.drawChromosomeLabels = function() {\n  var ideo = this;\n\n  var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n  var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n  var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes set's labels\n  d3.selectAll(ideo.selector + \" .chromosome-set-container\")\n        .append(\"text\")\n        .data(ideo.chromosomesArray)\n        .attr(\"class\", 'chromosome-set-label ' + chromosomeLabelClass)\n        .attr(\"transform\", chrSetLabelTranslate)\n        .attr(\"x\", chrSetLabelXPosition)\n        .attr(\"y\", function(d, i) {\n          return ideo._layout.getChromosomeSetLabelYPosition(i);\n        })\n        .attr(\"text-anchor\", ideo._layout.getChromosomeSetLabelAnchor())\n        .each(function(d) {\n            // Get label lines\n          var lines;\n          if (d.name.indexOf(' ') === -1) {\n            lines = [d.name];\n          } else {\n            lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n          }\n\n          // Render label lines\n          d3.select(this).selectAll('tspan')\n            .data(lines)\n            .enter()\n            .append('tspan')\n            .attr('dy', function(d, i) {\n              return i * -1.2 + 'em';\n            })\n            .attr('x', ideo._layout.getChromosomeSetLabelXPosition())\n            .attr('class', function(a, i) {\n              var fullLabels = ideo.config.fullChromosomeLabels;\n              return i === 1 && fullLabels ? 'italic' : null;\n            }).text(String);\n        });\n\n  var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes labels\n  d3.selectAll(ideo.selector + \" .chromosome-set-container\")\n        .each(function(a, chrSetNumber) {\n          d3.select(this).selectAll(\".chromosome\")\n                .append(\"text\")\n                .attr(\"class\", \"chrLabel\")\n                .attr(\"transform\", setLabelTranslate)\n                .attr(\"x\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelXPosition(i);\n                }).attr(\"y\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelYPosition(i);\n                }).text(function(d, chrNumber) {\n                  return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n                }).attr(\"text-anchor\", \"middle\");\n        });\n};\n\n/**\n* Draws labels and stalks for cytogenetic bands.\n*\n* Band labels are text like \"p11.11\".\n* Stalks are small lines that visually connect labels to their bands.\n*/\nIdeogram.prototype.drawBandLabels = function(chromosomes) {\n  var i, chr, chrs, taxid, ideo, chrModel;\n\n  ideo = this;\n\n  chrs = [];\n\n  for (taxid in chromosomes) {\n    for (chr in chromosomes[taxid]) {\n      chrs.push(chromosomes[taxid][chr]);\n    }\n  }\n\n  var textOffsets = {};\n\n  chrIndex = 0;\n  for (i = 0; i < chrs.length; i++) {\n    chrIndex += 1;\n\n    chrModel = chrs[i];\n\n    chr = d3.select(ideo.selector + \" #\" + chrModel.id);\n\n    // var chrMargin = this.config.chrMargin * chrIndex,\n    //   lineY1, lineY2;\n    //\n    // lineY1 = chrMargin;\n    // lineY2 = chrMargin - 8;\n    //\n    // if (\n    //   chrIndex === 1 &&\n    //   \"perspective\" in this.config && this.config.perspective === \"comparative\"\n    // ) {\n    //   lineY1 += 18;\n    //   lineY2 += 18;\n    // }\n\n    textOffsets[chrModel.id] = [];\n\n    chr.selectAll(\"text\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n        .attr(\"class\", function(d, i) {\n          return \"bandLabel bsbsl-\" + i;\n        })\n        .attr(\"transform\", function(d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          // var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        })\n        .append(\"text\")\n        .attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i))\n        .text(function(d) {\n          return d.name;\n        });\n\n    // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n    // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n    chr.selectAll(\"line.bandLabelStalk\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", function(d, i) {\n        return \"bandLabelStalk bsbsl-\" + i;\n      })\n      .attr(\"transform\", function(d) {\n        var x, y;\n\n        x = ideo.round(d.px.start + d.px.width / 2);\n\n        textOffsets[chrModel.id].push(x + 13);\n        y = -10;\n\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n        .append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", function() {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        }).attr(\"x2\", 0)\n        .attr(\"y2\", function() {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n  }\n\n  for (i = 0; i < chrs.length; i++) {\n    chrModel = chrs[i];\n\n    var textsLength = textOffsets[chrModel.id].length,\n      overlappingLabelXRight,\n      index,\n      indexesToShow = [],\n      prevHiddenBoxIndex,\n      xLeft,\n      prevLabelXRight,\n      textPadding;\n\n    overlappingLabelXRight = 0;\n\n    textPadding = 5;\n\n    for (index = 0; index < textsLength; index++) {\n      // Ensures band labels don't overlap\n\n      xLeft = textOffsets[chrModel.id][index];\n\n      if (xLeft < overlappingLabelXRight + textPadding === false) {\n        indexesToShow.push(index);\n      } else {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n        continue;\n      }\n\n      if (prevHiddenBoxIndex !== index) {\n        // This getBoundingClientRect() forces Chrome's\n        // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n        // TODO: This forced synchronous layout would be nice to eliminate.\n        // prevTextBox = texts[index].getBoundingClientRect();\n        // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n        // TODO: Account for number of characters in prevTextBoxWidth,\n        // maybe also zoom.\n        prevTextBoxLeft = textOffsets[chrModel.id][index];\n        prevTextBoxWidth = 36;\n\n        prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n      }\n\n      if (\n        xLeft < prevLabelXRight + textPadding\n      ) {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n      } else {\n        indexesToShow.push(index);\n      }\n    }\n\n    var selectorsToShow = [],\n      ithLength = indexesToShow.length,\n      j;\n\n    for (j = 0; j < ithLength; j++) {\n      index = indexesToShow[j];\n      selectorsToShow.push(\"#\" + chrModel.id + \" .bsbsl-\" + index);\n    }\n\n    this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n  }\n};\n\n// Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\nIdeogram.prototype.rotateChromosomeLabels = function(chr, chrIndex,\n  orientation, scale) {\n  var chrMargin, chrWidth, ideo, x, y,\n    numAnnotTracks, scaleSvg, tracksHeight;\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n  numAnnotTracks = this.config.numAnnotTracks;\n\n  ideo = this;\n\n  if (\n    typeof (scale) !== \"undefined\" &&\n    scale.hasOwnProperty(\"x\") &&\n    !(scale.x === 1 && scale.y === 1)\n  ) {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n    x = -6;\n    y = (scale === \"\" ? -16 : -14);\n  } else {\n    x = -8;\n    y = -16;\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  }\n\n  if (orientation === \"vertical\" || orientation === \"\") {\n    var ci = chrIndex - 1;\n\n    if (numAnnotTracks > 1 || orientation === \"\") {\n      ci -= 1;\n    }\n\n    chrMargin2 = -4;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n    }\n\n    chrMargin = ideo.config.chrMargin * ci;\n\n    if (numAnnotTracks > 1 === false) {\n      chrMargin += 1;\n    }\n\n    y = chrMargin + chrMargin2;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", scaleSvg)\n      .selectAll(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y);\n  } else {\n    chrIndex -= 1;\n\n    chrMargin2 = -chrWidth - 2;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + 8;\n    }\n\n    tracksHeight = ideo.config.annotTracksHeight;\n    if (ideo.config.annotationsLayout !== \"overlay\") {\n      tracksHeight *= 2;\n    }\n\n    chrMargin = ideo.config.chrMargin * chrIndex;\n    x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n    x /= scale.x;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", \"rotate(-90)\" + scaleSvg)\n      .selectAll(\"tspan\")\n      .attr(\"x\", x)\n      .attr(\"y\", y);\n  }\n};\n\n/**\n* Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n*\n* This method includes proportional scaling, which ensures that\n* while the parent chromosome group is scaled strongly in one dimension to fill\n* available space, the text in the chromosome's band labels is\n* not similarly distorted, and remains readable.\n*/\nIdeogram.prototype.rotateBandLabels = function(chr, chrIndex, scale) {\n  var chrMargin, scaleSvg,\n    orientation, bandLabels,\n    ideo = this;\n\n  bandLabels = chr.selectAll(\".bandLabel\");\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n\n  orientation = chr.attr(\"data-orientation\");\n\n  if (typeof (scale) === \"undefined\") {\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  } else {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n  }\n\n  if (\n    chrIndex === 1 &&\n    \"perspective\" in this.config && this.config.perspective === \"comparative\"\n  ) {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = (8 - chrMargin) - 26;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"text-anchor\", \"end\");\n  } else if (orientation === \"vertical\") {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = 8 - chrMargin;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n  } else {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n        y = chrMargin - 10;\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n\n    chr.selectAll(\".bandLabelStalk line\")\n      .attr(\"transform\", scaleSvg);\n  }\n};\n\nIdeogram.prototype.round = function(coord) {\n  // Rounds an SVG coordinates to two decimal places\n  // e.g. 42.1234567890 -> 42.12\n  // Per http://stackoverflow.com/a/9453447, below method is fastest\n  return Math.round(coord * 100) / 100;\n};\n\n/**\n* Renders all the bands and outlining boundaries of a chromosome.\n*/\nIdeogram.prototype.drawChromosome = function(chrModel, chrIndex, container, k) {\n\n  var chrMargin = this.config.chrMargin;\n\n    // Get chromosome model adapter class\n  var adapter = ModelAdapter.getInstance(chrModel);\n\n    // Append chromosome's container\n  var chromosome = container\n        .append(\"g\")\n        .attr(\"id\", chrModel.id)\n        .attr(\"class\", \"chromosome \" + adapter.getCssClass())\n        .attr(\"transform\", \"translate(0, \" + k * chrMargin + \")\");\n\n    // Render chromosome\n  return Chromosome.getInstance(adapter, this.config, this)\n        .render(chromosome, chrIndex, k);\n};\n\n/**\n* Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n* Useful for focusing or defocusing a particular chromosome\n*/\nIdeogram.prototype.rotateAndToggleDisplay = function(chromosome) {\n  /*\n   * Do nothing if taxId not defined. But it should be defined.\n   * To fix that bug we should have a way to find chromosome set number.\n   */\n  if (!this.config.taxid) {\n    return;\n  }\n\n  var chrSetNumber =\n    Number(d3.select(chromosome.parentNode).attr('data-set-number'));\n\n  var chrNumber = Array.prototype.slice.call(\n          d3.select(chromosome.parentNode).selectAll(\"g.chromosome\")._groups[0]\n      ).indexOf(chromosome);\n\n  return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertBpToPx = function(chr, bp) {\n  var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart,\n    iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    offset = this._bandsXOffset;\n    bpStart = band.bp.start;\n    bpStop = band.bp.stop;\n    bpLength = bpStop - bpStart;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n    iscnLength = iscnStop - iscnStart;\n    pxStart = band.px.start;\n    pxLength = band.px.width;\n\n    if (bp >= bpStart && bp <= bpStop) {\n      bpToIscnScale = iscnLength / bpLength;\n      iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n      px = offset + pxStart + (pxLength * (iscn - iscnStart) / (iscnLength));\n\n      return px;\n    }\n  }\n\n  throw new Error(\n    \"Base pair out of range.  \" +\n    \"bp: \" + bp + \"; length of chr\" + chr.name + \": \" + band.bp.stop\n  );\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertPxToBp = function(chr, px) {\n  var i, band, pxToIscnScale, iscn,\n    pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    pxStart = band.px.start;\n    pxStop = band.px.stop;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n\n    if (px >= pxStart && px <= pxStop) {\n      iscnLength = iscnStop - iscnStart;\n      pxLength = pxStop - pxStart;\n      bpLength = band.bp.stop - band.bp.start;\n\n      pxToIscnScale = iscnLength / pxLength;\n      iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n      bp = band.bp.start + (bpLength * (iscn - iscnStart) / iscnLength);\n\n      return Math.round(bp);\n    }\n  }\n\n  throw new Error(\n    \"Pixel out of range.  \" +\n    \"px: \" + bp + \"; length of chr\" + chr.name + \": \" + pxStop\n  );\n};\n\n/**\n* Draws a trapezoid connecting a genomic range on\n* one chromosome to a genomic range on another chromosome;\n* a syntenic region.\n*/\nIdeogram.prototype.drawSynteny = function(syntenicRegions) {\n  var t0 = new Date().getTime();\n\n  var r1, r2,\n    syntenies,\n    i, color, opacity,\n    regionID,\n    ideo = this;\n\n  syntenies = d3.select(ideo.selector)\n    .insert(\"g\", \":first-child\")\n    .attr(\"class\", \"synteny\");\n\n  for (i = 0; i < syntenicRegions.length; i++) {\n    regions = syntenicRegions[i];\n\n    r1 = regions.r1;\n    r2 = regions.r2;\n\n    color = \"#CFC\";\n    if (\"color\" in regions) {\n      color = regions.color;\n    }\n\n    opacity = 1;\n    if (\"opacity\" in regions) {\n      opacity = regions.opacity;\n    }\n\n    r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n    r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n    r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n    r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n    regionID = (\n      r1.chr.id + \"_\" + r1.start + \"_\" + r1.stop + \"_\" +\n      \"__\" +\n      r2.chr.id + \"_\" + r2.start + \"_\" + r2.stop\n    );\n\n    syntenicRegion = syntenies.append(\"g\")\n      .attr(\"class\", \"syntenicRegion\")\n      .attr(\"id\", regionID)\n      .on(\"click\", function() {\n        var activeRegion = this;\n        var others = d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          });\n\n        others.classed(\"hidden\", !others.classed(\"hidden\"));\n      })\n      .on(\"mouseover\", function() {\n        var activeRegion = this;\n        d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          })\n          .classed(\"ghost\", true);\n      })\n      .on(\"mouseout\", function() {\n        d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .classed(\"ghost\", false);\n      });\n\n    var x1 = this._layout.getChromosomeSetYTranslate(0);\n    var x2 = this._layout.getChromosomeSetYTranslate(1) - ideo.config.chrWidth;\n\n    syntenicRegion.append(\"polygon\")\n      .attr(\"points\",\n        x1 + ', ' + r1.startPx + ' ' +\n        x1 + ', ' + r1.stopPx + ' ' +\n        x2 + ', ' + r2.stopPx + ' ' +\n        x2 + ', ' + r2.startPx\n      )\n      .attr('style', \"fill: \" + color + \"; fill-opacity: \" + opacity);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.startPx)\n      .attr(\"y2\", r2.startPx);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.stopPx)\n      .attr(\"y2\", r2.stopPx);\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in drawSyntenicRegions: \" + (t1 - t0) + \" ms\");\n  }\n};\n\n/**\n* Initializes various annotation settings.  Constructor help function.\n*/\nIdeogram.prototype.initAnnotSettings = function() {\n  if (this.config.annotationsPath || this.config.localAnnotationsPath ||\n    this.annots || this.config.annotations) {\n    if (!this.config.annotationHeight) {\n      var annotHeight = Math.round(this.config.chrHeight / 100);\n      this.config.annotationHeight = annotHeight;\n    }\n\n    if (this.config.annotationTracks) {\n      this.config.numAnnotTracks = this.config.annotationTracks.length;\n    } else {\n      this.config.numAnnotTracks = 1;\n    }\n    this.config.annotTracksHeight =\n      this.config.annotationHeight * this.config.numAnnotTracks;\n\n    if (typeof this.config.barWidth === \"undefined\") {\n      this.config.barWidth = 3;\n    }\n  } else {\n    this.config.annotTracksHeight = 0;\n  }\n\n  if (typeof this.config.annotationsColor === \"undefined\") {\n    this.config.annotationsColor = \"#F00\";\n  }\n};\n\n/**\n* Draws annotations defined by user\n*/\nIdeogram.prototype.drawAnnots = function(friendlyAnnots) {\n  var ideo = this,\n    i, j, annot,\n    rawAnnots = [],\n    rawAnnot, keys,\n    chr,\n    chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n  // Occurs when filtering\n  if (\"annots\" in friendlyAnnots[0]) {\n    return ideo.drawProcessedAnnots(friendlyAnnots);\n  }\n\n  for (chr in chrs) {\n    rawAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < friendlyAnnots.length; i++) {\n    annot = friendlyAnnots[i];\n\n    for (j = 0; j < rawAnnots.length; j++) {\n      if (annot.chr === rawAnnots[j].chr) {\n        rawAnnot = [\n          annot.name,\n          annot.start,\n          annot.stop - annot.start\n        ];\n        if (\"color\" in annot) {\n          rawAnnot.push(annot.color);\n        }\n        if (\"shape\" in annot) {\n          rawAnnot.push(annot.shape);\n        }\n        rawAnnots[j].annots.push(rawAnnot);\n        break;\n      }\n    }\n  }\n\n  keys = [\"name\", \"start\", \"length\"];\n  if (\"color\" in friendlyAnnots[0]) {\n    keys.push(\"color\");\n  }\n  if (\"shape\" in friendlyAnnots[0]) {\n    keys.push(\"shape\");\n  }\n  ideo.rawAnnots = {keys: keys, annots: rawAnnots};\n\n  ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n  ideo.drawProcessedAnnots(ideo.annots);\n};\n\n/**\n* Proccesses genome annotation data.\n* Genome annotations represent features like a gene, SNP, etc. as\n* a small graphical object on or beside a chromosome.\n* Converts raw annotation data from server, which is structured as\n* an array of arrays, into a more verbose data structure consisting\n* of an array of objects.\n* Also adds pixel offset information.\n*/\nIdeogram.prototype.processAnnotData = function(rawAnnots) {\n  var keys,\n    i, j, annot, annots, annotsByChr,\n    chr,\n    chrModel, ra,\n    startPx, stopPx, px,\n    color,\n    ideo = this;\n\n  keys = rawAnnots.keys;\n  rawAnnots = rawAnnots.annots;\n\n  annots = [];\n\n  for (i = 0; i < rawAnnots.length; i++) {\n    annotsByChr = rawAnnots[i];\n\n    annots.push({chr: annotsByChr.chr, annots: []});\n\n    for (j = 0; j < annotsByChr.annots.length; j++) {\n      chr = annotsByChr.chr;\n      ra = annotsByChr.annots[j];\n      annot = {};\n\n      for (var k = 0; k < keys.length; k++) {\n        annot[keys[k]] = ra[k];\n      }\n\n      annot.stop = annot.start + annot.length;\n\n      chrModel = ideo.chromosomes[ideo.config.taxid][chr];\n\n      startPx = ideo.convertBpToPx(chrModel, annot.start);\n      stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n      px = Math.round((startPx + stopPx) / 2) - 28;\n\n      color = ideo.config.annotationsColor;\n      if (ideo.config.annotationTracks) {\n        annot.trackIndex = ra[3];\n        color = ideo.config.annotationTracks[annot.trackIndex].color;\n      } else {\n        annot.trackIndex = 0;\n      }\n\n      if ('color' in annot) {\n        color = annot.color;\n      }\n\n      annot.chr = chr;\n      annot.chrIndex = i;\n      annot.px = px;\n      annot.startPx = startPx - 30;\n      annot.stopPx = stopPx - 30;\n      annot.color = color;\n\n      annots[i].annots.push(annot);\n    }\n  }\n\n  return annots;\n};\n\n/*\n* Can be used for bar chart or sparkline\n*/\nIdeogram.prototype.getHistogramBars = function(annots) {\n  var t0 = new Date().getTime();\n\n  var i, j, chr,\n    chrModels, chrPxStop, px,\n    chrAnnots, chrName, chrIndex, annot,\n    bars, bar, barPx, nextBarPx, barWidth,\n    maxAnnotsPerBar, color,\n    firstGet = false,\n    histogramScaling,\n    ideo = this;\n\n  bars = [];\n\n  barWidth = ideo.config.barWidth;\n  chrModels = ideo.chromosomes[ideo.config.taxid];\n  color = ideo.config.annotationsColor;\n\n  if (\"histogramScaling\" in ideo.config) {\n    histogramScaling = ideo.config.histogramScaling;\n  } else {\n    histogramScaling = \"relative\";\n  }\n\n  if (typeof ideo.maxAnnotsPerBar === \"undefined\") {\n    ideo.maxAnnotsPerBar = {};\n    firstGet = true;\n  }\n\n  for (chr in chrModels) {\n    chrModel = chrModels[chr];\n    chrIndex = chrModel.chrIndex;\n    lastBand = chrModel.bands[chrModel.bands.length - 1];\n    chrPxStop = lastBand.px.stop;\n    numBins = Math.round(chrPxStop / barWidth);\n    bar = {chr: chr, annots: []};\n    for (i = 0; i < numBins; i++) {\n      px = i * barWidth - ideo.bump;\n      bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n      bar.annots.push({\n        bp: bp,\n        px: px - ideo.bump,\n        count: 0,\n        chrIndex: chrIndex,\n        chrName: chr,\n        color: color,\n        annots: []\n      });\n    }\n    bars.push(bar);\n  }\n\n  for (chr in annots) {\n    chrAnnots = annots[chr].annots;\n    chrName = annots[chr].chr;\n    chrModel = chrModels[chrName];\n    chrIndex = chrModel.chrIndex - 1;\n    barAnnots = bars[chrIndex].annots;\n    for (i = 0; i < chrAnnots.length; i++) {\n      annot = chrAnnots[i];\n      px = annot.px - ideo.bump;\n      for (j = 0; j < barAnnots.length; j++) {\n        barPx = barAnnots[j].px;\n        nextBarPx = barPx + barWidth;\n        if (j === barAnnots.length - 1) {\n          nextBarPx += barWidth;\n        }\n        if (px >= barPx && px < nextBarPx) {\n          bars[chrIndex].annots[j].count += 1;\n          bars[chrIndex].annots[j].annots.push(annot);\n          break;\n        }\n      }\n    }\n  }\n\n  if (firstGet === true || histogramScaling === \"relative\") {\n    maxAnnotsPerBar = 0;\n    for (i = 0; i < bars.length; i++) {\n      annots = bars[i].annots;\n      for (j = 0; j < annots.length; j++) {\n        barCount = annots[j].count;\n        if (barCount > maxAnnotsPerBar) {\n          maxAnnotsPerBar = barCount;\n        }\n      }\n    }\n    ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n  }\n\n  // Set each bar's height to be proportional to\n  // the height of the bar with the most annotations\n  for (i = 0; i < bars.length; i++) {\n    annots = bars[i].annots;\n    for (j = 0; j < annots.length; j++) {\n      barCount = annots[j].count;\n      height = (barCount / ideo.maxAnnotsPerBar[chr]) * ideo.config.chrMargin;\n      // console.log(height)\n      bars[i].annots[j].height = height;\n    }\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time spent in getHistogramBars: \" + (t1 - t0) + \" ms\");\n  }\n\n  ideo.bars = bars;\n\n  return bars;\n};\n\n/**\n* Fills out annotations data structure such that its top-level list of arrays\n* matches that of this ideogram's chromosomes list in order and number\n* Fixes https://github.com/eweitz/ideogram/issues/66\n*/\nIdeogram.prototype.fillAnnots = function(annots) {\n  var filledAnnots, chrs, chrArray, i, chr, annot, chrIndex;\n\n  filledAnnots = [];\n  chrs = [];\n  chrArray = this.chromosomesArray;\n\n  for (i = 0; i < chrArray.length; i++) {\n    chr = chrArray[i].name;\n    chrs.push(chr);\n    filledAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < annots.length; i++) {\n    annot = annots[i];\n    chrIndex = chrs.indexOf(annot.chr);\n    if (chrIndex !== -1) {\n      filledAnnots[chrIndex] = annot;\n    }\n  }\n\n  return filledAnnots;\n};\n\n/**\n* Draws genome annotations on chromosomes.\n* Annotations can be rendered as either overlaid directly\n* on a chromosome, or along one or more \"tracks\"\n* running parallel to each chromosome.\n*/\nIdeogram.prototype.drawProcessedAnnots = function(annots) {\n  var chrWidth, layout,\n    annotHeight, triangle, circle, r, chrAnnot,\n    x1, x2, y1, y2,\n    filledAnnots,\n    ideo = this;\n\n  chrMargin = this.config.chrMargin;\n  chrWidth = this.config.chrWidth;\n\n  layout = \"tracks\";\n  if (this.config.annotationsLayout) {\n    layout = this.config.annotationsLayout;\n  }\n\n  if (layout === \"histogram\") {\n    annots = ideo.getHistogramBars(annots);\n  }\n\n  annotHeight = ideo.config.annotationHeight;\n\n  triangle =\n    'l -' + annotHeight + ' ' +\n    (2 * annotHeight) +\n    ' l ' + (2 * annotHeight) + ' 0 z';\n\n  // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n  // Circles are supported natively via <circle>, but having it as a path\n  // simplifies handling triangles, circles and other shapes in the same\n  // D3 call\n  r = annotHeight;\n  circle =\n    'm -' + r + ', ' + r +\n    'a ' + r + ',' + r + ' 0 1,0 ' + (r * 2) + ',0' +\n    'a ' + r + ',' + r + ' 0 1,0 -' + (r * 2) + ',0';\n\n  filledAnnots = ideo.fillAnnots(annots);\n\n  chrAnnot = d3.selectAll(ideo.selector + \" .chromosome\")\n    .data(filledAnnots)\n      .selectAll(\"path.annot\")\n      .data(function(d) {\n        return d.annots;\n      })\n      .enter();\n\n  if (layout === \"tracks\") {\n    chrAnnot\n      .append(\"g\")\n      .attr(\"id\", function(d) {\n        return d.id;\n      })\n      .attr(\"class\", \"annot\")\n      .attr(\"transform\", function(d) {\n        var y = ideo.config.chrWidth + (d.trackIndex * annotHeight * 2);\n        return \"translate(\" + d.px + \",\" + y + \")\";\n      })\n      .append(\"path\")\n      .attr(\"d\", function(d) {\n        if (!d.shape || d.shape === \"triangle\") {\n          return \"m0,0\" + triangle;\n        } else if (d.shape === \"circle\") {\n          return circle;\n        }\n      })\n      .attr(\"fill\", function(d) {\n        return d.color;\n      });\n  } else if (layout === \"overlay\") {\n      // Overlaid annotations appear directly on chromosomes\n\n    chrAnnot.append(\"polygon\")\n        .attr(\"id\", function(d) {\n          return d.id;\n        })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          if (d.stopPx - d.startPx > 1) {\n            x1 = d.startPx;\n            x2 = d.stopPx;\n          } else {\n            x1 = d.px - 0.5;\n            x2 = d.px + 0.5;\n          }\n          y1 = chrWidth;\n          y2 = 0;\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  } else if (layout === \"histogram\") {\n    chrAnnot.append(\"polygon\")\n        // .attr(\"id\", function(d, i) { return d.id; })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  }\n\n  if (ideo.onDrawAnnotsCallback) {\n    ideo.onDrawAnnotsCallback();\n  }\n};\n\nIdeogram.prototype.onBrushMove = function() {\n  call(this.onBrushMoveCallback);\n};\n\nIdeogram.prototype.createBrush = function(from, to) {\n  var ideo = this,\n    width = ideo.config.chrWidth + 6.5,\n    length = ideo.config.chrHeight,\n    chr = ideo.chromosomesArray[0],\n    chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n    x0, x1,\n    xOffset = this._layout.getMargin().left,\n    xScale = d3.scaleLinear()\n          .domain([0, d3.max(chr.bands, function(band) {\n            return band.bp.stop;\n          })]).range([xOffset, d3.max(chr.bands, function(band) {\n            return band.px.stop;\n          }) + xOffset]);\n\n  if (typeof from === \"undefined\") {\n    from = Math.floor(chrLengthBp / 10);\n  }\n\n  if (typeof right === \"undefined\") {\n    to = Math.ceil(from * 2);\n  }\n\n  x0 = ideo.convertBpToPx(chr, from);\n  x1 = ideo.convertBpToPx(chr, to);\n\n  ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n  ideo.brush = d3.brushX()\n    .extent([[xOffset, 0], [length + xOffset, width]])\n    .on(\"brush\", onBrushMove);\n\n  var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n  var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n  d3.select(ideo.selector).append(\"g\")\n    .attr(\"class\", \"brush\")\n    .attr(\"transform\", \"translate(0, \" + yOffset + \")\")\n    .call(ideo.brush)\n    .call(ideo.brush.move, [x0, x1]);\n\n  function onBrushMove() {\n    var extent = d3.event.selection.map(xScale.invert),\n      from = Math.floor(extent[0]),\n      to = Math.ceil(extent[1]);\n\n    ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n    if (ideo.onBrushMove) {\n      ideo.onBrushMoveCallback();\n    }\n  }\n};\n\n/**\n* Called when Ideogram has finished initializing.\n* Accounts for certain ideogram properties not being set until\n* asynchronous requests succeed, etc.\n*/\nIdeogram.prototype.onLoad = function() {\n  call(this.onLoadCallback);\n};\n\nIdeogram.prototype.onDrawAnnots = function() {\n  call(this.onDrawAnnotsCallback);\n};\n\nIdeogram.prototype.getBandColorGradients = function() {\n  var colors,\n    stain, color1, color2, color3,\n    css,\n    gradients = \"\";\n\n  colors = [\n    [\"gneg\", \"#FFF\", \"#FFF\", \"#DDD\"],\n    [\"gpos25\", \"#C8C8C8\", \"#DDD\", \"#BBB\"],\n    [\"gpos33\", \"#BBB\", \"#BBB\", \"#AAA\"],\n    [\"gpos50\", \"#999\", \"#AAA\", \"#888\"],\n    [\"gpos66\", \"#888\", \"#888\", \"#666\"],\n    [\"gpos75\", \"#777\", \"#777\", \"#444\"],\n    [\"gpos100\", \"#444\", \"#666\", \"#000\"],\n    [\"acen\", \"#FEE\", \"#FEE\", \"#FDD\"],\n    [\"noBands\", \"#BBB\", \"#BBB\", \"#AAA\"]\n  ];\n\n  for (var i = 0; i < colors.length; i++) {\n    stain = colors[i][0];\n    color1 = colors[i][1];\n    color2 = colors[i][2];\n    color3 = colors[i][3];\n    gradients +=\n      '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n    if (stain === \"gneg\") {\n      gradients +=\n        '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' +\n        '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n    } else {\n      gradients +=\n        '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' +\n        '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n    }\n    gradients +=\n      '</linearGradient>';\n  }\n\n  gradients +=\n    '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' +\n        'stroke-width:0.7;\" />' +\n    '</pattern>' +\n    '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(-30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' +\n          'stroke-width:0.7;\" />' +\n    '</pattern>';\n\n  gradients = \"<defs>\" + gradients + \"</defs>\";\n  css = \"<style>\" +\n    '.gneg {fill: url(\"#gneg\")} ' +\n    '.gpos25 {fill: url(\"#gpos25\")} ' +\n    '.gpos33 {fill: url(\"#gpos33\")} ' +\n    '.gpos50 {fill: url(\"#gpos50\")} ' +\n    '.gpos66 {fill: url(\"#gpos66\")} ' +\n    '.gpos75 {fill: url(\"#gpos75\")} ' +\n    '.gpos100 {fill: url(\"#gpos100\")} ' +\n    '.gpos {fill: url(\"#gpos100\")} ' +\n    '.acen {fill: url(\"#acen\")} ' +\n    '.stalk {fill: url(\"#stalk\")} ' +\n    '.gvar {fill: url(\"#gvar\")} ' +\n    '.noBands {fill: url(\"#noBands\")} ' +\n    '.chromosome {fill: url(\"#noBands\")} ' +\n  '</style>';\n  gradients = css + gradients;\n\n  // alert(gradients)\n\n  return gradients;\n};\n\n/*\n  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n*/\nIdeogram.prototype.getTaxidFromEutils = function(callback) {\n  var organism, taxonomySearch, taxid,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  taxonomySearch = ideo.esearch + \"&db=taxonomy&term=\" + organism;\n\n  d3.json(taxonomySearch, function(data) {\n    taxid = data.esearchresult.idlist[0];\n    return callback(taxid);\n  });\n};\n\n/**\n* Returns an array of taxids for the current ideogram\n* Also sets configuration parameters related to taxid(s), whether ideogram is\n* multiorganism, and adjusts chromosomes parameters as needed\n**/\nIdeogram.prototype.getTaxids = function(callback) {\n  var ideo = this,\n    taxid, taxids,\n    org, orgs, i,\n    taxidInit, tmpChrs,\n    assembly, chromosomes,\n    multiorganism;\n\n  taxidInit = \"taxid\" in ideo.config;\n\n  ideo.config.multiorganism = (\n    (\"organism\" in ideo.config && ideo.config.organism instanceof Array) ||\n    (taxidInit && ideo.config.taxid instanceof Array)\n  );\n\n  multiorganism = ideo.config.multiorganism;\n\n  if (\"organism\" in ideo.config) {\n    // Ideogram instance was constructed using common organism name(s)\n    if (multiorganism) {\n      orgs = ideo.config.organism;\n    } else {\n      orgs = [ideo.config.organism];\n    }\n\n    taxids = [];\n    tmpChrs = {};\n    for (i = 0; i < orgs.length; i++) {\n      // Gets a list of taxids from common organism names\n      org = orgs[i];\n      for (taxid in ideo.organisms) {\n        if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n          taxids.push(taxid);\n          if (multiorganism) {\n            // Adjusts 'chromosomes' configuration parameter to make object\n            // keys use taxid instead of common organism name\n            tmpChrs[taxid] = ideo.config.chromosomes[org];\n          }\n        }\n      }\n    }\n\n    if (taxids.length === 0) {\n      promise = new Promise(function(resolve) {\n        ideo.getTaxidFromEutils(resolve);\n      });\n\n      promise.then(function(data) {\n        var organism = ideo.config.organism,\n          dataDir = ideo.config.dataDir,\n          urlOrg = organism.replace(\" \", \"-\");\n\n        taxid = data;\n        taxids.push(taxid);\n\n        ideo.config.taxids = taxids;\n        ideo.organisms[taxid] = {\n          commonName: \"\",\n          scientificName: ideo.config.organism,\n          scientificNameAbbr: \"\"\n        };\n\n        var fullyBandedTaxids = ['9606', '10090', '10116'];\n        if (\n          fullyBandedTaxids.indexOf(taxid) !== -1 &&\n          ideo.config.showFullyBanded === false\n        ) {\n          urlOrg += '-no-bands';\n        }\n        var chromosomesUrl = dataDir + urlOrg + \".js\";\n\n        var promise = new Promise(function(resolve, reject) {\n          d3.request(chromosomesUrl).get(function(error, data) {\n            if (error) {\n              reject(Error(error));\n            }\n            resolve(data);\n          });\n        });\n\n        return promise\n          .then(\n            function(data) {\n              // Check if chromosome data exists locally.\n              // This is used for pre-processed centromere data,\n              // which is not accessible via EUtils.  See get_chromosomes.py.\n\n              var asmAndChrArray = [],\n                chromosomes = [],\n                seenChrs = {},\n                chr;\n\n              eval(data.response);\n\n              asmAndChrArray.push('');\n\n              for (var i = 0; i < chrBands.length; i++) {\n                chr = chrBands[i].split(' ')[0];\n                if (chr in seenChrs) {\n                  continue;\n                } else {\n                  chromosomes.push({name: chr, type: 'nuclear'});\n                  seenChrs[chr] = 1;\n                }\n              }\n              chromsomes = chromosomes.sort(ideo.sortChromosomes);\n              asmAndChrArray.push(chromosomes);\n              ideo.coordinateSystem = \"iscn\";\n              return asmAndChrArray;\n            },\n            function() {\n              return new Promise(function(resolve) {\n                ideo.coordinateSystem = \"bp\";\n                ideo.getAssemblyAndChromosomesFromEutils(resolve);\n              });\n            }\n          );\n      })\n      .then(function(asmChrArray) {\n        assembly = asmChrArray[0];\n        chromosomes = asmChrArray[1];\n\n        ideo.config.chromosomes = chromosomes;\n        ideo.organisms[taxid].assemblies = {\n          default: assembly\n        };\n\n        callback(taxids);\n      });\n    } else {\n      ideo.config.taxids = taxids;\n      if (multiorganism) {\n        ideo.config.chromosomes = tmpChrs;\n      }\n\n      callback(taxids);\n    }\n  } else {\n    if (multiorganism) {\n      ideo.coordinateSystem = \"bp\";\n      if (taxidInit) {\n        taxids = ideo.config.taxid;\n      }\n    } else {\n      if (taxidInit) {\n        taxids = [ideo.config.taxid];\n      }\n      ideo.config.taxids = taxids;\n    }\n\n    callback(taxids);\n  }\n};\n\nIdeogram.prototype.sortChromosomes = function(a, b) {\n  var aIsNuclear = a.type === \"nuclear\",\n    bIsNuclear = b.type === \"nuclear\",\n    aIsCP = a.type === \"chloroplast\",\n    bIsCP = b.type === \"chloroplast\",\n    aIsMT = a.type === \"mitochondrion\",\n    bIsMT = b.type === \"mitochondrion\";\n    // aIsPlastid = aIsMT && a.name !== \"MT\", // e.g. B1 in rice genome GCF_001433935.1\n    // bIsPlastid = bIsMT && b.name !== \"MT\";\n\n  if (aIsNuclear && bIsNuclear) {\n    return naturalSort(a.name, b.name);\n  } else if (!aIsNuclear && bIsNuclear) {\n    return 1;\n  } else if (aIsMT && bIsCP) {\n    return 1;\n  } else if (aIsCP && bIsMT) {\n    return -1;\n  } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n    return -1;\n  }\n};\n\n/**\n  Returns names and lengths of chromosomes for an organism's best-known\n  genome assembly.  Gets data from NCBI EUtils web API.\n*/\nIdeogram.prototype.getAssemblyAndChromosomesFromEutils = function(callback) {\n  var asmAndChrArray, // [assembly_accession, chromosome_objects_array]\n    assemblyAccession, chromosomes, asmSearch,\n    asmUid, asmSummary,\n    rsUid, nuccoreLink,\n    links, ntSummary,\n    results, result, cnIndex, chrName, chrLength, chromosome, type,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  asmAndChrArray = [];\n  chromosomes = [];\n\n  asmSearch =\n    ideo.esearch +\n    \"&db=assembly\" +\n    \"&term=%22\" + organism + \"%22[organism]\" +\n      \"AND%20(%22latest%20refseq%22[filter])%20\" +\n      \"AND%20(%22chromosome%20level%22[filter]%20\" +\n      \"OR%20%22complete%20genome%22[filter])\";\n\n  var promise = d3.promise.json(asmSearch);\n\n  promise\n      .then(function(data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + \"&db=assembly&id=\" + asmUid;\n\n        return d3.promise.json(asmSummary);\n      })\n      .then(function(data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        var qs = \"&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=\" + rsUid;\n        nuccoreLink = ideo.elink + qs;\n\n        return d3.promise.json(nuccoreLink);\n      })\n      .then(function(data) {\n        links = data.linksets[0].linksetdbs[0].links.join(\",\");\n        ntSummary = ideo.esummary + \"&db=nucleotide&id=\" + links;\n\n        return d3.promise.json(ntSummary);\n      })\n      .then(function(data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === \"uids\") {\n            continue;\n          }\n\n          if (result.genome === \"mitochondrion\") {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split(\"|\").indexOf(\"plasmid\");\n              if (cnIndex === -1) {\n                chrName = \"MT\";\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                  // genome: \"mitochondrion\",\n                  // subtype: \"cell_line|plasmid\",\n                  // subname: \"A-58 CMS|B1\",\n                chrName = result.subname.split(\"|\")[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (\n            result.genome === \"chloroplast\" ||\n            result.genome === \"plastid\"\n          ) {\n            type = \"chloroplast\";\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = \"CP\";\n            } else {\n              continue;\n            }\n          } else {\n            type = \"nuclear\";\n            cnIndex = result.subtype.split(\"|\").indexOf(\"chromosome\");\n\n            chrName = result.subname.split(\"|\")[cnIndex];\n\n            if (\n              typeof chrName !== \"undefined\" &&\n              chrName.substr(0, 3) === \"chr\"\n            ) {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = \"bp\";\n\n        return callback(asmAndChrArray);\n      });\n};\n\nIdeogram.prototype.initDrawChromosomes = function(bandsArray) {\n  var ideo = this,\n    taxids = ideo.config.taxids,\n    taxid,\n    chrIndex = 0,\n    chrSetNumber = 0,\n    bands,\n    i, j, chrs, chromosome, chrModel,\n    defs, transform;\n\n  defs = d3.select(ideo.selector + \" defs\");\n\n  for (i = 0; i < taxids.length; i++) {\n    taxid = taxids[i];\n    chrs = ideo.config.chromosomes[taxid];\n\n    ideo.chromosomes[taxid] = {};\n\n    for (j = 0; j < chrs.length; j++) {\n      chromosome = chrs[j];\n      bands = bandsArray[chrIndex];\n      chrIndex += 1;\n\n      chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n      ideo.chromosomes[taxid][chromosome] = chrModel;\n      ideo.chromosomesArray.push(chrModel);\n\n      transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n      chrSetNumber += 1;\n\n      // Append chromosome set container\n      var container = d3.select(ideo.selector)\n        .append(\"g\")\n        .attr(\"class\", \"chromosome-set-container\")\n        .attr(\"data-set-number\", j)\n        .attr(\"transform\", transform)\n        .attr(\"id\", chrModel.id + \"-chromosome-set\");\n\n      var shape;\n      for (var k = 0; k < this._ploidy.getChromosomesNumber(j); k++) {\n        shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n      }\n\n      defs.append(\"clipPath\")\n        .attr(\"id\", chrModel.id + \"-chromosome-set-clippath\")\n        .selectAll('path')\n        .data(shape)\n        .enter()\n        .append('path')\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n    }\n\n    if (ideo.config.showBandLabels === true) {\n      ideo.drawBandLabels(ideo.chromosomes);\n    }\n  }\n};\n\n// Get ideogram SVG container\nIdeogram.prototype.getSvg = function() {\n  return d3.select(this.selector).node();\n};\n\n/*\n* Completes default ideogram initialization\n* by calling downstream functions to\n* process raw band data into full JSON objects,\n* render chromosome and cytoband figures and labels,\n* apply initial graphical transformations,\n* hide overlapping band labels, and\n* execute callbacks defined by client code\n*/\nIdeogram.prototype.processBandData = function() {\n  var bandsArray, j, k, chromosome, bands,\n    chrLength, chr,\n    bandData, bandsByChr,\n    taxid, taxids, chrs, chrsByTaxid,\n    ideo = this;\n\n  bandsArray = [];\n  maxLength = 0;\n\n  if (ideo.config.multiorganism === true) {\n    ideo.coordinateSystem = \"bp\";\n    taxids = ideo.config.taxids;\n    for (i = 0; i < taxids.length; i++) {\n      taxid = taxids[i];\n    }\n  } else {\n    if (typeof ideo.config.taxid === \"undefined\") {\n      ideo.config.taxid = ideo.config.taxids[0];\n    }\n    taxid = ideo.config.taxid;\n    taxids = [taxid];\n    ideo.config.taxids = taxids;\n  }\n\n  if (\"chromosomes\" in ideo.config) {\n    chrs = ideo.config.chromosomes;\n  }\n  if (ideo.config.multiorganism) {\n    chrsByTaxid = chrs;\n  }\n\n  ideo.config.chromosomes = {};\n\n  var t0B = new Date().getTime();\n\n  for (j = 0; j < taxids.length; j++) {\n    taxid = taxids[j];\n\n    if (ideo.config.multiorganism) {\n      chrs = chrsByTaxid[taxid];\n    }\n\n    if (ideo.coordinateSystem === \"iscn\" || ideo.config.multiorganism) {\n      bandData = ideo.bandData[taxid];\n\n      bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n      chrs = Object.keys(bandsByChr).sort(function(a, b) {\n        return naturalSort(a, b);\n      });\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chromosome = chrs[k];\n        bands = bandsByChr[chromosome];\n        bandsArray.push(bands);\n\n        chrLength = {\n          iscn: bands[bands.length - 1].iscn.stop,\n          bp: bands[bands.length - 1].bp.stop\n        };\n\n        if (chrLength.iscn > ideo.maxLength.iscn) {\n          ideo.maxLength.iscn = chrLength.iscn;\n        }\n\n        if (chrLength.bp > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chrLength.bp;\n        }\n      }\n    } else if (ideo.coordinateSystem === \"bp\") {\n      // If lacking band-level data\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chr = chrs[k];\n        if (chr.length > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chr.length;\n        }\n      }\n    }\n  }\n\n  var t1B = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in processBandData: \" + (t1B - t0B) + \" ms\");\n  }\n\n  return bandsArray;\n};\n\n/**\n* Initializes an ideogram.\n* Sets some high-level properties based on instance configuration,\n* fetches band and annotation data if needed, and\n* writes an SVG element to the document to contain the ideogram\n*\n*/\nIdeogram.prototype.init = function() {\n  var taxid, i, svgClass;\n\n  var ideo = this;\n\n  var t0 = new Date().getTime();\n\n  var bandsArray = [],\n    numBandDataResponses = 0,\n    resolution = this.config.resolution,\n    accession;\n\n  var promise = new Promise(function(resolve) {\n    ideo.getTaxids(resolve);\n  });\n\n  promise.then(function(taxids) {\n    taxid = taxids[0];\n    ideo.config.taxid = taxid;\n    ideo.config.taxids = taxids;\n\n    var assemblies,\n      bandFileName;\n\n    var bandDataFileNames = {\n      9606: '',\n      10090: ''\n    };\n\n    for (i = 0; i < taxids.length; i++) {\n      taxid = String(taxids[i]);\n\n      if (!ideo.config.assembly) {\n        ideo.config.assembly = \"default\";\n      }\n      assemblies = ideo.organisms[taxid].assemblies;\n      accession = assemblies[ideo.config.assembly];\n\n      bandFileName = [];\n      bandFileName.push(slugify(ideo.organisms[taxid].scientificName));\n      if (accession !== assemblies.default) {\n        bandFileName.push(accession);\n      }\n      if (\n        taxid === '9606' &&\n        (accession !== assemblies.default || resolution !== 850)\n      ) {\n        bandFileName.push(resolution);\n      }\n      bandFileName = bandFileName.join('-') + '.js';\n\n      if (taxid === '9606' || taxid === '10090') {\n        bandDataFileNames[taxid] = bandFileName;\n      }\n\n      if (typeof chrBands === \"undefined\" && taxid in bandDataFileNames) {\n        d3.request(ideo.config.dataDir + bandDataFileNames[taxid])\n        .on(\"beforesend\", function(data) {\n          // Ensures correct taxid is processed in response callback; using\n          // simply 'taxid' variable gives the last *requested* taxid, which\n          // fails when dealing with multiple taxa.\n          data.taxid = taxid;\n        })\n        .get(function(error, data) {\n          eval(data.response);\n\n          ideo.bandData[data.taxid] = chrBands;\n          numBandDataResponses += 1;\n\n          if (numBandDataResponses === taxids.length) {\n            bandsArray = ideo.processBandData();\n            writeContainer();\n          }\n        });\n      } else {\n        if (typeof chrBands !== \"undefined\") {\n          // If bands already available,\n          // e.g. via <script> tag in initial page load\n          ideo.bandData[taxid] = chrBands;\n        }\n        bandsArray = ideo.processBandData();\n        writeContainer();\n      }\n    }\n  });\n\n  function writeContainer() {\n    if (ideo.config.annotationsPath) {\n      d3.json(\n        ideo.config.annotationsPath, // URL\n        function(data) { // Callback\n          ideo.rawAnnots = data;\n        }\n      );\n    }\n\n    svgClass = \"\";\n    if (ideo.config.showChromosomeLabels) {\n      if (ideo.config.orientation === \"horizontal\") {\n        svgClass += \"labeledLeft \";\n      } else {\n        svgClass += \"labeled \";\n      }\n    }\n\n    if (\n      ideo.config.annotationsLayout &&\n      ideo.config.annotationsLayout === \"overlay\"\n    ) {\n      svgClass += \"faint\";\n    }\n\n    var gradients = ideo.getBandColorGradients();\n    var svgWidth = ideo._layout.getWidth(taxid);\n    var svgHeight = ideo._layout.getHeight(taxid);\n\n    d3.select(ideo.config.container)\n      .append(\"div\")\n        .append(\"svg\")\n          .attr(\"id\", \"_ideogram\")\n          .attr(\"class\", svgClass)\n          .attr(\"width\", svgWidth)\n          .attr(\"height\", svgHeight)\n          .html(gradients);\n\n    finishInit();\n  }\n\n  function finishInit() {\n    try {\n      var t0A = new Date().getTime();\n\n      var i;\n\n      ideo.initDrawChromosomes(bandsArray);\n\n      // Waits for potentially large annotation dataset\n      // to be received by the client, then triggers annotation processing\n      if (ideo.config.annotationsPath) {\n        function pa() {\n          if (typeof ideo.timeout !== \"undefined\") {\n            window.clearTimeout(ideo.timeout);\n          }\n\n          ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n          ideo.drawProcessedAnnots(ideo.annots);\n\n          if (typeof crossfilter !== 'undefined' && ideo.initCrossFilter) {\n            ideo.initCrossFilter();\n          }\n        }\n\n        if (ideo.rawAnnots) {\n          pa();\n        } else {\n          (function checkAnnotData() {\n            ideo.timeout = setTimeout(function() {\n              if (!ideo.rawAnnots) {\n                checkAnnotData();\n              } else {\n                pa();\n              }\n            },\n            50\n          );\n          })();\n        }\n      }\n\n      if (ideo.config.showBandLabels === true) {\n        var bandsToShow = ideo.bandsToShow.join(\",\");\n\n      // d3.selectAll resolves to querySelectorAll (QSA).\n      // QSA takes a surprisingly long time to complete,\n      // and scales with the number of selectors.\n      // Most bands are hidden, so we can optimize by\n      // Hiding all bands, then QSA'ing and displaying the\n      // relatively few bands that are shown.\n        var t0C = new Date().getTime();\n        d3.selectAll(ideo.selector + \" .bandLabel, .bandLabelStalk\")\n          .style(\"display\", \"none\");\n        d3.selectAll(bandsToShow).style(\"display\", \"\");\n        var t1C = new Date().getTime();\n        if (ideo.debug) {\n          console.log(\"Time in showing bands: \" + (t1C - t0C) + \" ms\");\n        }\n\n        if (ideo.config.orientation === \"vertical\") {\n          var chrID;\n          for (i = 0; i < ideo.chromosomesArray.length; i++) {\n            chrID = \"#\" + ideo.chromosomesArray[i].id;\n            ideo.rotateChromosomeLabels(d3.select(chrID), i);\n          }\n        }\n      }\n\n      if (ideo.config.showChromosomeLabels === true) {\n        ideo.drawChromosomeLabels(ideo.chromosomes);\n      }\n\n      if (ideo.config.brush === true) {\n        ideo.createBrush();\n      }\n\n      if (ideo.config.annotations) {\n        ideo.drawAnnots(ideo.config.annotations);\n      }\n\n      var t1A = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time in drawChromosome: \" + (t1A - t0A) + \" ms\");\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time constructing ideogram: \" + (t1 - t0) + \" ms\");\n      }\n\n      if (ideo.onLoadCallback) {\n        ideo.onLoadCallback();\n      }\n\n      if (!(\"rotatable\" in ideo.config && ideo.config.rotatable === false)) {\n        d3.selectAll(ideo.selector + \" .chromosome\").on(\"click\", function() {\n          ideo.rotateAndToggleDisplay(this);\n        });\n      } else {\n        d3.selectAll(ideo.selector + \" .chromosome\").style(\"cursor\", \"default\");\n      }\n    } catch (e) {\n      // console.log(e);\n      throw e;\n    }\n  }\n};\n","/* Decompresses ideogram's annotations for crossfilter initialization\nBy default, annotations are clustered by chromosome, e.g.\n[\n  {\"chr\": \"1\", \"annots\": [{\"from\": 100, \"to\", 101, \"chr\": \"1\", ...}, ...]},\n  {\"chr\": \"2\", \"annots\": [{\"from\": 500, \"to\", 501, \"chr\": \"2\", ...}, ...]},\n  ...\n]\nThis method flattens that structure to e.g.\n[\n  {\"from\": 100, \"to\": 101, \"chr\": \"1\", ...},\n  ...\n  {\"from\": 500, \"to\": 501, \"chr\": \"2\", ...},\n]\nSee also: packAnnots\n*/\nIdeogram.prototype.unpackAnnots = function() {\n  var chr, annots, i,\n    unpackedAnnots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots = chr.annots;\n    unpackedAnnots = unpackedAnnots.concat(annots);\n  }\n\n  return unpackedAnnots;\n};\n\n/*\n  Compresses annots back to default state.  Inverse of unpackAnnots.\n*/\nIdeogram.prototype.packAnnots = function(unpackedAnnots) {\n  var chr, annot, i,\n    annots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (chr in chrs) {\n    annots.push({chr: chrs[chr].chr, annots: []});\n  }\n\n  for (i = 0; i < unpackedAnnots.length; i++) {\n    annot = unpackedAnnots[i];\n    annots[annot.chrIndex].annots.push(annot);\n  }\n\n  return annots;\n};\n\n/*\n  Initializes crossfilter.  Needed for client-side filtering.\n  More: https://github.com/square/crossfilter/wiki/API-Reference\n*/\nIdeogram.prototype.initCrossFilter = function() {\n  var ideo = this,\n    keys = ideo.rawAnnots.keys,\n    i, facet;\n\n  ideo.unpackedAnnots = ideo.unpackAnnots();\n  ideo.crossfilter = crossfilter(ideo.unpackedAnnots);\n\n  ideo.annotsByFacet = {};\n\n  ideo.facets = keys.slice(3, keys.length);\n\n  for (i = 0; i < ideo.facets.length; i++) {\n    facet = ideo.facets[i];\n    ideo.annotsByFacet[facet] =\n      ideo.crossfilter\n        .dimension(function(d) {\n          return d[facet];\n        });\n  }\n};\n\n/*\n  Filters annotations based on the given selections\n  \"selections\" is an object of objects, e.g.\n\n    {\n      \"tissue-type\": {          <-- a facet\n        \"cerebral-cortex\": 1,   <-- a filter; \"1\" means it is selected\n        \"liver\": 1\n      },\n      \"gene-type\": {\n        mirna\": 1\n      }\n    }\n\n  Translation:\n  select where:\n      (tissue-type is cerebral-cortex OR liver) and (gene-type is mirna)\n\n  TODO:\n    * Filter counts\n    * Range filters\n    * Integrate server-side filtering for very large datasets\n*/\nIdeogram.prototype.filterAnnots = function(selections) {\n  var t0 = Date.now();\n\n  var i, facet,\n    // prevFacet = null,\n    results, fn,\n    counts = {},\n    ideo = this;\n\n  if (Object.keys(selections).length === 0) {\n    results = ideo.unpackedAnnots;\n  } else {\n    for (i = 0; i < ideo.facets.length; i++) {\n      facet = ideo.facets[i];\n      if (facet in selections) {\n        fn = function(d) {\n          if (d in selections[facet]) {\n            return true;\n          }\n        };\n      } else {\n        fn = null;\n      }\n      ideo.annotsByFacet[facet].filter(fn);\n      counts[facet] = ideo.annotsByFacet[facet].group().top(Infinity);\n    }\n\n    results = ideo.annotsByFacet[facet].top(Infinity);\n  }\n\n  for (i < 0; i < ideo.facets.length; i++) {\n    ideo.annotsByFacet[facet].filterAll(); // clear filters\n  }\n\n  results = ideo.packAnnots(results);\n\n  d3.selectAll(ideo.selector + \" polygon.annot\").remove();\n  ideo.drawAnnots(results);\n\n  console.log(\"Time in filterAnnots: \" + (Date.now() - t0) + \" ms\");\n\n  return counts;\n};\n"]}