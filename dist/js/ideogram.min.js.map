{"version":3,"sources":["range.js","model-adapter.js","model-no-bands-adapter.js","layouts/layout.js","layouts/horizontal-layout.js","layouts/vertical-layout.js","layouts/paired-layout.js","layouts/small-layout.js","ploidy.js","color.js","views/chromosome.js","views/telocentric-chromosome.js","views/metacentric-chromosome.js","lib.js","core.js","views/chromosome-util.js","filter.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_interopRequireDefault","obj","__esModule","default","Chromosome","adapter","config","ideo","this","_adapter","_model","getModel","_config","_ideo","_color","Color","_bumpCoefficient","TelocentricChromosome","model","_class","_pArmOffset","MetacentricChromosome","naturalSort","a","b","q","r","c","d","g","i","insensitive","toLowerCase","replace","j","k","l","split","m","n","parseInt","match","length","Date","parse","o","p","parseFloat","s","t","u","v","Math","max","isNaN","test","localeCompare","w","abs","slugify","ChromosomeUtil","node","_node","defineProperty","exports","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","Range","data","_data","start","stop","chrNumber","ploidy","_getColor","Array","isArray","color","ModelAdapter","bands","ModelNoBandsAdapter","_ModelAdapter","_this","getPrototypeOf","width","push","name","px","Layout","_ploidy","_translate","undefined","chrSetMargin","chrMargin","_tickSize","_isRotated","_margin","left","chrWidth","chrElement","util","getSetLabel","getLabel","filter","Error","chrSetNumber","otherChrs","d3","selectAll","selector","rotateBack","style","rotateForward","annotationHeight","numAnnotTracks","getSetSize","getChromosomeLabelYPosition","perspective","PairedLayout","rows","SmallLayout","orientation","VerticalLayout","HorizontalLayout","_d","require","_d2","_Layout","top","margin","_getLeftMargin","setNumber","callback","ideoBox","select","getBoundingClientRect","chrBox","scaleX","height","xOffset","scaleY","_getYScale","yOffset","transform","parentNode","transition","attr","on","labels","getChromosomeLabels","getSvg","append","enter","text","String","translate","getChromosomeSetTranslate","remove","taxId","numChromosomes","chromosomes","lastSetOffset","getChromosomeSetYTranslate","_getChromosomeSetSize","_getAdditionalOffset","chrHeight","band","x","round","y","ploidyDesc","getChromosomeLabelXPosition","setSize","pad","annotationsLayout","prevTranslate","translateY","Number","chromosomeSetYTranslate","organisms","getTaxids","taxIdList","size","rowSize","additionalPadding","Ploidy","_description","_normalize","chrSetCode","keys","description","normalized","descValue","reverse","ancestors","existence","_getexistenceArray","array","armNumber","desc","armColors","_getPolyploidArmColor","exists","ancestor","getAncestor","getInstance","centromerePosition","_addPArmShape","clipPath","isPArmRendered","concat","_getPArmShape","_addQArmShape","isQArmRendered","_getQArmShape","render","container","id","_renderPArm","_renderQArm","_renderRangeSet","opacity","fill","isFullyBanded","getArmColor","getBorderColor","strokeWidth","path","class","rangeSet","range","chr","map","rangesContainer","bandsXOffset","_bandsXOffset","convertBpToPx","getStart","getLength","getColor","_getShapeData","firstQBand","lastBand","rightTerminalPosition","x1","x2","x3","x2b","_renderBands","arm","stain","Boolean","_typeof","Symbol","iterator","e","G","Q","B","setTimeout","J","tt","rt","_state","arguments","_result","E","h","_","then","ut","error","S","_label","it","st","et","resolve","nt","A","_onerror","T","ot","_subscribers","M","P","ct","C","O","at","Y","_t","promise","I","F","D","K","L","N","_instanceConstructor","_input","_remaining","_enumerate","U","W","global","Function","Promise","toString","cast","pt","z","H","R","window","V","X","MutationObserver","WebKitMutationObserver","Z","process","$","Uint8ClampedArray","importScripts","MessageChannel","nextTick","document","createTextNode","observe","characterData","port1","onmessage","port2","postMessage","runOnLoop","runOnContext","random","substring","ft","lt","ht","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","_settledAt","_willSettleAt","dt","vt","polyfill","define","amd","module","ES6Promise","slice","f","apply","forEach","Ideogram","rect","JSON","stringify","debug","dataDir","sexChromosomes","sex","resolution","showChromosomeLabels","querySelector","showBandLabels","showFullyBanded","brush","bump","adjustedBump","chromosome","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","9606","commonName","scientificName","scientificNameAbbr","assemblies","GRCh38","GRCh37","10090","4641","chromosomesArray","bandsToShow","bandData","init","getBands","content","taxid","lines","delimiter","tsvLines","columns","line","tsvLinesLength","source","firstColumn","tmp","chrBands","eval","indexOf","chromosomeName","chrIndex","pxStop","chrLength","cs","hasBands","type","fullChromosomeLabels","orgName","csLength","pcenIndex","scale","multiorganism","chromosomeLabelClass","_layout","getChromosomeLabelClass","chrSetLabelXPosition","getChromosomeSetLabelXPosition","chrSetLabelTranslate","getChromosomeSetLabelTranslate","getChromosomeSetLabelYPosition","getChromosomeSetLabelAnchor","each","index","fullLabels","setLabelTranslate","chrs","chrModel","textOffsets","getChromosomeBandLabelTranslate","getChromosomeBandLabelAnchor","getChromosomeBandTickY1","getChromosomeBandTickY2","overlappingLabelXRight","prevHiddenBoxIndex","xLeft","prevLabelXRight","textPadding","textsLength","indexesToShow","prevTextBoxLeft","prevTextBoxWidth","selectorsToShow","ithLength","scaleSvg","tracksHeight","hasOwnProperty","ci","chrMargin2","bandLabels","coord","getCssClass","_groups","rotate","bpToIscnScale","offset","pxStart","pxLength","iscnStart","iscnStop","iscnLength","bpStart","bpStop","bpLength","pxToIscnScale","syntenicRegions","r1","r2","syntenies","regionID","t0","getTime","insert","regions","startPx","stopPx","syntenicRegion","activeRegion","others","classed","t1","console","log","annotationsPath","localAnnotationsPath","annots","annotations","annotHeight","annotationTracks","barWidth","annotationsColor","friendlyAnnots","annot","rawAnnot","rawAnnots","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","histogramScaling","firstGet","numBins","convertPxToBp","count","barAnnots","barCount","filledAnnots","chrArray","layout","triangle","circle","chrAnnot","y1","y2","getHistogramBars","fillAnnots","thisChrWidth","from","to","extent","event","selection","xScale","invert","floor","ceil","selectedRegion","x0","chrLengthBp","getMargin","scaleLinear","domain","right","brushX","yTranslate","move","colors","color1","color2","color3","css","gradients","organism","taxonomySearch","json","esearchresult","idlist","taxids","org","orgs","taxidInit","tmpChrs","assembly","getTaxidFromEutils","urlOrg","fullyBandedTaxids","chromosomesUrl","request","get","asmAndChrArray","seenChrs","response","chromsomes","sort","sortChromosomes","getAssemblyAndChromosomesFromEutils","asmChrArray","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","links","ntSummary","results","result","cnIndex","rsuid","assemblyaccession","qs","linksets","linksetdbs","join","genome","subtype","subname","substr","slen","bandsArray","defs","sci","sexChromosomeIndexes","getChromosomeModel","drawChromosome","setSexChromosomes","drawSexChromosomes","numChrsInSet","getChromosomesNumber","drawBandLabels","sexChrs","list","bandsByChr","chrsByTaxid","t0B","t1B","writeContainer","svgClass","getBandColorGradients","svgWidth","getWidth","svgHeight","getHeight","html","finishInit","t0A","initDrawChromosomes","pa","timeout","clearTimeout","crossfilter","initCrossFilter","checkAnnotData","t0C","t1C","chrID","rotateChromosomeLabels","drawChromosomeLabels","createBrush","drawAnnots","t1A","rotateAndToggleDisplay","numBandDataResponses","accession","bandFileName","bandDataFileNames","processBandData","unpackAnnots","unpackedAnnots","packAnnots","facet","annotsByFacet","facets","dimension","filterAnnots","selections","fn","now","counts","group","Infinity","filterAll"],"mappings":"AAAA,YAQA,SAAAA,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCCAA,QAAAH,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCCAA,QAAAH,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCAEA,QAAAC,4BAAAC,EAAAC,GAAA,IAAAD,EAAA,KAAA,IAAAE,gBAAA,4DAAA,QAAAD,GAAA,gBAAAA,IAAA,kBAAAA,GAAAD,EAAAC,EAEA,QAAAE,WAAAC,EAAAC,GAAA,GAAA,kBAAAA,IAAA,OAAAA,EAAA,KAAA,IAAAP,WAAA,iEAAAO,GAAAD,GAAAE,UAAAC,OAAAC,OAAAH,GAAAA,EAAAC,WAAAG,aAAAC,MAAAN,EAAAO,YAAA,EAAAC,UAAA,EAAAC,cAAA,KAAAR,IAAAE,OAAAO,eAAAP,OAAAO,eAAAV,EAAAC,GAAAD,EAAAW,UAAAV,GCJA,QAAAV,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCCKA,QAAAkB,wBAAAC,GAAA,MAAAA,IAAAA,EAAAC,WAAAD,GAAAE,QAAAF,GAEA,QAAAtB,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCAEA,QAAAC,4BAAAC,EAAAC,GAAA,IAAAD,EAAA,KAAA,IAAAE,gBAAA,4DAAA,QAAAD,GAAA,gBAAAA,IAAA,kBAAAA,GAAAD,EAAAC,EAEA,QAAAE,WAAAC,EAAAC,GAAA,GAAA,kBAAAA,IAAA,OAAAA,EAAA,KAAA,IAAAP,WAAA,iEAAAO,GAAAD,GAAAE,UAAAC,OAAAC,OAAAH,GAAAA,EAAAC,WAAAG,aAAAC,MAAAN,EAAAO,YAAA,EAAAC,UAAA,EAAAC,cAAA,KAAAR,IAAAE,OAAAO,eAAAP,OAAAO,eAAAV,EAAAC,GAAAD,EAAAW,UAAAV,GCNA,QAAAW,wBAAAC,GAAA,MAAAA,IAAAA,EAAAC,WAAAD,GAAAE,QAAAF,GAEA,QAAAtB,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCAEA,QAAAC,4BAAAC,EAAAC,GAAA,IAAAD,EAAA,KAAA,IAAAE,gBAAA,4DAAA,QAAAD,GAAA,gBAAAA,IAAA,kBAAAA,GAAAD,EAAAC,EAEA,QAAAE,WAAAC,EAAAC,GAAA,GAAA,kBAAAA,IAAA,OAAAA,EAAA,KAAA,IAAAP,WAAA,iEAAAO,GAAAD,GAAAE,UAAAC,OAAAC,OAAAH,GAAAA,EAAAC,WAAAG,aAAAC,MAAAN,EAAAO,YAAA,EAAAC,UAAA,EAAAC,cAAA,KAAAR,IAAAE,OAAAO,eAAAP,OAAAO,eAAAV,EAAAC,GAAAD,EAAAW,UAAAV,GCNA,QAAAW,wBAAAC,GAAA,MAAAA,IAAAA,EAAAC,WAAAD,GAAAE,QAAAF,GAEA,QAAAtB,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCAEA,QAAAC,4BAAAC,EAAAC,GAAA,IAAAD,EAAA,KAAA,IAAAE,gBAAA,4DAAA,QAAAD,GAAA,gBAAAA,IAAA,kBAAAA,GAAAD,EAAAC,EAEA,QAAAE,WAAAC,EAAAC,GAAA,GAAA,kBAAAA,IAAA,OAAAA,EAAA,KAAA,IAAAP,WAAA,iEAAAO,GAAAD,GAAAE,UAAAC,OAAAC,OAAAH,GAAAA,EAAAC,WAAAG,aAAAC,MAAAN,EAAAO,YAAA,EAAAC,UAAA,EAAAC,cAAA,KAAAR,IAAAE,OAAAO,eAAAP,OAAAO,eAAAV,EAAAC,GAAAD,EAAAW,UAAAV,GCNA,QAAAW,wBAAAC,GAAA,MAAAA,IAAAA,EAAAC,WAAAD,GAAAE,QAAAF,GAEA,QAAAtB,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCAEA,QAAAC,4BAAAC,EAAAC,GAAA,IAAAD,EAAA,KAAA,IAAAE,gBAAA,4DAAA,QAAAD,GAAA,gBAAAA,IAAA,kBAAAA,GAAAD,EAAAC,EAEA,QAAAE,WAAAC,EAAAC,GAAA,GAAA,kBAAAA,IAAA,OAAAA,EAAA,KAAA,IAAAP,WAAA,iEAAAO,GAAAD,GAAAE,UAAAC,OAAAC,OAAAH,GAAAA,EAAAC,WAAAG,aAAAC,MAAAN,EAAAO,YAAA,EAAAC,UAAA,EAAAC,cAAA,KAAAR,IAAAE,OAAAO,eAAAP,OAAAO,eAAAV,EAAAC,GAAAD,EAAAW,UAAAV,GCXA,QAAAV,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCCAA,QAAAH,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCCNA,QAAAsB,YAAAC,EAAAC,EAAAC,GACAC,KAAAC,SAAAJ,EACAG,KAAAE,OAAAF,KAAAC,SAAAE,WACAH,KAAAI,QAAAN,EACAE,KAAAK,MAAAN,EACAC,KAAAM,OAAA,GAAAC,OAAAP,KAAAI,SACAJ,KAAAQ,iBAAA,ECNA,QAAAC,uBAAAC,EAAAZ,EAAAC,GACAH,WAAAnB,KAAAuB,KAAAU,EAAAZ,EAAAC,GACAC,KAAAW,OAAA,wBACAX,KAAAY,YAAA,ECHA,QAAAC,uBAAAH,EAAAZ,EAAAC,GACAH,WAAAnB,KAAAuB,KAAAU,EAAAZ,EAAAC,GACAC,KAAAW,OAAA,wBCgPA,QAAAG,aAAAC,EAAAC,GACA,GAAAC,GACAC,EACAC,EAAA,6EACAC,EAAA,aAGAC,EAAA,iBAEAC,EAAA,SAAAP,GACA,OAAAD,YAAAS,cAAA,GAAAR,GAAAS,eAAA,GAAAT,GAAAU,QAAAL,EAAA,KAEAM,EAAAJ,EAAAP,GACAY,EAAAL,EAAAN,GACAY,EAAAF,EAAAD,QAAAN,EAAA,UAAAM,QAAA,MAAA,IAAAA,QAAA,MAAA,IAAAI,MAAA,MACAC,EAAAH,EAAAF,QAAAN,EAAA,UAAAM,QAAA,MAAA,IAAAA,QAAA,MAAA,IAAAI,MAAA,MACAE,EAAAC,SAAAN,EAAAO,MAAAZ,GAAA,KAAA,IAAAO,EAAAM,QAAAC,KAAAC,MAAAV,GACAW,EAAAL,SAAAL,EAAAM,MAAAZ,GAAA,KAAAU,GAAAJ,EAAAM,MAXA,mHAWAE,KAAAC,MAAAT,IAAA,KACAW,EAAA,SAAAvB,EAAAC,GACA,QAAAD,EAAAkB,MAXA,OAWA,GAAAjB,IAAAuB,WAAAxB,IAAAA,EAAAU,QAdA,OAcA,KAAAA,QAAAL,EAAA,KAAA,EACA,IAAAiB,EAAA,CACA,GAAAN,EAAAM,EAAA,OAAA,CAAA,IAAAN,EAAAM,EAAA,MAAA,GACA,IAAA,GAAAG,GAAA,EAAAC,EAAAb,EAAAM,OAAAQ,EAAAZ,EAAAI,OAAAS,EAAAC,KAAAC,IAAAJ,EAAAC,GAAAF,EAAAG,EAAAH,IAAA,CACA,GAAAvB,EAAAqB,EAAAV,EAAAY,IAAA,GAAAC,GAAAvB,EAAAoB,EAAAR,EAAAU,IAAA,GAAAE,GAAAI,MAAA7B,KAAA6B,MAAA5B,GAAA,MAAA4B,OAAA7B,GAAA,GAAA,CAAA,IAAA,eAAA8B,KAAA9B,EAAAC,IAAAD,EAAA+B,cAAA,CACA,GAAAC,GAAAhC,EAAA+B,cAAA9B,EAAA,OAAA+B,GAAAL,KAAAM,IAAAD,GACA,GAAAhC,EAAAC,EAAA,OAAA,CAAA,IAAAD,EAAAC,EAAA,MAAA,IAKA,QAAAiC,SAAAjE,GACA,MAAAA,GAAAsC,cAAAC,QAAA,IAAA,KCpQA,QAAAjC,wBAAAC,GAAA,MAAAA,IAAAA,EAAAC,WAAAD,GAAAE,QAAAF,GAEA,QAAAtB,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCCdA,QAAA8E,gBAAAC,GACArD,KAAAsD,MAAAD,EfFAtE,OAAAwE,eAAAC,QAAA,cACAtE,OAAA,GAGA,IAAAuE,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAIA4F,MAAAT,QAAAS,MAAA,WAaA,QAAAA,GAAAC,GACA/F,gBAAA6B,KAAAiE,GAEAjE,KAAAmE,MAAAD,EAwCA,MArCAT,cAAAQ,IACAH,IAAA,WACA5E,MAAA,WACA,MAAAc,MAAAmE,MAAAC,SAGAN,IAAA,UACA5E,MAAA,WACA,MAAAc,MAAAmE,MAAAE,QAGAP,IAAA,YACA5E,MAAA,WACA,MAAAc,MAAAmE,MAAAE,KAAArE,KAAAmE,MAAAC,SAGAN,IAAA,WACA5E,MAAA,SAAAoF,GACA,MAAA,UAAAtE,MAAAmE,MAEA,UAAAnE,MAAAmE,OAAAnE,KAAAmE,MAAAI,OAAAD,GACAtE,KAAAwE,UAAAF,GAEA,cAJAtE,KAAAwE,UAAAF,MAQAR,IAAA,YACA5E,MAAA,SAAAoF,GACA,MAAAG,OAAAC,QAAA1E,KAAAmE,MAAAQ,OACA3E,KAAAmE,MAAAQ,MAAAL,GAEAtE,KAAAmE,MAAAQ,UAKAV,IChEAlF,QAAAwE,eAAAC,QAAA,cACAtE,OAAA,GAGA,IAAAuE,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAIAuG,aAAApB,QAAAoB,aAAA,WACA,QAAAA,GAAAlE,GACAvC,gBAAA6B,KAAA4E,GAEA5E,KAAAE,OAAAQ,EACAV,KAAAW,OAAA,eAwBA,MArBA8C,cAAAmB,IACAd,IAAA,WACA5E,MAAA,WACA,MAAAc,MAAAE,UAGA4D,IAAA,cACA5E,MAAA,WACA,MAAA,QAGA4E,IAAA,cACA5E,MAAA,SAAAwB,GACA,MAAAA,GAAAmE,MACA,GAAAD,GAAAlE,GAEA,GAAAoE,qBAAApE,OAKAkE,ICrCA7F,QAAAwE,eAAAC,QAAA,cACAtE,OAAA,GAGA,IAAAuE,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAQAyG,oBAAAtB,QAAAsB,oBAAA,SAAAC,GAGA,QAAAD,GAAApE,GACAvC,gBAAA6B,KAAA8E,EAEA,IAAAE,GAAAzG,2BAAAyB,MAAA8E,EAAAvF,WAAAR,OAAAkG,eAAAH,IAAArG,KAAAuB,KAAAU,GAGA,OADAsE,GAAArE,OAAA,sBACAqE,EA6BA,MArCArG,WAAAmG,EAAAC,GAWAtB,aAAAqB,IACAhB,IAAA,WACA5E,MAAA,WAeA,MAdAc,MAAAE,OAAA2E,SAGA7E,KAAAE,OAAAgF,MAAA,GACAlF,KAAAE,OAAA2E,MAAAM,MACAC,KAAA,IACAC,IACAjB,MAAA,EACAC,KAAArE,KAAAE,OAAAgF,MACAA,MAAAlF,KAAAE,OAAAgF,SAKAlF,KAAAE,UAGA4D,IAAA,cACA5E,MAAA,WACA,MAAA,cAIA4F,GACAF,aCnDA7F,QAAAwE,eAAAC,QAAA,cACAtE,OAAA,GAGA,IAAAuE,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAIAiH,OAAA9B,QAAA8B,OAAA,WACA,QAAAA,GAAAxF,EAAAC,GAQA,GAPA5B,gBAAA6B,KAAAsF,GAEAtF,KAAAI,QAAAN,EACAE,KAAAK,MAAAN,EACAC,KAAAuF,QAAAvF,KAAAK,MAAAkF,QACAvF,KAAAwF,WAAAC,OAEA,gBAAA3F,GACAE,KAAA0F,aAAA5F,EAAA4F,iBACA,CACA,GAAA/D,GAAA3B,KAAAI,QAAAuF,SACA3F,MAAA0F,aAAA1F,KAAAI,QAAAmE,OAAA,EAAA5C,EAAA,EAIA3B,KAAA4F,UAAA,EAGA5F,KAAA6F,YAAA,EA+NA,MAzNApC,cAAA6B,IACAxB,IAAA,iBAIA5E,MAAA,WACA,MAAAc,MAAA8F,QAAAC,QAMAjC,IAAA,aACA5E,MAAA,WAEA,MAAA,IAAAc,KAAAI,QAAA4F,YAMAlC,IAAA,sBACA5E,MAAA,SAAA+G,GACA,GAAAC,GAAA,GAAA9C,gBAAA6C,EAEA,QAAAC,EAAAC,cAAAD,EAAAE,YAAAC,OAAA,SAAAjF,GACA,MAAAA,GAAAc,OAAA,OAOA4B,IAAA,aACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,kCAMAmD,IAAA,gBACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,qCAGAmD,IAAA,SACA5E,MAAA,SAAAqH,EAAAjC,EAAA2B,GACA,GAAAlG,GAAAC,KAAAK,MAGAmG,EAAAC,GAAAC,UAAA3G,EAAA4G,SAAA,iBAAAN,OAAA,WACA,MAAArG,QAAAiG,GAGAjG,MAAA6F,YAEA7F,KAAA6F,YAAA,EAEA7F,KAAA4G,WAAAL,EAAAjC,EAAA2B,EAAA,WAEAO,EAAAK,MAAA,UAAA,MACAJ,GAAAC,UAAA3G,EAAA4G,SAAA,4BAAAE,MAAA,UAAA,UAIA7G,KAAA6F,YAAA,EAGAW,EAAAK,MAAA,UAAA,QACAJ,GAAAC,UAAA3G,EAAA4G,SAAA,4BAAAE,MAAA,UAAA,QAGA7G,KAAA8G,cAAAP,EAAAjC,EAAA2B,OAIAnC,IAAA,0BACA5E,MAAA,WACA,MAAA,KAAAc,KAAAI,QAAAmE,OACA,WAEA,iBAIAT,IAAA,uBACA5E,MAAA,WACA,OAAAc,KAAAI,QAAA2G,kBAAA,IAAA/G,KAAAI,QAAA4G,gBAAA,MAGAlD,IAAA,wBACA5E,MAAA,SAAAqH,GAKA,MAHAvG,MAAAuF,QAAA0B,WAAAV,GAGAvG,KAAAI,QAAA4F,SAAA,EAAAhG,KAAA0F,gBAMA5B,IAAA,YACA5E,MAAA,WACA,MAAAc,MAAA8F,WAMAhC,IAAA,YACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,iCAGAmD,IAAA,0BACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,+CAGAmD,IAAA,0BACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,+CAMAmD,IAAA,kCACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,uDAMAmD,IAAA,8BACA5E,MAAA,WACA,MAAA,YAMA4E,IAAA,+BACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,oDAGAmD,IAAA,8BACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,mDAMAmD,IAAA,8BACA5E,MAAA,WACA,OAAA,OAMA4E,IAAA,iCACA5E,MAAA,SAAAoC,GACA,MAAA,KAAAtB,KAAAI,QAAAmE,OACAvE,KAAAkH,4BAAA5F,IAEA,EAAAtB,KAAAI,QAAA4F,YAIAlC,IAAA,iCACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,sDAGAmD,IAAA,iCACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,sDAMAmD,IAAA,4BACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,iDAMAmD,IAAA,6BACA5E,MAAA,WACA,KAAA,IAAAoH,OAAAtG,KAAAW,OAAA,oDAGAmD,IAAA,cACA5E,MAAA,SAAAY,EAAAC,GACA,MAAA,eAAAD,IAAA,gBAAAA,EAAAqH,YACA,GAAAC,cAAAtH,EAAAC,GACA,QAAAD,IAAAA,EAAAuH,KAAA,EACA,GAAAC,aAAAxH,EAAAC,GACA,aAAAD,EAAAyH,YACA,GAAAC,gBAAA1H,EAAAC,GACA,eAAAD,EAAAyH,YACA,GAAAE,kBAAA3H,EAAAC,GAEA,GAAAyH,gBAAA1H,EAAAC,OAKAuF,IC3PAvG,QAAAwE,eAAAC,QAAA,cACAtE,OAAA,IAEAsE,QAAAiE,iBAAAhC,MAEA,IAAAhC,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAEAqJ,GAAAC,QAAA,MAEAC,IAAApI,uBAAAkI,IAcAD,iBAAAjE,QAAAiE,iBAAA,SAAAI,GAGA,QAAAJ,GAAA3H,EAAAC,GACA5B,gBAAA6B,KAAAyH,EAEA,IAAAzC,GAAAzG,2BAAAyB,MAAAyH,EAAAlI,WAAAR,OAAAkG,eAAAwC,IAAAhJ,KAAAuB,KAAAF,EAAAC,GAOA,OALAiF,GAAArE,OAAA,mBACAqE,EAAAc,SACAC,KAAA,GACA+B,IAAA,IAEA9C,EA0KA,MAtLArG,WAAA8I,EAAAI,GAeApE,aAAAgE,IACA3D,IAAA,iBACA5E,MAAA,WACA,GAAA6I,GAAAzC,OAAAxG,UAAAkJ,eAAAvJ,KAAAuB,KAKA,OAJAA,MAAAI,QAAAmE,OAAA,IACAwD,GAAA,KAGAA,KAGAjE,IAAA,gBACA5E,MAAA,SAAA+I,EAAA3D,EAAA2B,EAAAiC,GACA,GAEAC,GAAAP,IAAAjI,QAAAyI,OAAApI,KAAAK,MAAAsG,UAAAtD,OAAAgF,wBACAC,EAAArC,EAAAoC,wBAEAE,EAAAJ,EAAAK,QAAAF,EAAApD,MAAAuD,IAAA,GACAC,EAAA1I,KAAA2I,aAEAC,GAAAtE,EAAA,IAAA,EAAAtE,KAAAI,QAAA4F,SAAA0C,GAEAG,EAAA,6BAAAD,EAAA,WAAAL,EAAA,KAAAG,EAAA,GAEAd,KAAAjI,QAAAyI,OAAAnC,EAAA6C,YAAAC,aAAAC,KAAA,YAAAH,GAAAI,GAAA,MAAAf,EAGA,IAAAgB,GAAAlJ,KAAAmJ,oBAAAlD,EACA2B,KAAAjI,QAAAyI,OAAApI,KAAAK,MAAA+I,UAAAC,OAAA,KAAAL,KAAA,QAAA,OAAAtC,UAAA,QAAAxC,KAAAgF,GAAAI,QAAAD,OAAA,QAAAL,KAAA,QAAA,SAAA5H,EAAAE,GACA,MAAA,KAAAA,GAAA,IAAA4H,EAAAhH,OAAA,cAAA,OACA8G,KAAA,IAAA,IAAAA,KAAA,IAAA,SAAA5H,EAAAE,GACA,MAAA,KAAAA,EAAA,EAAA4H,EAAAhH,OAAA,KACA2E,MAAA,cAAA,UAAAA,MAAA,UAAA,GAAA0C,KAAAC,QAAAT,aAAAlC,MAAA,UAAA,MAGA/C,IAAA,aACA5E,MAAA,SAAA+I,EAAA3D,EAAA2B,EAAAiC,GACA,GAAAuB,GAAAzJ,KAAA0J,0BAAAzB,EAEAL,KAAAjI,QAAAyI,OAAAnC,EAAA6C,YAAAC,aAAAC,KAAA,YAAAS,GAAAR,GAAA,MAAAf,GAEAN,IAAAjI,QAAA+G,UAAA1G,KAAAK,MAAAsG,SAAA,UAAAE,MAAA,UAAA,GAAA8C,YAGA7F,IAAA,YACA5E,MAAA,SAAA0K,GAEA,GAAAC,GAAA7J,KAAAI,QAAA0J,YAAAF,GAAA1H,OACA6H,EAAA/J,KAAAgK,2BAAAH,EAAA,EAQA,QAFAE,GAHA/J,KAAAiK,sBAAAJ,EAAA,IAKA,EAAA7J,KAAAkK,0BAGApG,IAAA,WACA5E,MAAA,WACA,MAAAc,MAAAI,QAAA+J,UAAA,IAAAnK,KAAA8F,QAAAgC,OAGAhE,IAAA,8BACA5E,MAAA,WACA,MAAA,SAGA4E,IAAA,+BACA5E,MAAA,WACA,MAAA,SAGA4E,IAAA,0BACA5E,MAAA,WACA,MAAA,MAGA4E,IAAA,0BACA5E,MAAA,WACA,MAAA,OAGA4E,IAAA,kCACA5E,MAAA,SAAAkL,GACA,GAAAC,GAAArK,KAAAK,MAAAiK,OAAAtK,KAAA4F,UAAAwE,EAAA/E,GAAAjB,MAAAgG,EAAA/E,GAAAH,MAAA,EAGA,QACAmF,EAAAA,EACAE,GAJA,GAKAd,UAAA,aAAAY,EAAA,KALA,GAKA,QAIAvG,IAAA,iCACA5E,MAAA,WACA,MAAA,SAGA4E,IAAA,4BACA5E,MAAA,SAAA+I,GAGA,MAAA,aAFAjI,KAAAgI,iBAEA,KADAhI,KAAAgK,2BAAA/B,GACA,OAGAnE,IAAA,6BACA5E,MAAA,SAAA+I,GAEA,IAAAjI,KAAAI,QAAAoK,WACA,MAAAxK,MAAAI,QAAAuF,WAAAsC,EAAA,EAKA,KAAAjI,KAAAwF,WAAA,CAEAxF,KAAAwF,YAAA,EAGA,KAAA,GAAAlE,GAAA,EAAAA,EAAAtB,KAAAI,QAAAoK,WAAAtI,OAAAZ,IACAtB,KAAAwF,WAAAlE,GAAAtB,KAAAwF,WAAAlE,EAAA,GAAAtB,KAAAiK,sBAAA3I,EAAA,GAIA,MAAAtB,MAAAwF,WAAAyC,MAGAnE,IAAA,iCACA5E,MAAA,SAAAoC,GACA,MAAA,KAAAtB,KAAAI,QAAAmE,OACAvE,KAAAyK,4BAAAnJ,IAEA,MAIAwC,IAAA,iCACA5E,MAAA,SAAAoC,GACA,GAAAoJ,GAAA1K,KAAAuF,QAAA0B,WAAA3F,GACAxB,EAAAE,KAAAI,QACAuF,EAAA7F,EAAA6F,UACAK,EAAAlG,EAAAkG,QAQA,OANA,KAAAlG,EAAAyE,OACAgG,EAAAvE,EAAA,EAAA,EAEAuE,EAAAG,EAAA/E,EAAA,EAGA4E,KAGAzG,IAAA,8BACA5E,MAAA,WACA,OAAA,KAGA4E,IAAA,8BACA5E,MAAA,WACA,MAAAc,MAAAI,QAAA4F,aAIAyB,GACAnC,OC/MAvG,QAAAwE,eAAAC,QAAA,cACAtE,OAAA,IAEAsE,QAAAgE,eAAA/B,MAEA,IAAAhC,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAEAqJ,GAAAC,QAAA,MAEAC,IAAApI,uBAAAkI,IAcAF,eAAAhE,QAAAgE,eAAA,SAAAK,GAGA,QAAAL,GAAA1H,EAAAC,GACA5B,gBAAA6B,KAAAwH,EAEA,IAAAxC,GAAAzG,2BAAAyB,MAAAwH,EAAAjI,WAAAR,OAAAkG,eAAAuC,IAAA/I,KAAAuB,KAAAF,EAAAC,GAQA,OANAiF,GAAArE,OAAA,iBAEAqE,EAAAc,SACAgC,IAAA,GACA/B,KAAA,IAEAf,EAwHA,MArIArG,WAAA6I,EAAAK,GAgBApE,aAAA+D,IACA1D,IAAA,gBACA5E,MAAA,SAAA+I,EAAA3D,EAAA2B,EAAAiC,GACA,GAAA1J,GAAAwB,KAIAmI,EAAAP,IAAAjI,QAAAyI,OAAApI,KAAAK,MAAAsG,UAAAtD,OAAAgF,wBACAC,EAAArC,EAAAoC,wBAEAE,EAAAJ,EAAAjD,MAAAoD,EAAAE,OAAA,IACAE,EAAA1I,KAAA2I,aAEAE,EAAA,2BAAAN,EAAA,KAAAG,EAAA,GAEAd,KAAAjI,QAAAyI,OAAAnC,EAAA6C,YAAAC,aAAAC,KAAA,YAAAH,GAAAI,GAAA,MAAAf,EAGA,IAAAgB,GAAAlJ,KAAAmJ,oBAAAlD,GACAsE,EAAA,KAdA,GAcA/L,EAAA4B,QAAA4F,SACA4B,KAAAjI,QAAAyI,OAAApI,KAAAK,MAAA+I,UAAAC,OAAA,KAAAL,KAAA,QAAA,OAAAtC,UAAA,QAAAxC,KAAAgF,GAAAI,QAAAD,OAAA,QAAAL,KAAA,QAAA,SAAA5H,EAAAE,GACA,MAAA,KAAAA,GAAA,IAAA4H,EAAAhH,OAAA,cAAA,OACA8G,KAAA,IAAA,GAAAA,KAAA,IAAAuB,GAAA1D,MAAA,UAAA,GAAA0C,KAAAC,QAAAT,aAAAlC,MAAA,UAAA,MAGA/C,IAAA,aACA5E,MAAA,SAAA+I,EAAA3D,EAAA2B,EAAAiC,GACA,GAAAuB,GAAAzJ,KAAA0J,0BAAAzB,EAEAL,KAAAjI,QAAAyI,OAAAnC,EAAA6C,YAAAC,aAAAC,KAAA,YAAAS,GAAAR,GAAA,MAAAf,GAEAN,IAAAjI,QAAA+G,UAAA1G,KAAAK,MAAAsG,SAAA,UAAAE,MAAA,UAAA,GAAA8C,YAGA7F,IAAA,YACA5E,MAAA,WACA,MAAAc,MAAAI,QAAA+J,UAAA,IAAAnK,KAAA8F,QAAAgC,OAGAhE,IAAA,WACA5E,MAAA,WACA,MAAA,SAGA4E,IAAA,kCACA5E,MAAA,eAEA4E,IAAA,iCACA5E,MAAA,WACA,MAAA,iBAGA4E,IAAA,4BACA5E,MAAA,SAAA+I,GAGA,MAAA,wBAFAjI,KAAA8F,QAAAgC,IAEA,MADA9H,KAAAgK,2BAAA/B,GACA,OAGAnE,IAAA,6BACA5E,MAAA,SAAA+I,GAEA,GAGAwB,GAHAkB,EAAA3K,KAAAkK,uBACAnC,EAAA/H,KAAAI,QAAAuF,UACAT,EAAAlF,KAAAI,QAAA4F,QAIA,KAAAhG,KAAAI,QAAAoK,WAUA,MAAA,cAAAxK,KAAAI,QAAAwK,kBACA7C,EAAA,EAAAE,GAAAF,EAAA7C,EAAA,GAAA,EAAAyF,EAAA,GAEAlB,EAAAvE,EAAA+C,GAAAF,EAAA7C,GAAA,EAAAyF,EACAA,EAAA,EACAlB,EAEAA,EAAA,EAAA,EAAAxB,EAOA,KAAAjI,KAAAwF,WAAA,CAEAxF,KAAAwF,YAAAxF,KAAAuF,QAAA0B,WAAA,GAAA/B,EAAA,EAGA,KAAA,GAFA2F,GAEAvJ,EAAA,EAAAA,EAAAtB,KAAAI,QAAAoK,WAAAtI,OAAAZ,IACAuJ,EAAA7K,KAAAwF,WAAAlE,EAAA,GACAtB,KAAAwF,WAAAlE,GAAAuJ,EAAA7K,KAAAiK,sBAAA3I,EAAA,GAIA,MAAAtB,MAAAwF,WAAAyC,MAGAnE,IAAA,iCACA5E,MAAA,WACA,MAAAc,MAAAI,QAAA4F,SAAAhG,KAAAI,QAAAmE,QAAA,KAGAT,IAAA,8BACA5E,MAAA,WACA,MAAAc,MAAAI,QAAA4F,UAAA,MAIAwB,GACAlC,OC9JAvG,QAAAwE,eAAAC,QAAA,cACAtE,OAAA,IAEAsE,QAAA4D,aAAA3B,MAEA,IAAAhC,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAEAqJ,GAAAC,QAAA,MAEAC,IAAApI,uBAAAkI,IAcAN,aAAA5D,QAAA4D,aAAA,SAAAS,GAGA,QAAAT,GAAAtH,EAAAC,GACA5B,gBAAA6B,KAAAoH,EAEA,IAAApC,GAAAzG,2BAAAyB,MAAAoH,EAAA7H,WAAAR,OAAAkG,eAAAmC,IAAA3I,KAAAuB,KAAAF,EAAAC,GAOA,OALAiF,GAAArE,OAAA,eAEAqE,EAAAc,SACAC,KAAA,IAEAf,EAsIA,MAlJArG,WAAAyI,EAAAS,GAeApE,aAAA2D,IACAtD,IAAA,gBACA5E,MAAA,SAAA+I,EAAA3D,EAAA2B,EAAAiC,GACA,GAAA1J,GAAAwB,KACAD,EAAAC,KAAAK,MAGA8H,EAAAP,IAAAjI,QAAAyI,OAAArI,EAAA4G,UAAAtD,OAAAgF,wBACAC,EAAArC,EAAAoC,wBAGAE,EAAAJ,EAAAjD,MAAAoD,EAAAE,OAAA,IACAE,EAAA1I,KAAA2I,aAIAC,EAAAX,EAAA,IAAA,GAEAY,EAAA,iBAAAD,EAAA,WAAAL,EAAA,KAAAG,EAAA,GAGAd,KAAAjI,QAAAyI,OAAAnC,EAAA6C,YAAAC,aAAAC,KAAA,YAAAH,GAAAI,GAAA,MAAA,WAEAf,GACAA,GAGA,IAAA4C,GAAA,EAAAC,QAAA9C,EAGAL,KAAAjI,QAAAyI,OAAAnC,EAAA6C,YAAApC,UAAA,oBAAAsC,KAAA,YAAA,2BAAA8B,EAAA,KAAA9B,KAAA,cAAA,UAGApB,IAAAjI,QAAA+G,UAAA3G,EAAA4G,SAAA,oBAAAE,MAAA,UAAA,SAIA,IAAAqC,GAAAlJ,KAAAmJ,oBAAAlD,EAEA2B,KAAAjI,QAAAyI,OAAApI,KAAAK,MAAA+I,UAAAC,OAAA,KAAAL,KAAA,QAAA,OAAAtC,UAAA,QAAAxC,KAAAlE,KAAAmJ,oBAAAlD,IAAAqD,QAAAD,OAAA,QAAAL,KAAA,QAAA,SAAA5H,EAAAE,GACA,MAAA,KAAAA,GAAA,IAAA4H,EAAAhH,OAAA,cAAA,OACA8G,KAAA,IAAA,GAAAA,KAAA,IAAAJ,EAAApK,EAAA4B,QAAA4F,SAAAuC,EAAA,EAAA,MAAA1B,MAAA,UAAA,GAAA0C,KAAAC,QAAAT,aAAAlC,MAAA,UAAA,MAGA/C,IAAA,aACA5E,MAAA,SAAA+I,EAAA3D,EAAA2B,EAAAiC,GACA,GAAAnI,GAAAC,KAAAK,MAGAoJ,EAAAzJ,KAAA0J,0BAAAzB,EAGAL,KAAAjI,QAAAyI,OAAAnC,EAAA6C,YAAAC,aAAAC,KAAA,YAAAS,GAAAR,GAAA,MAAA,WAEAf,IAGAN,IAAAjI,QAAA+G,UAAA3G,EAAAqI,OAAA,oBAAAvB,MAAA,UAAA,MAGAe,IAAAjI,QAAAyI,OAAAnC,EAAA6C,YAAApC,UAAA,oBAAAsC,KAAA,YAAA,MAAAA,KAAA,cAAAf,EAAA,KAAA,SAGAL,IAAAjI,QAAA+G,UAAA3G,EAAA4G,SAAA,UAAAE,MAAA,UAAA,GAAA8C,YAGA7F,IAAA,YACA5E,MAAA,WACA,MAAAc,MAAAI,QAAA+J,UAAA,IAAAnK,KAAA8F,QAAAC,QAGAjC,IAAA,WACA5E,MAAA,WACA,MAAA,SAGA4E,IAAA,0BACA5E,MAAA,SAAAoF,GACA,MAAAA,GAAA,EAAAtE,KAAAI,QAAA4F,SAAA,EAAAhG,KAAAI,QAAA4F,YAGAlC,IAAA,0BACA5E,MAAA,SAAAoF,GACA,GAAAY,GAAAlF,KAAAI,QAAA4F,QACA,OAAA1B,GAAA,EAAAY,EAAAlF,KAAA4F,UAAA,EAAAV,EAAAlF,KAAA4F,aAGA9B,IAAA,+BACA5E,MAAA,SAAAoF,GACA,MAAAA,GAAA,EAAA,KAAA,SAGAR,IAAA,kCACA5E,MAAA,SAAAkL,EAAA9F,GACA,GAAA+F,GAAA/F,EAAA,EAAA,IAAAtE,KAAAI,QAAA4F,SAAA,GACAuE,EAAAvK,KAAAK,MAAAiK,MAAAF,EAAA/E,GAAAjB,MAAAgG,EAAA/E,GAAAH,MAAA,GAAA,CAEA,QACAmF,EAAAE,EACAA,EAAAA,EACAd,UAAA,yBAAAY,EAAA,KAAAE,EAAA,QAIAzG,IAAA,8BACA5E,MAAA,WACA,OAAAc,KAAA4F,aAGA9B,IAAA,iCACA5E,MAAA,WACA,MAAAc,MAAAI,QAAA4F,UAAA,KAGAlC,IAAA,iCACA5E,MAAA,WACA,MAAA,iBAGA4E,IAAA,4BACA5E,MAAA,SAAA+I,GACA,GAAA+C,GAAAhL,KAAAgK,2BAAA/B,EACA,OAAA,wBAAAjI,KAAA8F,QAAAC,KAAA,MAAAiF,EAAA,OAGAlH,IAAA,6BACA5E,MAAA,SAAA+I,GACA,MAAA,MAAAA,EAAA,OAIAb,GACA9B,OC3KAvG,QAAAwE,eAAAC,QAAA,cACAtE,OAAA,IAEAsE,QAAA8D,YAAA7B,MAEA,IAAAhC,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAEAqJ,GAAAC,QAAA,MAEAC,IAAApI,uBAAAkI,IAUAJ,YAAA9D,QAAA8D,YAAA,SAAAO,GAGA,QAAAP,GAAAxH,EAAAC,GACA5B,gBAAA6B,KAAAsH,EAEA,IAAAtC,GAAAzG,2BAAAyB,MAAAsH,EAAA/H,WAAAR,OAAAkG,eAAAqC,IAAA7I,KAAAuB,KAAAF,EAAAC,GAQA,OANAiF,GAAArE,OAAA,cAEAqE,EAAAc,SACAC,KAAA,KACA+B,IAAA,IAEA9C,EAwFA,MArGArG,WAAA2I,EAAAO,GAgBApE,aAAA6D,IACAxD,IAAA,gBACA5E,MAAA,SAAA+I,EAAA3D,EAAA2B,EAAAiC,GACA,GAAAC,GAAAP,IAAAjI,QAAAyI,OAAApI,KAAAK,MAAAsG,UAAAtD,OAAAgF,wBACAC,EAAArC,EAAAoC,wBAEAE,EAAAJ,EAAAjD,MAAAoD,EAAAE,OAAA,IACAE,EAAA1I,KAAA2I,YAEAE,WAAA,0BAAAN,EAAA,KAAAG,EAAA,IAEAd,IAAAjI,QAAAyI,OAAAnC,EAAA6C,YAAAC,aAAAC,KAAA,YAAAH,WAAAI,GAAA,MAAAf,MAGApE,IAAA,aACA5E,MAAA,SAAA+I,EAAA3D,EAAA2B,EAAAiC,GACA,GAAAuB,GAAAzJ,KAAA0J,0BAAAzB,EAEAL,KAAAjI,QAAAyI,OAAAnC,EAAA6C,YAAAC,aAAAC,KAAA,YAAAS,GAAAR,GAAA,MAAAf,MAGApE,IAAA,YACA5E,MAAA,WACA,GAAAiL,GAAAnK,KAAAI,QAAA+J,SACA,OAAAnK,MAAAI,QAAAiH,MAAA8C,EAAA,IAAAnK,KAAA8F,QAAAgC,QAGAhE,IAAA,WACA5E,MAAA,WACA,MAAA,SAGA4E,IAAA,kCACA5E,MAAA,eAEA4E,IAAA,iCACA5E,MAAA,WACA,MAAA,iBAGA4E,IAAA,4BACA5E,MAAA,SAAA+I,GAEA,GAAAgD,KACAjL,MAAAK,MAAA6K,UAAA,SAAAC,GACAF,EAAAE,GAGA,IAIA1C,GACAG,EALAwC,EAAApL,KAAAK,MAAAP,OAAAgK,YAAAmB,EAAA,IAAA/I,OAEAmJ,EAAAD,EAAApL,KAAAI,QAAAiH,IAaA,OARAY,GAAAoD,EAAA,GACA5C,EAAAzI,KAAA8F,QAAAC,KAAA,IAAA/F,KAAAI,QAAA+J,UACAvB,EAAA5I,KAAAgK,2BAAA/B,EAAAoD,KAEA5C,EAAAzI,KAAA8F,QAAAC,KACA6C,EAAA5I,KAAAgK,2BAAA/B,IAGA,wBAAAQ,EAAA,MAAAG,EAAA,OAGA9E,IAAA,6BACA5E,MAAA,SAAA+I,GAEA,GAAAqD,GAAAtL,KAAAkK,sBAEA,OAAAlK,MAAA8F,QAAAC,KAAAkC,EAAAjI,KAAAI,QAAA4F,SAAA,EAAAsF,EAAAA,EAAArD,KAGAnE,IAAA,iCACA5E,MAAA,SAAA+I,GACA,OAAAjI,KAAAuF,QAAA0B,WAAAgB,GAAAjI,KAAAI,QAAA4F,SAAA,KAAA,GAAAhG,KAAAI,QAAAmE,OAAA,EAAA,EAAAvE,KAAAI,QAAA4F,aAGAlC,IAAA,8BACA5E,MAAA,WACA,MAAAc,MAAAI,QAAA4F,UAAA,MAIAsB,GACAhC,OC1HAvG,QAAAwE,eAAAC,QAAA,cACAtE,OAAA,GAGA,IAAAuE,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAIAkN,OAAA/H,QAAA+H,OAAA,WACA,QAAAA,GAAAzL,GACA3B,gBAAA6B,KAAAuL,GAEAvL,KAAAI,QAAAN,EACAE,KAAAwL,aAAAxL,KAAAyL,WAAAzL,KAAAI,QAAAoK,YA6GA,MAvGA/G,cAAA8H,IACAzH,IAAA,uBACA5E,MAAA,SAAA+I,GACA,GAAAjI,KAAAI,QAAAoK,WAAA,CACA,GAAAkB,GAAA1L,KAAAI,QAAAoK,WAAAvC,EACA,OAAAyD,aAAA3M,QACAA,OAAA4M,KAAAD,GAAA,GAAAxJ,OAEAwJ,EAAAxJ,OAGA,MAAAlC,MAAAI,QAAAmE,QAAA,KAOAT,IAAA,aACA5E,MAAA,SAAA0M,GACA,GAAAC,GAAA/H,EAAAgI,CAGA,KAAAF,EACA,MAAAA,EAIAC,KAGA,KAAA/H,IAAA8H,GACAE,EAAAF,EAAA9H,GACA,gBAAAgI,IACA,aAAA9L,KAAAI,QAAAmH,cACAuE,EAAAA,EAAAjK,MAAA,IAAAkK,WAEAF,EAAA1G,MACA6G,UAAAF,EACAG,UAAAjM,KAAAkM,mBAAAJ,EAAA5J,WAGA2J,EAAA1G,MACA6G,UAAAjN,OAAA4M,KAAAG,GAAA,GACAG,UAAAH,EAAA/M,OAAA4M,KAAAG,GAAA,KAKA,OAAAD,MAMA/H,IAAA,qBACA5E,MAAA,SAAAgD,GAGA,IAAA,GAFAiK,MAEA7K,EAAA,EAAAA,EAAAY,EAAAZ,IACA6K,EAAAhH,KAAA,KAGA,OAAAgH,MAGArI,IAAA,aACA5E,MAAA,SAAAqH,GACA,MAAAvG,MAAAwL,aACAxL,KAAAwL,aAAAjF,GAAAyF,UAAA9J,OAEA,KAOA4B,IAAA,cACA5E,MAAA,SAAAqH,EAAAjC,GACA,MAAAtE,MAAAwL,aACAxL,KAAAwL,aAAAjF,GAAAyF,UAAA1H,GAEA,MASAR,IAAA,SACA5E,MAAA,SAAAqH,EAAAjC,EAAA8H,GACA,GAAApM,KAAAwL,aAAA,CACA,GAAAa,GAAArM,KAAAwL,aAAAjF,GAAA0F,UAAA3H,GAAA8H,EACA,OAAArB,QAAAsB,GAAA,EAEA,OAAA,MAKAd,IC1HAxM,QAAAwE,eAAAC,QAAA,cACAtE,OAAA,GAGA,IAAAuE,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAIAkC,MAAAiD,QAAAjD,MAAA,WACA,QAAAA,GAAAT,GACA3B,gBAAA6B,KAAAO,GAGAP,KAAAI,QAAAN,EACAE,KAAAuF,QAAA,GAAAgG,QAAAvL,KAAAI,SAqCA,MAlCAqD,cAAAlD,IACAuD,IAAA,cACA5E,MAAA,SAAAqH,EAAAjC,EAAA8H,GACA,MAAApM,MAAAI,QAAAkM,UACAtM,KAAAI,QAAAkM,UAAAF,GACApM,KAAAI,QAAA4L,UACAhM,KAAAuM,sBAAAhG,EAAAjC,EAAA8H,GAEA,QAIAtI,IAAA,iBACA5E,MAAA,SAAAqH,EAAAjC,EAAA8H,GACA,MAAA9H,GAAAtE,KAAAI,QAAAmE,OACA,OACAvE,KAAAuF,QAAAiH,OAAAjG,EAAAjC,EAAA8H,GACA,OAEA,UAIAtI,IAAA,wBACA5E,MAAA,SAAAqH,EAAAjC,EAAA8H,GACA,GAAApM,KAAAuF,QAAAiH,OAAAjG,EAAAjC,EAAA8H,GAEA,CACA,GAAAK,GAAAzM,KAAAuF,QAAAmH,YAAAnG,EAAAjC,EAAA8H,EACA,OAAApM,MAAAI,QAAA4L,UAAAS,GAHA,MAAA,kBAQAlM,ICzCAX,YAAA+M,YAAA,SAAA9M,EAAAC,EAAAC,GACA,MAAA,gBAAAF,EAAAM,WAAAyM,mBACA,GAAAnM,uBAAAZ,EAAAC,EAAAC,GAEA,GAAAc,uBAAAhB,EAAAC,EAAAC,IAIAH,WAAAd,UAAA+N,cAAA,SAAAC,EAAAC,GACA,MAAAA,GACAD,EAAAE,OAAAhN,KAAAiN,iBAEAH,GAIAlN,WAAAd,UAAAoO,cAAA,SAAAJ,EAAAK,GACA,MAAAA,GACAL,EAAAE,OAAAhN,KAAAoN,iBAEAN,GAIAlN,WAAAd,UAAAuO,OAAA,SAAAC,EAAA/G,EAAAjC,GAGA,GAAA9F,GAAAwB,IAEAsN,GAAAA,EAAAjE,OAAA,KAAAL,KAAA,QAAA,SAAAA,KAAA,YAAA,QAAAhJ,KAAAE,OAAAqN,GAAA,4BAGA,IAAAR,GAAA/M,KAAAwN,YAAAF,EAAA/G,EAAAjC,GACA6I,EAAAnN,KAAAyN,YAAAH,EAAA/G,EAAAjC,EAGAtE,MAAA0N,gBAAAJ,EAAA/G,EAAAjC,EAGA,IAAAwI,KACAA,GAAA9M,KAAA6M,cAAAC,EAAAC,GACAD,EAAA9M,KAAAkN,cAAAJ,EAAAK,EAEA,IAAAQ,GAAA,IACAC,EAAA,GACAC,EAAA7N,KAAA6N,eA2BA,OA1BA,aAAA7N,MAAAK,MAAAP,UAAA,YAAAE,MAAAK,MAAAP,SAEA8N,EAAApP,EAAA8B,OAAAwN,YAAAvH,EAAAjC,EAAA,GACAuJ,IACAF,EAAA,QAEAE,GAEAF,EAAA,KACAC,EAAA,eACA,aAAA5N,MAAAK,MAAAP,SAEA6N,EAAA,KAIAL,EAAAjE,OAAA,KAAAL,KAAA,QAAA,qBAAAtC,UAAA,QAAAxC,KAAA4I,GAAAxD,QAAAD,OAAA,QAAAL,KAAA,OAAA4E,GAAA/G,MAAA,eAAA8G,GAAA3E,KAAA,SAAA,SAAA5H,EAAAE,GACA,MAAA9C,GAAA8B,OAAAyN,eAAAxH,EAAAjC,EAAAhD,KACA0H,KAAA,eAAA,SAAA5H,GACA,MAAA,eAAAA,GAAAA,EAAA4M,YAAA,IACAhF,KAAA,IAAA,SAAA5H,GACA,MAAAA,GAAA6M,OACAjF,KAAA,QAAA,SAAA5H,GACA,MAAAA,GAAA8M,QAGApB,GAGAlN,WAAAd,UAAA4O,gBAAA,SAAAJ,EAAA/G,EAAAjC,GACA,GAAA,YAAAtE,MAAAI,QAAA,CAIA,GAAA+N,GAAAnO,KAAAI,QAAA+N,SAAA9H,OAAA,SAAA+H,GACA,MAAAA,GAAAC,IAAA,IAAA9H,IACA+H,IAAA,SAAAF,GACA,MAAA,IAAAnK,OAAAmK,KAGAG,EAAAjB,EAAAjE,OAAA,KAAAL,KAAA,QAAA,aAEAxK,EAAAwB,KACAD,EAAAvB,EAAA6B,MACAmO,EAAAzO,EAAA0O,aAEAF,GAAA7H,UAAA,cAAAxC,KAAAiK,GAAA7E,QAAAD,OAAA,QAAAL,KAAA,QAAA,SAAAA,KAAA,IAAA,SAAAoF,GAEA,MADArO,GAAA2O,cAAAlQ,EAAA0B,OAAAkO,EAAAO,YACAH,IACAxF,KAAA,IAAA,GAAAA,KAAA,QAAA,SAAAoF,GAEA,MADArO,GAAA2O,cAAAlQ,EAAA0B,OAAAkO,EAAAQ,aACAJ,IACAxF,KAAA,SAAAhJ,KAAAI,QAAA4F,UAAAa,MAAA,OAAA,SAAAuH,GACA,MAAAA,GAAAS,SAAAvK,OAKA1E,WAAAd,UAAAgQ,cAAA,WAGA,IAAA,GADAC,GACAzN,EAAA,EAAAA,EAAAtB,KAAAE,OAAA2E,MAAA3C,OAAAZ,IACA,GAAA,MAAAtB,KAAAE,OAAA2E,MAAAvD,GAAA8D,KAAA,GAAA,CACA2J,EAAA/O,KAAAE,OAAA2E,MAAAvD,EACA,OAKA,GAAA0N,GAAAhP,KAAAE,OAAA2E,MAAA3C,OAAA,EACA+M,EAAAjP,KAAAE,OAAA2E,MAAAmK,GAAA3J,GAAAhB,IAQA,QACA6K,GAAA,EACAC,GAAAJ,EAAAA,EAAA1J,GAAAjB,MAAA6K,EACAG,GAAAH,EACAhM,EAAAjD,KAAAI,QAAA4F,SACAhF,EAAAhB,KAAAI,QAAA4F,SAAAhG,KAAAQ,mBAIAZ,WAAAd,UAAAmO,cAAA,WACA,GAAA7L,GAAApB,KAAA8O,gBACAzE,EAAAjJ,EAAA+N,GAAA/N,EAAAJ,CAEA,OAAAhB,MAAA6N,iBAAA,aAAA7N,MAAAK,MAAAP,QAMAoO,MAAA,GACAD,KAAA,IAAA7M,EAAAJ,EAAA,OAAAqJ,EAAA,QAAAjJ,EAAA+N,GAAA/N,EAAAJ,GAAA,IAAAI,EAAA6B,EAAA,EAAA,IAAAoH,EAAA,IAAAjJ,EAAA6B,EAAA,KAAA7B,EAAAJ,EAAA,IAAAI,EAAA6B,EAAA,MAAA7B,EAAAJ,EAAA,IAAAI,EAAA6B,EAAA,EAAA,IAAA7B,EAAAJ,EAAA,QAKAkN,MAAA,GACAD,KAAA,IAAA7M,EAAAJ,EAAA,QAAAqJ,EAAA,GAAA,QAAAA,EAAA,GAAA,IAAAjJ,EAAA6B,EAAA,KAAA7B,EAAAJ,EAAA,IAAAI,EAAA6B,EAAA,MAAA7B,EAAAJ,EAAA,IAAAI,EAAA6B,EAAA,EAAA,IAAA7B,EAAAJ,EAAA,OAEAkN,MAAA,OACAD,KAAA,IAAA5D,EAAA,QAAAjJ,EAAA+N,GAAA/N,EAAAJ,GAAA,IAAAI,EAAA6B,EAAA,EAAA,IAAAoH,EAAA,IAAAjJ,EAAA6B,EAAA,KAAAoH,EAAA,IAAAjJ,EAAA6B,EAAA,MAAAoH,EAAA,GAAA,IAAAjJ,EAAA6B,EAAA,MAAAoH,EAAA,GAAA,QAKAzK,WAAAd,UAAAsO,cAAA,WACA,GAAAhM,GAAApB,KAAA8O,gBACAzE,EAAAjJ,EAAAgO,GAAAhO,EAAAJ,EACAqO,EAAAjO,EAAA+N,GAAA/N,EAAAJ,CAEA,OAAAhB,MAAA6N,iBAAA,aAAA7N,MAAAK,MAAAP,QAEAoO,MAAA,GACAD,KAAA,IAAAoB,EAAA,OAAAhF,EAAA,QAAAjJ,EAAAgO,GAAAhO,EAAAJ,GAAA,IAAAI,EAAA6B,EAAA,EAAA,IAAAoH,EAAA,IAAAjJ,EAAA6B,EAAA,KAAAoM,EAAA,IAAAjO,EAAA6B,EAAA,MAAA7B,EAAA+N,GAAA/N,EAAAJ,GAAA,IAAAI,EAAA6B,EAAA,EAAA,IAAAoM,EAAA,QAKApB,KAAA,IAAAoB,EAAA,OAAAhF,EAAA,QAAAjJ,EAAAgO,GAAAhO,EAAAJ,GAAA,IAAAI,EAAA6B,EAAA,EAAA,IAAAoH,EAAA,IAAAjJ,EAAA6B,EAAA,KAAAoM,EAAA,IAAAjO,EAAA6B,EAAA,KAAAoM,EAAA,OAEAnB,MAAA,OACAD,KAAA,IAAAoB,EAAA,OAAAjO,EAAA+N,GAAA/N,EAAAJ,GAAA,IAAAI,EAAA6B,EAAA,EAAA,IAAAoM,EAAA,IAAAjO,EAAA6B,EAAA,KAAAoM,EAAA,IAAAjO,EAAA6B,EAAA,KAAAoM,EAAA,GAAA,IAAAjO,EAAA6B,EAAA,KAAAoM,EAAA,GAAA,QAKAzP,WAAAd,UAAA+O,cAAA,WACA,MAAA7N,MAAAE,OAAA2E,QAAA,IAAA7E,KAAAE,OAAA2E,MAAA3C,QAAA,MAAAlC,KAAAE,OAAA2E,MAAA,GAAAO,KAAA,KAIAxF,WAAAd,UAAAwQ,aAAA,SAAAhC,EAAA/G,EAAAjC,EAAAO,EAAA0K,GACA,GAAA/Q,GAAAwB,KACAoM,EAAA,MAAAmD,EAAA,EAAA,EACA3B,EAAA,EACA,cAAA5N,MAAAK,MAAAP,SAAAE,KAAA6N,kBACAD,EAAApP,EAAA8B,OAAAwN,YAAAvH,EAAAjC,EAAA8H,IAGAkB,EAAA5G,UAAA,aAAA6I,GAAArL,KAAAW,GAAAyE,QAAAD,OAAA,QAAAL,KAAA,KAAA,SAAA5H,GACA,MAAA5C,GAAA0B,OAAAqN,GAAA,IAAAnM,EAAAgE,KAAA3D,QAAA,IAAA,OACAuH,KAAA,QAAA,SAAA5H,GACA,MAAA,QAAAmO,EAAA,SAAAnO,EAAAoO,QACAxG,KAAA,IAAA,SAAA5H,GACA,GAAAgD,GAAA5F,EAAA6B,MAAAiK,MAAAlJ,EAAAiE,GAAAjB,OACAlC,EAAA1D,EAAA6B,MAAAiK,MAAAlJ,EAAAiE,GAAAH,MAIA,OAFAmF,GAAAjG,EAAAlC,EAEA,KAAAkC,EAAA,QAAAlC,EAAA,UAAA1D,EAAA4B,QAAA4F,SAAA,OAAA9D,EAAA,SACA2E,MAAA,OAAA+G,IAKAhO,WAAAd,UAAA0O,YAAA,SAAAF,EAAA/G,EAAAjC,GACA,GAAAO,GAAA7E,KAAAE,OAAA2E,MAAAwB,OAAA,SAAA+D,GACA,MAAA,MAAAA,EAAAhF,KAAA,IAKA,OAFApF,MAAAsP,aAAAhC,EAAA/G,EAAAjC,EAAAO,EAAA,KAEA4K,QAAA5K,EAAA3C,SAKAtC,WAAAd,UAAA2O,YAAA,SAAAH,EAAA/G,EAAAjC,GACA,GAAAO,GAAA7E,KAAAE,OAAA2E,MAAAwB,OAAA,SAAA+D,GACA,MAAA,MAAAA,EAAAhF,KAAA,IAKA,OAFApF,MAAAsP,aAAAhC,EAAA/G,EAAAjC,EAAAO,EAAA,KAEA4K,QAAA5K,EAAA3C,SCvOAzB,sBAAA3B,UAAAC,OAAAC,OAAAY,WAAAd,WAEA2B,sBAAA3B,UAAA+N,cAAA,SAAAC,GACA,MAAAA,GAAAE,OAAAhN,KAAAiN,kBAGAxM,sBAAA3B,UAAAmO,cAAA,WACA,GAAA7L,GAAApB,KAAA8O,eAGA,OAFA1N,GAAAiB,EAAArC,KAAAY,cAGAsN,MAAA,OACAD,KAAA,KAAA7M,EAAA+N,GAAA,GAAA,OAAA/N,EAAA+N,GAAA/N,EAAAiB,EAAA,MAAA,QAAAjB,EAAA+N,GAAA/N,EAAAiB,EAAA,MAAA,KAAAjB,EAAA6B,EAAA,GAAA,MAAA7B,EAAA+N,GAAA,GAAA,KAAA/N,EAAA6B,EAAA,KAEAiL,MAAA,SACAD,KAAA,KAAA7M,EAAA+N,GAAA/N,EAAAiB,EAAA,GAAA,OAAAjB,EAAA+N,GAAA/N,EAAAiB,EAAA,GAAA,QAAAjB,EAAA+N,GAAA/N,EAAAiB,EAAA,GAAA,IAAAjB,EAAA6B,EAAA,MAAA7B,EAAA+N,GAAA/N,EAAAiB,EAAA,GAAA,IAAAjB,EAAA6B,EACA+K,YAAA,MAIAvN,sBAAA3B,UAAAsO,cAAA,WACA,GAAAhM,GAAApB,KAAA8O,gBACAzE,EAAAjJ,EAAAgO,GAAAhO,EAAAJ,EACAqB,EAAArC,KAAAY,YAAA,CAEA,QACAsN,MAAA,GACAD,KAAA,KAAA7M,EAAA+N,GAAA9M,GAAA,OAAAgI,EAAA,QAAAjJ,EAAAgO,GAAAhO,EAAAJ,GAAA,IAAAI,EAAA6B,EAAA,EAAA,IAAAoH,EAAA,IAAAjJ,EAAA6B,EAAA,MAAA7B,EAAA+N,GAAA9M,GAAA,IAAAjB,EAAA6B,IC5BApC,sBAAA/B,UAAAC,OAAAC,OAAAY,WAAAd,UCLA,IAAA4Q,SAAA,kBAAAC,SAAA,gBAAAA,QAAAC,SAAA,SAAAnQ,GAAA,aAAAA,IAAA,SAAAA,GAAA,MAAAA,IAAA,kBAAAkQ,SAAAlQ,EAAAR,cAAA0Q,QAAAlQ,IAAAkQ,OAAA7Q,UAAA,eAAAW,KAGA,WAEA,QAAAgD,GAAAA,GACA,MAAA,kBAAAA,IAAA,WAAA,SAAAA,EAAA,YAAAiN,QAAAjN,KAAA,OAAAA,EACA,QAAAoN,GAAApN,GACA,MAAA,kBAAAA,GACA,QAAAV,GAAAU,GACAqN,EAAArN,EACA,QAAAvB,GAAAuB,GACAsN,EAAAtN,EAKA,QAAAnB,KACA,MAAA,YACA0O,EAAAjP,IAYA,QAAAI,KACA,MAAA,YACA8O,WAAAlP,EAAA,IAEA,QAAAA,KACA,IAAA,GAAA0B,GAAA,EAAAyN,EAAAzN,EAAAA,GAAA,EAAA,EAEAoN,EADAM,EAAA1N,IACA0N,EAAA1N,EAAA,IAAA0N,EAAA1N,GAAA,OAAA0N,EAAA1N,EAAA,GAAA,OACAyN,EAAA,EAQA,QAAAtO,GAAAa,EAAAoN,GACA,GAAA9N,GAAA/B,KACAkB,EAAA,GAAAlB,MAAAf,YAAAqD,EAAA,UAAApB,EAAAkP,IAAAzO,EAAAT,EAAA,IAAAmB,GAAAN,EAAAsO,MAAA,IAAAhO,EAAA,CACA,GAAAf,GAAAgP,UAAAjO,EAAA,EAAA0N,GAAA,WACA1F,EAAAhI,EAAAnB,EAAAI,EAAAS,EAAAwO,eAEAC,GAAAzO,EAAAb,EAAAuB,EAAAoN,EAAA,OAAA3O,GACA,QAAAuP,GAAAhO,GACA,GAAAoN,GAAA7P,IAAA,IAAAyC,GAAA,WAAA,SAAAA,EAAA,YAAAiN,QAAAjN,KAAAA,EAAAxD,cAAA4Q,EAAA,MAAApN,EAAA,IAAAV,GAAA,GAAA8N,GAAAvN,EAAA,OAAAjB,GAAAU,EAAAU,GAAAV,EACA,QAAAO,MAAA,QAAAoO,KACA,MAAA,IAAApS,WAAA,4CACA,QAAA8C,KACA,MAAA,IAAA9C,WAAA,wDACA,QAAAqE,GAAAF,GACA,IACA,MAAAA,GAAAkO,KACA,MAAAd,GACA,MAAAe,IAAAC,MAAAhB;kBAAAe,IAEA,QAAArG,GAAA9H,EAAAoN,EAAA9N,EAAAb,GACA,IACAuB,EAAAhE,KAAAoR,EAAA9N,EAAAb,GACA,MAAAmB,GACA,MAAAA,IAEA,QAAAP,GAAAW,EAAAoN,EAAA9N,GACAgO,EAAA,SAAAtN,GACA,GAAAvB,IAAA,EACAmB,EAAAkI,EAAAxI,EAAA8N,EAAA,SAAA9N,GACAb,IAAAA,GAAA,EAAA2O,IAAA9N,EAAAV,EAAAoB,EAAAV,GAAA+O,EAAArO,EAAAV,KACA,SAAA8N,GACA3O,IAAAA,GAAA,EAAAQ,EAAAe,EAAAoN,KACA,YAAApN,EAAAsO,QAAA,sBAAA7P,GAAAmB,IAAAnB,GAAA,EAAAQ,EAAAe,EAAAJ,KACAI,GACA,QAAAzB,GAAAyB,EAAAoN,GACAA,EAAAQ,SAAAW,GAAAF,EAAArO,EAAAoN,EAAAU,SAAAV,EAAAQ,SAAAY,GAAAvP,EAAAe,EAAAoN,EAAAU,SAAAC,EAAAX,EAAA,OAAA,SAAAA,GACAxO,EAAAoB,EAAAoN,IACA,SAAAA,GACAnO,EAAAe,EAAAoN,KAEA,QAAA5M,GAAAR,EAAAV,EAAAb,GACAa,EAAA9C,cAAAwD,EAAAxD,aAAAiC,IAAAgQ,GAAAjS,YAAAkS,UAAAC,EAAApQ,EAAAyB,EAAAV,GAAAb,IAAA0P,GAAAlP,EAAAe,EAAAmO,GAAAC,OAAA,SAAA3P,EAAA4P,EAAArO,EAAAV,GAAA8N,EAAA3O,GAAAY,EAAAW,EAAAV,EAAAb,GAAA4P,EAAArO,EAAAV,GACA,QAAAV,GAAAwO,EAAA9N,GACA8N,IAAA9N,EAAAL,EAAAmO,EAAAa,KAAAjO,EAAAV,GAAAkB,EAAA4M,EAAA9N,EAAAY,EAAAZ,IAAA+O,EAAAjB,EAAA9N,GACA,QAAAsP,GAAA5O,GACAA,EAAA6O,UAAA7O,EAAA6O,SAAA7O,EAAA8N,SAAAgB,EAAA9O,GACA,QAAAqO,GAAArO,EAAAoN,GACApN,EAAA4N,SAAAmB,KAAA/O,EAAA8N,QAAAV,EAAApN,EAAA4N,OAAAW,GAAA,IAAAvO,EAAAgP,aAAAvP,QAAA6N,EAAAwB,EAAA9O,IACA,QAAAf,GAAAe,EAAAoN,GACApN,EAAA4N,SAAAmB,KAAA/O,EAAA4N,OAAAY,GAAAxO,EAAA8N,QAAAV,EAAAE,EAAAsB,EAAA5O,IACA,QAAA+N,GAAA/N,EAAAoN,EAAA9N,EAAAb,GACA,GAAAmB,GAAAI,EAAAgP,aACAnQ,EAAAe,EAAAH,MAAAO,GAAA6O,SAAA,KAAAjP,EAAAf,GAAAuO,EAAAxN,EAAAf,EAAA0P,IAAAjP,EAAAM,EAAAf,EAAA2P,IAAA/P,EAAA,IAAAI,GAAAmB,EAAA4N,QAAAN,EAAAwB,EAAA9O,GACA,QAAA8O,GAAA9O,GACA,GAAAoN,GAAApN,EAAAgP,aACA1P,EAAAU,EAAA4N,MAAA,IAAA,IAAAR,EAAA3N,OAAA,CACA,IAAA,GAAAhB,GAAAmB,EAAAf,EAAAmB,EAAA8N,QAAA/N,EAAA,EAAAA,EAAAqN,EAAA3N,OAAAM,GAAA,EACAtB,EAAA2O,EAAArN,GAAAH,EAAAwN,EAAArN,EAAAT,GAAAb,EAAAmJ,EAAAtI,EAAAb,EAAAmB,EAAAf,GAAAe,EAAAf,EACAmB,GAAAgP,aAAAvP,OAAA,GAEA,QAAAwP,KACA1R,KAAA6Q,MAAA,KACA,QAAAc,GAAAlP,EAAAoN,GACA,IACA,MAAApN,GAAAoN,GACA,MAAA9N,GACA,MAAA6P,IAAAf,MAAA9O,EAAA6P,IAEA,QAAAvH,GAAA5H,EAAAV,EAAAb,EAAAmB,GACA,GAAAf,GACAkB,EACAE,EACAvB,EACAJ,EAAA8O,EAAA3O,EAAA,IAAAH,GACA,GAAAO,EAAAqQ,EAAAzQ,EAAAmB,GAAAf,IAAAsQ,IAAAzQ,GAAA,EAAAqB,EAAAlB,EAAAuP,MAAAvP,EAAA,MAAAoB,GAAA,EAAAX,IAAAT,EAAA,WAAAI,GAAAK,EAAAX,SACAE,GAAAe,EAAAK,GAAA,CAAAX,GAAAsO,SAAAmB,KAAAzQ,GAAA2B,EAAArB,EAAAU,EAAAT,GAAAH,EAAAO,EAAAK,EAAAS,GAAAC,IAAAuO,GAAAF,EAAA/O,EAAAT,GAAAmB,IAAAwO,IAAAvP,EAAAK,EAAAT,IACA,QAAAuQ,GAAApP,EAAAoN,GACA,IACAA,EAAA,SAAAA,GACAxO,EAAAoB,EAAAoN,IACA,SAAAA,GACAnO,EAAAe,EAAAoN,KAEA,MAAA9N,GACAL,EAAAe,EAAAV,IAEA,QAAA+P,KACA,MAAAC,MACA,QAAApQ,GAAAc,GACAA,EAAA2N,GAAA2B,KAAAtP,EAAA4N,OAAA,OAAA5N,EAAA8N,QAAA,OAAA9N,EAAAgP,gBACA,QAAAO,GAAAvP,GACA,MAAA,IAAAwP,IAAAjS,KAAAyC,GAAAyP,QACA,QAAAjR,GAAAwB,GACA,GAAAoN,GAAA7P,IAAA,OAAA,IAAA6P,GAAAsC,EAAA1P,GAAA,SAAAV,EAAAb,GACA,IAAA,GAAAmB,GAAAI,EAAAP,OAAAZ,EAAA,EAAAe,EAAAf,EAAAA,IACAuO,EAAAsB,QAAA1O,EAAAnB,IAAAqP,KAAA5O,EAAAb,IAEA,SAAAuB,EAAAoN,GACAA,EAAA,GAAAvR,WAAA,sCAEA,QAAA8T,GAAA3P,GACA,GAAAoN,GAAA7P,KACA+B,EAAA,GAAA8N,GAAAvN,EAAA,OAAAZ,GAAAK,EAAAU,GAAAV,EACA,QAAAsQ,KACA,KAAA,IAAA/T,WAAA,sFACA,QAAAgU,KACA,KAAA,IAAAhU,WAAA,yHACA,QAAAiU,GAAA9P,GACAzC,KAAAoQ,GAAA0B,IAAA9R,KAAAuQ,QAAAvQ,KAAAqQ,OAAA,OAAArQ,KAAAyR,gBAAAnP,IAAAG,IAAA,kBAAAA,IAAA4P,IAAArS,eAAAuS,GAAAV,EAAA7R,KAAAyC,GAAA6P,KACA,QAAAE,GAAA/P,EAAAoN,GACA7P,KAAAyS,qBAAAhQ,EAAAzC,KAAAkS,QAAA,GAAAzP,GAAAH,GAAAtC,KAAAkS,QAAA9B,IAAAzO,EAAA3B,KAAAkS,SAAAC,EAAAtC,IAAA7P,KAAA0S,OAAA7C,EAAA7P,KAAAkC,OAAA2N,EAAA3N,OAAAlC,KAAA2S,WAAA9C,EAAA3N,OAAAlC,KAAAuQ,QAAA,GAAA9L,OAAAzE,KAAAkC,QAAA,IAAAlC,KAAAkC,OAAA4O,EAAA9Q,KAAAkS,QAAAlS,KAAAuQ,UAAAvQ,KAAAkC,OAAAlC,KAAAkC,QAAA,EAAAlC,KAAA4S,aAAA,IAAA5S,KAAA2S,YAAA7B,EAAA9Q,KAAAkS,QAAAlS,KAAAuQ,WAAA7O,EAAA1B,KAAAkS,QAAAW,KACA,QAAAA,KACA,MAAA,IAAAvM,OAAA,2CACA,QAAAwM,KACA,GAAArQ,EAAA,IAAA,mBAAAsQ,QAAAtQ,EAAAsQ,WAAA,IAAA,mBAAAvU,MAAAiE,EAAAjE,SAAA,KACAiE,EAAAuQ,SAAA,iBACA,MAAAnD,GACA,KAAA,IAAAvJ,OAAA,4EACA,GAAAvE,GAAAU,EAAAwQ,UAAAlR,GAAA,qBAAAhD,OAAAD,UAAAoU,SAAAzU,KAAAsD,EAAAoP,YAAApP,EAAAoR,QAAA1Q,EAAAwQ,QAAAG,IACA,GAAAC,EAAAA,GAAA5O,MAAAC,QAAAD,MAAAC,QAAA,SAAAjC,GACA,MAAA,mBAAA1D,OAAAD,UAAAoU,SAAAzU,KAAAgE,GACA,IAAAuN,GACAF,EACAwD,EACAnB,EAAAkB,EACAnD,EAAA,EACAH,EAAA,SAAAtN,EAAAoN,GACAM,EAAAD,GAAAzN,EAAA0N,EAAAD,EAAA,GAAAL,EAAA,KAAAK,GAAA,KAAAJ,EAAAA,EAAA/O,GAAAuS,MAEAC,EAAA,mBAAAC,QAAAA,OAAA,OACAC,EAAAF,MACAG,EAAAD,EAAAE,kBAAAF,EAAAG,uBACAC,EAAA,mBAAArV,OAAA,mBAAAsV,UAAA,wBAAAZ,SAAAzU,KAAAqV,SACAC,EAAA,mBAAAC,oBAAA,mBAAAC,gBAAA,mBAAAC,gBACA/D,EAAA,GAAA1L,OAAA,IAAA6O,GAAAO,EAxKA,WACA,MAAA,YACAC,QAAAK,SAAApT,OAsKA2S,EAhKA,WACA,GAAAjR,GAAA,EACAoN,EAAA,GAAA6D,GAAA3S,GACAgB,EAAAqS,SAAAC,eAAA,GAAA,OAAAxE,GAAAyE,QAAAvS,GAAAwS,eAAA,IAAA,WACAxS,EAAAmC,KAAAzB,IAAAA,EAAA,MA4JAsR,EA1JA,WACA,GAAAtR,GAAA,GAAAyR,eAAA,OAAAzR,GAAA+R,MAAAC,UAAA1T,EAAA,WACA0B,EAAAiS,MAAAC,YAAA,OAwJA,SAAApB,GAAA,kBAAA5L,SA7IA,WACA,IACA,GAAAlF,GAAAkF,QACAkI,EAAApN,EAAA,QAAA,OAAAuN,GAAAH,EAAA+E,WAAA/E,EAAAgF,aAAAvT,IACA,MAAAS,GACA,MAAAZ,SAwIAA,GAAA,IAAA+P,GAAAtP,EACAwP,EAAAX,EACAL,EAAAxN,KAAAkS,SAAA5B,SAAA,IAAA6B,UAAA,IACAvD,GAAA,OACAR,GAAA,EACAC,GAAA,EACAL,GAAA,GAAAc,GACAE,GAAA,GAAAF,GACAK,GAAA,EACAiD,GAAAhD,EACAiD,GAAAhU,EACAiU,GAAA9C,EACAgB,GAAAb,CAAAA,GAAA4C,IAAAH,GAAAzC,EAAA6C,KAAAH,GAAA1C,EAAApB,QAAAC,EAAAmB,EAAA8C,OAAAH,GAAA3C,EAAA+C,cAAAvT,EAAAwQ,EAAAgD,SAAArU,EAAAqR,EAAAiD,MAAAzF,EAAAwC,EAAAzT,WAAAG,YAAAsT,EAAA5B,KAAAO,EAAAuE,MAAA,SAAAhT,GACA,MAAAzC,MAAA2Q,KAAA,KAAAlO,IACA,IAAAwP,IAAAO,CAAAA,GAAA1T,UAAA8T,WAAA,WACA,IAAA,GAAAnQ,GAAAzC,KAAAkC,OAAA2N,EAAA7P,KAAA0S,OAAA3Q,EAAA,EAAA/B,KAAAqQ,SAAAmB,IAAA/O,EAAAV,EAAAA,IACA/B,KAAA0V,WAAA7F,EAAA9N,GAAAA,IAEAyQ,EAAA1T,UAAA4W,WAAA,SAAAjT,EAAAoN,GACA,GAAA9N,GAAA/B,KAAAyS,qBACAvR,EAAAa,EAAAoP,OAAA,IAAAjQ,IAAAkQ,EAAA,CACA,GAAA/O,GAAAM,EAAAF,EAAA,IAAAJ,IAAA6O,GAAAzO,EAAA4N,SAAAmB,GAAAxR,KAAA2V,WAAAlT,EAAA4N,OAAAR,EAAApN,EAAA8N,aAAA,IAAA,kBAAAlO,GAAArC,KAAA2S,aAAA3S,KAAAuQ,QAAAV,GAAApN,MAAA,IAAAV,IAAAqR,GAAA,CACA,GAAA9R,GAAA,GAAAS,GAAAO,EAAAW,GAAA3B,EAAAmB,EAAAJ,GAAArC,KAAA4V,cAAAtU,EAAAuO,OACA7P,MAAA4V,cAAA,GAAA7T,GAAA,SAAA8N,GACAA,EAAApN,KACAoN,OACA7P,MAAA4V,cAAA1U,EAAAuB,GAAAoN,IACA2C,EAAA1T,UAAA6W,WAAA,SAAAlT,EAAAoN,EAAA9N,GACA,GAAAb,GAAAlB,KAAAkS,OAAAhR,GAAAmP,SAAAmB,KAAAxR,KAAA2S,aAAAlQ,IAAAwO,GAAAvP,EAAAR,EAAAa,GAAA/B,KAAAuQ,QAAAV,GAAA9N,GAAA,IAAA/B,KAAA2S,YAAA7B,EAAA5P,EAAAlB,KAAAuQ,UACAiC,EAAA1T,UAAA8W,cAAA,SAAAnT,EAAAoN,GACA,GAAA9N,GAAA/B,IAAAwQ,GAAA/N,EAAA,OAAA,SAAAA,GACAV,EAAA4T,WAAA3E,GAAAnB,EAAApN,IACA,SAAAA,GACAV,EAAA4T,WAAA1E,GAAApB,EAAApN,KAEA,IAAAoT,IAAA/C,EACAgD,IAAA7C,QAAAG,GAAA2C,SAAAF,GAAA,mBAAAG,SAAAA,OAAAC,IAAAD,OAAA,WACA,MAAAF,MACA,mBAAAI,SAAAA,OAAA1S,QAAA0S,OAAA1S,QAAAsS,GAAA,SAAA9V,OAAAA,KAAAmW,WAAAL,IAAAD,OACApX,KAAAgH,QAGA,SAAA1E,EAAAC,GACA,kBAAAgV,SAAAA,OAAAC,IAAAD,QAAA,MAAAhV,GAAA,WAAA,mBAAAwC,SAAA,YAAAkM,QAAAlM,UAAA0S,OAAA1S,QAAAxC,EAAA2G,QAAA,OAAA5G,EAAA0F,GAAAyL,QAAAlR,EAAAD,EAAA0F,KACAhB,OAAA,SAAA1E,GACA,GAAAC,GAAA,WACA,QAAAA,GAAAD,EAAAC,GACA,MAAA,YACA,GAAAG,GAAAsD,MAAA3F,UAAAsX,MAAA3X,KAAA6R,UAAA,OAAA,IAAA2C,SAAA,SAAA7R,EAAAyO,GACA,GAAAwG,GAAA,SAAAtV,EAAAC,GACA,MAAAD,OAAA8O,GAAAvJ,MAAAvF,QAAAK,GAAAJ,GACAA,GAAAsV,MAAAvV,EAAAI,EAAA6L,OAAAqJ,OAGA,GAAAlV,KAAA,QAAA,MAAA,MAAA,OAAA,MAAA,OAAA,OAAA,OAAAoV,QAAA,SAAAnV,GACAD,EAAAC,GAAAJ,EAAAD,EAAAA,EAAAK,MACAD,IACA,OAAAJ,GAAAmR,QAAAlR,EAAAA,IC9OAjC,OAAAwE,eAAAC,QAAA,cACAtE,OAAA,IAEAsE,QAAAgT,SAAA/Q,MAEA,IAAAiK,SAAA,kBAAAC,SAAA,gBAAAA,QAAAC,SAAA,SAAAnQ,GAAA,aAAAA,IAAA,SAAAA,GAAA,MAAAA,IAAA,kBAAAkQ,SAAAlQ,EAAAR,cAAA0Q,QAAAlQ,IAAAkQ,OAAA7Q,UAAA,eAAAW,IAEAgE,aAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAtC,GAAA,EAAAA,EAAAsC,EAAA1B,OAAAZ,IAAA,CAAA,GAAAuC,GAAAD,EAAAtC,EAAAuC,GAAA1E,WAAA0E,EAAA1E,aAAA,EAAA0E,EAAAxE,cAAA,EAAA,SAAAwE,KAAAA,EAAAzE,UAAA,GAAAL,OAAAwE,eAAAI,EAAAE,EAAAC,IAAAD,IAAA,MAAA,UAAAxF,EAAA0F,EAAAC,GAAA,MAAAD,IAAAL,EAAArF,EAAAS,UAAAiF,GAAAC,GAAAN,EAAArF,EAAA2F,GAAA3F,MAEAqJ,GAAAC,QAAA,MAEAC,IAAApI,uBAAAkI,IAMA8O,SAAAhT,QAAAgT,SAAA,WACA,QAAAA,UAAA1W,GACA3B,gBAAA6B,KAAAwW,SAEA,IAAAjP,GAAAvB,EAAAmE,EAAAmD,EAAAmJ,CAIAzW,MAAAF,OAAA4W,KAAAtU,MAAAsU,KAAAC,UAAA7W,IAGAE,KAAAyO,cAAA,GAEAzO,KAAA4W,OAAA,EAEA5W,KAAAF,OAAA+W,UACA7W,KAAAF,OAAA+W,QAAA,yBAGA7W,KAAAF,OAAAyE,SACAvE,KAAAF,OAAAyE,OAAA,GAGAvE,KAAAF,OAAAyE,OAAA,IACAvE,KAAA8W,kBACA9W,KAAAF,OAAAiX,MAMA/W,KAAAF,OAAAiX,IAAA,QAEA,IAAA/W,KAAAF,OAAAyE,QAAAvE,KAAAF,OAAAkM,YACAhM,KAAAF,OAAAkM,WAAA0F,EAAA,UAAAC,EAAA,WACA3R,KAAAF,OAAA0K,WAAA,OAIAxK,KAAAF,OAAAwN,YACAtN,KAAAF,OAAAwN,UAAA,QAGAtN,KAAA2G,SAAA3G,KAAAF,OAAAwN,UAAA,cAEAtN,KAAAF,OAAAkX,aACAhX,KAAAF,OAAAkX,WAAA,KAGA,wBAAAhX,MAAAF,SAAA,IACAE,KAAAF,OAAAmX,sBAAA,GAGAjX,KAAAF,OAAAyH,cACAA,EAAA,WACAvH,KAAAF,OAAAyH,YAAAA,GAGAvH,KAAAF,OAAAqK,YACAmD,EAAAtN,KAAAF,OAAAwN,UACAmJ,EAAArC,SAAA8C,cAAA5J,GAAAjF,wBAGA8B,EADA,aAAA5C,EACAkP,EAAAjO,OAEAiO,EAAAvR,MAGA,SAAAoI,IACAnD,EAAA,KAEAnK,KAAAF,OAAAqK,UAAAA,GAGAnK,KAAAF,OAAAkG,WACAA,EAAA,GACAmE,EAAAnK,KAAAF,OAAAqK,UAEAA,EAAA,KAAAA,EAAA,IACAnE,EAAApD,KAAA0H,MAAAH,EAAA,IACAA,GAAA,MACAnE,EAAApD,KAAA0H,MAAAH,EAAA,KAEAnK,KAAAF,OAAAkG,SAAAA,GAGAhG,KAAAF,OAAA6F,YACA,IAAA3F,KAAAF,OAAAyE,OACAvE,KAAAF,OAAA6F,UAAA,GAGA3F,KAAAF,OAAA6F,UAAA/C,KAAA0H,MAAAtK,KAAAF,OAAAkG,SAAA,IAIAhG,KAAAF,OAAAqX,iBACAnX,KAAAF,OAAAqX,gBAAA,GAGA,mBAAAnX,MAAAF,OACAE,KAAAF,OAAAsX,gBAAApX,KAAAF,OAAAsX,gBAEApX,KAAAF,OAAAsX,iBAAA,EAGApX,KAAAF,OAAAuX,QACArX,KAAAF,OAAAuX,OAAA,GAGArX,KAAAF,OAAAuH,OACArH,KAAAF,OAAAuH,KAAA,GAGArH,KAAAsX,KAAA1U,KAAA0H,MAAAtK,KAAAF,OAAAqK,UAAA,KACAnK,KAAAuX,cAAA,EACAvX,KAAAF,OAAAqK,UAAA,MACAnK,KAAAuX,cAAA,EACAvX,KAAAsX,KAAA,GAGAxX,EAAAqX,iBACAnX,KAAAF,OAAA6F,WAAA,IAGA7F,EAAA0X,aACAxX,KAAAF,OAAAgK,aAAAhK,EAAA0X,YACA,kBAAA1X,KAAA,IACAE,KAAAF,OAAAqX,gBAAA,GAEA,aAAArX,KAAA,IACAE,KAAAF,OAAA2X,WAAA,IAIAzX,KAAAF,OAAA4X,4BACA1X,KAAAF,OAAA4X,2BAAA,GAGA1X,KAAA2X,oBAEA3X,KAAAF,OAAA6F,UAAA3F,KAAAF,OAAA6F,UAAA3F,KAAAF,OAAAkG,SAAA,EAAAhG,KAAAF,OAAA8X,kBAEA9X,EAAA+X,SACA7X,KAAA8X,eAAAhY,EAAA+X,QAGA/X,EAAAiY,eACA/X,KAAAgY,qBAAAlY,EAAAiY,cAGAjY,EAAAmY,cACAjY,KAAAkY,oBAAApY,EAAAmY,aAGAjY,KAAAmY,iBAAA,OAEAnY,KAAAoY,WACAC,GAAA,EACAC,KAAA,GAKAtY,KAAAuY,OAAA,iDACAvY,KAAAwY,QAAAxY,KAAAuY,OAAA,4BACAvY,KAAAyY,SAAAzY,KAAAuY,OAAA,6BACAvY,KAAA0Y,MAAA1Y,KAAAuY,OAAA,0BAEAvY,KAAAiL,WACA0N,MACAC,WAAA,QACAC,eAAA,eACAC,mBAAA,aACAC,YACApZ,QAAA,mBACAqZ,OAAA,mBACAC,OAAA,qBAGAC,OACAN,WAAA,QACAC,eAAA,eACAC,mBAAA,cACAC,YACApZ,QAAA,qBAGAwZ,MACAP,WAAA,SACAC,eAAA,iBACAC,mBAAA,eACAC,YACApZ,QAAA,UAQAK,KAAAoZ,oBAEApZ,KAAAqZ,eAEArZ,KAAA8J,eACA9J,KAAA6J,eAAA,EACA7J,KAAAsZ,YAEAtZ,KAAAuZ,OA6qEA,MA5pEA9V,cAAA+S,WACA1S,IAAA,WACA5E,MAAA,QAAAsa,UAAAC,QAAAC,MAAA5P,aACA,GAAA6P,UACAC,UACAC,SACAC,QACAC,KACAvK,MACAnB,IACA/M,EACAiY,KACAS,eACAC,OACA7V,MACAC,KACA6V,YACAC,GAMA,IAJA,aAAAV,QAAArD,MAAA,EAAA,KACA6D,OAAA,UAGAnQ,sBAAArF,QAAA,WAAAiL,QAAA5F,YAAA,IAAA,CAEA,IADAqQ,OACA7Y,EAAA,EAAAA,EAAAwI,YAAA5H,OAAAZ,IACA6Y,IAAAhV,KAAA2E,YAAAxI,GAAA8D,KAEA0E,aAAAqQ,IA4BA,GAzBA,mBAAAC,WAAA,WAAAH,QACAL,UAAA,KACAC,SAAAJ,QAAA5X,MAAA,WACA0X,KAAA,IAEAK,UAAA,IAEAC,SADA,WAAAI,OACAI,KAAAZ,SAEAA,QAEAF,KAAA,GAGAW,YAAAL,SAAA,GAAAhY,MAAA+X,WAAA,GAEAK,OADA,gBAAAC,YACA,OACA,WAAAA,YACA,OAEA,SAGAF,eAAAH,SAAA3X,OAEA,SAAA+X,QAAA,WAAAA,OACA,IAAA3Y,EAAAiY,KAAAjY,EAAA0Y,eAAA1Y,IACAwY,QAAAD,SAAAvY,GAAAO,MAAA+X,WAEAvL,IAAAyL,QAAA,GAKA,SAAAhQ,aAAAA,YAAAwQ,QAAAjM,QAAA,IAIAA,MAAAsL,SAAA,IACAA,MAAAtL,SAGAmB,MAAAsK,QAAA,GACAA,QAAA,KAEAtK,OAAAsK,QAAA,IAGAC,MACA1L,IAAAA,IACAgK,IACAjU,MAAApC,SAAA8X,QAAA,GAAA,IACAzV,KAAArC,SAAA8X,QAAA,GAAA,KAEAxB,MACAlU,MAAApC,SAAA8X,QAAA,GAAA,IACAzV,KAAArC,SAAA8X,QAAA,GAAA,KAEAzU,IACAjB,OAAA,EACAC,MAAA,EACAa,OAAA,GAEAE,KAAA0U,QAAA,GAAAA,QAAA,GACAtK,MAAAA,MACAkK,MAAAA,OAGAC,MAAAtL,KAAAlJ,KAAA4U,WAEA,IAAA,SAAAE,OACA,IAAA3Y,EAAAiY,KAAAjY,EAAA0Y,eAAA1Y,IAIAwY,QAAAD,SAAAvY,GAAAO,MAAA+X,WAEAE,QAAA,KAAA,MAAAS,iBAIA/K,MAAAsK,QAAA,GACA,QAAAtK,QACAA,MAAA,WAEApL,MAAApC,SAAA8X,QAAA,GAAA,IACAzV,KAAArC,SAAA8X,QAAA,GAAA,IAEAC,MACA1L,IAAAyL,QAAA,GAAAjY,MAAA,OAAA,GACAwW,IACAjU,MAAAA,MACAC,KAAAA,MAEAiU,MACAlU,MAAAA,MACAC,KAAAA,MAEAgB,IACAjB,OAAA,EACAC,MAAA,EACAa,OAAA,GAEAE,KAAA0U,QAAA,GACAtK,MAAAA,MACAkK,MAAAA,OAGAC,MAAAtL,KAAAlJ,KAAA4U,MAIA,OAAAJ,UAWA7V,IAAA,qBACA5E,MAAA,SAAA2F,EAAA2S,EAAAkC,EAAAc,GACA,GACApQ,GACAlF,EACAuV,EAGAC,EACAC,EACAC,EARAvM,KAIAlE,EAAAnK,KAAAF,OAAAqK,UACAiO,EAAApY,KAAAoY,SAoBA,IAfAuC,EAAA3a,KAAAmY,iBACAyC,EAAA,SAAA/V,EAEA+V,GACAvM,EAAAjJ,KAAAoS,EACAnJ,EAAAnM,OAAA2C,EAAAA,EAAA3C,OAAA,GAAAyY,GAAAtW,KACAgK,EAAAwM,KAAA,WAEAxM,EAAAmJ,EAGAnJ,EAAAmM,SAAAA,EAEAnM,EAAAd,GAAA,MAAAc,EAAAjJ,KAAA,IAAAsU,EAEA1Z,KAAAF,OAAAgb,wBAAA,EAAA,CACA,GAAAC,GAAA/a,KAAAiL,UAAAyO,GAAAZ,kBACAzK,GAAAjJ,KAAA2V,EAAA,OAAA1M,EAAAjJ,KAOA,GAJAsV,EAAArM,EAAAnM,OAEAuY,EAAA,EAEAG,EACA,IAAA,GAAAtZ,GAAA,EAAAA,EAAAuD,EAAA3C,OAAAZ,IAAA,CACA8I,EAAAvF,EAAAvD,EACA,IAAA0Z,GAAA5Q,EAAAuQ,GAAAtW,KAAA+F,EAAAuQ,GAAAvW,KACAc,GAAAiF,EAAAkE,EAAAnM,OAAAkW,EAAAuC,GAAAK,EAAAN,EAEA7V,EAAAvD,GAAA+D,IAAAjB,MAAAqW,EAAApW,KAAAoW,EAAAvV,EAAAA,MAAAA,GAEAuV,EAAA5V,EAAAvD,GAAA+D,GAAAhB,KAEAuW,GAAA,SAAAxQ,EAAAoF,OAAA,MAAApF,EAAAhF,KAAA,KACAiJ,EAAA4M,UAAA3Z,OAIAmZ,GAAAtQ,EAAAkE,EAAAnM,OAAAkW,EAAAuC,EA8CA,OA3CAtM,GAAAnJ,MAAAuV,EAEApM,EAAA6M,SAaAlb,KAAAF,OAAAqb,iBAAA,GACA9M,EAAA6M,MAAA7C,GAAA,EAEAhK,EAAA6M,MAAA5C,KAAAnO,EAAAuQ,EAAAtC,EAAAC,KAEAhK,EAAA6M,MAAA7C,GAAAlO,EAAAiO,EAAAC,GACAuC,IACAvM,EAAA6M,MAAA5C,KAAAnO,EAAAiO,EAAAE,OAGAjK,EAAAxJ,MAAAA,EAEAwJ,EAAAzB,mBAAA,GACAgO,GAAA,MAAA/V,EAAA,GAAAO,KAAA,IAAA,MAAAP,EAAA,GAAAO,KAAA,IAAAP,EAAA,GAAAwT,GAAAhU,KAAAQ,EAAA,GAAAwT,GAAAjU,MAAA,MAEAiK,EAAAzB,mBAAA,cAGAyB,EAAAxJ,MAAAwJ,EAAAxJ,MAAAuR,MAAA,IAGAwE,GAAA,IAAAvM,EAAAxJ,MAAA3C,cAIAmM,GAAAxJ,MAGAwJ,KAWAvK,IAAA,uBACA5E,MAAA,WACA,GAAAa,GAAAC,KAEAob,EAAArb,EAAAsb,QAAAC,0BAEAC,EAAAxb,EAAAsb,QAAAG,iCACAC,EAAA1b,EAAAsb,QAAAK,gCAGA9T,KAAAjI,QAAA+G,UAAA3G,EAAA4G,SAAA,8BAAA0C,OAAA,QAAAnF,KAAAnE,EAAAqZ,kBAAApQ,KAAA,QAAA,wBAAAoS,GAAApS,KAAA,YAAAyS,GAAAzS,KAAA,IAAAuS,GAAAvS,KAAA,IAAA,SAAA5H,EAAAE,GACA,MAAAvB,GAAAsb,QAAAM,+BAAAra,KACA0H,KAAA,cAAAjJ,EAAAsb,QAAAO,+BAAAC,KAAA,SAAAza,EAAAE,GAEA,GAAAqY,EAEAA,GADAvY,EAAAgE,KAAAkV,QAAA,QAAA,GACAlZ,EAAAgE,MAEAhE,EAAAgE,KAAAnD,MAAA,qBAAAmU,MAAA,GAAArK,UAGA,OAAAhM,GAAAD,QAAA,IAAAC,EAAAD,OAAAyE,QAAAjD,IAAAvB,EAAA+W,eAAAgF,QAEAnC,EADA,SAAA5Z,EAAAD,OAAAiX,KACA,OAEA,OAKAnP,IAAAjI,QAAAyI,OAAApI,MAAA0G,UAAA,SAAAxC,KAAAyV,GAAArQ,QAAAD,OAAA,SAAAL,KAAA,KAAA,SAAA5H,EAAAE,GACA,MAAAA,IAAA,IAAA,OACA0H,KAAA,IAAAjJ,EAAAsb,QAAAG,kCAAAxS,KAAA,QAAA,SAAAjI,EAAAO,GACA,GAAAya,GAAAhc,EAAAD,OAAAgb,oBACA,OAAA,KAAAxZ,GAAAya,EAAA,SAAA,OACAxS,KAAAC,SAGA,IAAAwS,GAAAjc,EAAAsb,QAAAK,gCAGA9T,KAAAjI,QAAA+G,UAAA3G,EAAA4G,SAAA,8BAAAkV,KAAA,SAAA9a,EAAAwF,GACAqB,IAAAjI,QAAAyI,OAAApI,MAAA0G,UAAA,eAAA2C,OAAA,QAAAL,KAAA,QAAA,YAAAA,KAAA,YAAAgT,GAAAhT,KAAA,IAAA,SAAA5H,EAAAE,GACA,MAAAvB,GAAAsb,QAAA5Q,4BAAAnJ,KACA0H,KAAA,IAAA,SAAA5H,EAAAE,GACA,MAAAvB,GAAAsb,QAAAnU,4BAAA5F,KACAiI,KAAA,SAAAnI,EAAAkD,GACA,MAAAvE,GAAAwF,QAAAmH,YAAAnG,EAAAjC,KACA0E,KAAA,cAAA,eAYAlF,IAAA,iBACA5E,MAAA,SAAA4K,GACA,GAAAxI,GAAA+M,EAAA4N,EAAAvC,EAAA3Z,EAAAmc,CAEAnc,GAAAC,KAEAic,IAEA,KAAAvC,IAAA5P,GACA,IAAAuE,IAAAvE,GAAA4P,GACAuC,EAAA9W,KAAA2E,EAAA4P,GAAArL,GAIA,IAAA8N,KAGA,KADA3B,SAAA,EACAlZ,EAAA,EAAAA,EAAA2a,EAAA/Z,OAAAZ,IACAkZ,UAAA,EAEA0B,EAAAD,EAAA3a,GAEA+M,EAAAzG,IAAAjI,QAAAyI,OAAArI,EAAA4G,SAAA,KAAAuV,EAAA3O,IAgBA4O,EAAAD,EAAA3O,OAEAc,EAAA3H,UAAA,QAAAxC,KAAAgY,EAAArX,OAAAyE,QAAAD,OAAA,KAAAL,KAAA,QAAA,SAAA5H,EAAAE,GACA,MAAA,mBAAAA,IACA0H,KAAA,YAAA,SAAA5H,GACA,GAAAyH,GAAA9I,EAAAsb,QAAAe,gCAAAhb,EAAAE,GAEA+I,EAAAxB,EAAAwB,CAKA,OAFA8R,GAAAD,EAAA3O,IAAApI,KAAAkF,EAAA,IAEAxB,EAAAY,YACAJ,OAAA,QAAAL,KAAA,cAAAjJ,EAAAsb,QAAAgB,6BAAA/a,IAAAiI,KAAA,SAAAnI,GACA,MAAAA,GAAAgE,OAMAiJ,EAAA3H,UAAA,uBAAAxC,KAAAgY,EAAArX,OAAAyE,QAAAD,OAAA,KAAAL,KAAA,QAAA,SAAA5H,EAAAE,GACA,MAAA,wBAAAA,IACA0H,KAAA,YAAA,SAAA5H,GACA,GAAAiJ,GAAAE,CAOA,OALAF,GAAAtK,EAAAuK,MAAAlJ,EAAAiE,GAAAjB,MAAAhD,EAAAiE,GAAAH,MAAA,GAEAiX,EAAAD,EAAA3O,IAAApI,KAAAkF,EAAA,IACAE,GAAA,GAEA,aAAAF,EAAA,IAAAE,EAAA,MACAlB,OAAA,QAAAL,KAAA,KAAA,GAAAA,KAAA,KAAA,WACA,MAAAjJ,GAAAsb,QAAAiB,wBAAAhb,KACA0H,KAAA,KAAA,GAAAA,KAAA,KAAA,WACA,MAAAjJ,GAAAsb,QAAAkB,wBAAAjb,IAIA,KAAAA,EAAA,EAAAA,EAAA2a,EAAA/Z,OAAAZ,IAAA,CACA4a,EAAAD,EAAA3a,EAEA,IACAkb,GACAV,EAEAW,EACAC,EACAC,EACAC,EAPAC,EAAAV,EAAAD,EAAA3O,IAAArL,OAGA4a,IAUA,KAJAN,EAAA,EAEAI,EAAA,EAEAd,EAAA,EAAAA,EAAAe,EAAAf,IAGAY,EAAAP,EAAAD,EAAA3O,IAAAuO,GAEAY,EAAAF,EAAAI,IAAA,GACAE,EAAA3X,KAAA2W,GAOAW,IAAAX,IASAiB,gBAAAZ,EAAAD,EAAA3O,IAAAuO,GACAkB,iBAAA,GAEAL,EAAAI,gBAAAC,kBAGAN,EAAAC,EAAAC,GACAH,EAAAX,EACAU,EAAAG,GAEAG,EAAA3X,KAAA2W,KAxBAW,EAAAX,EACAU,EAAAG,EA2BA,IAEAjb,GAFAub,KACAC,EAAAJ,EAAA5a,MAGA,KAAAR,EAAA,EAAAA,EAAAwb,EAAAxb,IACAoa,EAAAgB,EAAApb,GACAub,EAAA9X,KAAA,IAAA+W,EAAA3O,GAAA,WAAAuO,EAGA9b,MAAAqZ,YAAArZ,KAAAqZ,YAAArM,OAAAiQ,OAOAnZ,IAAA,yBACA5E,MAAA,SAAAmP,EAAAmM,EAAAjT,EAAA2T,GACA,GAAAvV,GAAAK,EAAAjG,EAAAsK,EAAAE,EAAAvD,EAAAmW,EAAAC,CAmBA,IAjBApX,EAAAhG,KAAAF,OAAAkG,SACAL,EAAA3F,KAAAF,OAAA6F,UAAA6U,EACAxT,EAAAhH,KAAAF,OAAAkH,eAEAjH,EAAAC,KAEA,SAAAkb,IAAAA,EAAAmC,eAAA,MAAA,IAAAnC,EAAA7Q,GAAA,IAAA6Q,EAAA3Q,GAKAF,GAAA,EACAE,GAAA,GACA2Q,GAAA7Q,EAAA,EAAAE,EAAA,GACA4S,EAAA,KAPAA,EAAA,SAAAjC,EAAA7Q,EAAA,IAAA6Q,EAAA3Q,EAAA,IACAF,GAAA,EACAE,EAAA,KAAA2Q,GAAA,IAAA,IAQA,aAAA3T,GAAA,KAAAA,EAAA,CACA,GAAA+V,GAAA9C,EAAA,GAEAxT,EAAA,GAAA,KAAAO,KACA+V,GAAA,GAGAC,YAAA,EACAxd,EAAAD,OAAAqX,kBAAA,IACAoG,WAAAxd,EAAAD,OAAA6F,UAAAK,EAAA,IAGAL,EAAA5F,EAAAD,OAAA6F,UAAA2X,EAEAtW,EAAA,IAAA,IACArB,GAAA,GAGA4E,EAAA5E,EAAA4X,WAEAlP,EAAA3H,UAAA,iBAAAsC,KAAA,YAAAmU,GAAAzW,UAAA,SAAAsC,KAAA,IAAAqB,GAAArB,KAAA,IAAAuB,OAEAiQ,IAAA,EAEA+C,YAAAvX,EAAA,EACAjG,EAAAD,OAAAqX,kBAAA,IACAoG,WAAAxd,EAAAD,OAAA6F,UAAA,GAGAyX,EAAArd,EAAAD,OAAA8X,kBACA,YAAA7X,EAAAD,OAAA8K,oBACAwS,GAAA,GAGAzX,EAAA5F,EAAAD,OAAA6F,UAAA6U,EACAnQ,EAAA,GAAA1E,EAAA4X,YAAAH,EACA/S,GAAA6Q,EAAA7Q,EAEAgE,EAAA3H,UAAA,iBAAAsC,KAAA,YAAA,cAAAmU,GAAAzW,UAAA,SAAAsC,KAAA,IAAAqB,GAAArB,KAAA,IAAAuB,MAcAzG,IAAA,mBACA5E,MAAA,SAAAmP,EAAAmM,EAAAU,GACA,GAAAvV,GACAwX,EACA5V,EACAiW,EACAzd,EAAAC,IAEAwd,GAAAnP,EAAA3H,UAAA,cAEAV,SAAAhG,KAAAF,OAAAkG,SACAL,EAAA3F,KAAAF,OAAA6F,UAAA6U,EAEAjT,EAAA8G,EAAArF,KAAA,oBAEA,SAAAkS,GACAA,GAAA7Q,EAAA,EAAAE,EAAA,GACA4S,EAAA,IAEAA,EAAA,SAAAjC,EAAA7Q,EAAA,IAAA6Q,EAAA3Q,EAAA,IAGA,IAAAiQ,GAAA,eAAAxa,MAAAF,QAAA,gBAAAE,KAAAF,OAAAqH,YACAqW,EAAAxU,KAAA,YAAA,SAAA5H,GACA,GAAAiJ,GAAAE,CAGA,OAFAF,GAAA,EAAA1E,EAAA,GACA4E,EAAAxK,EAAAuK,MAAA,EAAAlJ,EAAAiE,GAAAjB,MAAAhD,EAAAiE,GAAAH,MAAA,GACA,wBAAAmF,EAAA,IAAAE,EAAA,MACA7D,UAAA,QAAAsC,KAAA,cAAA,OACA,aAAAzB,EACAiW,EAAAxU,KAAA,YAAA,SAAA5H,GACA,GAAAiJ,GAAAE,CAGA,OAFAF,GAAA,EAAA1E,EACA4E,EAAAxK,EAAAuK,MAAA,EAAAlJ,EAAAiE,GAAAjB,MAAAhD,EAAAiE,GAAAH,MAAA,GACA,wBAAAmF,EAAA,IAAAE,EAAA,MACA7D,UAAA,QAAAsC,KAAA,YAAAmU,IAEAK,EAAAxU,KAAA,YAAA,SAAA5H,GACA,GAAAiJ,GAAAE,CAGA,OAFAF,GAAAtK,EAAAuK,OAAA,EAAA4Q,EAAA7Q,EAAAjJ,EAAAiE,GAAAjB,MAAAhD,EAAAiE,GAAAH,MAAA,GACAqF,EAAA5E,EAAA,GACA,aAAA0E,EAAA,IAAAE,EAAA,MACA7D,UAAA,QAAAsC,KAAA,YAAAmU,GAEA9O,EAAA3H,UAAA,wBAAAsC,KAAA,YAAAmU,OAIArZ,IAAA,QACA5E,MAAA,SAAAue,GAIA,MAAA7a,MAAA0H,MAAA,IAAAmT,GAAA,OAQA3Z,IAAA,iBACA5E,MAAA,SAAAgd,EAAA1B,EAAAlN,EAAA3L,GACA,GAAAgE,GAAA3F,KAAAF,OAAA6F,UAGA9F,EAAA+E,aAAA+H,YAAAuP,GAGA1E,EAAAlK,EAAAjE,OAAA,KAAAL,KAAA,KAAAkT,EAAA3O,IAAAvE,KAAA,QAAA,cAAAnJ,EAAA6d,eAAA1U,KAAA,YAAA,gBAAArH,EAAAgE,EAAA,IAGA,OAAA/F,YAAA+M,YAAA9M,EAAAG,KAAAF,OAAAE,MAAAqN,OAAAmK,EAAAgD,EAAA7Y,MASAmC,IAAA,yBACA5E,MAAA,SAAAsY,GAGA,GAAAxX,KAAAF,OAAA4Z,MAAA,CAIA,GAAAnT,GAAAwE,OAAAnD,IAAAjI,QAAAyI,OAAAoP,EAAA1O,YAAAE,KAAA,oBAEA1E,EAAAG,MAAA3F,UAAAsX,MAAA3X,KAAAmJ,IAAAjI,QAAAyI,OAAAoP,EAAA1O,YAAApC,UAAA,gBAAAiX,QAAA,IAAArD,QAAA9C,EAEA,OAAAxX,MAAAqb,QAAAuC,OAAArX,EAAAjC,EAAAkT,OASA1T,IAAA,gBACA5E,MAAA,SAAAmP,EAAAgK,GACA,GAAA/W,GAAA8I,EAAAyT,EAAAvF,EAAAwF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAEA,KAAAhd,EAAA,EAAAA,EAAA+M,EAAAxJ,MAAA3C,OAAAZ,IAaA,GAZA8I,EAAAiE,EAAAxJ,MAAAvD,GAEAwc,EAAA9d,KAAAyO,cACA2P,EAAAhU,EAAAiO,GAAAjU,MACAia,EAAAjU,EAAAiO,GAAAhU,KACAia,EAAAD,EAAAD,EACAH,EAAA7T,EAAAkO,KAAAlU,MACA8Z,EAAA9T,EAAAkO,KAAAjU,KACA8Z,EAAAD,EAAAD,EACAF,EAAA3T,EAAA/E,GAAAjB,MACA4Z,EAAA5T,EAAA/E,GAAAH,MAEAmT,GAAA+F,GAAA/F,GAAAgG,EAMA,MALAR,GAAAM,EAAAG,EACAhG,EAAA2F,GAAA5F,EAAA+F,GAAAP,EAEAC,EAAAC,EAAAC,GAAA1F,EAAA2F,GAAAE,CAMA,MAAA,IAAA7X,OAAA,gCAAA+R,EAAA,kBAAAhK,EAAAjJ,KAAA,KAAAgF,EAAAiO,GAAAhU,SASAP,IAAA,gBACA5E,MAAA,SAAAmP,EAAAhJ,GACA,GAAA/D,GAAA8I,EAAAmU,EAAAjG,EAAAyF,EAAAtD,EAAAwD,EAAAC,EAAAI,EAAAH,CAEA,KAAA7c,EAAA,EAAAA,EAAA+M,EAAAxJ,MAAA3C,OAAAZ,IAQA,GAPA8I,EAAAiE,EAAAxJ,MAAAvD,GAEAyc,EAAA3T,EAAA/E,GAAAjB,MACAqW,EAAArQ,EAAA/E,GAAAhB,KACA4Z,EAAA7T,EAAAkO,KAAAlU,MACA8Z,EAAA9T,EAAAkO,KAAAjU,KAEAgB,GAAA0Y,GAAA1Y,GAAAoV,EAUA,MATA0D,GAAAD,EAAAD,EACAD,SAAAvD,EAAAsD,EACAO,EAAAlU,EAAAiO,GAAAhU,KAAA+F,EAAAiO,GAAAjU,MAEAma,EAAAJ,EAAAH,SACA1F,EAAA2F,GAAA5Y,EAAA0Y,GAAAQ,EAEAlG,GAAAjO,EAAAiO,GAAAjU,MAAAka,GAAAhG,EAAA2F,GAAAE,EAEAvb,KAAA0H,MAAA+N,GAIA,MAAA,IAAA/R,OAAA,4BAAA+R,GAAA,kBAAAhK,EAAAjJ,KAAA,KAAAqV,MAUA3W,IAAA,cACA5E,MAAA,SAAAsf,GACA,GAEAC,GACAC,EACAC,EACArd,EACAqD,EACAgJ,EACAiR,EARAC,GAAA,GAAA1c,OAAA2c,UASA/e,EAAAC,IAIA,KAFA2e,EAAA/W,IAAAjI,QAAAyI,OAAArI,EAAA4G,UAAAoY,OAAA,IAAA,gBAAA/V,KAAA,QAAA,WAEA1H,EAAA,EAAAA,EAAAkd,EAAAtc,OAAAZ,IAAA,CACA0d,QAAAR,EAAAld,GAEAmd,EAAAO,QAAAP,GACAC,EAAAM,QAAAN,GAEA/Z,EAAA,OACA,SAAAqa,WACAra,EAAAqa,QAAAra,OAGAgJ,EAAA,EACA,WAAAqR,WACArR,EAAAqR,QAAArR,SAGA8Q,EAAAQ,QAAAjf,KAAA0O,cAAA+P,EAAApQ,IAAAoQ,EAAAra,OACAqa,EAAAS,OAAAlf,KAAA0O,cAAA+P,EAAApQ,IAAAoQ,EAAApa,MACAqa,EAAAO,QAAAjf,KAAA0O,cAAAgQ,EAAArQ,IAAAqQ,EAAAta,OACAsa,EAAAQ,OAAAlf,KAAA0O,cAAAgQ,EAAArQ,IAAAqQ,EAAAra,MAEAua,EAAAH,EAAApQ,IAAAd,GAAA,IAAAkR,EAAAra,MAAA,IAAAqa,EAAApa,KAAA,MAAAqa,EAAArQ,IAAAd,GAAA,IAAAmR,EAAAta,MAAA,IAAAsa,EAAAra,KAEA8a,eAAAR,EAAAtV,OAAA,KAAAL,KAAA,QAAA,kBAAAA,KAAA,KAAA4V,GAAA3V,GAAA,QAAA,WACA,GAAAmW,GAAApf,KACAqf,EAAAzX,IAAAjI,QAAA+G,UAAA3G,EAAA4G,SAAA,oBAAAN,OAAA,WACA,MAAArG,QAAAof,GAGAC,GAAAC,QAAA,UAAAD,EAAAC,QAAA,aACArW,GAAA,YAAA,WACA,GAAAmW,GAAApf,IACA4H,KAAAjI,QAAA+G,UAAA3G,EAAA4G,SAAA,oBAAAN,OAAA,WACA,MAAArG,QAAAof,IACAE,QAAA,SAAA,KACArW,GAAA,WAAA,WACArB,IAAAjI,QAAA+G,UAAA3G,EAAA4G,SAAA,oBAAA2Y,QAAA,SAAA,IAEA,IAAAtZ,GAAAjG,EAAAD,OAAAkG,SACAkJ,EAAAlP,KAAAqb,QAAArR,2BAAA,GACAmF,EAAAnP,KAAAqb,QAAArR,2BAAA,GAAAhE,CAEAmZ,gBAAA9V,OAAA,WAAAL,KAAA,SAAAkG,EAAA,KAAAuP,EAAAQ,QAAA,IAAA/P,EAAA,KAAAuP,EAAAS,OAAA,IAAA/P,EAAA,KAAAuP,EAAAQ,OAAA,IAAA/P,EAAA,KAAAuP,EAAAO,SAAAjW,KAAA,QAAA,SAAArE,EAAA,mBAAAgJ,GAEAwR,eAAA9V,OAAA,QAAAL,KAAA,QAAA,iBAAAA,KAAA,KAAAkG,GAAAlG,KAAA,KAAAmG,GAAAnG,KAAA,KAAAyV,EAAAQ,SAAAjW,KAAA,KAAA0V,EAAAO,SAEAE,eAAA9V,OAAA,QAAAL,KAAA,QAAA,iBAAAA,KAAA,KAAAkG,GAAAlG,KAAA,KAAAmG,GAAAnG,KAAA,KAAAyV,EAAAS,QAAAlW,KAAA,KAAA0V,EAAAQ,QAGA,GAAAK,IAAA,GAAApd,OAAA2c,SACA/e,GAAA6W,OACA4I,QAAAC,IAAA,iCAAAF,EAAAV,GAAA,UASA/a,IAAA,oBACA5E,MAAA,WACA,GAAAc,KAAAF,OAAA4f,iBAAA1f,KAAAF,OAAA6f,sBAAA3f,KAAA4f,QAAA5f,KAAAF,OAAA+f,YAAA,CACA,IAAA7f,KAAAF,OAAAiH,iBAAA,CACA,GAAA+Y,GAAAld,KAAA0H,MAAAtK,KAAAF,OAAAqK,UAAA,IACAnK,MAAAF,OAAAiH,iBAAA+Y,EAGA9f,KAAAF,OAAAigB,iBACA/f,KAAAF,OAAAkH,eAAAhH,KAAAF,OAAAigB,iBAAA7d,OAEAlC,KAAAF,OAAAkH,eAAA,EAEAhH,KAAAF,OAAA8X,kBAAA5X,KAAAF,OAAAiH,iBAAA/G,KAAAF,OAAAkH,eAEA,SAAAhH,KAAAF,OAAAkgB,WACAhgB,KAAAF,OAAAkgB,SAAA,OAGAhgB,MAAAF,OAAA8X,kBAAA,CAGA,UAAA5X,KAAAF,OAAAmgB,mBACAjgB,KAAAF,OAAAmgB,iBAAA,WASAnc,IAAA,aACA5E,MAAA,SAAAghB,GACA,GACA5e,GACAI,EACAye,EAEAC,EACAzU,EACA0C,EAPAtO,EAAAC,KAIAqgB,KAIApE,EAAAlc,EAAA+J,YAAA/J,EAAAD,OAAA4Z,MAGA,IAAA,UAAAwG,GAAA,GACA,MAAAngB,GAAAugB,oBAAAJ,EAGA,KAAA7R,IAAA4N,GACAoE,EAAAlb,MAAAkJ,IAAAA,EAAAuR,WAGA,KAAAte,EAAA,EAAAA,EAAA4e,EAAAhe,OAAAZ,IAGA,IAFA6e,EAAAD,EAAA5e,GAEAI,EAAA,EAAAA,EAAA2e,EAAAne,OAAAR,IACA,GAAAye,EAAA9R,MAAAgS,EAAA3e,GAAA2M,IAAA,CACA+R,GAAAD,EAAA/a,KAAA+a,EAAA/b,MAAA+b,EAAA9b,KAAA8b,EAAA/b,OACA,SAAA+b,IACAC,EAAAjb,KAAAgb,EAAAxb,OAEA,SAAAwb,IACAC,EAAAjb,KAAAgb,EAAAI,OAEAF,EAAA3e,GAAAke,OAAAza,KAAAib,EACA,OAKAzU,GAAA,OAAA,QAAA,UACA,SAAAuU,GAAA,IACAvU,EAAAxG,KAAA,SAEA,SAAA+a,GAAA,IACAvU,EAAAxG,KAAA,SAEApF,EAAAsgB,WAAA1U,KAAAA,EAAAiU,OAAAS,GAEAtgB,EAAA6f,OAAA7f,EAAAygB,iBAAAzgB,EAAAsgB,WAEAtgB,EAAAugB,oBAAAvgB,EAAA6f,WAcA9b,IAAA,mBACA5E,MAAA,SAAAmhB,GACA,GAAA1U,GACArK,EACAI,EACAye,EACAP,EACAa,EACApS,EACA6N,EACAwE,EACAzB,EACAC,EACA7Z,EACAV,EACA5E,EAAAC,IAOA,KALA2L,EAAA0U,EAAA1U,KACA0U,EAAAA,EAAAT,OAEAA,KAEAte,EAAA,EAAAA,EAAA+e,EAAAne,OAAAZ,IAKA,IAJAmf,EAAAJ,EAAA/e,GAEAse,EAAAza,MAAAkJ,IAAAoS,EAAApS,IAAAuR,YAEAle,EAAA,EAAAA,EAAA+e,EAAAb,OAAA1d,OAAAR,IAAA,CACA2M,EAAAoS,EAAApS,IACAqS,EAAAD,EAAAb,OAAAle,GACAye,IAEA,KAAA,GAAAxe,GAAA,EAAAA,EAAAgK,EAAAzJ,OAAAP,IACAwe,EAAAxU,EAAAhK,IAAA+e,EAAA/e,EAGAwe,GAAA9b,KAAA8b,EAAA/b,MAAA+b,EAAAje,OAEAga,EAAAnc,EAAA+J,YAAA/J,EAAAD,OAAA4Z,OAAArL,GAEA4Q,EAAAlf,EAAA2O,cAAAwN,EAAAiE,EAAA/b,OACA8a,EAAAnf,EAAA2O,cAAAwN,EAAAiE,EAAA9b,MAEAgB,EAAAzC,KAAA0H,OAAA2U,EAAAC,GAAA,GAAA,GAEAva,EAAA5E,EAAAD,OAAAmgB,iBACAlgB,EAAAD,OAAAigB,kBACAI,EAAAQ,WAAAD,EAAA,GACA/b,EAAA5E,EAAAD,OAAAigB,iBAAAI,EAAAQ,YAAAhc,OAEAwb,EAAAQ,WAAA,EAGA,SAAAR,KACAxb,EAAAwb,EAAAxb,OAGAwb,EAAA9R,IAAAA,EACA8R,EAAA3F,SAAAlZ,EACA6e,EAAA9a,GAAAA,EACA8a,EAAAlB,QAAAA,EAAA,GACAkB,EAAAjB,OAAAA,EAAA,GACAiB,EAAAxb,MAAAA,EAEAib,EAAAte,GAAAse,OAAAza,KAAAgb,GAIA,MAAAP,MAQA9b,IAAA,mBACA5E,MAAA,SAAA0gB,GACA,GAEAte,GACAI,EACA2M,EACAuS,EACAC,EACAxb,EACAyb,EACAC,EACAvG,EACA2F,EACAa,EACAC,EACAC,EACAC,EACAnB,EACAoB,EACAzc,EAEA0c,EApBAxC,GAAA,GAAA1c,OAAA2c,UAmBAwC,GAAA,EAEAvhB,EAAAC,IAEAghB,MAEAhB,EAAAjgB,EAAAD,OAAAkgB,SACAY,EAAA7gB,EAAA+J,YAAA/J,EAAAD,OAAA4Z,OACA/U,EAAA5E,EAAAD,OAAAmgB,iBAGAoB,EADA,oBAAAthB,GAAAD,OACAC,EAAAD,OAAAuhB,iBAEA,WAGA,SAAAthB,EAAAqhB,kBACArhB,EAAAqhB,mBACAE,GAAA,EAGA,KAAAjT,IAAAuS,GAAA,CAOA,IANA1E,SAAA0E,EAAAvS,GACAmM,EAAA0B,SAAA1B,SACAxL,SAAAkN,SAAArX,MAAAqX,SAAArX,MAAA3C,OAAA,GACA2e,EAAA7R,SAAA3J,GAAAhB,KACAkd,QAAA3e,KAAA0H,MAAAuW,EAAAb,GACAiB,GAAA5S,IAAAA,EAAAuR,WACAte,EAAA,EAAAA,EAAAigB,QAAAjgB,IACA+D,EAAA/D,EAAA0e,EAAAjgB,EAAAuX,KACAe,GAAAtY,EAAAyhB,cAAAtF,SAAA7W,EAAAtF,EAAAuX,MACA2J,EAAArB,OAAAza,MACAkT,GAAAA,GACAhT,GAAAA,EAAAtF,EAAAuX,KACAmK,MAAA,EACAjH,SAAAA,EACAuG,QAAA1S,EACA1J,MAAAA,EACAib,WAGAoB,GAAA7b,KAAA8b,GAGA,IAAA5S,IAAAuR,GAMA,IALAkB,EAAAlB,EAAAvR,GAAAuR,OACAmB,EAAAnB,EAAAvR,GAAAA,IACA6N,SAAA0E,EAAAG,GACAvG,EAAA0B,SAAA1B,SAAA,EACAkH,UAAAV,EAAAxG,GAAAoF,OACAte,EAAA,EAAAA,EAAAwf,EAAA5e,OAAAZ,IAGA,IAFA6e,EAAAW,EAAAxf,GACA+D,EAAA8a,EAAA9a,GAAAtF,EAAAuX,KACA5V,EAAA,EAAAA,EAAAggB,UAAAxf,OAAAR,IAMA,GALAwf,EAAAQ,UAAAhgB,GAAA2D,GACA8b,EAAAD,EAAAlB,EACAte,IAAAggB,UAAAxf,OAAA,IACAif,GAAAnB,GAEA3a,GAAA6b,GAAA7b,EAAA8b,EAAA,CACAH,EAAAxG,GAAAoF,OAAAle,GAAA+f,OAAA,EACAT,EAAAxG,GAAAoF,OAAAle,GAAAke,OAAAza,KAAAgb,EACA,OAMA,GAAAmB,KAAA,GAAA,aAAAD,EAAA,CAEA,IADAD,EAAA,EACA9f,EAAA,EAAAA,EAAA0f,EAAA9e,OAAAZ,IAEA,IADAse,EAAAoB,EAAA1f,GAAAse,OACAle,EAAA,EAAAA,EAAAke,EAAA1d,OAAAR,IACAigB,SAAA/B,EAAAle,GAAA+f,MACAE,SAAAP,IACAA,EAAAO,SAIA5hB,GAAAqhB,gBAAA/S,GAAA+S,EAKA,IAAA9f,EAAA,EAAAA,EAAA0f,EAAA9e,OAAAZ,IAEA,IADAse,EAAAoB,EAAA1f,GAAAse,OACAle,EAAA,EAAAA,EAAAke,EAAA1d,OAAAR,IACAigB,SAAA/B,EAAAle,GAAA+f,MACAjZ,OAAAmZ,SAAA5hB,EAAAqhB,gBAAA/S,GAAAtO,EAAAD,OAAA6F,UAEAqb,EAAA1f,GAAAse,OAAAle,GAAA8G,OAAAA,MAIA,IAAA+W,IAAA,GAAApd,OAAA2c,SAOA,OANA/e,GAAA6W,OACA4I,QAAAC,IAAA,oCAAAF,EAAAV,GAAA,OAGA9e,EAAAihB,KAAAA,EAEAA,KAUAld,IAAA,aACA5E,MAAA,SAAA0gB,GACA,GAAAgC,GAAA3F,EAAA4F,EAAAvgB,EAAA+M,EAAA8R,EAAA3F,CAMA,KAJAoH,KACA3F,KACA4F,EAAA7hB,KAAAoZ,iBAEA9X,EAAA,EAAAA,EAAAugB,EAAA3f,OAAAZ,IACA+M,EAAAwT,EAAAvgB,GAAA8D,KACA6W,EAAA9W,KAAAkJ,GACAuT,EAAAzc,MAAAkJ,IAAAA,EAAAuR,WAGA,KAAAte,EAAA,EAAAA,EAAAse,EAAA1d,OAAAZ,IACA6e,EAAAP,EAAAte,IACAkZ,EAAAyB,EAAA3B,QAAA6F,EAAA9R,SACA,IACAuT,EAAApH,GAAA2F,EAIA,OAAAyB,MAWA9d,IAAA,sBACA5E,MAAA,SAAA0gB,GACA,GAAA5Z,GACA8b,EACAhC,EACAiC,EACAC,EACA9gB,EACA+gB,EACA/S,EACAC,EACA+S,EACAC,EACAP,EACA7hB,EAAAC,IAEA2F,WAAA3F,KAAAF,OAAA6F,UACAK,EAAAhG,KAAAF,OAAAkG,SAEA8b,EAAA,SACA9hB,KAAAF,OAAA8K,oBACAkX,EAAA9hB,KAAAF,OAAA8K,mBAGA,cAAAkX,IACAlC,EAAA7f,EAAAqiB,iBAAAxC,IAGAE,EAAA/f,EAAAD,OAAAiH,iBAEAgb,EAAA,MAAAjC,EAAA,IAAA,EAAAA,EAAA,MAAA,EAAAA,EAAA,OAMA5e,EAAA4e,EACAkC,EAAA,MAAA9gB,EAAA,KAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,UAAA,EAAAA,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAA,EAAAA,EAAA,KAEA0gB,EAAA7hB,EAAAsiB,WAAAzC,GAEAqC,EAAAra,IAAAjI,QAAA+G,UAAA3G,EAAA4G,SAAA,gBAAAzC,KAAA0d,GAAAlb,UAAA,cAAAxC,KAAA,SAAA9C,GACA,MAAAA,GAAAwe,SACAtW,QAEA,WAAAwY,EACAG,EAAA5Y,OAAA,KAAAL,KAAA,KAAA,SAAA5H,GACA,MAAAA,GAAAmM,KACAvE,KAAA,QAAA,SAAAA,KAAA,YAAA,SAAA5H,GACA,GAAAmJ,GAAAxK,EAAAD,OAAAkG,SAAA5E,EAAAuf,WAAAb,EAAA,CACA,OAAA,aAAA1e,EAAAiE,GAAA,IAAAkF,EAAA,MACAlB,OAAA,QAAAL,KAAA,IAAA,SAAA5H,GACA,MAAAA,GAAAmf,OAAA,aAAAnf,EAAAmf,MAEA,WAAAnf,EAAAmf,MACAyB,EADA,OADA,OAAAD,IAIA/Y,KAAA,OAAA,SAAA5H,GACA,MAAAA,GAAAuD,QAEA,YAAAmd,EAGAG,EAAA5Y,OAAA,WAAAL,KAAA,KAAA,SAAA5H,GACA,MAAAA,GAAAmM,KACAvE,KAAA,QAAA,SAAAA,KAAA,SAAA,SAAA5H,GAWA,MAVAA,GAAA8d,OAAA9d,EAAA6d,QAAA,GACA/P,EAAA9N,EAAA6d,QACA9P,EAAA/N,EAAA8d,SAEAhQ,EAAA9N,EAAAiE,GAAA,GACA8J,EAAA/N,EAAAiE,GAAA,IAEA6c,EAAAlc,EACAmc,EAAA,EAEAjT,EAAA,IAAAgT,EAAA,IAAA/S,EAAA,IAAA+S,EAAA,IAAA/S,EAAA,IAAAgT,EAAA,IAAAjT,EAAA,IAAAiT,IACAnZ,KAAA,OAAA,SAAA5H,GACA,MAAAA,GAAAuD,QAEA,cAAAmd,GACAG,EAAA5Y,OAAA,WAEAL,KAAA,SAAA,SAAAA,KAAA,SAAA,SAAA5H,GACA8N,EAAA9N,EAAAiE,GAAAtF,EAAAuX,KACAnI,EAAA/N,EAAAiE,GAAAtF,EAAAD,OAAAkgB,SAAAjgB,EAAAuX,KACA4K,EAAAlc,EACAmc,EAAAnc,EAAA5E,EAAAoH,MAEA,IAAA8Z,GAAAviB,EAAAqZ,iBAAAhY,EAAAoZ,SAAA,GAAAtV,KAMA,OAJAiK,GAAAmT,IACAnT,EAAAmT,GAGApT,EAAA,IAAAgT,EAAA,IAAA/S,EAAA,IAAA+S,EAAA,IAAA/S,EAAA,IAAAgT,EAAA,IAAAjT,EAAA,IAAAiT,IACAnZ,KAAA,OAAA,SAAA5H,GACA,MAAAA,GAAAuD,QAIA5E,EAAAiY,sBACAjY,EAAAiY,0BAIAlU,IAAA,cACA5E,MAAA,WACAT,KAAAuB,KAAAkY,wBAGApU,IAAA,cACA5E,MAAA,SAAAqjB,EAAAC,GAkCA,QAAAvK,KACA,GAAAwK,GAAA7a,IAAAjI,QAAA+iB,MAAAC,UAAArU,IAAAsU,EAAAC,QACAN,EAAA3f,KAAAkgB,MAAAL,EAAA,IACAD,EAAA5f,KAAAmgB,KAAAN,EAAA,GAEA1iB,GAAAijB,gBAAAT,KAAAA,EAAAC,GAAAA,EAAAC,OAAAD,EAAAD,GAEAxiB,EAAAkY,aACAlY,EAAAmY,sBAzCA,GAKA+K,GACA/T,EANAnP,EAAAC,KACAkF,EAAAnF,EAAAD,OAAAkG,SAAA,IACA9D,EAAAnC,EAAAD,OAAAqK,UACAkE,EAAAtO,EAAAqZ,iBAAA,GACA8J,EAAA7U,EAAAxJ,MAAAwJ,EAAAxJ,MAAA3C,OAAA,GAAAmW,GAAAhU,KAGAoE,EAAAzI,KAAAqb,QAAA8H,YAAApd,KACA6c,EAAAhb,IAAAjI,QAAAyjB,cAAAC,QAAA,EAAAzb,IAAAjI,QAAAkD,IAAAwL,EAAAxJ,MAAA,SAAAuF,GACA,MAAAA,GAAAiO,GAAAhU,SACA+J,OAAA3F,EAAAb,IAAAjI,QAAAkD,IAAAwL,EAAAxJ,MAAA,SAAAuF,GACA,MAAAA,GAAA/E,GAAAhB,OACAoE,GAEA,UAAA8Z,IACAA,EAAA3f,KAAAkgB,MAAAI,EAAA,KAGA,mBAAAI,SACAd,EAAA5f,KAAAmgB,KAAA,EAAAR,IAGAU,EAAAljB,EAAA2O,cAAAL,EAAAkU,GACArT,EAAAnP,EAAA2O,cAAAL,EAAAmU,GAEAziB,EAAAijB,gBAAAT,KAAAA,EAAAC,GAAAA,EAAAC,OAAAD,EAAAD,GAEAxiB,EAAAsX,MAAAzP,IAAAjI,QAAA4jB,SAAAd,SAAAha,EAAA,IAAAvG,EAAAuG,EAAAvD,KAAA+D,GAAA,QAAAgP,EAEA,IAAAuL,GAAAxjB,KAAAqb,QAAArR,2BAAA,GACApB,EAAA4a,GAAAzjB,EAAAD,OAAAkG,SAAAd,GAAA,CACA0C,KAAAjI,QAAAyI,OAAArI,EAAA4G,UAAA0C,OAAA,KAAAL,KAAA,QAAA,SAAAA,KAAA,YAAA,gBAAAJ,EAAA,KAAAnK,KAAAsB,EAAAsX,OAAA5Y,KAAAsB,EAAAsX,MAAAoM,MAAAR,EAAA/T,OAsBApL,IAAA,SACA5E,MAAA,WACAT,KAAAuB,KAAA8X,mBAGAhU,IAAA,eACA5E,MAAA,WACAT,KAAAuB,KAAAgY,yBAQAlU,IAAA,wBACA5E,MAAA,WACA,GAAAwkB,GACAlU,EACAmU,EACAC,EACAC,EACAC,EACAC,EAAA,EAEAL,KAAA,OAAA,OAAA,OAAA,SAAA,SAAA,UAAA,OAAA,SAAA,SAAA,OAAA,OAAA,SAAA,SAAA,OAAA,OAAA,SAAA,SAAA,OAAA,OAAA,SAAA,SAAA,OAAA,OAAA,SAAA,UAAA,OAAA,OAAA,SAAA,OAAA,OAAA,OAAA,SAAA,UAAA,OAAA,OAAA,QAEA,KAAA,GAAApiB,GAAA,EAAAA,EAAAoiB,EAAAxhB,OAAAZ,IACAkO,EAAAkU,EAAApiB,GAAA,GACAqiB,EAAAD,EAAApiB,GAAA,GACAsiB,EAAAF,EAAApiB,GAAA,GACAuiB,EAAAH,EAAApiB,GAAA,GACAyiB,GAAA,uBAAAvU,EAAA,uCAEAuU,GADA,SAAAvU,EACA,kCAAAoU,EAAA,sCAAAC,EAAA,uCAAAF,EAAA,OAEA,iCAAAA,EAAA,sCAAAC,EAAA,sCAAAC,EAAA,OAEAE,GAAA,mBAWA,OARAA,IAAA,mfAEAA,EAAA,SAAAA,EAAA,UACAD,EAAA,+ZACAC,EAAAD,EAAAC,KAYAjgB,IAAA,qBACA5E,MAAA,SAAAgJ,GACA,GAAA8b,GACAC,EACAvK,EACA3Z,EAAAC,IAEAgkB,GAAAjkB,EAAAD,OAAAkkB,SAEAC,EAAAlkB,EAAAyY,QAAA,qBAAAwL,EAEApc,IAAAjI,QAAAukB,KAAAD,EAAA,SAAA/f,GAEA,MADAwV,GAAAxV,EAAAigB,cAAAC,OAAA,GACAlc,EAAAwR,QAWA5V,IAAA,YACA5E,MAAA,QAAAgM,WAAAhD,UACA,GAAAnI,MAAAC,KACA0Z,MACA2K,OACAC,IACAC,KACAjjB,EACAkjB,UACAC,QACAC,SACA5a,YACAqR,aAQA,IANAqJ,UAAA,SAAAzkB,MAAAD,OAEAC,KAAAD,OAAAqb,cAAA,YAAApb,MAAAD,QAAAC,KAAAD,OAAAkkB,mBAAAvf,QAAA+f,WAAAzkB,KAAAD,OAAA4Z,gBAAAjV,OAEA0W,cAAApb,KAAAD,OAAAqb,cAEA,YAAApb,MAAAD,OAAA,CAUA,IAPAykB,KADApJ,cACApb,KAAAD,OAAAkkB,UAEAjkB,KAAAD,OAAAkkB,UAGAK,UACAI,WACAnjB,EAAA,EAAAA,EAAAijB,KAAAriB,OAAAZ,IAAA,CAEAgjB,IAAAC,KAAAjjB,EACA,KAAAoY,QAAA3Z,MAAAkL,UACAlL,KAAAkL,UAAAyO,OAAAd,WAAApX,gBAAA8iB,MACAD,OAAAlf,KAAAuU,OACAyB,gBAGAsJ,QAAA/K,OAAA3Z,KAAAD,OAAAgK,YAAAwa,OAMA,IAAAD,OAAAniB,QACAgQ,QAAA,GAAAe,SAAA,SAAA9B,GACApR,KAAA4kB,mBAAAxT,KAGAe,QAAAvB,KAAA,SAAAzM,MACA,GAAA8f,UAAAjkB,KAAAD,OAAAkkB,SACAnN,QAAA9W,KAAAD,OAAA+W,QACA+N,OAAAZ,SAAAviB,QAAA,IAAA,IAEAiY,OAAAxV,KACAmgB,OAAAlf,KAAAuU,OAEA3Z,KAAAD,OAAAukB,OAAAA,OACAtkB,KAAAkL,UAAAyO,QACAd,WAAA,GACAC,eAAA9Y,KAAAD,OAAAkkB,SACAlL,mBAAA,GAGA,IAAA+L,oBAAA,OAAA,QAAA,QACAA,mBAAAvK,QAAAZ,UAAA,GAAA3Z,KAAAD,OAAAsX,mBAAA,IACAwN,QAAA,YAEA,IAAAE,gBAAAjO,QAAA+N,OAAA,MAEA1S,QAAA,GAAAe,SAAA,SAAA9B,EAAAkE,GACAzN,IAAAjI,QAAAolB,QAAAD,gBAAAE,IAAA,SAAAnU,EAAA3M,GACA2M,GACAwE,EAAA/O,MAAAuK,IAEAM,EAAAjN,MAIA,OAAAgO,SAAAvB,KAAA,SAAAzM,MAKA,GAAA+gB,mBACAnb,eACAob,YACA7W,GAEAgM,MAAAnW,KAAAihB,UAEAF,eAAA9f,KAAA,GAEA,KAAA,GAAA7D,GAAA,EAAAA,EAAA8Y,SAAAlY,OAAAZ,KACA+M,IAAA+L,SAAA9Y,GAAAO,MAAA,KAAA,KACAqjB,YAGApb,YAAA3E,MAAAC,KAAAiJ,IAAAwM,KAAA,YACAqK,SAAA7W,KAAA,EAMA,OAHA+W,YAAAtb,YAAAub,KAAAtlB,KAAAulB,iBACAL,eAAA9f,KAAA2E,aACA/J,KAAAoY,iBAAA,OACA8M,gBACA,WACA,MAAA,IAAAhS,SAAA,SAAA9B,GACApR,KAAAoY,iBAAA,KACApY,KAAAwlB,oCAAApU,SAGAR,KAAA,SAAA6U,GACAd,SAAAc,EAAA,GACA1b,YAAA0b,EAAA,GAEAzlB,KAAAD,OAAAgK,YAAAA,YACA/J,KAAAkL,UAAAyO,OAAAX,YACApZ,QAAA+kB,UAGAxc,SAAAmc,YAGAtkB,KAAAD,OAAAukB,OAAAA,OACAlJ,gBACApb,KAAAD,OAAAgK,YAAA2a,SAGAvc,SAAAmc,aAGAlJ,gBACApb,KAAAoY,iBAAA,KACAqM,YACAH,OAAAtkB,KAAAD,OAAA4Z,SAGA8K,YACAH,QAAAtkB,KAAAD,OAAA4Z,QAEA3Z,KAAAD,OAAAukB,OAAAA,QAGAnc,SAAAmc,WAIAvgB,IAAA,kBACA5E,MAAA,SAAA6B,EAAAC,GACA,GAAAykB,GAAA,YAAA1kB,EAAA8Z,KACA6K,EAAA,YAAA1kB,EAAA6Z,KACA8K,EAAA,gBAAA5kB,EAAA8Z,KACA+K,EAAA,gBAAA5kB,EAAA6Z,KACAgL,EAAA,kBAAA9kB,EAAA8Z,KACAiL,EAAA,kBAAA9kB,EAAA6Z,IAIA,OAAA4K,IAAAC,EACA5kB,YAAAC,EAAAqE,KAAApE,EAAAoE,OACAqgB,GAAAC,EACA,EACAG,GAAAD,EACA,EACAD,GAAAG,GACA,EACAD,GAAAF,IAAAG,IAAAF,EAAA,QACA,KAUA9hB,IAAA,sCACA5E,MAAA,SAAAgJ,GACA,GAAA+c,GAEAc,EACAjc,EACAkc,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA1F,EACArG,EACAlD,EACAqD,EACA9a,EAAAC,IAEAgkB,UAAAjkB,EAAAD,OAAAkkB,SAEAiB,KACAnb,KAEAkc,EAAAjmB,EAAAyY,QAAA,wBAAAwL,SAAA,uIAEApc,IAAAjI,QAAAuS,QAAAgS,KAAA8B,GAEArV,KAAA,SAAAzM,GAKA,MAHA+hB,GAAA/hB,EAAAigB,cAAAC,OAAA,GACA8B,EAAAnmB,EAAA0Y,SAAA,mBAAAwN,EAEAre,IAAAjI,QAAAuS,QAAAgS,KAAAgC,KACAvV,KAAA,SAAAzM,GAEAiiB,EAAAjiB,EAAAsiB,OAAAP,GAAAS,MACAX,EAAA7hB,EAAAsiB,OAAAP,GAAAU,kBAEA1B,EAAA9f,KAAA4gB,EAOA,IAAAa,GAAA,qDAAAT,CAGA,OAFAC,GAAArmB,EAAA2Y,MAAAkO,EAEAhf,IAAAjI,QAAAuS,QAAAgS,KAAAkC,KACAzV,KAAA,SAAAzM,GAIA,MAHAmiB,GAAAniB,EAAA2iB,SAAA,GAAAC,WAAA,GAAAT,MAAAU,KAAA,KACAT,EAAAvmB,EAAA0Y,SAAA,qBAAA4N,EAEAze,IAAAjI,QAAAuS,QAAAgS,KAAAoC,KACA3V,KAAA,SAAAzM,GACAqiB,EAAAriB,EAAAsiB,MAEA,KAAA,GAAAnc,KAAAkc,GAIA,GAHAC,EAAAD,EAAAlc,GAGA,SAAAA,EAAA,CAIA,GAAA,kBAAAmc,EAAAQ,OAAA,CACA,IAAAjnB,EAAAD,OAAA4X,0BAcA,QAbAmD,GAAA2L,EAAAQ,OACAP,EAAAD,EAAAS,QAAAplB,MAAA,KAAAyY,QAAA,WAEAyG,EADA0F,KAAA,EACA,KAOAD,EAAAU,QAAArlB,MAAA,KAAA4kB,OAKA,IAAA,gBAAAD,EAAAQ,QAAA,YAAAR,EAAAQ,OAAA,CAGA,GAFAnM,EAAA,eAEA9a,EAAAD,OAAA4X,0BAGA,QAFAqJ,GAAA,SAKAlG,GAAA,UACA4L,EAAAD,EAAAS,QAAAplB,MAAA,KAAAyY,QAAA,cAIA,UAFAyG,EAAAyF,EAAAU,QAAArlB,MAAA,KAAA4kB,KAEA,QAAA1F,EAAAoG,OAAA,EAAA,KAEApG,EAAAA,EAAAoG,OAAA,GAIAzM,GAAA8L,EAAAY,KAEA5P,GACApS,KAAA2b,EACA7e,OAAAwY,EACAG,KAAAA,GAGA/Q,EAAA3E,KAAAqS,GAQA,MALA1N,GAAAA,EAAAub,KAAAtlB,EAAAulB,iBACAL,EAAA9f,KAAA2E,GAEA/J,EAAAoY,iBAAA,KAEAjQ,EAAA+c,QAIAnhB,IAAA,qBACA5E,MAAA,SAAAmoB,EAAA3N,EAAApM,EAAAga,EAAA5lB,EAAAua;4BACA,GAAAzE,GACA3S,EACAqX,EACAqE,EACAgH,EACA5lB,EACA6lB,EACAznB,EAAAC,IAQA,KALAwnB,EADA,SAAAznB,EAAAD,OAAAiX,KACA,EAAA,IAEA,EAAA,GAGApV,EAAA,EAAAA,EAAA6lB,EAAAtlB,OAAAP,IACA4lB,EAAAC,EAAA7lB,GAAAD,EACA8V,EAAAyE,EAAAsL,GACA1iB,EAAAwiB,EAAAE,GACArL,EAAAnc,EAAA0nB,mBAAA5iB,EAAA2S,EAAAkC,EAAA6N,GACAhH,EAAAxgB,EAAA2nB,eAAAxL,EAAAxa,EAAA4L,EAAA3L,GACA2lB,EAAAje,OAAA,YAAAL,KAAA,KAAAkT,EAAA3O,GAAA,4BAAA7G,UAAA,QAAAxC,KAAAqc,GAAAjX,QAAAD,OAAA,QAAAL,KAAA,IAAA,SAAA5H,GACA,MAAAA,GAAA6M,OACAjF,KAAA,QAAA,SAAA5H,GACA,MAAAA,GAAA8M,WAUApK,IAAA,sBACA5E,MAAA,SAAAmoB,GACA,GAGA3N,GAGA7U,EACAvD,EACAI,EACAua,EACAzE,EACA0E,EACAoL,EACAze,EAbA9I,EAAAC,KACAqkB,EAAAtkB,EAAAD,OAAAukB,OACA9f,EAAAxE,EAAAD,OAAAyE,OAEAiW,EAAA,EACAjU,EAAA,CAYA,KAFA+gB,EAAA1f,IAAAjI,QAAAyI,OAAArI,EAAA4G,SAAA,SAEArF,EAAA,EAAAA,EAAA+iB,EAAAniB,OAAAZ,IAAA,CAQA,IAPAoY,EAAA2K,EAAA/iB,GACA2a,EAAAlc,EAAAD,OAAAgK,YAAA4P,GAEA3Z,EAAA+J,YAAA4P,MAEA3Z,EAAA4nB,kBAAA1L,GAEAva,EAAA,EAAAA,EAAAua,EAAA/Z,OAAAR,IAUA,GATA8V,EAAAyE,EAAAva,GACAmD,EAAAwiB,EAAA7M,GACAA,GAAA,EAEA0B,EAAAnc,EAAA0nB,mBAAA5iB,EAAA2S,EAAAkC,EAAAc,GAEAza,EAAA+J,YAAA4P,GAAAlC,GAAA0E,EACAnc,EAAAqZ,iBAAAjU,KAAA+W,KAEA,OAAAnc,GAAAD,SAAA,IAAAyE,GAAAxE,EAAA+W,eAAAgF,MAAA,IAAAtB,GAAA,WAAAza,EAAAD,OAAAiX,KAAA,MAAAmF,EAAA9W,OAAA,CAIAyD,EAAA9I,EAAAsb,QAAA3R,0BAAAnD,GACAA,GAAA,CAGA,IAAA+G,GAAA1F,IAAAjI,QAAAyI,OAAArI,EAAA4G,UAAA0C,OAAA,KAAAL,KAAA,QAAA,4BAAAA,KAAA,kBAAAtH,GAAAsH,KAAA,YAAAH,GAAAG,KAAA,KAAAkT,EAAA3O,GAAA,kBAEA,IAAA,OAAAxN,GAAAD,QAAA,IAAAyE,GAAAxE,EAAA+W,eAAAgF,MAAA,IAAAtB,EACAza,EAAA6nB,mBAAAP,EAAA3N,EAAApM,EAAAga,EAAA5lB,EAAAua,OADA,CAKA,GAAAsE,GACAsH,EAAA,CACAtjB,GAAA,IACAsjB,EAAA7nB,KAAAuF,QAAAuiB,qBAAApmB,GAEA,KAAA,GAAAC,GAAA,EAAAA,EAAAkmB,EAAAlmB,IACA4e,EAAAxgB,EAAA2nB,eAAAxL,EAAA1B,EAAA,EAAAlN,EAAA3L,EAGA2lB,GAAAje,OAAA,YAAAL,KAAA,KAAAkT,EAAA3O,GAAA,4BAAA7G,UAAA,QAAAxC,KAAAqc,GAAAjX,QAAAD,OAAA,QAAAL,KAAA,IAAA,SAAA5H,GACA,MAAAA,GAAA6M,OACAjF,KAAA,QAAA,SAAA5H,GACA,MAAAA,GAAA8M,SAIAnO,EAAAD,OAAAqX,kBAAA,GACApX,EAAAgoB,eAAAhoB,EAAA+J,iBAQAhG,IAAA,SACA5E,MAAA,WACA,MAAA0I,KAAAjI,QAAAyI,OAAApI,KAAA2G,UAAAtD,UAwBAS,IAAA,oBACA5E,MAAA,SAAA+c,GACA,GAAA,IAAAjc,KAAAF,OAAAyE,QAAAvE,KAAAF,OAAAiX,IAAA,CAIA,GAEA1I,GACA/M,EAHAvB,EAAAC,KACAgoB,GAAAtU,EAAA,EAAA1B,EAAA,EAMA,KAFAjS,EAAA+W,eAAAmR,QAEA3mB,EAAA,EAAAA,EAAA2a,EAAA/Z,OAAAZ,IACA+M,EAAA4N,EAAA3a,GAEA,SAAAvB,EAAAD,OAAAiX,KAAA1I,IAAA2Z,IACAjoB,EAAA+W,eAAAmR,KAAA9iB,KAAAkJ,GACAtO,EAAA+W,eAAAgF,QACA/b,EAAA+W,eAAAgF,MAAAxa,IAEA,MAAA+M,IACAtO,EAAA+W,eAAAmR,KAAA9iB,KAAAkJ,EAAAA,GACAtO,EAAA+W,eAAAgF,MAAAxa,OAgBAwC,IAAA,kBACA5E,MAAA,WACA,GAAAmoB,GACA3lB,EACAC,EACA6V,EACA3S,EACA6V,EACArM,EACAiL,EACA4O,EACAxO,EACA2K,EACApI,EACAkM,EACApoB,EAAAC,IAKA,IAHAqnB,KACAjP,UAAA,EAEArY,EAAAD,OAAAqb,iBAAA,EAGA,IAFApb,EAAAoY,iBAAA,KACAkM,EAAAtkB,EAAAD,OAAAukB,OACA/iB,EAAA,EAAAA,EAAA+iB,EAAAniB,OAAAZ,IACAoY,EAAA2K,EAAA/iB,OAGA,UAAAvB,EAAAD,OAAA4Z,QACA3Z,EAAAD,OAAA4Z,MAAA3Z,EAAAD,OAAAukB,OAAA,IAEA3K,EAAA3Z,EAAAD,OAAA4Z,MACA2K,GAAA3K,GACA3Z,EAAAD,OAAAukB,OAAAA,CAGA,gBAAAtkB,GAAAD,SACAmc,EAAAlc,EAAAD,OAAAgK,aAEA/J,EAAAD,OAAAqb,gBACAgN,EAAAlM,GAGAlc,EAAAD,OAAAgK,cAEA,IAAAse,IAAA,GAAAjmB,OAAA2c,SAEA,KAAApd,EAAA,EAAAA,EAAA2iB,EAAAniB,OAAAR,IAOA,GANAgY,EAAA2K,EAAA3iB,GAEA3B,EAAAD,OAAAqb,gBACAc,EAAAkM,EAAAzO,IAGA,SAAA3Z,EAAAoY,kBAAApY,EAAAD,OAAAqb,cAYA,IAXA7B,EAAAvZ,EAAAuZ,SAAAI,GAEAwO,EAAAnoB,EAAAyZ,SAAAF,EAAAI,EAAAuC,GAEAA,EAAAld,OAAA4M,KAAAuc,GAAA7C,KAAA,SAAAtkB,EAAAC,GACA,MAAAF,aAAAC,EAAAC,KAGAjB,EAAAD,OAAAgK,YAAA4P,GAAAuC,EAAA7F,QACArW,EAAA8J,gBAAA9J,EAAAD,OAAAgK,YAAA4P,GAAAxX,OAEAP,EAAA,EAAAA,EAAAsa,EAAA/Z,OAAAP,IACA6V,EAAAyE,EAAAta,GACAkD,EAAAqjB,EAAA1Q,GACA6P,EAAAliB,KAAAN,GAEA6V,GACApC,KAAAzT,EAAAA,EAAA3C,OAAA,GAAAoW,KAAAjU,KACAgU,GAAAxT,EAAAA,EAAA3C,OAAA,GAAAmW,GAAAhU,MAGAqW,EAAApC,KAAAvY,EAAAqY,UAAAE,OACAvY,EAAAqY,UAAAE,KAAAoC,EAAApC,MAGAoC,EAAArC,GAAAtY,EAAAqY,UAAAC,KACAtY,EAAAqY,UAAAC,GAAAqC,EAAArC,QAGA,IAAA,OAAAtY,EAAAoY,iBAMA,IAHApY,EAAAD,OAAAgK,YAAA4P,GAAAuC,EAAA7F,QACArW,EAAA8J,gBAAA9J,EAAAD,OAAAgK,YAAA4P,GAAAxX,OAEAP,EAAA,EAAAA,EAAAsa,EAAA/Z,OAAAP,IACA0M,EAAA4N,EAAAta,GACA0M,EAAAnM,OAAAnC,EAAAqY,UAAAC,KACAtY,EAAAqY,UAAAC,GAAAhK,EAAAnM,OAMA,IAAAmmB,IAAA,GAAAlmB,OAAA2c,SAKA,OAJA/e,GAAA6W,OACA4I,QAAAC,IAAA,6BAAA4I,EAAAD,GAAA,OAGAf,KAWAvjB,IAAA,OACA5E,MAAA,QAAAqa,QAgFA,QAAA+O,kBAaA,GAZAvoB,KAAAD,OAAA4f,iBACA9X,IAAAjI,QAAAukB,KAAAnkB,KAAAD,OAAA4f,gBACA,SAAAxb,GAEAnE,KAAAsgB,UAAAnc,IAQA,cAAAnE,MAAAD,QAAA,gBAAAC,MAAAD,OAAA0K,WAAA,CAEA,IAAA,GADA2P,MACA7Y,EAAA,EAAAA,EAAAvB,KAAA8J,eAAAvI,IACA6Y,EAAAhV,KAAApF,KAAAD,OAAA0K,WAEAzK,MAAAD,OAAA0K,WAAA2P,EAGApa,KAAAwF,QAAA,GAAAgG,QAAAxL,KAAAD,QAGAC,KAAAsb,QAAA/V,OAAAqH,YAAA5M,KAAAD,OAAAC,MAEAwoB,SAAA,GACAxoB,KAAAD,OAAAmX,uBACA,eAAAlX,KAAAD,OAAAyH,YACAghB,UAAA,eAEAA,UAAA,YAIAxoB,KAAAD,OAAA8K,mBAAA,YAAA7K,KAAAD,OAAA8K,oBACA2d,UAAA,QAGA,IAAAxE,GAAAhkB,KAAAyoB,wBACAC,EAAA1oB,KAAAsb,QAAAqN,SAAAhP,OACAiP,EAAA5oB,KAAAsb,QAAAuN,UAAAlP,MAEA9R,KAAAjI,QAAAyI,OAAArI,KAAAD,OAAAwN,WAAAjE,OAAA,OAAAA,OAAA,OAAAL,KAAA,KAAA,aAAAA,KAAA,QAAAuf,UAAAvf,KAAA,QAAAyf,GAAAzf,KAAA,SAAA2f,GAAAE,KAAA9E,GAEA+E,aAGA,QAAAA,cACA,IACA,GAEAxnB,GAFAynB,GAAA,GAAA5mB,OAAA2c,SAQA,IAJA/e,KAAAipB,oBAAA3B,YAIAtnB,KAAAD,OAAA4f,gBAAA,CACA,GAAAuJ,GAAA,WACA,SAAAlpB,KAAAmpB,SACA1V,OAAA2V,aAAAppB,KAAAmpB,SAGAnpB,KAAA6f,OAAA7f,KAAAygB,iBAAAzgB,KAAAsgB,WACAtgB,KAAAugB,oBAAAvgB,KAAA6f,QAEA,mBAAAwJ,cAAArpB,KAAAspB,iBACAtpB,KAAAspB,kBAIAtpB,MAAAsgB,UACA4I,IAEA,QAAAK,KACAvpB,KAAAmpB,QAAAjZ,WAAA,WACAlQ,KAAAsgB,UAGA4I,IAFAK,KAIA,OAKA,GAAAvpB,KAAAD,OAAAqX,kBAAA,EAAA,CACA,GAAAkC,GAAAtZ,KAAAsZ,YAAA0N,KAAA,KAQAwC,GAAA,GAAApnB,OAAA2c,SACAlX,KAAAjI,QAAA+G,UAAA3G,KAAA4G,SAAA,gCAAAE,MAAA,UAAA,QACAe,IAAAjI,QAAA+G,UAAA2S,GAAAxS,MAAA,UAAA,GACA,IAAA2iB,IAAA,GAAArnB,OAAA2c,SAKA,IAJA/e,KAAA6W,OACA4I,QAAAC,IAAA,2BAAA+J,EAAAD,GAAA,OAGA,aAAAxpB,KAAAD,OAAAyH,YAAA,CACA,GAAAkiB,EACA,KAAAnoB,EAAA,EAAAA,EAAAvB,KAAAqZ,iBAAAlX,OAAAZ,IACAmoB,EAAA,IAAA1pB,KAAAqZ,iBAAA9X,GAAAiM,GACAxN,KAAA2pB,uBAAA9hB,IAAAjI,QAAAyI,OAAAqhB,GAAAnoB,IAKAvB,KAAAD,OAAAmX,wBAAA,GACAlX,KAAA4pB,qBAAA5pB,KAAA+J,aAGA/J,KAAAD,OAAAuX,SAAA,GACAtX,KAAA6pB,cAGA7pB,KAAAD,OAAA+f,aACA9f,KAAA8pB,WAAA9pB,KAAAD,OAAA+f,YAGA,IAAAiK,IAAA,GAAA3nB,OAAA2c,SACA/e,MAAA6W,OACA4I,QAAAC,IAAA,4BAAAqK,EAAAf,GAAA,MAGA,IAAAxJ,IAAA,GAAApd,OAAA2c,SACA/e,MAAA6W,OACA4I,QAAAC,IAAA,gCAAAF,EAAAV,IAAA,OAGA9e,KAAA+X,gBACA/X,KAAA+X,iBAGA,aAAA/X,MAAAD,QAAAC,KAAAD,OAAA2X,aAAA,EAKA7P,IAAAjI,QAAA+G,UAAA3G,KAAA4G,SAAA,gBAAAE,MAAA,SAAA,WAJAe,IAAAjI,QAAA+G,UAAA3G,KAAA4G,SAAA,gBAAAsC,GAAA,QAAA,WACAlJ,KAAAgqB,uBAAA/pB,QAKA,MAAA6P,GAEA,KAAAA,IAnOA,GAAA6J,OAAApY,EAAAinB,SAEAxoB,KAAAC,KAEA6e,IAAA,GAAA1c,OAAA2c,UAEAuI,cACA2C,qBAAA,EACAhT,WAAAhX,KAAAF,OAAAkX,WACAiT,UAEA/X,QAAA,GAAAe,SAAA,SAAA9B,GACApR,KAAAmL,UAAAiG,IAGAe,SAAAvB,KAAA,SAAA0T,QACA3K,MAAA2K,OAAA,GACAtkB,KAAAD,OAAA4Z,MAAAA,MACA3Z,KAAAD,OAAAukB,OAAAA,MAEA,IAAAtL,YAAAmR,aAEAC,mBACAxR,KAAA,GACAO,MAAA,GAGA,KAAA5X,EAAA,EAAAA,EAAA+iB,OAAAniB,OAAAZ,IACAoY,MAAAlQ,OAAA6a,OAAA/iB,IAEAvB,KAAAD,OAAA4kB,WACA3kB,KAAAD,OAAA4kB,SAAA,WAEA3L,WAAAhZ,KAAAkL,UAAAyO,OAAAX,WACAkR,UAAAlR,WAAAhZ,KAAAD,OAAA4kB,UAEAwF,gBACAA,aAAA/kB,KAAAhC,QAAApD,KAAAkL,UAAAyO,OAAAb,iBACAoR,YAAAlR,WAAApZ,SACAuqB,aAAA/kB,KAAA8kB,WAEA,SAAAvQ,OAAAuQ,YAAAlR,WAAApZ,SAAA,MAAAqX,YACAkT,aAAA/kB,KAAA6R,YAEAkT,aAAAA,aAAAnD,KAAA,KAAA,MAEA,SAAArN,OAAA,UAAAA,QACAyQ,kBAAAzQ,OAAAwQ,cAGA,mBAAA9P,WAAAV,QAAAyQ,mBACAviB,IAAAjI,QAAAolB,QAAAhlB,KAAAD,OAAA+W,QAAAsT,kBAAAzQ,QAAAzQ,GAAA,aAAA,SAAA/E,GAIAA,EAAAwV,MAAAA,QACAsL,IAAA,SAAAnU,MAAA3M,MACAmW,KAAAnW,KAAAihB,UAEAplB,KAAAuZ,SAAApV,KAAAwV,OAAAU,UACA4P,sBAAA,KAEA3F,OAAAniB,SACAmlB,WAAAtnB,KAAAqqB,kBACA9B,qBAIA,mBAAAlO,YAGAra,KAAAuZ,SAAAI,OAAAU,UAEAiN,WAAAtnB,KAAAqqB,kBACA9B,wBA+JA9R,WE/3EAA,UAAA1X,UAAAurB,aAAA,WACA,GAAAhc,GACAuR,EACAte,EACAgpB,KACAvqB,EAAAC,KACAic,EAAAlc,EAAA6f,MAEA,KAAAte,EAAA,EAAAA,EAAA2a,EAAA/Z,OAAAZ,IACA+M,EAAA4N,EAAA3a,GACAse,EAAAvR,EAAAuR,OACA0K,EAAAA,EAAAtd,OAAA4S,EAGA,OAAA0K,IAMA9T,SAAA1X,UAAAyrB,WAAA,SAAAD,GACA,GAAAjc,GACA8R,EACA7e,EACAse,KACA7f,EAAAC,KACAic,EAAAlc,EAAA6f,MAEA,KAAAvR,IAAA4N,GACA2D,EAAAza,MAAAkJ,IAAA4N,EAAA5N,GAAAA,IAAAuR,WAGA,KAAAte,EAAA,EAAAA,EAAAgpB,EAAApoB,OAAAZ,IACA6e,EAAAmK,EAAAhpB,GACAse,EAAAO,EAAA3F,UAAAoF,OAAAza,KAAAgb,EAGA,OAAAP,IAOApJ,SAAA1X,UAAAuqB,gBAAA,WACA,GAEA/nB,GACAkpB,EAHAzqB,EAAAC,KACA2L,EAAA5L,EAAAsgB,UAAA1U,IAWA,KAPA5L,EAAAuqB,eAAAvqB,EAAAsqB,eACAtqB,EAAAqpB,YAAAA,YAAArpB,EAAAuqB,gBAEAvqB,EAAA0qB,iBAEA1qB,EAAA2qB,OAAA/e,EAAAyK,MAAA,EAAAzK,EAAAzJ,QAEAZ,EAAA,EAAAA,EAAAvB,EAAA2qB,OAAAxoB,OAAAZ,IACAkpB,EAAAzqB,EAAA2qB,OAAAppB,GACAvB,EAAA0qB,cAAAD,GAAAzqB,EAAAqpB,YAAAuB,UAAA,SAAAvpB,GACA,MAAAA,GAAAopB,MA4BAhU,SAAA1X,UAAA8rB,aAAA,SAAAC,GACA,GAEAvpB,GACAkpB,EAGAjE,EACAuE,EAPAjM,EAAA1c,KAAA4oB,MAQAC,KACAjrB,EAAAC,IAEA,IAAA,IAAAjB,OAAA4M,KAAAkf,GAAA3oB,OACAqkB,EAAAxmB,EAAAuqB,mBACA,CACA,IAAAhpB,EAAA,EAAAA,EAAAvB,EAAA2qB,OAAAxoB,OAAAZ,IACAkpB,EAAAzqB,EAAA2qB,OAAAppB,GAEAwpB,EADAN,IAAAK,GACA,SAAAzpB,GACA,GAAAA,IAAAypB,GAAAL,GACA,OAAA,GAIA,KAEAzqB,EAAA0qB,cAAAD,GAAAnkB,OAAAykB,GACAE,EAAAR,GAAAzqB,EAAA0qB,cAAAD,GAAAS,QAAAnjB,IAAAojB,EAAAA,EAGA3E,GAAAxmB,EAAA0qB,cAAAD,GAAA1iB,IAAAojB,EAAAA,GAGA,IAAA5pB,EAAA,EAAAA,EAAAvB,EAAA2qB,OAAAxoB,OAAAZ,IACAvB,EAAA0qB,cAAAD,GAAAW,WAUA,OAPA5E,GAAAxmB,EAAAwqB,WAAAhE,GAEA9f,GAAAC,UAAA3G,EAAA4G,SAAA,kBAAAgD,SACA5J,EAAA8pB,WAAAtD,GAEA/G,QAAAC,IAAA,0BAAAtd,KAAA4oB,MAAAlM,GAAA,OAEAmM,GD9IA5nB,eAAAtE,UAAAsH,SAAA,WAEA,MADAK,IAAA2B,OAAApI,KAAAsD,OAAA8E,OAAA,iBAAAmB,QAKAnG,eAAAtE,UAAAqH,YAAA,WAEA,MADAM,IAAA2B,OAAApI,KAAAsD,MAAAwF,YAAAV,OAAA,6BAAAmB","file":"ideogram.min.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Range = exports.Range = function () {\n\n  /**\n  * Chromosome range.\n  * @public\n  * @class\n  * @param {Object} data - range data.\n  * @param {Integer} data.chr - chromosome index.\n  * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n  * @param {Integer} data.start - range start.\n  * @param {Integer} data.stop - range end.\n  * @param {String} data.color - range color.\n  */\n  function Range(data) {\n    _classCallCheck(this, Range);\n\n    this._data = data;\n  }\n\n  _createClass(Range, [{\n    key: 'getStart',\n    value: function getStart() {\n      return this._data.start;\n    }\n  }, {\n    key: 'getStop',\n    value: function getStop() {\n      return this._data.stop;\n    }\n  }, {\n    key: 'getLength',\n    value: function getLength() {\n      return this._data.stop - this._data.start;\n    }\n  }, {\n    key: 'getColor',\n    value: function getColor(chrNumber) {\n      if (!('ploidy' in this._data)) {\n        return this._getColor(chrNumber);\n      } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n        return this._getColor(chrNumber);\n      } else {\n        return 'transparent';\n      }\n    }\n  }, {\n    key: '_getColor',\n    value: function _getColor(chrNumber) {\n      if (Array.isArray(this._data.color)) {\n        return this._data.color[chrNumber];\n      } else {\n        return this._data.color;\n      }\n    }\n  }]);\n\n  return Range;\n}();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ModelAdapter = exports.ModelAdapter = function () {\n  function ModelAdapter(model) {\n    _classCallCheck(this, ModelAdapter);\n\n    this._model = model;\n    this._class = 'ModelAdapter';\n  }\n\n  _createClass(ModelAdapter, [{\n    key: 'getModel',\n    value: function getModel() {\n      return this._model;\n    }\n  }, {\n    key: 'getCssClass',\n    value: function getCssClass() {\n      return '';\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance(model) {\n      if (model.bands) {\n        return new ModelAdapter(model);\n      } else {\n        return new ModelNoBandsAdapter(model);\n      }\n    }\n  }]);\n\n  return ModelAdapter;\n}();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ModelNoBandsAdapter = exports.ModelNoBandsAdapter = function (_ModelAdapter) {\n  _inherits(ModelNoBandsAdapter, _ModelAdapter);\n\n  function ModelNoBandsAdapter(model) {\n    _classCallCheck(this, ModelNoBandsAdapter);\n\n    var _this = _possibleConstructorReturn(this, (ModelNoBandsAdapter.__proto__ || Object.getPrototypeOf(ModelNoBandsAdapter)).call(this, model));\n\n    _this._class = 'ModelNoBandsAdapter';\n    return _this;\n  }\n\n  _createClass(ModelNoBandsAdapter, [{\n    key: 'getModel',\n    value: function getModel() {\n      this._model.bands = [];\n\n      // If chromosome width more, then 1 add single band to bands array\n      if (this._model.width > 1) {\n        this._model.bands.push({\n          name: 'q',\n          px: {\n            start: 0,\n            stop: this._model.width,\n            width: this._model.width\n          }\n        });\n      }\n\n      return this._model;\n    }\n  }, {\n    key: 'getCssClass',\n    value: function getCssClass() {\n      return 'noBands';\n    }\n  }]);\n\n  return ModelNoBandsAdapter;\n}(ModelAdapter);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Layout = exports.Layout = function () {\n  function Layout(config, ideo) {\n    _classCallCheck(this, Layout);\n\n    this._config = config;\n    this._ideo = ideo;\n    this._ploidy = this._ideo._ploidy;\n    this._translate = undefined;\n\n    if ('chrSetMargin' in config) {\n      this.chrSetMargin = config.chrSetMargin;\n    } else {\n      var k = this._config.chrMargin;\n      this.chrSetMargin = this._config.ploidy > 1 ? k : 0;\n    }\n\n    // Chromosome band's size.\n    this._tickSize = 8;\n\n    // Chromosome rotation state.\n    this._isRotated = false;\n  }\n\n  // Factory method\n\n\n  _createClass(Layout, [{\n    key: '_getLeftMargin',\n\n\n    // Get chart left margin\n    value: function _getLeftMargin() {\n      return this._margin.left;\n    }\n\n    // Get rotated chromosome y scale\n\n  }, {\n    key: '_getYScale',\n    value: function _getYScale() {\n      // 20 is width of rotated chromosome.\n      return 20 / this._config.chrWidth;\n    }\n\n    // Get chromosome labels\n\n  }, {\n    key: 'getChromosomeLabels',\n    value: function getChromosomeLabels(chrElement) {\n      var util = new ChromosomeUtil(chrElement);\n\n      return [util.getSetLabel(), util.getLabel()].filter(function (d) {\n        return d.length > 0;\n      });\n    }\n\n    // Rotate chromosome to original position\n\n  }, {\n    key: 'rotateBack',\n    value: function rotateBack() {\n      throw new Error(this._class + '#rotateBack not implemented');\n    }\n\n    // Rotate chromosome to opposite position\n\n  }, {\n    key: 'rotateForward',\n    value: function rotateForward() {\n      throw new Error(this._class + '#rotateForward not implemented');\n    }\n  }, {\n    key: 'rotate',\n    value: function rotate(chrSetNumber, chrNumber, chrElement) {\n      var ideo = this._ideo;\n\n      // Find chromosomes which should be hidden\n      var otherChrs = d3.selectAll(ideo.selector + ' g.chromosome').filter(function () {\n        return this !== chrElement;\n      });\n\n      if (this._isRotated) {\n        // Reset _isRotated flag\n        this._isRotated = false;\n        // Rotate chromosome back\n        this.rotateBack(chrSetNumber, chrNumber, chrElement, function () {\n          // Show all other chromosomes and chromosome labels\n          otherChrs.style('display', null);\n          d3.selectAll(ideo.selector + ' .chrSetLabel, .chrLabel').style('display', null);\n        });\n      } else {\n        // Set _isRotated flag\n        this._isRotated = true;\n\n        // Hide all other chromosomes and chromosome labels\n        otherChrs.style('display', 'none');\n        d3.selectAll(ideo.selector + ' .chrSetLabel, .chrLabel').style('display', 'none');\n\n        // Rotate chromosome\n        this.rotateForward(chrSetNumber, chrNumber, chrElement);\n      }\n    }\n  }, {\n    key: 'getChromosomeLabelClass',\n    value: function getChromosomeLabelClass() {\n      if (this._config.ploidy === 1) {\n        return 'chrLabel';\n      } else {\n        return 'chrSetLabel';\n      }\n    }\n  }, {\n    key: '_getAdditionalOffset',\n    value: function _getAdditionalOffset() {\n      return (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1);\n    }\n  }, {\n    key: '_getChromosomeSetSize',\n    value: function _getChromosomeSetSize(chrSetNumber) {\n      // Get last chromosome set size.\n      var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n      // Increase offset by last chromosome set size\n      return setSize * this._config.chrWidth * 2 + this.chrSetMargin;\n    }\n\n    // Get layout margin\n\n  }, {\n    key: 'getMargin',\n    value: function getMargin() {\n      return this._margin;\n    }\n\n    // Get SVG element height\n\n  }, {\n    key: 'getHeight',\n    value: function getHeight() {\n      throw new Error(this._class + '#getHeight not implemented');\n    }\n  }, {\n    key: 'getChromosomeBandTickY1',\n    value: function getChromosomeBandTickY1() {\n      throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n    }\n  }, {\n    key: 'getChromosomeBandTickY2',\n    value: function getChromosomeBandTickY2() {\n      throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n    }\n\n    // Get chromosome's band translate attribute\n\n  }, {\n    key: 'getChromosomeBandLabelTranslate',\n    value: function getChromosomeBandLabelTranslate() {\n      throw new Error(this._class + '#getChromosomeBandLabelTranslate not implemented');\n    }\n\n    // Get chromosome set label anchor property\n\n  }, {\n    key: 'getChromosomeSetLabelAnchor',\n    value: function getChromosomeSetLabelAnchor() {\n      return 'middle';\n    }\n\n    // Get chromosome's band label text-anchor value\n\n  }, {\n    key: 'getChromosomeBandLabelAnchor',\n    value: function getChromosomeBandLabelAnchor() {\n      throw new Error(this._class + '#getChromosomeBandLabelAnchor not implemented');\n    }\n  }, {\n    key: 'getChromosomeLabelXPosition',\n    value: function getChromosomeLabelXPosition() {\n      throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n    }\n\n    // Get chromosome label y position.\n\n  }, {\n    key: 'getChromosomeLabelYPosition',\n    value: function getChromosomeLabelYPosition() {\n      return -5.5;\n    }\n\n    // \"i\" is chromosome number\n\n  }, {\n    key: 'getChromosomeSetLabelYPosition',\n    value: function getChromosomeSetLabelYPosition(i) {\n      if (this._config.ploidy === 1) {\n        return this.getChromosomeLabelYPosition(i);\n      } else {\n        return -2 * this._config.chrWidth;\n      }\n    }\n  }, {\n    key: 'getChromosomeSetLabelXPosition',\n    value: function getChromosomeSetLabelXPosition() {\n      throw new Error(this._class + '#getChromosomeSetLabelXPosition not implemented');\n    }\n  }, {\n    key: 'getChromosomeSetLabelTranslate',\n    value: function getChromosomeSetLabelTranslate() {\n      throw new Error(this._class + '#getChromosomeSetLabelTranslate not implemented');\n    }\n\n    // Get chromosome set translate attribute\n\n  }, {\n    key: 'getChromosomeSetTranslate',\n    value: function getChromosomeSetTranslate() {\n      throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n    }\n\n    // Get chromosome set translate's y offset\n\n  }, {\n    key: 'getChromosomeSetYTranslate',\n    value: function getChromosomeSetYTranslate() {\n      throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance(config, ideo) {\n      if ('perspective' in config && config.perspective === 'comparative') {\n        return new PairedLayout(config, ideo);\n      } else if ('rows' in config && config.rows > 1) {\n        return new SmallLayout(config, ideo);\n      } else if (config.orientation === 'vertical') {\n        return new VerticalLayout(config, ideo);\n      } else if (config.orientation === 'horizontal') {\n        return new HorizontalLayout(config, ideo);\n      } else {\n        return new VerticalLayout(config, ideo);\n      }\n    }\n  }]);\n\n  return Layout;\n}();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HorizontalLayout = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Horizontal layout class\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Ideogram instances with horizontal layout are oriented with each chromosome\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * starting at left and ending at right, and aligned as rows.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar HorizontalLayout = exports.HorizontalLayout = function (_Layout) {\n  _inherits(HorizontalLayout, _Layout);\n\n  function HorizontalLayout(config, ideo) {\n    _classCallCheck(this, HorizontalLayout);\n\n    var _this = _possibleConstructorReturn(this, (HorizontalLayout.__proto__ || Object.getPrototypeOf(HorizontalLayout)).call(this, config, ideo));\n\n    _this._class = 'HorizontalLayout';\n    _this._margin = {\n      left: 20,\n      top: 30\n    };\n    return _this;\n  }\n\n  _createClass(HorizontalLayout, [{\n    key: '_getLeftMargin',\n    value: function _getLeftMargin() {\n      var margin = Layout.prototype._getLeftMargin.call(this);\n      if (this._config.ploidy > 1) {\n        margin *= 1.8;\n      }\n\n      return margin;\n    }\n  }, {\n    key: 'rotateForward',\n    value: function rotateForward(setNumber, chrNumber, chrElement, callback) {\n      var xOffset = 30;\n\n      var ideoBox = _d2.default.select(this._ideo.selector).node().getBoundingClientRect();\n      var chrBox = chrElement.getBoundingClientRect();\n\n      var scaleX = ideoBox.height / (chrBox.width + xOffset / 2) * 0.9;\n      var scaleY = this._getYScale();\n\n      var yOffset = (chrNumber + 1) * (this._config.chrWidth * 2 * scaleY);\n\n      var transform = 'rotate(90) ' + 'translate(' + xOffset + ', -' + yOffset + ') ' + 'scale(' + scaleX + ', ' + scaleY + ')';\n\n      _d2.default.select(chrElement.parentNode).transition().attr(\"transform\", transform).on('end', callback);\n\n      // Append new chromosome labels\n      var labels = this.getChromosomeLabels(chrElement);\n      _d2.default.select(this._ideo.getSvg()).append('g').attr('class', 'tmp').selectAll('text').data(labels).enter().append('text').attr('class', function (d, i) {\n        return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n      }).attr('x', 30).attr('y', function (d, i) {\n        return (i + 1 + labels.length % 2) * 12;\n      }).style('text-anchor', 'middle').style('opacity', 0).text(String).transition().style('opacity', 1);\n    }\n  }, {\n    key: 'rotateBack',\n    value: function rotateBack(setNumber, chrNumber, chrElement, callback) {\n      var translate = this.getChromosomeSetTranslate(setNumber);\n\n      _d2.default.select(chrElement.parentNode).transition().attr(\"transform\", translate).on('end', callback);\n\n      _d2.default.selectAll(this._ideo.selector + ' g.tmp').style('opacity', 0).remove();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(taxId) {\n      // Get last chromosome set offset.\n      var numChromosomes = this._config.chromosomes[taxId].length;\n      var lastSetOffset = this.getChromosomeSetYTranslate(numChromosomes - 1);\n\n      // Get last chromosome set size.\n      var lastSetSize = this._getChromosomeSetSize(numChromosomes - 1);\n\n      // Increase offset by last chromosome set size\n      lastSetOffset += lastSetSize;\n\n      return lastSetOffset + this._getAdditionalOffset() * 2;\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return this._config.chrHeight + this._margin.top * 1.5;\n    }\n  }, {\n    key: 'getChromosomeSetLabelAnchor',\n    value: function getChromosomeSetLabelAnchor() {\n      return 'end';\n    }\n  }, {\n    key: 'getChromosomeBandLabelAnchor',\n    value: function getChromosomeBandLabelAnchor() {\n      return null;\n    }\n  }, {\n    key: 'getChromosomeBandTickY1',\n    value: function getChromosomeBandTickY1() {\n      return 2;\n    }\n  }, {\n    key: 'getChromosomeBandTickY2',\n    value: function getChromosomeBandTickY2() {\n      return 10;\n    }\n  }, {\n    key: 'getChromosomeBandLabelTranslate',\n    value: function getChromosomeBandLabelTranslate(band) {\n      var x = this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n      var y = -10;\n\n      return {\n        x: x,\n        y: y,\n        translate: 'translate(' + x + ',' + y + ')'\n      };\n    }\n  }, {\n    key: 'getChromosomeSetLabelTranslate',\n    value: function getChromosomeSetLabelTranslate() {\n      return null;\n    }\n  }, {\n    key: 'getChromosomeSetTranslate',\n    value: function getChromosomeSetTranslate(setNumber) {\n      var leftMargin = this._getLeftMargin();\n      var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n      return 'translate(' + leftMargin + ', ' + chromosomeSetYTranslate + ')';\n    }\n  }, {\n    key: 'getChromosomeSetYTranslate',\n    value: function getChromosomeSetYTranslate(setNumber) {\n      // If no detailed description provided just use one formula for all cases.\n      if (!this._config.ploidyDesc) {\n        return this._config.chrMargin * (setNumber + 1);\n      }\n\n      // Id detailed description provided start to calculate offsets\n      //  for each chromosome set separately. This should be done only once.\n      if (!this._translate) {\n        // First offset equals to zero.\n        this._translate = [1];\n\n        // Loop through description set\n        for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n          this._translate[i] = this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n        }\n      }\n\n      return this._translate[setNumber];\n    }\n  }, {\n    key: 'getChromosomeSetLabelXPosition',\n    value: function getChromosomeSetLabelXPosition(i) {\n      if (this._config.ploidy === 1) {\n        return this.getChromosomeLabelXPosition(i);\n      } else {\n        return -20;\n      }\n    }\n  }, {\n    key: 'getChromosomeSetLabelYPosition',\n    value: function getChromosomeSetLabelYPosition(i) {\n      var setSize = this._ploidy.getSetSize(i),\n          config = this._config,\n          chrMargin = config.chrMargin,\n          chrWidth = config.chrWidth;\n\n      if (config.ploidy === 1) {\n        y = chrWidth / 2 + 3;\n      } else {\n        y = setSize * chrMargin / 2;\n      }\n\n      return y;\n    }\n  }, {\n    key: 'getChromosomeLabelXPosition',\n    value: function getChromosomeLabelXPosition() {\n      return -8;\n    }\n  }, {\n    key: 'getChromosomeLabelYPosition',\n    value: function getChromosomeLabelYPosition() {\n      return this._config.chrWidth;\n    }\n  }]);\n\n  return HorizontalLayout;\n}(Layout);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VerticalLayout = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Vertical layout class\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Ideogram instances with vertical layout are oriented with each chromosome\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * starting at top and ending at bottom, and aligned as columns.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar VerticalLayout = exports.VerticalLayout = function (_Layout) {\n  _inherits(VerticalLayout, _Layout);\n\n  function VerticalLayout(config, ideo) {\n    _classCallCheck(this, VerticalLayout);\n\n    var _this = _possibleConstructorReturn(this, (VerticalLayout.__proto__ || Object.getPrototypeOf(VerticalLayout)).call(this, config, ideo));\n\n    _this._class = 'VerticalLayout';\n    // Layout margins\n    _this._margin = {\n      top: 30,\n      left: 15\n    };\n    return _this;\n  }\n\n  _createClass(VerticalLayout, [{\n    key: 'rotateForward',\n    value: function rotateForward(setNumber, chrNumber, chrElement, callback) {\n      var self = this;\n\n      var xOffset = 20;\n\n      var ideoBox = _d2.default.select(this._ideo.selector).node().getBoundingClientRect();\n      var chrBox = chrElement.getBoundingClientRect();\n\n      var scaleX = ideoBox.width / chrBox.height * 0.97;\n      var scaleY = this._getYScale();\n\n      var transform = 'translate(' + xOffset + ', 25) scale(' + scaleX + ', ' + scaleY + ')';\n\n      _d2.default.select(chrElement.parentNode).transition().attr('transform', transform).on('end', callback);\n\n      // Append new chromosome labels\n      var labels = this.getChromosomeLabels(chrElement);\n      var y = (xOffset + self._config.chrWidth) * 1.3;\n      _d2.default.select(this._ideo.getSvg()).append('g').attr('class', 'tmp').selectAll('text').data(labels).enter().append('text').attr('class', function (d, i) {\n        return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n      }).attr('x', 0).attr('y', y).style('opacity', 0).text(String).transition().style('opacity', 1);\n    }\n  }, {\n    key: 'rotateBack',\n    value: function rotateBack(setNumber, chrNumber, chrElement, callback) {\n      var translate = this.getChromosomeSetTranslate(setNumber);\n\n      _d2.default.select(chrElement.parentNode).transition().attr('transform', translate).on('end', callback);\n\n      _d2.default.selectAll(this._ideo.selector + ' g.tmp').style('opacity', 0).remove();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight() {\n      return this._config.chrHeight + this._margin.top * 1.5;\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return '97%';\n    }\n  }, {\n    key: 'getChromosomeBandLabelTranslate',\n    value: function getChromosomeBandLabelTranslate() {}\n  }, {\n    key: 'getChromosomeSetLabelTranslate',\n    value: function getChromosomeSetLabelTranslate() {\n      return 'rotate(-90)';\n    }\n  }, {\n    key: 'getChromosomeSetTranslate',\n    value: function getChromosomeSetTranslate(setNumber) {\n      var marginTop = this._margin.top;\n      var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n      return 'rotate(90) ' + 'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')';\n    }\n  }, {\n    key: 'getChromosomeSetYTranslate',\n    value: function getChromosomeSetYTranslate(setNumber) {\n      // Get additional padding caused by annotation/histogram tracks\n      var pad = this._getAdditionalOffset(),\n          margin = this._config.chrMargin,\n          width = this._config.chrWidth,\n          translate;\n\n      // If no detailed description provided just use one formula for all cases\n      if (!this._config.ploidyDesc) {\n        // TODO:\n        // This part of code contains a lot magic numbers and if\n        // statements for exactly corresponing to original ideogram examples.\n        // But all this stuff should be removed. Calculation of translate\n        // should be a simple formula applied for all cases listed below.\n        // Now they are diffirent because of Layout:_getAdditionalOffset do\n        // not meet for cases when no annotation, when annotation exists and\n        // when histogram used\n\n        if (this._config.annotationsLayout === 'histogram') {\n          return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n        } else {\n          translate = width + setNumber * (margin + width) + pad * 2;\n          if (pad > 0) {\n            return translate;\n          } else {\n            return translate + 4 + 2 * setNumber;\n          }\n        }\n      }\n\n      // If detailed description provided start to calculate offsets\n      // for each chromosome set separately. This should be done only once\n      if (!this._translate) {\n        // First offset equals to zero\n        this._translate = [this._ploidy.getSetSize(0) * width * 2];\n        var prevTranslate;\n        // Loop through description set\n        for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n          prevTranslate = this._translate[i - 1];\n          this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n        }\n      }\n\n      return this._translate[setNumber];\n    }\n  }, {\n    key: 'getChromosomeSetLabelXPosition',\n    value: function getChromosomeSetLabelXPosition() {\n      return this._config.chrWidth * this._config.ploidy / -2;\n    }\n  }, {\n    key: 'getChromosomeLabelXPosition',\n    value: function getChromosomeLabelXPosition() {\n      return this._config.chrWidth / -2;\n    }\n  }]);\n\n  return VerticalLayout;\n}(Layout);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PairedLayout = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Paired layout class\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Ideograms with paired layout group each chromosome in a chromosome set.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * This enables ploidy support beyond the default haploid; e.g. diploid genomes.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar PairedLayout = exports.PairedLayout = function (_Layout) {\n  _inherits(PairedLayout, _Layout);\n\n  function PairedLayout(config, ideo) {\n    _classCallCheck(this, PairedLayout);\n\n    var _this = _possibleConstructorReturn(this, (PairedLayout.__proto__ || Object.getPrototypeOf(PairedLayout)).call(this, config, ideo));\n\n    _this._class = 'PairedLayout';\n\n    _this._margin = {\n      left: 30\n    };\n    return _this;\n  }\n\n  _createClass(PairedLayout, [{\n    key: 'rotateForward',\n    value: function rotateForward(setNumber, chrNumber, chrElement, callback) {\n      var self = this;\n      var ideo = this._ideo;\n\n      // Get ideo container and chromosome set dimensions\n      var ideoBox = _d2.default.select(ideo.selector).node().getBoundingClientRect();\n      var chrBox = chrElement.getBoundingClientRect();\n\n      // Evaluate dimensions scale coefficients\n      var scaleX = ideoBox.width / chrBox.height * 0.97;\n      var scaleY = this._getYScale();\n\n      // Evaluate y offset of chromosome.\n      // It is different for first and the second one\n      var yOffset = setNumber ? 150 : 25;\n\n      var transform = 'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n      // Run rotation procedure\n      _d2.default.select(chrElement.parentNode).transition().attr(\"transform\", transform).on('end', function () {\n        // Run callback function if provided\n        if (callback) {\n          callback();\n        }\n\n        var translateY = 6 * Number(!setNumber);\n\n        // Rotate band labels\n        _d2.default.select(chrElement.parentNode).selectAll('g.bandLabel text').attr('transform', 'rotate(90) translate(0, ' + translateY + ')').attr('text-anchor', 'middle');\n\n        // Hide syntenic regions\n        _d2.default.selectAll(ideo.selector + ' .syntenicRegion').style('display', 'none');\n      });\n\n      // Append new chromosome labels\n      var labels = this.getChromosomeLabels(chrElement);\n\n      _d2.default.select(this._ideo.getSvg()).append('g').attr('class', 'tmp').selectAll('text').data(this.getChromosomeLabels(chrElement)).enter().append('text').attr('class', function (d, i) {\n        return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n      }).attr('x', 0).attr('y', yOffset + self._config.chrWidth * scaleX / 2 * 1.15).style('opacity', 0).text(String).transition().style('opacity', 1);\n    }\n  }, {\n    key: 'rotateBack',\n    value: function rotateBack(setNumber, chrNumber, chrElement, callback) {\n      var ideo = this._ideo;\n\n      // Get intial transformation string for chromosome set\n      var translate = this.getChromosomeSetTranslate(setNumber);\n\n      // Run rotation procedure\n      _d2.default.select(chrElement.parentNode).transition().attr('transform', translate).on('end', function () {\n        // Run callback fnuction if provided\n        callback();\n\n        // Show syntenic regions\n        _d2.default.selectAll(ideo.select + ' .syntenicRegion').style('display', null);\n\n        // Reset changed attributes to original state\n        _d2.default.select(chrElement.parentNode).selectAll('g.bandLabel text').attr('transform', null).attr('text-anchor', setNumber ? null : 'end');\n      });\n\n      _d2.default.selectAll(ideo.selector + ' g.tmp').style('opacity', 0).remove();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight() {\n      return this._config.chrHeight + this._margin.left * 1.5;\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return '97%';\n    }\n  }, {\n    key: 'getChromosomeBandTickY1',\n    value: function getChromosomeBandTickY1(chrNumber) {\n      return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n    }\n  }, {\n    key: 'getChromosomeBandTickY2',\n    value: function getChromosomeBandTickY2(chrNumber) {\n      var width = this._config.chrWidth;\n      return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n    }\n  }, {\n    key: 'getChromosomeBandLabelAnchor',\n    value: function getChromosomeBandLabelAnchor(chrNumber) {\n      return chrNumber % 2 ? null : 'end';\n    }\n  }, {\n    key: 'getChromosomeBandLabelTranslate',\n    value: function getChromosomeBandLabelTranslate(band, chrNumber) {\n      var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n      var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n      return {\n        x: y,\n        y: y,\n        translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n      };\n    }\n  }, {\n    key: 'getChromosomeLabelXPosition',\n    value: function getChromosomeLabelXPosition() {\n      return -this._tickSize;\n    }\n  }, {\n    key: 'getChromosomeSetLabelXPosition',\n    value: function getChromosomeSetLabelXPosition() {\n      return this._config.chrWidth / -2;\n    }\n  }, {\n    key: 'getChromosomeSetLabelTranslate',\n    value: function getChromosomeSetLabelTranslate() {\n      return 'rotate(-90)';\n    }\n  }, {\n    key: 'getChromosomeSetTranslate',\n    value: function getChromosomeSetTranslate(setNumber) {\n      var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n      return 'rotate(90) ' + 'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')';\n    }\n  }, {\n    key: 'getChromosomeSetYTranslate',\n    value: function getChromosomeSetYTranslate(setNumber) {\n      return 200 * (setNumber + 1);\n    }\n  }]);\n\n  return PairedLayout;\n}(Layout);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SmallLayout = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SmallLayout = exports.SmallLayout = function (_Layout) {\n  _inherits(SmallLayout, _Layout);\n\n  function SmallLayout(config, ideo) {\n    _classCallCheck(this, SmallLayout);\n\n    var _this = _possibleConstructorReturn(this, (SmallLayout.__proto__ || Object.getPrototypeOf(SmallLayout)).call(this, config, ideo));\n\n    _this._class = 'SmallLayout';\n\n    _this._margin = {\n      left: 36.5,\n      top: 10\n    };\n    return _this;\n  }\n\n  _createClass(SmallLayout, [{\n    key: 'rotateForward',\n    value: function rotateForward(setNumber, chrNumber, chrElement, callback) {\n      var ideoBox = _d2.default.select(this._ideo.selector).node().getBoundingClientRect();\n      var chrBox = chrElement.getBoundingClientRect();\n\n      var scaleX = ideoBox.width / chrBox.height * 0.97;\n      var scaleY = this._getYScale();\n\n      transform = 'translate(5, 25) scale(' + scaleX + ', ' + scaleY + ')';\n\n      _d2.default.select(chrElement.parentNode).transition().attr('transform', transform).on('end', callback);\n    }\n  }, {\n    key: 'rotateBack',\n    value: function rotateBack(setNumber, chrNumber, chrElement, callback) {\n      var translate = this.getChromosomeSetTranslate(setNumber);\n\n      _d2.default.select(chrElement.parentNode).transition().attr('transform', translate).on('end', callback);\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight() {\n      var chrHeight = this._config.chrHeight;\n      return this._config.rows * (chrHeight + this._margin.top * 1.5);\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return '97%';\n    }\n  }, {\n    key: 'getChromosomeBandLabelTranslate',\n    value: function getChromosomeBandLabelTranslate() {}\n  }, {\n    key: 'getChromosomeSetLabelTranslate',\n    value: function getChromosomeSetLabelTranslate() {\n      return 'rotate(-90)';\n    }\n  }, {\n    key: 'getChromosomeSetTranslate',\n    value: function getChromosomeSetTranslate(setNumber) {\n      // Get organisms id list\n      var organisms = [];\n      this._ideo.getTaxids(function (taxIdList) {\n        organisms = taxIdList;\n      });\n      // Get first organism chromosomes amount\n      var size = this._ideo.config.chromosomes[organisms[0]].length;\n      // Amount of chromosomes per number\n      var rowSize = size / this._config.rows;\n\n      var xOffset;\n      var yOffset;\n\n      if (setNumber > rowSize - 1) {\n        xOffset = this._margin.left + this._config.chrHeight * 1.4;\n        yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n      } else {\n        xOffset = this._margin.left;\n        yOffset = this.getChromosomeSetYTranslate(setNumber);\n      }\n\n      return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n    }\n  }, {\n    key: 'getChromosomeSetYTranslate',\n    value: function getChromosomeSetYTranslate(setNumber) {\n      // Get additional padding caused by annotation tracks\n      var additionalPadding = this._getAdditionalOffset();\n      // If no detailed description provided just use one formula for all cases\n      return this._margin.left * setNumber + this._config.chrWidth + additionalPadding * 2 + additionalPadding * setNumber;\n    }\n  }, {\n    key: 'getChromosomeSetLabelXPosition',\n    value: function getChromosomeSetLabelXPosition(setNumber) {\n      return (this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2 + (this._config.ploidy > 1 ? 0 : this._config.chrWidth);\n    }\n  }, {\n    key: 'getChromosomeLabelXPosition',\n    value: function getChromosomeLabelXPosition() {\n      return this._config.chrWidth / -2;\n    }\n  }]);\n\n  return SmallLayout;\n}(Layout);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Ploidy = exports.Ploidy = function () {\n  function Ploidy(config) {\n    _classCallCheck(this, Ploidy);\n\n    this._config = config;\n    this._description = this._normalize(this._config.ploidyDesc);\n  }\n\n  // Get number of chromosomes in a chromosome set\n\n\n  _createClass(Ploidy, [{\n    key: 'getChromosomesNumber',\n    value: function getChromosomesNumber(setNumber) {\n      if (this._config.ploidyDesc) {\n        var chrSetCode = this._config.ploidyDesc[setNumber];\n        if (chrSetCode instanceof Object) {\n          return Object.keys(chrSetCode)[0].length;\n        } else {\n          return chrSetCode.length;\n        }\n      } else {\n        return this._config.ploidy || 1;\n      }\n    }\n\n    // Normalize use defined description\n\n  }, {\n    key: '_normalize',\n    value: function _normalize(description) {\n      var normalized, key, descValue;\n\n      // Return the same if no description provided\n      if (!description) {\n        return description;\n      }\n\n      // Array of normalized description objects\n      normalized = [];\n\n      // Loop through description and normalize\n      for (key in description) {\n        descValue = description[key];\n        if (typeof descValue === 'string') {\n          if (this._config.orientation === 'vertical') {\n            descValue = descValue.split('').reverse();\n          }\n          normalized.push({\n            ancestors: descValue,\n            existence: this._getexistenceArray(descValue.length)\n          });\n        } else {\n          normalized.push({\n            ancestors: Object.keys(descValue)[0],\n            existence: descValue[Object.keys(descValue)[0]]\n          });\n        }\n      }\n\n      return normalized;\n    }\n\n    // Get array filled by '11' elements\n\n  }, {\n    key: '_getexistenceArray',\n    value: function _getexistenceArray(length) {\n      var array = [];\n\n      for (var i = 0; i < length; i++) {\n        array.push('11');\n      }\n\n      return array;\n    }\n  }, {\n    key: 'getSetSize',\n    value: function getSetSize(chrSetNumber) {\n      if (this._description) {\n        return this._description[chrSetNumber].ancestors.length;\n      } else {\n        return 1;\n      }\n    }\n\n    // Get ancestor letter\n\n  }, {\n    key: 'getAncestor',\n    value: function getAncestor(chrSetNumber, chrNumber) {\n      if (this._description) {\n        return this._description[chrSetNumber].ancestors[chrNumber];\n      } else {\n        return '';\n      }\n    }\n\n    // Check if chromosome's arm should be rendered.\n    // If no description was provided, method returns true and\n    // something another depending on user provided description.\n\n  }, {\n    key: 'exists',\n    value: function exists(chrSetNumber, chrNumber, armNumber) {\n      if (this._description) {\n        var desc = this._description[chrSetNumber].existence[chrNumber][armNumber];\n        return Number(desc) > 0;\n      } else {\n        return true;\n      }\n    }\n  }]);\n\n  return Ploidy;\n}();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Color = exports.Color = function () {\n  function Color(config) {\n    _classCallCheck(this, Color);\n\n    // Ideogram config\n    this._config = config;\n    this._ploidy = new Ploidy(this._config);\n  }\n\n  _createClass(Color, [{\n    key: 'getArmColor',\n    value: function getArmColor(chrSetNumber, chrNumber, armNumber) {\n      if (this._config.armColors) {\n        return this._config.armColors[armNumber];\n      } else if (this._config.ancestors) {\n        return this._getPolyploidArmColor(chrSetNumber, chrNumber, armNumber);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'getBorderColor',\n    value: function getBorderColor(chrSetNumber, chrNumber, armNumber) {\n      if (chrNumber < this._config.ploidy) {\n        return '#000';\n      } else if (this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n        return '#000';\n      } else {\n        return '#fff';\n      }\n    }\n  }, {\n    key: '_getPolyploidArmColor',\n    value: function _getPolyploidArmColor(chrSetNumber, chrNumber, armNumber) {\n      if (!this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n        return 'transparent';\n      } else {\n        var ancestor = this._ploidy.getAncestor(chrSetNumber, chrNumber, armNumber);\n        return this._config.ancestors[ancestor];\n      }\n    }\n  }]);\n\n  return Color;\n}();","'use strict';\n\nfunction Chromosome(adapter, config, ideo) {\n  this._adapter = adapter;\n  this._model = this._adapter.getModel();\n  this._config = config;\n  this._ideo = ideo;\n  this._color = new Color(this._config);\n  this._bumpCoefficient = 5;\n}\n\n// Factory method\nChromosome.getInstance = function (adapter, config, ideo) {\n  if (adapter.getModel().centromerePosition === 'telocentric') {\n    return new TelocentricChromosome(adapter, config, ideo);\n  } else {\n    return new MetacentricChromosome(adapter, config, ideo);\n  }\n};\n\nChromosome.prototype._addPArmShape = function (clipPath, isPArmRendered) {\n  if (isPArmRendered) {\n    return clipPath.concat(this._getPArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype._addQArmShape = function (clipPath, isQArmRendered) {\n  if (isQArmRendered) {\n    return clipPath.concat(this._getQArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype.render = function (container, chrSetNumber, chrNumber) {\n  // Append bands container and apply clip-path on it\n\n  var self = this;\n\n  container = container.append('g').attr('class', 'bands').attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n  // Render chromosome arms\n  var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n  var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n  // Render range set\n  this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n  // Push arms shape string into clipPath array\n  var clipPath = [];\n  clipPath = this._addPArmShape(clipPath, isPArmRendered);\n  clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n  var opacity = '0';\n  var fill = '';\n  var isFullyBanded = this.isFullyBanded();\n  if ('ancestors' in this._ideo.config && !('rangeSet' in this._ideo.config)) {\n    // E.g. diploid human genome (with translucent overlay)\n    fill = self._color.getArmColor(chrSetNumber, chrNumber, 0);\n    if (isFullyBanded) {\n      opacity = '0.5';\n    }\n  } else if (isFullyBanded) {\n    // E.g. mouse reference genome\n    opacity = null;\n    fill = 'transparent';\n  } else if (!('ancestors' in this._ideo.config)) {\n    // E.g. chimpanzee assembly Pan_tro 3.0\n    opacity = '1';\n  }\n\n  // Render chromosome border\n  container.append('g').attr('class', 'chromosome-border').selectAll('path').data(clipPath).enter().append('path').attr('fill', fill).style('fill-opacity', opacity).attr('stroke', function (d, i) {\n    return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n  }).attr('stroke-width', function (d) {\n    return 'strokeWidth' in d ? d.strokeWidth : 1;\n  }).attr('d', function (d) {\n    return d.path;\n  }).attr('class', function (d) {\n    return d.class;\n  });\n\n  return clipPath;\n};\n\nChromosome.prototype._renderRangeSet = function (container, chrSetNumber, chrNumber) {\n  if (!('rangeSet' in this._config)) {\n    return;\n  }\n\n  var rangeSet = this._config.rangeSet.filter(function (range) {\n    return range.chr - 1 === chrSetNumber;\n  }).map(function (range) {\n    return new Range(range);\n  });\n\n  var rangesContainer = container.append('g').attr('class', 'range-set');\n\n  var self = this;\n  var ideo = self._ideo;\n  var bandsXOffset = ideo._bandsXOffset;\n\n  rangesContainer.selectAll('rect.range').data(rangeSet).enter().append('rect').attr('class', 'range').attr('x', function (range) {\n    var startPx = ideo.convertBpToPx(self._model, range.getStart());\n    return startPx - bandsXOffset;\n  }).attr('y', 0).attr('width', function (range) {\n    var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n    return lengthPx - bandsXOffset;\n  }).attr('height', this._config.chrWidth).style('fill', function (range) {\n    return range.getColor(chrNumber);\n  });\n};\n\n// Get chromosome's shape main values\nChromosome.prototype._getShapeData = function () {\n  // First q band from bands sequence\n  var firstQBand;\n  for (var i = 0; i < this._model.bands.length; i++) {\n    if (this._model.bands[i].name[0] === 'q') {\n      firstQBand = this._model.bands[i];\n      break;\n    }\n  }\n\n  // Chromosome's right position\n  var lastBand = this._model.bands.length - 1;\n  var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n  // Properties description:\n  // x1 - left terminal start position\n  // x2 - centromere position\n  // x3 - right terminal end position\n  // w - chromosome width\n  // b - bump size\n  return {\n    x1: 0,\n    x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n    x3: rightTerminalPosition,\n    w: this._config.chrWidth,\n    b: this._config.chrWidth / this._bumpCoefficient\n  };\n};\n\nChromosome.prototype._getPArmShape = function () {\n  var d = this._getShapeData(),\n      x = d.x2 - d.b;\n\n  if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n    // Encountered when chromosome has any of:\n    //  - One placeholder \"band\", e.g. pig genome GCF_000003025.5\n    //  - Many (> 2) bands, e.g. human reference genome\n    //  - Ancestor colors in ploidy configuration, as in ploidy_basic.html\n    return {\n      class: '',\n      path: 'M' + d.b + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x2 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + d.b + ',' + d.w + ' ' + 'Q-' + d.b + ',' + d.w / 2 + ',' + d.b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      class: '',\n      path: 'M' + d.b + ',0 ' + 'L' + (x - 2) + ',0 ' + 'L' + (x - 2) + ',' + d.w + ' ' + 'L' + d.b + ',' + d.w + ' ' + 'Q-' + d.b + ',' + d.w / 2 + ',' + d.b + ',0'\n    }, {\n      class: 'acen',\n      path: 'M' + x + ',0 ' + 'Q' + (d.x2 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + x + ',' + d.w + ' ' + 'L' + (x - 2) + ',' + d.w + ' ' + 'L' + (x - 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype._getQArmShape = function () {\n  var d = this._getShapeData(),\n      x = d.x3 - d.b,\n      x2b = d.x2 + d.b;\n\n  if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n    return {\n      class: '',\n      path: 'M' + x2b + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x3 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + x2b + ',' + d.w + ' ' + 'Q' + (d.x2 - d.b) + ',' + d.w / 2 + ',' + x2b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      path: 'M' + x2b + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x3 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + x2b + ',' + d.w + ' ' + 'L' + x2b + ',0'\n    }, {\n      class: 'acen',\n      path: 'M' + x2b + ',0' + 'Q' + (d.x2 - d.b) + ',' + d.w / 2 + ',' + x2b + ',' + d.w + ' ' + 'L' + x2b + ',' + d.w + 'L' + (x2b + 2) + ',' + d.w + 'L' + (x2b + 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype.isFullyBanded = function () {\n  return this._model.bands && (this._model.bands.length !== 2 || this._model.bands[0].name[0] === 'q');\n};\n\n// Render arm bands\nChromosome.prototype._renderBands = function (container, chrSetNumber, chrNumber, bands, arm) {\n  var self = this;\n  var armNumber = arm === 'p' ? 0 : 1;\n  var fill = '';\n  if ('ancestors' in this._ideo.config && !this.isFullyBanded()) {\n    fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n  }\n\n  container.selectAll(\"path.band.\" + arm).data(bands).enter().append(\"path\").attr(\"id\", function (d) {\n    return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n  }).attr(\"class\", function (d) {\n    return 'band ' + arm + '-band ' + d.stain;\n  }).attr(\"d\", function (d) {\n    var start = self._ideo.round(d.px.start);\n    var length = self._ideo.round(d.px.width);\n\n    x = start + length;\n\n    return \"M \" + start + \", 0\" + \"l \" + length + \" 0 \" + \"l 0 \" + self._config.chrWidth + \" \" + \"l -\" + length + \" 0 z\";\n  }).style('fill', fill);\n};\n\n// Render chromosome's p arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderPArm = function (container, chrSetNumber, chrNumber) {\n  var bands = this._model.bands.filter(function (band) {\n    return band.name[0] === 'p';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n  return Boolean(bands.length);\n};\n\n// Render chromosome's q arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderQArm = function (container, chrSetNumber, chrNumber) {\n  var bands = this._model.bands.filter(function (band) {\n    return band.name[0] === 'q';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n  return Boolean(bands.length);\n};","'use strict';\n\nfunction TelocentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'TelocentricChromosome';\n  this._pArmOffset = 3;\n}\n\nTelocentricChromosome.prototype = Object.create(Chromosome.prototype);\n\nTelocentricChromosome.prototype._addPArmShape = function (clipPath) {\n  return clipPath.concat(this._getPArmShape());\n};\n\nTelocentricChromosome.prototype._getPArmShape = function () {\n  var d = this._getShapeData();\n  d.o = this._pArmOffset;\n\n  return [{\n    class: 'acen',\n    path: 'M' + (d.x2 + 2) + ',1' + 'L' + (d.x2 + d.o + 3.25) + ',1 ' + 'L' + (d.x2 + d.o + 3.25) + ',' + (d.w - 1) + ' ' + 'L' + (d.x2 + 2) + ',' + (d.w - 1)\n  }, {\n    class: 'gpos66',\n    path: 'M' + (d.x2 - d.o + 5) + ',0' + 'L' + (d.x2 - d.o + 3) + ',0 ' + 'L' + (d.x2 - d.o + 3) + ',' + d.w + ' ' + 'L' + (d.x2 - d.o + 5) + ',' + d.w,\n    strokeWidth: 0.5\n  }];\n};\n\nTelocentricChromosome.prototype._getQArmShape = function () {\n  var d = this._getShapeData(),\n      x = d.x3 - d.b,\n      o = this._pArmOffset + 3;\n\n  return {\n    class: '',\n    path: 'M' + (d.x2 + o) + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x3 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + (d.x2 + o) + ',' + d.w\n  };\n};","'use strict';\n\nfunction MetacentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'MetacentricChromosome';\n}\n\nMetacentricChromosome.prototype = Object.create(Chromosome.prototype);","\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n// https://github.com/stefanpenner/es6-promise\n(function () {\n  \"use strict\";\n  function t(t) {\n    return \"function\" == typeof t || \"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t)) && null !== t;\n  }function e(t) {\n    return \"function\" == typeof t;\n  }function n(t) {\n    G = t;\n  }function r(t) {\n    Q = t;\n  }function o() {\n    return function () {\n      process.nextTick(a);\n    };\n  }function i() {\n    return function () {\n      B(a);\n    };\n  }function s() {\n    var t = 0,\n        e = new X(a),\n        n = document.createTextNode(\"\");return e.observe(n, { characterData: !0 }), function () {\n      n.data = t = ++t % 2;\n    };\n  }function u() {\n    var t = new MessageChannel();return t.port1.onmessage = a, function () {\n      t.port2.postMessage(0);\n    };\n  }function c() {\n    return function () {\n      setTimeout(a, 1);\n    };\n  }function a() {\n    for (var t = 0; J > t; t += 2) {\n      var e = tt[t],\n          n = tt[t + 1];e(n), tt[t] = void 0, tt[t + 1] = void 0;\n    }J = 0;\n  }function f() {\n    try {\n      var t = require,\n          e = t(\"vertx\");return B = e.runOnLoop || e.runOnContext, i();\n    } catch (n) {\n      return c();\n    }\n  }function l(t, e) {\n    var n = this,\n        r = new this.constructor(p);void 0 === r[rt] && k(r);var o = n._state;if (o) {\n      var i = arguments[o - 1];Q(function () {\n        x(o, r, i, n._result);\n      });\n    } else E(n, r, t, e);return r;\n  }function h(t) {\n    var e = this;if (t && \"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t)) && t.constructor === e) return t;var n = new e(p);return g(n, t), n;\n  }function p() {}function _() {\n    return new TypeError(\"You cannot resolve a promise with itself\");\n  }function d() {\n    return new TypeError(\"A promises callback cannot return that same promise.\");\n  }function v(t) {\n    try {\n      return t.then;\n    } catch (e) {\n      return ut.error = e, ut;\n    }\n  }function y(t, e, n, r) {\n    try {\n      t.call(e, n, r);\n    } catch (o) {\n      return o;\n    }\n  }function m(t, e, n) {\n    Q(function (t) {\n      var r = !1,\n          o = y(n, e, function (n) {\n        r || (r = !0, e !== n ? g(t, n) : S(t, n));\n      }, function (e) {\n        r || (r = !0, j(t, e));\n      }, \"Settle: \" + (t._label || \" unknown promise\"));!r && o && (r = !0, j(t, o));\n    }, t);\n  }function b(t, e) {\n    e._state === it ? S(t, e._result) : e._state === st ? j(t, e._result) : E(e, void 0, function (e) {\n      g(t, e);\n    }, function (e) {\n      j(t, e);\n    });\n  }function w(t, n, r) {\n    n.constructor === t.constructor && r === et && constructor.resolve === nt ? b(t, n) : r === ut ? j(t, ut.error) : void 0 === r ? S(t, n) : e(r) ? m(t, n, r) : S(t, n);\n  }function g(e, n) {\n    e === n ? j(e, _()) : t(n) ? w(e, n, v(n)) : S(e, n);\n  }function A(t) {\n    t._onerror && t._onerror(t._result), T(t);\n  }function S(t, e) {\n    t._state === ot && (t._result = e, t._state = it, 0 !== t._subscribers.length && Q(T, t));\n  }function j(t, e) {\n    t._state === ot && (t._state = st, t._result = e, Q(A, t));\n  }function E(t, e, n, r) {\n    var o = t._subscribers,\n        i = o.length;t._onerror = null, o[i] = e, o[i + it] = n, o[i + st] = r, 0 === i && t._state && Q(T, t);\n  }function T(t) {\n    var e = t._subscribers,\n        n = t._state;if (0 !== e.length) {\n      for (var r, o, i = t._result, s = 0; s < e.length; s += 3) {\n        r = e[s], o = e[s + n], r ? x(n, r, o, i) : o(i);\n      }t._subscribers.length = 0;\n    }\n  }function M() {\n    this.error = null;\n  }function P(t, e) {\n    try {\n      return t(e);\n    } catch (n) {\n      return ct.error = n, ct;\n    }\n  }function x(t, n, r, o) {\n    var i,\n        s,\n        u,\n        c,\n        a = e(r);if (a) {\n      if (i = P(r, o), i === ct ? (c = !0, s = i.error, i = null) : u = !0, n === i) return void j(n, d());\n    } else i = o, u = !0;n._state !== ot || (a && u ? g(n, i) : c ? j(n, s) : t === it ? S(n, i) : t === st && j(n, i));\n  }function C(t, e) {\n    try {\n      e(function (e) {\n        g(t, e);\n      }, function (e) {\n        j(t, e);\n      });\n    } catch (n) {\n      j(t, n);\n    }\n  }function O() {\n    return at++;\n  }function k(t) {\n    t[rt] = at++, t._state = void 0, t._result = void 0, t._subscribers = [];\n  }function Y(t) {\n    return new _t(this, t).promise;\n  }function q(t) {\n    var e = this;return new e(I(t) ? function (n, r) {\n      for (var o = t.length, i = 0; o > i; i++) {\n        e.resolve(t[i]).then(n, r);\n      }\n    } : function (t, e) {\n      e(new TypeError(\"You must pass an array to race.\"));\n    });\n  }function F(t) {\n    var e = this,\n        n = new e(p);return j(n, t), n;\n  }function D() {\n    throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\");\n  }function K() {\n    throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n  }function L(t) {\n    this[rt] = O(), this._result = this._state = void 0, this._subscribers = [], p !== t && (\"function\" != typeof t && D(), this instanceof L ? C(this, t) : K());\n  }function N(t, e) {\n    this._instanceConstructor = t, this.promise = new t(p), this.promise[rt] || k(this.promise), I(e) ? (this._input = e, this.length = e.length, this._remaining = e.length, this._result = new Array(this.length), 0 === this.length ? S(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(), 0 === this._remaining && S(this.promise, this._result))) : j(this.promise, U());\n  }function U() {\n    return new Error(\"Array Methods must be provided an Array\");\n  }function W() {\n    var t;if (\"undefined\" != typeof global) t = global;else if (\"undefined\" != typeof self) t = self;else try {\n      t = Function(\"return this\")();\n    } catch (e) {\n      throw new Error(\"polyfill failed because global object is unavailable in this environment\");\n    }var n = t.Promise;(!n || \"[object Promise]\" !== Object.prototype.toString.call(n.resolve()) || n.cast) && (t.Promise = pt);\n  }var z;z = Array.isArray ? Array.isArray : function (t) {\n    return \"[object Array]\" === Object.prototype.toString.call(t);\n  };var B,\n      G,\n      H,\n      I = z,\n      J = 0,\n      Q = function Q(t, e) {\n    tt[J] = t, tt[J + 1] = e, J += 2, 2 === J && (G ? G(a) : H());\n  },\n      R = \"undefined\" != typeof window ? window : void 0,\n      V = R || {},\n      X = V.MutationObserver || V.WebKitMutationObserver,\n      Z = \"undefined\" == typeof self && \"undefined\" != typeof process && \"[object process]\" === {}.toString.call(process),\n      $ = \"undefined\" != typeof Uint8ClampedArray && \"undefined\" != typeof importScripts && \"undefined\" != typeof MessageChannel,\n      tt = new Array(1e3);H = Z ? o() : X ? s() : $ ? u() : void 0 === R && \"function\" == typeof require ? f() : c();var et = l,\n      nt = h,\n      rt = Math.random().toString(36).substring(16),\n      ot = void 0,\n      it = 1,\n      st = 2,\n      ut = new M(),\n      ct = new M(),\n      at = 0,\n      ft = Y,\n      lt = q,\n      ht = F,\n      pt = L;L.all = ft, L.race = lt, L.resolve = nt, L.reject = ht, L._setScheduler = n, L._setAsap = r, L._asap = Q, L.prototype = { constructor: L, then: et, \"catch\": function _catch(t) {\n      return this.then(null, t);\n    } };var _t = N;N.prototype._enumerate = function () {\n    for (var t = this.length, e = this._input, n = 0; this._state === ot && t > n; n++) {\n      this._eachEntry(e[n], n);\n    }\n  }, N.prototype._eachEntry = function (t, e) {\n    var n = this._instanceConstructor,\n        r = n.resolve;if (r === nt) {\n      var o = v(t);if (o === et && t._state !== ot) this._settledAt(t._state, e, t._result);else if (\"function\" != typeof o) this._remaining--, this._result[e] = t;else if (n === pt) {\n        var i = new n(p);w(i, t, o), this._willSettleAt(i, e);\n      } else this._willSettleAt(new n(function (e) {\n        e(t);\n      }), e);\n    } else this._willSettleAt(r(t), e);\n  }, N.prototype._settledAt = function (t, e, n) {\n    var r = this.promise;r._state === ot && (this._remaining--, t === st ? j(r, n) : this._result[e] = n), 0 === this._remaining && S(r, this._result);\n  }, N.prototype._willSettleAt = function (t, e) {\n    var n = this;E(t, void 0, function (t) {\n      n._settledAt(it, e, t);\n    }, function (t) {\n      n._settledAt(st, e, t);\n    });\n  };var dt = W,\n      vt = { Promise: pt, polyfill: dt };\"function\" == typeof define && define.amd ? define(function () {\n    return vt;\n  }) : \"undefined\" != typeof module && module.exports ? module.exports = vt : \"undefined\" != typeof this && (this.ES6Promise = vt), dt();\n}).call(undefined);\n\n// https://github.com/kristw/d3.promise\n!function (a, b) {\n  \"function\" == typeof define && define.amd ? define([\"d3\"], b) : \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) ? module.exports = b(require(\"d3\")) : a.d3.promise = b(a.d3);\n}(undefined, function (a) {\n  var b = function () {\n    function b(a, b) {\n      return function () {\n        var c = Array.prototype.slice.call(arguments);return new Promise(function (d, e) {\n          var f = function f(a, b) {\n            return a ? void e(Error(a)) : void d(b);\n          };b.apply(a, c.concat(f));\n        });\n      };\n    }var c = {};return [\"csv\", \"tsv\", \"json\", \"xml\", \"text\", \"html\", \"get\"].forEach(function (d) {\n      c[d] = b(a, a[d]);\n    }), c;\n  }();return a.promise = b, b;\n});\n\n// https://github.com/overset/javascript-natural-sort\nfunction naturalSort(a, b) {\n  var q,\n      r,\n      c = /(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,\n      d = /^\\s+|\\s+$/g,\n      e = /\\s+/g,\n      f = /(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,\n      g = /^0x[0-9a-f]+$/i,\n      h = /^0/,\n      i = function i(a) {\n    return (naturalSort.insensitive && (\"\" + a).toLowerCase() || \"\" + a).replace(d, \"\");\n  },\n      j = i(a),\n      k = i(b),\n      l = j.replace(c, \"\\0$1\\0\").replace(/\\0$/, \"\").replace(/^\\0/, \"\").split(\"\\0\"),\n      m = k.replace(c, \"\\0$1\\0\").replace(/\\0$/, \"\").replace(/^\\0/, \"\").split(\"\\0\"),\n      n = parseInt(j.match(g), 16) || 1 !== l.length && Date.parse(j),\n      o = parseInt(k.match(g), 16) || n && k.match(f) && Date.parse(k) || null,\n      p = function p(a, b) {\n    return (!a.match(h) || 1 == b) && parseFloat(a) || a.replace(e, \" \").replace(d, \"\") || 0;\n  };if (o) {\n    if (n < o) return -1;if (n > o) return 1;\n  }for (var s = 0, t = l.length, u = m.length, v = Math.max(t, u); s < v; s++) {\n    if (q = p(l[s] || \"\", t), r = p(m[s] || \"\", u), isNaN(q) !== isNaN(r)) return isNaN(q) ? 1 : -1;if (/[^\\x00-\\x80]/.test(q + r) && q.localeCompare) {\n      var w = q.localeCompare(r);return w / Math.abs(w);\n    }if (q < r) return -1;if (q > r) return 1;\n  }\n}\n\n// e.g. \"Homo sapiens\" -> \"homo-sapiens\"\nfunction slugify(value) {\n  return value.toLowerCase().replace(' ', '-');\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Ideogram = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // Developed by Eric Weitz (https://github.com/eweitz)\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Ideogram = exports.Ideogram = function () {\n  function Ideogram(config) {\n    _classCallCheck(this, Ideogram);\n\n    var orientation, chrWidth, chrHeight, container, rect;\n\n    // Clone the config object, to allow multiple instantiations\n    // without picking up prior ideogram's settings\n    this.config = JSON.parse(JSON.stringify(config));\n\n    // TODO: Document this\n    this._bandsXOffset = 30;\n\n    this.debug = false;\n\n    if (!this.config.dataDir) {\n      this.config.dataDir = '../data/bands/native/';\n    }\n\n    if (!this.config.ploidy) {\n      this.config.ploidy = 1;\n    }\n\n    if (this.config.ploidy > 1) {\n      this.sexChromosomes = {};\n      if (!this.config.sex) {\n        // Default to 'male' per human, mouse reference genomes.\n        // TODO: The default sex value should probably be the heterogametic sex,\n        // i.e. whichever sex has allosomes that differ in morphology.\n        // In mammals and most insects that is the male.\n        // However, in birds and reptiles, that is female.\n        this.config.sex = 'male';\n      }\n      if (this.config.ploidy === 2 && !this.config.ancestors) {\n        this.config.ancestors = { M: '#ffb6c1', P: '#add8e6' };\n        this.config.ploidyDesc = 'MP';\n      }\n    }\n\n    if (!this.config.container) {\n      this.config.container = 'body';\n    }\n\n    this.selector = this.config.container + ' #_ideogram';\n\n    if (!this.config.resolution) {\n      this.config.resolution = 850;\n    }\n\n    if ('showChromosomeLabels' in this.config === false) {\n      this.config.showChromosomeLabels = true;\n    }\n\n    if (!this.config.orientation) {\n      orientation = 'vertical';\n      this.config.orientation = orientation;\n    }\n\n    if (!this.config.chrHeight) {\n      container = this.config.container;\n      rect = document.querySelector(container).getBoundingClientRect();\n\n      if (orientation === 'vertical') {\n        chrHeight = rect.height;\n      } else {\n        chrHeight = rect.width;\n      }\n\n      if (container === 'body') {\n        chrHeight = 400;\n      }\n      this.config.chrHeight = chrHeight;\n    }\n\n    if (!this.config.chrWidth) {\n      chrWidth = 10;\n      chrHeight = this.config.chrHeight;\n\n      if (chrHeight < 900 && chrHeight > 500) {\n        chrWidth = Math.round(chrHeight / 40);\n      } else if (chrHeight >= 900) {\n        chrWidth = Math.round(chrHeight / 45);\n      }\n      this.config.chrWidth = chrWidth;\n    }\n\n    if (!this.config.chrMargin) {\n      if (this.config.ploidy === 1) {\n        this.config.chrMargin = 10;\n      } else {\n        // Defaults polyploid chromosomes to relatively small interchromatid gap\n        this.config.chrMargin = Math.round(this.config.chrWidth / 4);\n      }\n    }\n\n    if (!this.config.showBandLabels) {\n      this.config.showBandLabels = false;\n    }\n\n    if ('showFullyBanded' in this.config) {\n      this.config.showFullyBanded = this.config.showFullyBanded;\n    } else {\n      this.config.showFullyBanded = true;\n    }\n\n    if (!this.config.brush) {\n      this.config.brush = false;\n    }\n\n    if (!this.config.rows) {\n      this.config.rows = 1;\n    }\n\n    this.bump = Math.round(this.config.chrHeight / 125);\n    this.adjustedBump = false;\n    if (this.config.chrHeight < 200) {\n      this.adjustedBump = true;\n      this.bump = 4;\n    }\n\n    if (config.showBandLabels) {\n      this.config.chrMargin += 20;\n    }\n\n    if (config.chromosome) {\n      this.config.chromosomes = [config.chromosome];\n      if ('showBandLabels' in config === false) {\n        this.config.showBandLabels = true;\n      }\n      if ('rotatable' in config === false) {\n        this.config.rotatable = false;\n      }\n    }\n\n    if (!this.config.showNonNuclearChromosomes) {\n      this.config.showNonNuclearChromosomes = false;\n    }\n\n    this.initAnnotSettings();\n\n    this.config.chrMargin = this.config.chrMargin + this.config.chrWidth + this.config.annotTracksHeight * 2;\n\n    if (config.onLoad) {\n      this.onLoadCallback = config.onLoad;\n    }\n\n    if (config.onDrawAnnots) {\n      this.onDrawAnnotsCallback = config.onDrawAnnots;\n    }\n\n    if (config.onBrushMove) {\n      this.onBrushMoveCallback = config.onBrushMove;\n    }\n\n    this.coordinateSystem = 'iscn';\n\n    this.maxLength = {\n      bp: 0,\n      iscn: 0\n    };\n\n    // The E-Utilies In Depth: Parameters, Syntax and More:\n    // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n    this.eutils = 'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/';\n    this.esearch = this.eutils + 'esearch.fcgi?retmode=json';\n    this.esummary = this.eutils + 'esummary.fcgi?retmode=json';\n    this.elink = this.eutils + 'elink.fcgi?retmode=json';\n\n    this.organisms = {\n      9606: {\n        commonName: 'Human',\n        scientificName: 'Homo sapiens',\n        scientificNameAbbr: 'H. sapiens',\n        assemblies: {\n          default: 'GCF_000001405.26', // GRCh38\n          GRCh38: 'GCF_000001405.26',\n          GRCh37: 'GCF_000001405.13'\n        }\n      },\n      10090: {\n        commonName: 'Mouse',\n        scientificName: 'Mus musculus',\n        scientificNameAbbr: 'M. musculus',\n        assemblies: {\n          default: 'GCF_000001635.20'\n        }\n      },\n      4641: {\n        commonName: 'banana',\n        scientificName: 'Musa acuminata',\n        scientificNameAbbr: 'M. acuminata',\n        assemblies: {\n          default: 'mock'\n        }\n      }\n    };\n\n    // A flat array of chromosomes\n    // (this.chromosomes is an object of\n    // arrays of chromosomes, keyed by organism)\n    this.chromosomesArray = [];\n\n    this.bandsToShow = [];\n\n    this.chromosomes = {};\n    this.numChromosomes = 0;\n    this.bandData = {};\n\n    this.init();\n  }\n\n  /**\n  * Gets chromosome band data from a\n  * TSV file, or, if band data is prefetched, from an array\n  *\n  * UCSC: #chrom chromStart  chromEnd  name  gieStain\n  * http://genome.ucsc.edu/cgi-bin/hgTables\n  *  - group: Mapping and Sequencing\n  *  - track: Chromosome Band (Ideogram)\n  *\n  * NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n  * ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n  */\n\n\n  _createClass(Ideogram, [{\n    key: 'getBands',\n    value: function getBands(content, taxid, chromosomes) {\n      var lines = {},\n          delimiter,\n          tsvLines,\n          columns,\n          line,\n          stain,\n          chr,\n          i,\n          init,\n          tsvLinesLength,\n          source,\n          start,\n          stop,\n          firstColumn,\n          tmp;\n\n      if (content.slice(0, 8) === 'chrBands') {\n        source = 'native';\n      }\n\n      if (chromosomes instanceof Array && _typeof(chromosomes[0]) === 'object') {\n        tmp = [];\n        for (i = 0; i < chromosomes.length; i++) {\n          tmp.push(chromosomes[i].name);\n        }\n        chromosomes = tmp;\n      }\n\n      if (typeof chrBands === 'undefined' && source !== 'native') {\n        delimiter = /\\t/;\n        tsvLines = content.split(/\\r\\n|\\n/);\n        init = 1;\n      } else {\n        delimiter = / /;\n        if (source === 'native') {\n          tsvLines = eval(content);\n        } else {\n          tsvLines = content;\n        }\n        init = 0;\n      }\n\n      firstColumn = tsvLines[0].split(delimiter)[0];\n      if (firstColumn === '#chromosome') {\n        source = 'ncbi';\n      } else if (firstColumn === '#chrom') {\n        source = 'ucsc';\n      } else {\n        source = 'native';\n      }\n\n      tsvLinesLength = tsvLines.length;\n\n      if (source === 'ncbi' || source === 'native') {\n        for (i = init; i < tsvLinesLength; i++) {\n          columns = tsvLines[i].split(delimiter);\n\n          chr = columns[0];\n\n          if (\n          // If a specific set of chromosomes has been requested, and\n          // the current chromosome\n          typeof chromosomes !== 'undefined' && chromosomes.indexOf(chr) === -1) {\n            continue;\n          }\n\n          if (chr in lines === false) {\n            lines[chr] = [];\n          }\n\n          stain = columns[7];\n          if (columns[8]) {\n            // For e.g. acen and gvar, columns[8] (density) is undefined\n            stain += columns[8];\n          }\n\n          line = {\n            chr: chr,\n            bp: {\n              start: parseInt(columns[5], 10),\n              stop: parseInt(columns[6], 10)\n            },\n            iscn: {\n              start: parseInt(columns[3], 10),\n              stop: parseInt(columns[4], 10)\n            },\n            px: {\n              start: -1,\n              stop: -1,\n              width: -1\n            },\n            name: columns[1] + columns[2],\n            stain: stain,\n            taxid: taxid\n          };\n\n          lines[chr].push(line);\n        }\n      } else if (source === 'ucsc') {\n        for (i = init; i < tsvLinesLength; i++) {\n          // #chrom chromStart  chromEnd  name  gieStain\n          // e.g. for fly:\n          // chr4\t69508\t108296\t102A1\tn/a\n          columns = tsvLines[i].split(delimiter);\n\n          if (columns[0] !== 'chr' + chromosomeName) {\n            continue;\n          }\n\n          stain = columns[4];\n          if (stain === 'n/a') {\n            stain = 'gpos100';\n          }\n          start = parseInt(columns[1], 10);\n          stop = parseInt(columns[2], 10);\n\n          line = {\n            chr: columns[0].split('chr')[1],\n            bp: {\n              start: start,\n              stop: stop\n            },\n            iscn: {\n              start: start,\n              stop: stop\n            },\n            px: {\n              start: -1,\n              stop: -1,\n              width: -1\n            },\n            name: columns[3],\n            stain: stain,\n            taxid: taxid\n          };\n\n          lines[chr].push(line);\n        }\n      }\n\n      return lines;\n    }\n\n    /**\n    * Generates a model object for each chromosome\n    * containing information on its name, DOM ID,\n    * length in base pairs or ISCN coordinates,\n    * cytogenetic bands, centromere position, etc.\n    */\n\n  }, {\n    key: 'getChromosomeModel',\n    value: function getChromosomeModel(bands, chromosome, taxid, chrIndex) {\n      var chr = {},\n          band,\n          width,\n          pxStop,\n          chrHeight = this.config.chrHeight,\n          maxLength = this.maxLength,\n          chrLength,\n          cs,\n          hasBands;\n\n      cs = this.coordinateSystem;\n      hasBands = typeof bands !== 'undefined';\n\n      if (hasBands) {\n        chr.name = chromosome;\n        chr.length = bands[bands.length - 1][cs].stop;\n        chr.type = 'nuclear';\n      } else {\n        chr = chromosome;\n      }\n\n      chr.chrIndex = chrIndex;\n\n      chr.id = 'chr' + chr.name + '-' + taxid;\n\n      if (this.config.fullChromosomeLabels === true) {\n        var orgName = this.organisms[taxid].scientificNameAbbr;\n        chr.name = orgName + ' chr' + chr.name;\n      }\n\n      chrLength = chr.length;\n\n      pxStop = 0;\n\n      if (hasBands) {\n        for (var i = 0; i < bands.length; i++) {\n          band = bands[i];\n          var csLength = band[cs].stop - band[cs].start;\n          width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n          bands[i].px = { start: pxStop, stop: pxStop + width, width: width };\n\n          pxStop = bands[i].px.stop;\n\n          if (hasBands && band.stain === 'acen' && band.name[0] === 'p') {\n            chr.pcenIndex = i;\n          }\n        }\n      } else {\n        pxStop = chrHeight * chr.length / maxLength[cs];\n      }\n\n      chr.width = pxStop;\n\n      chr.scale = {};\n\n      // TODO:\n      //\n      // A chromosome-level scale property is likely\n      // nonsensical for any chromosomes that have cytogenetic band data.\n      // Different bands tend to have ratios between number of base pairs\n      // and physical length.\n      //\n      // However, a chromosome-level scale property is likely\n      // necessary for chromosomes that do not have band data.\n      //\n      // This needs further review.\n      if (this.config.multiorganism === true) {\n        chr.scale.bp = 1;\n        // chr.scale.bp = band.iscn.stop / band.bp.stop;\n        chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n      } else {\n        chr.scale.bp = chrHeight / maxLength.bp;\n        if (hasBands) {\n          chr.scale.iscn = chrHeight / maxLength.iscn;\n        }\n      }\n      chr.bands = bands;\n\n      chr.centromerePosition = '';\n      if (hasBands && bands[0].name[0] === 'p' && bands[1].name[0] === 'q' && bands[0].bp.stop - bands[0].bp.start < 2E6) {\n        // As with almost all mouse chromosome, chimpanzee chr22\n        chr.centromerePosition = 'telocentric';\n\n        // Remove placeholder pter band\n        chr.bands = chr.bands.slice(1);\n      }\n\n      if (hasBands && chr.bands.length === 1) {\n        // Encountered when processing an assembly that has chromosomes with\n        // centromere data, but this chromosome does not.\n        // Example: chromosome F1 in Felis catus.\n        delete chr.bands;\n      }\n\n      return chr;\n    }\n\n    /**\n    * Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n    * If ideogram configuration has 'fullChromosomeLabels: True',\n    * then labels includes name of taxon, which can help when\n    * depicting orthologs.\n    */\n\n  }, {\n    key: 'drawChromosomeLabels',\n    value: function drawChromosomeLabels() {\n      var ideo = this;\n\n      var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n      var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n      var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n      // Append chromosomes set's labels\n      _d2.default.selectAll(ideo.selector + ' .chromosome-set-container').append('text').data(ideo.chromosomesArray).attr('class', 'chromosome-set-label ' + chromosomeLabelClass).attr('transform', chrSetLabelTranslate).attr('x', chrSetLabelXPosition).attr('y', function (d, i) {\n        return ideo._layout.getChromosomeSetLabelYPosition(i);\n      }).attr('text-anchor', ideo._layout.getChromosomeSetLabelAnchor()).each(function (d, i) {\n        // Get label lines\n        var lines;\n        if (d.name.indexOf(' ') === -1) {\n          lines = [d.name];\n        } else {\n          lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n        }\n\n        if ('sex' in ideo.config && ideo.config.ploidy === 2 && i === ideo.sexChromosomes.index) {\n          if (ideo.config.sex === 'male') {\n            lines = ['XY'];\n          } else {\n            lines = ['XX'];\n          }\n        }\n\n        // Render label lines\n        _d2.default.select(this).selectAll('tspan').data(lines).enter().append('tspan').attr('dy', function (d, i) {\n          return i * -1.2 + 'em';\n        }).attr('x', ideo._layout.getChromosomeSetLabelXPosition()).attr('class', function (a, i) {\n          var fullLabels = ideo.config.fullChromosomeLabels;\n          return i === 1 && fullLabels ? 'italic' : null;\n        }).text(String);\n      });\n\n      var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n      // Append chromosomes labels\n      _d2.default.selectAll(ideo.selector + ' .chromosome-set-container').each(function (a, chrSetNumber) {\n        _d2.default.select(this).selectAll('.chromosome').append('text').attr('class', 'chrLabel').attr('transform', setLabelTranslate).attr('x', function (d, i) {\n          return ideo._layout.getChromosomeLabelXPosition(i);\n        }).attr('y', function (d, i) {\n          return ideo._layout.getChromosomeLabelYPosition(i);\n        }).text(function (d, chrNumber) {\n          return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n        }).attr('text-anchor', 'middle');\n      });\n    }\n\n    /**\n    * Draws labels and stalks for cytogenetic bands.\n    *\n    * Band labels are text like \"p11.11\".\n    * Stalks are small lines that visually connect labels to their bands.\n    */\n\n  }, {\n    key: 'drawBandLabels',\n    value: function drawBandLabels(chromosomes) {\n      var i, chr, chrs, taxid, ideo, chrModel;\n\n      ideo = this;\n\n      chrs = [];\n\n      for (taxid in chromosomes) {\n        for (chr in chromosomes[taxid]) {\n          chrs.push(chromosomes[taxid][chr]);\n        }\n      }\n\n      var textOffsets = {};\n\n      chrIndex = 0;\n      for (i = 0; i < chrs.length; i++) {\n        chrIndex += 1;\n\n        chrModel = chrs[i];\n\n        chr = _d2.default.select(ideo.selector + ' #' + chrModel.id);\n\n        // var chrMargin = this.config.chrMargin * chrIndex,\n        //   lineY1, lineY2;\n        //\n        // lineY1 = chrMargin;\n        // lineY2 = chrMargin - 8;\n        //\n        // if (\n        //   chrIndex === 1 &&\n        //   \"perspective\" in this.config && this.config.perspective === \"comparative\"\n        // ) {\n        //   lineY1 += 18;\n        //   lineY2 += 18;\n        // }\n\n        textOffsets[chrModel.id] = [];\n\n        chr.selectAll('text').data(chrModel.bands).enter().append('g').attr('class', function (d, i) {\n          return 'bandLabel bsbsl-' + i;\n        }).attr('transform', function (d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          // var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        }).append('text').attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i)).text(function (d) {\n          return d.name;\n        });\n\n        // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n        // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n        chr.selectAll('line.bandLabelStalk').data(chrModel.bands).enter().append('g').attr('class', function (d, i) {\n          return 'bandLabelStalk bsbsl-' + i;\n        }).attr('transform', function (d) {\n          var x, y;\n\n          x = ideo.round(d.px.start + d.px.width / 2);\n\n          textOffsets[chrModel.id].push(x + 13);\n          y = -10;\n\n          return 'translate(' + x + ',' + y + ')';\n        }).append('line').attr('x1', 0).attr('y1', function () {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        }).attr('x2', 0).attr('y2', function () {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n      }\n\n      for (i = 0; i < chrs.length; i++) {\n        chrModel = chrs[i];\n\n        var textsLength = textOffsets[chrModel.id].length,\n            overlappingLabelXRight,\n            index,\n            indexesToShow = [],\n            prevHiddenBoxIndex,\n            xLeft,\n            prevLabelXRight,\n            textPadding;\n\n        overlappingLabelXRight = 0;\n\n        textPadding = 5;\n\n        for (index = 0; index < textsLength; index++) {\n          // Ensures band labels don't overlap\n\n          xLeft = textOffsets[chrModel.id][index];\n\n          if (xLeft < overlappingLabelXRight + textPadding === false) {\n            indexesToShow.push(index);\n          } else {\n            prevHiddenBoxIndex = index;\n            overlappingLabelXRight = prevLabelXRight;\n            continue;\n          }\n\n          if (prevHiddenBoxIndex !== index) {\n            // This getBoundingClientRect() forces Chrome's\n            // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n            // TODO: This forced synchronous layout would be nice to eliminate.\n            // prevTextBox = texts[index].getBoundingClientRect();\n            // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n            // TODO: Account for number of characters in prevTextBoxWidth,\n            // maybe also zoom.\n            prevTextBoxLeft = textOffsets[chrModel.id][index];\n            prevTextBoxWidth = 36;\n\n            prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n          }\n\n          if (xLeft < prevLabelXRight + textPadding) {\n            prevHiddenBoxIndex = index;\n            overlappingLabelXRight = prevLabelXRight;\n          } else {\n            indexesToShow.push(index);\n          }\n        }\n\n        var selectorsToShow = [],\n            ithLength = indexesToShow.length,\n            j;\n\n        for (j = 0; j < ithLength; j++) {\n          index = indexesToShow[j];\n          selectorsToShow.push('#' + chrModel.id + ' .bsbsl-' + index);\n        }\n\n        this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n      }\n    }\n\n    // Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n\n  }, {\n    key: 'rotateChromosomeLabels',\n    value: function rotateChromosomeLabels(chr, chrIndex, orientation, scale) {\n      var chrMargin, chrWidth, ideo, x, y, numAnnotTracks, scaleSvg, tracksHeight;\n\n      chrWidth = this.config.chrWidth;\n      chrMargin = this.config.chrMargin * chrIndex;\n      numAnnotTracks = this.config.numAnnotTracks;\n\n      ideo = this;\n\n      if (typeof scale !== 'undefined' && scale.hasOwnProperty('x') && !(scale.x === 1 && scale.y === 1)) {\n        scaleSvg = 'scale(' + scale.x + ',' + scale.y + ')';\n        x = -6;\n        y = scale === '' ? -16 : -14;\n      } else {\n        x = -8;\n        y = -16;\n        scale = { x: 1, y: 1 };\n        scaleSvg = '';\n      }\n\n      if (orientation === 'vertical' || orientation === '') {\n        var ci = chrIndex - 1;\n\n        if (numAnnotTracks > 1 || orientation === '') {\n          ci -= 1;\n        }\n\n        chrMargin2 = -4;\n        if (ideo.config.showBandLabels === true) {\n          chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n        }\n\n        chrMargin = ideo.config.chrMargin * ci;\n\n        if (numAnnotTracks > 1 === false) {\n          chrMargin += 1;\n        }\n\n        y = chrMargin + chrMargin2;\n\n        chr.selectAll('text.chrLabel').attr('transform', scaleSvg).selectAll('tspan').attr('x', x).attr('y', y);\n      } else {\n        chrIndex -= 1;\n\n        chrMargin2 = -chrWidth - 2;\n        if (ideo.config.showBandLabels === true) {\n          chrMargin2 = ideo.config.chrMargin + 8;\n        }\n\n        tracksHeight = ideo.config.annotTracksHeight;\n        if (ideo.config.annotationsLayout !== 'overlay') {\n          tracksHeight *= 2;\n        }\n\n        chrMargin = ideo.config.chrMargin * chrIndex;\n        x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n        x /= scale.x;\n\n        chr.selectAll('text.chrLabel').attr('transform', 'rotate(-90)' + scaleSvg).selectAll('tspan').attr('x', x).attr('y', y);\n      }\n    }\n\n    /**\n    * Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n    *\n    * This method includes proportional scaling, which ensures that\n    * while the parent chromosome group is scaled strongly in one dimension to fill\n    * available space, the text in the chromosome's band labels is\n    * not similarly distorted, and remains readable.\n    */\n\n  }, {\n    key: 'rotateBandLabels',\n    value: function rotateBandLabels(chr, chrIndex, scale) {\n      var chrMargin,\n          scaleSvg,\n          orientation,\n          bandLabels,\n          ideo = this;\n\n      bandLabels = chr.selectAll('.bandLabel');\n\n      chrWidth = this.config.chrWidth;\n      chrMargin = this.config.chrMargin * chrIndex;\n\n      orientation = chr.attr('data-orientation');\n\n      if (typeof scale === 'undefined') {\n        scale = { x: 1, y: 1 };\n        scaleSvg = '';\n      } else {\n        scaleSvg = 'scale(' + scale.x + ',' + scale.y + ')';\n      }\n\n      if (chrIndex === 1 && 'perspective' in this.config && this.config.perspective === 'comparative') {\n        bandLabels.attr('transform', function (d) {\n          var x, y;\n          x = 8 - chrMargin - 26;\n          y = ideo.round(2 + d.px.start + d.px.width / 2);\n          return 'rotate(-90)translate(' + x + ',' + y + ')';\n        }).selectAll('text').attr('text-anchor', 'end');\n      } else if (orientation === 'vertical') {\n        bandLabels.attr('transform', function (d) {\n          var x, y;\n          x = 8 - chrMargin;\n          y = ideo.round(2 + d.px.start + d.px.width / 2);\n          return 'rotate(-90)translate(' + x + ',' + y + ')';\n        }).selectAll('text').attr('transform', scaleSvg);\n      } else {\n        bandLabels.attr('transform', function (d) {\n          var x, y;\n          x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n          y = chrMargin - 10;\n          return 'translate(' + x + ',' + y + ')';\n        }).selectAll('text').attr('transform', scaleSvg);\n\n        chr.selectAll('.bandLabelStalk line').attr('transform', scaleSvg);\n      }\n    }\n  }, {\n    key: 'round',\n    value: function round(coord) {\n      // Rounds an SVG coordinates to two decimal places\n      // e.g. 42.1234567890 -> 42.12\n      // Per http://stackoverflow.com/a/9453447, below method is fastest\n      return Math.round(coord * 100) / 100;\n    }\n\n    /**\n    * Renders all the bands and outlining boundaries of a chromosome.\n    */\n\n  }, {\n    key: 'drawChromosome',\n    value: function drawChromosome(chrModel, chrIndex, container, k) {\n      var chrMargin = this.config.chrMargin;\n\n      // Get chromosome model adapter class\n      var adapter = ModelAdapter.getInstance(chrModel);\n\n      // Append chromosome's container\n      var chromosome = container.append('g').attr('id', chrModel.id).attr('class', 'chromosome ' + adapter.getCssClass()).attr('transform', 'translate(0, ' + k * chrMargin + ')');\n\n      // Render chromosome\n      return Chromosome.getInstance(adapter, this.config, this).render(chromosome, chrIndex, k);\n    }\n\n    /**\n    * Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n    * Useful for focusing or defocusing a particular chromosome\n    */\n\n  }, {\n    key: 'rotateAndToggleDisplay',\n    value: function rotateAndToggleDisplay(chromosome) {\n      // Do nothing if taxId not defined. But it should be defined.\n      // To fix that bug we should have a way to find chromosome set number.\n      if (!this.config.taxid) {\n        return;\n      }\n\n      var chrSetNumber = Number(_d2.default.select(chromosome.parentNode).attr('data-set-number'));\n\n      var chrNumber = Array.prototype.slice.call(_d2.default.select(chromosome.parentNode).selectAll('g.chromosome')._groups[0]).indexOf(chromosome);\n\n      return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n    }\n\n    /**\n    * Converts base pair coordinates to pixel offsets.\n    * Bp-to-pixel scales differ among cytogenetic bands.\n    */\n\n  }, {\n    key: 'convertBpToPx',\n    value: function convertBpToPx(chr, bp) {\n      var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart, iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n      for (i = 0; i < chr.bands.length; i++) {\n        band = chr.bands[i];\n\n        offset = this._bandsXOffset;\n        bpStart = band.bp.start;\n        bpStop = band.bp.stop;\n        bpLength = bpStop - bpStart;\n        iscnStart = band.iscn.start;\n        iscnStop = band.iscn.stop;\n        iscnLength = iscnStop - iscnStart;\n        pxStart = band.px.start;\n        pxLength = band.px.width;\n\n        if (bp >= bpStart && bp <= bpStop) {\n          bpToIscnScale = iscnLength / bpLength;\n          iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n          px = offset + pxStart + pxLength * (iscn - iscnStart) / iscnLength;\n\n          return px;\n        }\n      }\n\n      throw new Error('Base pair out of range.  ' + 'bp: ' + bp + '; length of chr' + chr.name + ': ' + band.bp.stop);\n    }\n\n    /**\n    * Converts base pair coordinates to pixel offsets.\n    * Bp-to-pixel scales differ among cytogenetic bands.\n    */\n\n  }, {\n    key: 'convertPxToBp',\n    value: function convertPxToBp(chr, px) {\n      var i, band, pxToIscnScale, iscn, pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n      for (i = 0; i < chr.bands.length; i++) {\n        band = chr.bands[i];\n\n        pxStart = band.px.start;\n        pxStop = band.px.stop;\n        iscnStart = band.iscn.start;\n        iscnStop = band.iscn.stop;\n\n        if (px >= pxStart && px <= pxStop) {\n          iscnLength = iscnStop - iscnStart;\n          pxLength = pxStop - pxStart;\n          bpLength = band.bp.stop - band.bp.start;\n\n          pxToIscnScale = iscnLength / pxLength;\n          iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n          bp = band.bp.start + bpLength * (iscn - iscnStart) / iscnLength;\n\n          return Math.round(bp);\n        }\n      }\n\n      throw new Error('Pixel out of range.  ' + 'px: ' + bp + '; length of chr' + chr.name + ': ' + pxStop);\n    }\n\n    /**\n    * Draws a trapezoid connecting a genomic range on\n    * one chromosome to a genomic range on another chromosome;\n    * a syntenic region.\n    */\n\n  }, {\n    key: 'drawSynteny',\n    value: function drawSynteny(syntenicRegions) {\n      var t0 = new Date().getTime();\n\n      var r1,\n          r2,\n          syntenies,\n          i,\n          color,\n          opacity,\n          regionID,\n          ideo = this;\n\n      syntenies = _d2.default.select(ideo.selector).insert('g', ':first-child').attr('class', 'synteny');\n\n      for (i = 0; i < syntenicRegions.length; i++) {\n        regions = syntenicRegions[i];\n\n        r1 = regions.r1;\n        r2 = regions.r2;\n\n        color = '#CFC';\n        if ('color' in regions) {\n          color = regions.color;\n        }\n\n        opacity = 1;\n        if ('opacity' in regions) {\n          opacity = regions.opacity;\n        }\n\n        r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n        r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n        r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n        r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n        regionID = r1.chr.id + '_' + r1.start + '_' + r1.stop + '_' + '__' + r2.chr.id + '_' + r2.start + '_' + r2.stop;\n\n        syntenicRegion = syntenies.append('g').attr('class', 'syntenicRegion').attr('id', regionID).on('click', function () {\n          var activeRegion = this;\n          var others = _d2.default.selectAll(ideo.selector + ' .syntenicRegion').filter(function () {\n            return this !== activeRegion;\n          });\n\n          others.classed('hidden', !others.classed('hidden'));\n        }).on('mouseover', function () {\n          var activeRegion = this;\n          _d2.default.selectAll(ideo.selector + ' .syntenicRegion').filter(function () {\n            return this !== activeRegion;\n          }).classed('ghost', true);\n        }).on('mouseout', function () {\n          _d2.default.selectAll(ideo.selector + ' .syntenicRegion').classed('ghost', false);\n        });\n        var chrWidth = ideo.config.chrWidth;\n        var x1 = this._layout.getChromosomeSetYTranslate(0);\n        var x2 = this._layout.getChromosomeSetYTranslate(1) - chrWidth;\n\n        syntenicRegion.append('polygon').attr('points', x1 + ', ' + r1.startPx + ' ' + x1 + ', ' + r1.stopPx + ' ' + x2 + ', ' + r2.stopPx + ' ' + x2 + ', ' + r2.startPx).attr('style', 'fill: ' + color + '; fill-opacity: ' + opacity);\n\n        syntenicRegion.append('line').attr('class', 'syntenyBorder').attr('x1', x1).attr('x2', x2).attr('y1', r1.startPx).attr('y2', r2.startPx);\n\n        syntenicRegion.append('line').attr('class', 'syntenyBorder').attr('x1', x1).attr('x2', x2).attr('y1', r1.stopPx).attr('y2', r2.stopPx);\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log('Time in drawSyntenicRegions: ' + (t1 - t0) + ' ms');\n      }\n    }\n\n    /**\n    * Initializes various annotation settings.  Constructor help function.\n    */\n\n  }, {\n    key: 'initAnnotSettings',\n    value: function initAnnotSettings() {\n      if (this.config.annotationsPath || this.config.localAnnotationsPath || this.annots || this.config.annotations) {\n        if (!this.config.annotationHeight) {\n          var annotHeight = Math.round(this.config.chrHeight / 100);\n          this.config.annotationHeight = annotHeight;\n        }\n\n        if (this.config.annotationTracks) {\n          this.config.numAnnotTracks = this.config.annotationTracks.length;\n        } else {\n          this.config.numAnnotTracks = 1;\n        }\n        this.config.annotTracksHeight = this.config.annotationHeight * this.config.numAnnotTracks;\n\n        if (typeof this.config.barWidth === 'undefined') {\n          this.config.barWidth = 3;\n        }\n      } else {\n        this.config.annotTracksHeight = 0;\n      }\n\n      if (typeof this.config.annotationsColor === 'undefined') {\n        this.config.annotationsColor = '#F00';\n      }\n    }\n\n    /**\n    * Draws annotations defined by user\n    */\n\n  }, {\n    key: 'drawAnnots',\n    value: function drawAnnots(friendlyAnnots) {\n      var ideo = this,\n          i,\n          j,\n          annot,\n          rawAnnots = [],\n          rawAnnot,\n          keys,\n          chr,\n          chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n      // Occurs when filtering\n      if ('annots' in friendlyAnnots[0]) {\n        return ideo.drawProcessedAnnots(friendlyAnnots);\n      }\n\n      for (chr in chrs) {\n        rawAnnots.push({ chr: chr, annots: [] });\n      }\n\n      for (i = 0; i < friendlyAnnots.length; i++) {\n        annot = friendlyAnnots[i];\n\n        for (j = 0; j < rawAnnots.length; j++) {\n          if (annot.chr === rawAnnots[j].chr) {\n            rawAnnot = [annot.name, annot.start, annot.stop - annot.start];\n            if ('color' in annot) {\n              rawAnnot.push(annot.color);\n            }\n            if ('shape' in annot) {\n              rawAnnot.push(annot.shape);\n            }\n            rawAnnots[j].annots.push(rawAnnot);\n            break;\n          }\n        }\n      }\n\n      keys = ['name', 'start', 'length'];\n      if ('color' in friendlyAnnots[0]) {\n        keys.push('color');\n      }\n      if ('shape' in friendlyAnnots[0]) {\n        keys.push('shape');\n      }\n      ideo.rawAnnots = { keys: keys, annots: rawAnnots };\n\n      ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n      ideo.drawProcessedAnnots(ideo.annots);\n    }\n\n    /**\n    * Proccesses genome annotation data.\n    * Genome annotations represent features like a gene, SNP, etc. as\n    * a small graphical object on or beside a chromosome.\n    * Converts raw annotation data from server, which is structured as\n    * an array of arrays, into a more verbose data structure consisting\n    * of an array of objects.\n    * Also adds pixel offset information.\n    */\n\n  }, {\n    key: 'processAnnotData',\n    value: function processAnnotData(rawAnnots) {\n      var keys,\n          i,\n          j,\n          annot,\n          annots,\n          annotsByChr,\n          chr,\n          chrModel,\n          ra,\n          startPx,\n          stopPx,\n          px,\n          color,\n          ideo = this;\n\n      keys = rawAnnots.keys;\n      rawAnnots = rawAnnots.annots;\n\n      annots = [];\n\n      for (i = 0; i < rawAnnots.length; i++) {\n        annotsByChr = rawAnnots[i];\n\n        annots.push({ chr: annotsByChr.chr, annots: [] });\n\n        for (j = 0; j < annotsByChr.annots.length; j++) {\n          chr = annotsByChr.chr;\n          ra = annotsByChr.annots[j];\n          annot = {};\n\n          for (var k = 0; k < keys.length; k++) {\n            annot[keys[k]] = ra[k];\n          }\n\n          annot.stop = annot.start + annot.length;\n\n          chrModel = ideo.chromosomes[ideo.config.taxid][chr];\n\n          startPx = ideo.convertBpToPx(chrModel, annot.start);\n          stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n          px = Math.round((startPx + stopPx) / 2) - 28;\n\n          color = ideo.config.annotationsColor;\n          if (ideo.config.annotationTracks) {\n            annot.trackIndex = ra[3];\n            color = ideo.config.annotationTracks[annot.trackIndex].color;\n          } else {\n            annot.trackIndex = 0;\n          }\n\n          if ('color' in annot) {\n            color = annot.color;\n          }\n\n          annot.chr = chr;\n          annot.chrIndex = i;\n          annot.px = px;\n          annot.startPx = startPx - 30;\n          annot.stopPx = stopPx - 30;\n          annot.color = color;\n\n          annots[i].annots.push(annot);\n        }\n      }\n\n      return annots;\n    }\n\n    /*\n    * Can be used for bar chart or sparkline\n    */\n\n  }, {\n    key: 'getHistogramBars',\n    value: function getHistogramBars(annots) {\n      var t0 = new Date().getTime();\n\n      var i,\n          j,\n          chr,\n          chrModels,\n          chrPxStop,\n          px,\n          chrAnnots,\n          chrName,\n          chrIndex,\n          annot,\n          bars,\n          bar,\n          barPx,\n          nextBarPx,\n          barWidth,\n          maxAnnotsPerBar,\n          color,\n          firstGet = false,\n          histogramScaling,\n          ideo = this;\n\n      bars = [];\n\n      barWidth = ideo.config.barWidth;\n      chrModels = ideo.chromosomes[ideo.config.taxid];\n      color = ideo.config.annotationsColor;\n\n      if ('histogramScaling' in ideo.config) {\n        histogramScaling = ideo.config.histogramScaling;\n      } else {\n        histogramScaling = 'relative';\n      }\n\n      if (typeof ideo.maxAnnotsPerBar === 'undefined') {\n        ideo.maxAnnotsPerBar = {};\n        firstGet = true;\n      }\n\n      for (chr in chrModels) {\n        chrModel = chrModels[chr];\n        chrIndex = chrModel.chrIndex;\n        lastBand = chrModel.bands[chrModel.bands.length - 1];\n        chrPxStop = lastBand.px.stop;\n        numBins = Math.round(chrPxStop / barWidth);\n        bar = { chr: chr, annots: [] };\n        for (i = 0; i < numBins; i++) {\n          px = i * barWidth - ideo.bump;\n          bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n          bar.annots.push({\n            bp: bp,\n            px: px - ideo.bump,\n            count: 0,\n            chrIndex: chrIndex,\n            chrName: chr,\n            color: color,\n            annots: []\n          });\n        }\n        bars.push(bar);\n      }\n\n      for (chr in annots) {\n        chrAnnots = annots[chr].annots;\n        chrName = annots[chr].chr;\n        chrModel = chrModels[chrName];\n        chrIndex = chrModel.chrIndex - 1;\n        barAnnots = bars[chrIndex].annots;\n        for (i = 0; i < chrAnnots.length; i++) {\n          annot = chrAnnots[i];\n          px = annot.px - ideo.bump;\n          for (j = 0; j < barAnnots.length; j++) {\n            barPx = barAnnots[j].px;\n            nextBarPx = barPx + barWidth;\n            if (j === barAnnots.length - 1) {\n              nextBarPx += barWidth;\n            }\n            if (px >= barPx && px < nextBarPx) {\n              bars[chrIndex].annots[j].count += 1;\n              bars[chrIndex].annots[j].annots.push(annot);\n              break;\n            }\n          }\n        }\n      }\n\n      if (firstGet === true || histogramScaling === 'relative') {\n        maxAnnotsPerBar = 0;\n        for (i = 0; i < bars.length; i++) {\n          annots = bars[i].annots;\n          for (j = 0; j < annots.length; j++) {\n            barCount = annots[j].count;\n            if (barCount > maxAnnotsPerBar) {\n              maxAnnotsPerBar = barCount;\n            }\n          }\n        }\n        ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n      }\n\n      // Set each bar's height to be proportional to\n      // the height of the bar with the most annotations\n      for (i = 0; i < bars.length; i++) {\n        annots = bars[i].annots;\n        for (j = 0; j < annots.length; j++) {\n          barCount = annots[j].count;\n          height = barCount / ideo.maxAnnotsPerBar[chr] * ideo.config.chrMargin;\n          // console.log(height)\n          bars[i].annots[j].height = height;\n        }\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log('Time spent in getHistogramBars: ' + (t1 - t0) + ' ms');\n      }\n\n      ideo.bars = bars;\n\n      return bars;\n    }\n\n    /**\n    * Fills out annotations data structure such that its top-level list of arrays\n    * matches that of this ideogram's chromosomes list in order and number\n    * Fixes https://github.com/eweitz/ideogram/issues/66\n    */\n\n  }, {\n    key: 'fillAnnots',\n    value: function fillAnnots(annots) {\n      var filledAnnots, chrs, chrArray, i, chr, annot, chrIndex;\n\n      filledAnnots = [];\n      chrs = [];\n      chrArray = this.chromosomesArray;\n\n      for (i = 0; i < chrArray.length; i++) {\n        chr = chrArray[i].name;\n        chrs.push(chr);\n        filledAnnots.push({ chr: chr, annots: [] });\n      }\n\n      for (i = 0; i < annots.length; i++) {\n        annot = annots[i];\n        chrIndex = chrs.indexOf(annot.chr);\n        if (chrIndex !== -1) {\n          filledAnnots[chrIndex] = annot;\n        }\n      }\n\n      return filledAnnots;\n    }\n\n    /**\n    * Draws genome annotations on chromosomes.\n    * Annotations can be rendered as either overlaid directly\n    * on a chromosome, or along one or more \"tracks\"\n    * running parallel to each chromosome.\n    */\n\n  }, {\n    key: 'drawProcessedAnnots',\n    value: function drawProcessedAnnots(annots) {\n      var chrWidth,\n          layout,\n          annotHeight,\n          triangle,\n          circle,\n          r,\n          chrAnnot,\n          x1,\n          x2,\n          y1,\n          y2,\n          filledAnnots,\n          ideo = this;\n\n      chrMargin = this.config.chrMargin;\n      chrWidth = this.config.chrWidth;\n\n      layout = 'tracks';\n      if (this.config.annotationsLayout) {\n        layout = this.config.annotationsLayout;\n      }\n\n      if (layout === 'histogram') {\n        annots = ideo.getHistogramBars(annots);\n      }\n\n      annotHeight = ideo.config.annotationHeight;\n\n      triangle = 'l -' + annotHeight + ' ' + 2 * annotHeight + ' l ' + 2 * annotHeight + ' 0 z';\n\n      // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n      // Circles are supported natively via <circle>, but having it as a path\n      // simplifies handling triangles, circles and other shapes in the same\n      // D3 call\n      r = annotHeight;\n      circle = 'm -' + r + ', ' + r + 'a ' + r + ',' + r + ' 0 1,0 ' + r * 2 + ',0' + 'a ' + r + ',' + r + ' 0 1,0 -' + r * 2 + ',0';\n\n      filledAnnots = ideo.fillAnnots(annots);\n\n      chrAnnot = _d2.default.selectAll(ideo.selector + ' .chromosome').data(filledAnnots).selectAll('path.annot').data(function (d) {\n        return d.annots;\n      }).enter();\n\n      if (layout === 'tracks') {\n        chrAnnot.append('g').attr('id', function (d) {\n          return d.id;\n        }).attr('class', 'annot').attr('transform', function (d) {\n          var y = ideo.config.chrWidth + d.trackIndex * annotHeight * 2;\n          return 'translate(' + d.px + ',' + y + ')';\n        }).append('path').attr('d', function (d) {\n          if (!d.shape || d.shape === 'triangle') {\n            return 'm0,0' + triangle;\n          } else if (d.shape === 'circle') {\n            return circle;\n          }\n        }).attr('fill', function (d) {\n          return d.color;\n        });\n      } else if (layout === 'overlay') {\n        // Overlaid annotations appear directly on chromosomes\n\n        chrAnnot.append('polygon').attr('id', function (d) {\n          return d.id;\n        }).attr('class', 'annot').attr('points', function (d) {\n          if (d.stopPx - d.startPx > 1) {\n            x1 = d.startPx;\n            x2 = d.stopPx;\n          } else {\n            x1 = d.px - 0.5;\n            x2 = d.px + 0.5;\n          }\n          y1 = chrWidth;\n          y2 = 0;\n\n          return x1 + ',' + y1 + ' ' + x2 + ',' + y1 + ' ' + x2 + ',' + y2 + ' ' + x1 + ',' + y2;\n        }).attr('fill', function (d) {\n          return d.color;\n        });\n      } else if (layout === 'histogram') {\n        chrAnnot.append('polygon')\n        // .attr('id', function(d, i) { return d.id; })\n        .attr('zclass', 'annot').attr('points', function (d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return x1 + ',' + y1 + ' ' + x2 + ',' + y1 + ' ' + x2 + ',' + y2 + ' ' + x1 + ',' + y2;\n        }).attr('fill', function (d) {\n          return d.color;\n        });\n      }\n\n      if (ideo.onDrawAnnotsCallback) {\n        ideo.onDrawAnnotsCallback();\n      }\n    }\n  }, {\n    key: 'onBrushMove',\n    value: function onBrushMove() {\n      call(this.onBrushMoveCallback);\n    }\n  }, {\n    key: 'createBrush',\n    value: function createBrush(from, to) {\n      var ideo = this,\n          width = ideo.config.chrWidth + 6.5,\n          length = ideo.config.chrHeight,\n          chr = ideo.chromosomesArray[0],\n          chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n          x0,\n          x1,\n          xOffset = this._layout.getMargin().left,\n          xScale = _d2.default.scaleLinear().domain([0, _d2.default.max(chr.bands, function (band) {\n        return band.bp.stop;\n      })]).range([xOffset, _d2.default.max(chr.bands, function (band) {\n        return band.px.stop;\n      }) + xOffset]);\n\n      if (typeof from === 'undefined') {\n        from = Math.floor(chrLengthBp / 10);\n      }\n\n      if (typeof right === 'undefined') {\n        to = Math.ceil(from * 2);\n      }\n\n      x0 = ideo.convertBpToPx(chr, from);\n      x1 = ideo.convertBpToPx(chr, to);\n\n      ideo.selectedRegion = { from: from, to: to, extent: to - from };\n\n      ideo.brush = _d2.default.brushX().extent([[xOffset, 0], [length + xOffset, width]]).on('brush', onBrushMove);\n\n      var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n      var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n      _d2.default.select(ideo.selector).append('g').attr('class', 'brush').attr('transform', 'translate(0, ' + yOffset + ')').call(ideo.brush).call(ideo.brush.move, [x0, x1]);\n\n      function onBrushMove() {\n        var extent = _d2.default.event.selection.map(xScale.invert),\n            from = Math.floor(extent[0]),\n            to = Math.ceil(extent[1]);\n\n        ideo.selectedRegion = { from: from, to: to, extent: to - from };\n\n        if (ideo.onBrushMove) {\n          ideo.onBrushMoveCallback();\n        }\n      }\n    }\n\n    /**\n    * Called when Ideogram has finished initializing.\n    * Accounts for certain ideogram properties not being set until\n    * asynchronous requests succeed, etc.\n    */\n\n  }, {\n    key: 'onLoad',\n    value: function onLoad() {\n      call(this.onLoadCallback);\n    }\n  }, {\n    key: 'onDrawAnnots',\n    value: function onDrawAnnots() {\n      call(this.onDrawAnnotsCallback);\n    }\n\n    /*\n    * Returns SVG gradients that give chromosomes a polished look\n    */\n\n  }, {\n    key: 'getBandColorGradients',\n    value: function getBandColorGradients() {\n      var colors,\n          stain,\n          color1,\n          color2,\n          color3,\n          css,\n          gradients = '';\n\n      colors = [['gneg', '#FFF', '#FFF', '#DDD'], ['gpos25', '#C8C8C8', '#DDD', '#BBB'], ['gpos33', '#BBB', '#BBB', '#AAA'], ['gpos50', '#999', '#AAA', '#888'], ['gpos66', '#888', '#888', '#666'], ['gpos75', '#777', '#777', '#444'], ['gpos100', '#444', '#666', '#000'], ['acen', '#FEE', '#FEE', '#FDD'], ['noBands', '#BBB', '#BBB', '#AAA']];\n\n      for (var i = 0; i < colors.length; i++) {\n        stain = colors[i][0];\n        color1 = colors[i][1];\n        color2 = colors[i][2];\n        color3 = colors[i][3];\n        gradients += '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n        if (stain === \"gneg\") {\n          gradients += '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' + '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' + '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n        } else {\n          gradients += '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' + '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' + '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n        }\n        gradients += '</linearGradient>';\n      }\n\n      gradients += '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' + 'patternTransform=\"rotate(30 0 0)\">' + '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' + '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' + 'stroke-width:0.7;\" />' + '</pattern>' + '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' + 'patternTransform=\"rotate(-30 0 0)\">' + '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' + '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' + 'stroke-width:0.7;\" />' + '</pattern>';\n\n      gradients = \"<defs>\" + gradients + \"</defs>\";\n      css = \"<style>\" + '.gneg {fill: url(\"#gneg\")} ' + '.gpos25 {fill: url(\"#gpos25\")} ' + '.gpos33 {fill: url(\"#gpos33\")} ' + '.gpos50 {fill: url(\"#gpos50\")} ' + '.gpos66 {fill: url(\"#gpos66\")} ' + '.gpos75 {fill: url(\"#gpos75\")} ' + '.gpos100 {fill: url(\"#gpos100\")} ' + '.gpos {fill: url(\"#gpos100\")} ' + '.acen {fill: url(\"#acen\")} ' + '.stalk {fill: url(\"#stalk\")} ' + '.gvar {fill: url(\"#gvar\")} ' + '.noBands {fill: url(\"#noBands\")} ' + '.chromosome {fill: url(\"#noBands\")} ' + '</style>';\n      gradients = css + gradients;\n\n      // alert(gradients)\n\n      return gradients;\n    }\n\n    /*\n    *  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n    */\n\n  }, {\n    key: 'getTaxidFromEutils',\n    value: function getTaxidFromEutils(callback) {\n      var organism,\n          taxonomySearch,\n          taxid,\n          ideo = this;\n\n      organism = ideo.config.organism;\n\n      taxonomySearch = ideo.esearch + '&db=taxonomy&term=' + organism;\n\n      _d2.default.json(taxonomySearch, function (data) {\n        taxid = data.esearchresult.idlist[0];\n        return callback(taxid);\n      });\n    }\n\n    /**\n    * Returns an array of taxids for the current ideogram\n    * Also sets configuration parameters related to taxid(s), whether ideogram is\n    * multiorganism, and adjusts chromosomes parameters as needed\n    **/\n\n  }, {\n    key: 'getTaxids',\n    value: function getTaxids(callback) {\n      var ideo = this,\n          taxid,\n          taxids,\n          org,\n          orgs,\n          i,\n          taxidInit,\n          tmpChrs,\n          assembly,\n          chromosomes,\n          multiorganism;\n\n      taxidInit = 'taxid' in ideo.config;\n\n      ideo.config.multiorganism = 'organism' in ideo.config && ideo.config.organism instanceof Array || taxidInit && ideo.config.taxid instanceof Array;\n\n      multiorganism = ideo.config.multiorganism;\n\n      if ('organism' in ideo.config) {\n        // Ideogram instance was constructed using common organism name(s)\n        if (multiorganism) {\n          orgs = ideo.config.organism;\n        } else {\n          orgs = [ideo.config.organism];\n        }\n\n        taxids = [];\n        tmpChrs = {};\n        for (i = 0; i < orgs.length; i++) {\n          // Gets a list of taxids from common organism names\n          org = orgs[i];\n          for (taxid in ideo.organisms) {\n            if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n              taxids.push(taxid);\n              if (multiorganism) {\n                // Adjusts 'chromosomes' configuration parameter to make object\n                // keys use taxid instead of common organism name\n                tmpChrs[taxid] = ideo.config.chromosomes[org];\n              }\n            }\n          }\n        }\n\n        if (taxids.length === 0) {\n          promise = new Promise(function (resolve) {\n            ideo.getTaxidFromEutils(resolve);\n          });\n\n          promise.then(function (data) {\n            var organism = ideo.config.organism,\n                dataDir = ideo.config.dataDir,\n                urlOrg = organism.replace(' ', '-');\n\n            taxid = data;\n            taxids.push(taxid);\n\n            ideo.config.taxids = taxids;\n            ideo.organisms[taxid] = {\n              commonName: '',\n              scientificName: ideo.config.organism,\n              scientificNameAbbr: ''\n            };\n\n            var fullyBandedTaxids = ['9606', '10090', '10116'];\n            if (fullyBandedTaxids.indexOf(taxid) !== -1 && ideo.config.showFullyBanded === false) {\n              urlOrg += '-no-bands';\n            }\n            var chromosomesUrl = dataDir + urlOrg + '.js';\n\n            var promise = new Promise(function (resolve, reject) {\n              _d2.default.request(chromosomesUrl).get(function (error, data) {\n                if (error) {\n                  reject(Error(error));\n                }\n                resolve(data);\n              });\n            });\n\n            return promise.then(function (data) {\n              // Check if chromosome data exists locally.\n              // This is used for pre-processed centromere data,\n              // which is not accessible via EUtils.  See get_chromosomes.py.\n\n              var asmAndChrArray = [],\n                  chromosomes = [],\n                  seenChrs = {},\n                  chr;\n\n              eval(data.response);\n\n              asmAndChrArray.push('');\n\n              for (var i = 0; i < chrBands.length; i++) {\n                chr = chrBands[i].split(' ')[0];\n                if (chr in seenChrs) {\n                  continue;\n                } else {\n                  chromosomes.push({ name: chr, type: 'nuclear' });\n                  seenChrs[chr] = 1;\n                }\n              }\n              chromsomes = chromosomes.sort(ideo.sortChromosomes);\n              asmAndChrArray.push(chromosomes);\n              ideo.coordinateSystem = 'iscn';\n              return asmAndChrArray;\n            }, function () {\n              return new Promise(function (resolve) {\n                ideo.coordinateSystem = 'bp';\n                ideo.getAssemblyAndChromosomesFromEutils(resolve);\n              });\n            });\n          }).then(function (asmChrArray) {\n            assembly = asmChrArray[0];\n            chromosomes = asmChrArray[1];\n\n            ideo.config.chromosomes = chromosomes;\n            ideo.organisms[taxid].assemblies = {\n              default: assembly\n            };\n\n            callback(taxids);\n          });\n        } else {\n          ideo.config.taxids = taxids;\n          if (multiorganism) {\n            ideo.config.chromosomes = tmpChrs;\n          }\n\n          callback(taxids);\n        }\n      } else {\n        if (multiorganism) {\n          ideo.coordinateSystem = 'bp';\n          if (taxidInit) {\n            taxids = ideo.config.taxid;\n          }\n        } else {\n          if (taxidInit) {\n            taxids = [ideo.config.taxid];\n          }\n          ideo.config.taxids = taxids;\n        }\n\n        callback(taxids);\n      }\n    }\n  }, {\n    key: 'sortChromosomes',\n    value: function sortChromosomes(a, b) {\n      var aIsNuclear = a.type === 'nuclear',\n          bIsNuclear = b.type === 'nuclear',\n          aIsCP = a.type === 'chloroplast',\n          bIsCP = b.type === 'chloroplast',\n          aIsMT = a.type === 'mitochondrion',\n          bIsMT = b.type === 'mitochondrion';\n      // aIsPlastid = aIsMT && a.name !== 'MT', // e.g. B1 in rice genome GCF_001433935.1\n      // bIsPlastid = bIsMT && b.name !== 'MT';\n\n      if (aIsNuclear && bIsNuclear) {\n        return naturalSort(a.name, b.name);\n      } else if (!aIsNuclear && bIsNuclear) {\n        return 1;\n      } else if (aIsMT && bIsCP) {\n        return 1;\n      } else if (aIsCP && bIsMT) {\n        return -1;\n      } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n        return -1;\n      }\n    }\n\n    /*\n    *  Returns names and lengths of chromosomes for an organism's best-known\n    *  genome assembly.  Gets data from NCBI EUtils web API.\n    */\n\n  }, {\n    key: 'getAssemblyAndChromosomesFromEutils',\n    value: function getAssemblyAndChromosomesFromEutils(callback) {\n      var asmAndChrArray,\n          // [assembly_accession, chromosome_objects_array]\n      assemblyAccession,\n          chromosomes,\n          asmSearch,\n          asmUid,\n          asmSummary,\n          rsUid,\n          nuccoreLink,\n          links,\n          ntSummary,\n          results,\n          result,\n          cnIndex,\n          chrName,\n          chrLength,\n          chromosome,\n          type,\n          ideo = this;\n\n      organism = ideo.config.organism;\n\n      asmAndChrArray = [];\n      chromosomes = [];\n\n      asmSearch = ideo.esearch + '&db=assembly' + '&term=%22' + organism + '%22[organism]' + 'AND%20(%22latest%20refseq%22[filter])%20' + 'AND%20(%22chromosome%20level%22[filter]%20' + 'OR%20%22complete%20genome%22[filter])';\n\n      var promise = _d2.default.promise.json(asmSearch);\n\n      promise.then(function (data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + '&db=assembly&id=' + asmUid;\n\n        return _d2.default.promise.json(asmSummary);\n      }).then(function (data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        var qs = '&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=' + rsUid;\n        nuccoreLink = ideo.elink + qs;\n\n        return _d2.default.promise.json(nuccoreLink);\n      }).then(function (data) {\n        links = data.linksets[0].linksetdbs[0].links.join(',');\n        ntSummary = ideo.esummary + '&db=nucleotide&id=' + links;\n\n        return _d2.default.promise.json(ntSummary);\n      }).then(function (data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === 'uids') {\n            continue;\n          }\n\n          if (result.genome === 'mitochondrion') {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split('|').indexOf('plasmid');\n              if (cnIndex === -1) {\n                chrName = 'MT';\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                // genome: 'mitochondrion',\n                // subtype: 'cell_line|plasmid',\n                // subname: 'A-58 CMS|B1',\n                chrName = result.subname.split('|')[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (result.genome === 'chloroplast' || result.genome === 'plastid') {\n            type = 'chloroplast';\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = 'CP';\n            } else {\n              continue;\n            }\n          } else {\n            type = 'nuclear';\n            cnIndex = result.subtype.split('|').indexOf('chromosome');\n\n            chrName = result.subname.split('|')[cnIndex];\n\n            if (typeof chrName !== 'undefined' && chrName.substr(0, 3) === 'chr') {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = 'bp';\n\n        return callback(asmAndChrArray);\n      });\n    }\n  }, {\n    key: 'drawSexChromosomes',\n    value: function drawSexChromosomes(bandsArray, taxid, container, defs, j, chrs) {\n      var chromosome,\n          bands,\n          chrModel,\n          shape,\n          sci,\n          k,\n          sexChromosomeIndexes,\n          ideo = this;\n\n      if (ideo.config.sex === 'male') {\n        sexChromosomeIndexes = [1, 0];\n      } else {\n        sexChromosomeIndexes = [0, 0];\n      }\n\n      for (k = 0; k < sexChromosomeIndexes.length; k++) {\n        sci = sexChromosomeIndexes[k] + j;\n        chromosome = chrs[sci];\n        bands = bandsArray[sci];\n        chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, sci);\n        shape = ideo.drawChromosome(chrModel, j, container, k);\n        defs.append('clipPath').attr('id', chrModel.id + '-chromosome-set-clippath').selectAll('path').data(shape).enter().append('path').attr('d', function (d) {\n          return d.path;\n        }).attr('class', function (d) {\n          return d.class;\n        });\n      }\n    }\n\n    /*\n    * Configures chromosome data and calls downstream chromosome drawing functions\n    */\n\n  }, {\n    key: 'initDrawChromosomes',\n    value: function initDrawChromosomes(bandsArray) {\n      var ideo = this,\n          taxids = ideo.config.taxids,\n          ploidy = ideo.config.ploidy,\n          taxid,\n          chrIndex = 0,\n          chrSetNumber = 0,\n          bands,\n          i,\n          j,\n          chrs,\n          chromosome,\n          chrModel,\n          defs,\n          transform;\n\n      defs = _d2.default.select(ideo.selector + ' defs');\n\n      for (i = 0; i < taxids.length; i++) {\n        taxid = taxids[i];\n        chrs = ideo.config.chromosomes[taxid];\n\n        ideo.chromosomes[taxid] = {};\n\n        ideo.setSexChromosomes(chrs);\n\n        for (j = 0; j < chrs.length; j++) {\n          chromosome = chrs[j];\n          bands = bandsArray[chrIndex];\n          chrIndex += 1;\n\n          chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n          ideo.chromosomes[taxid][chromosome] = chrModel;\n          ideo.chromosomesArray.push(chrModel);\n\n          if ('sex' in ideo.config && (ploidy === 2 && ideo.sexChromosomes.index + 2 === chrIndex || ideo.config.sex === 'female' && chrModel.name === 'Y')) {\n            continue;\n          }\n\n          transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n          chrSetNumber += 1;\n\n          // Append chromosome set container\n          var container = _d2.default.select(ideo.selector).append('g').attr('class', 'chromosome-set-container').attr('data-set-number', j).attr('transform', transform).attr('id', chrModel.id + '-chromosome-set');\n\n          if ('sex' in ideo.config && ploidy === 2 && ideo.sexChromosomes.index + 1 === chrIndex) {\n            ideo.drawSexChromosomes(bandsArray, taxid, container, defs, j, chrs);\n            continue;\n          }\n\n          var shape;\n          var numChrsInSet = 1;\n          if (ploidy > 1) {\n            numChrsInSet = this._ploidy.getChromosomesNumber(j);\n          }\n          for (var k = 0; k < numChrsInSet; k++) {\n            shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n          }\n\n          defs.append('clipPath').attr('id', chrModel.id + '-chromosome-set-clippath').selectAll('path').data(shape).enter().append('path').attr('d', function (d) {\n            return d.path;\n          }).attr('class', function (d) {\n            return d.class;\n          });\n        }\n\n        if (ideo.config.showBandLabels === true) {\n          ideo.drawBandLabels(ideo.chromosomes);\n        }\n      }\n    }\n\n    // Get ideogram SVG container\n\n  }, {\n    key: 'getSvg',\n    value: function getSvg() {\n      return _d2.default.select(this.selector).node();\n    }\n\n    /*\n    * Sets instance properties regarding sex chromosomes.\n    * Currently only supported for mammals.\n    * TODO: Support all sexually reproducing taxa\n    *   XY sex-determination (mammals):\n    *     - Male: XY <- heterogametic\n    *     - Female: XX\n    *   ZW sex-determination (birds):\n    *     - Male: ZZ\n    *     - Female: ZW <- heterogametic\n    *   X0 sex-determination (some insects):\n    *     - Male: X0, i.e. only X <- heterogametic?\n    *     - Female: XX\n    * TODO: Support sex chromosome aneuploidies in mammals\n    *     - Turner syndrome: X0\n    *     - Klinefelter syndome: XXY\n    *  More types:\n    *  https:*en.wikipedia.org/wiki/Category:Sex_chromosome_aneuploidies\n    */\n\n  }, {\n    key: 'setSexChromosomes',\n    value: function setSexChromosomes(chrs) {\n      if (this.config.ploidy !== 2 || !this.config.sex) {\n        return;\n      }\n\n      var ideo = this,\n          sexChrs = { X: 1, Y: 1 },\n          chr,\n          i;\n\n      ideo.sexChromosomes.list = [];\n\n      for (i = 0; i < chrs.length; i++) {\n        chr = chrs[i];\n\n        if (ideo.config.sex === 'male' && chr in sexChrs) {\n          ideo.sexChromosomes.list.push(chr);\n          if (!ideo.sexChromosomes.index) {\n            ideo.sexChromosomes.index = i;\n          }\n        } else if (chr === 'X') {\n          ideo.sexChromosomes.list.push(chr, chr);\n          ideo.sexChromosomes.index = i;\n        }\n      }\n    }\n\n    /*\n    * Completes default ideogram initialization\n    * by calling downstream functions to\n    * process raw band data into full JSON objects,\n    * render chromosome and cytoband figures and labels,\n    * apply initial graphical transformations,\n    * hide overlapping band labels, and\n    * execute callbacks defined by client code\n    */\n\n  }, {\n    key: 'processBandData',\n    value: function processBandData() {\n      var bandsArray,\n          j,\n          k,\n          chromosome,\n          bands,\n          chrLength,\n          chr,\n          bandData,\n          bandsByChr,\n          taxid,\n          taxids,\n          chrs,\n          chrsByTaxid,\n          ideo = this;\n\n      bandsArray = [];\n      maxLength = 0;\n\n      if (ideo.config.multiorganism === true) {\n        ideo.coordinateSystem = 'bp';\n        taxids = ideo.config.taxids;\n        for (i = 0; i < taxids.length; i++) {\n          taxid = taxids[i];\n        }\n      } else {\n        if (typeof ideo.config.taxid === 'undefined') {\n          ideo.config.taxid = ideo.config.taxids[0];\n        }\n        taxid = ideo.config.taxid;\n        taxids = [taxid];\n        ideo.config.taxids = taxids;\n      }\n\n      if ('chromosomes' in ideo.config) {\n        chrs = ideo.config.chromosomes;\n      }\n      if (ideo.config.multiorganism) {\n        chrsByTaxid = chrs;\n      }\n\n      ideo.config.chromosomes = {};\n\n      var t0B = new Date().getTime();\n\n      for (j = 0; j < taxids.length; j++) {\n        taxid = taxids[j];\n\n        if (ideo.config.multiorganism) {\n          chrs = chrsByTaxid[taxid];\n        }\n\n        if (ideo.coordinateSystem === 'iscn' || ideo.config.multiorganism) {\n          bandData = ideo.bandData[taxid];\n\n          bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n          chrs = Object.keys(bandsByChr).sort(function (a, b) {\n            return naturalSort(a, b);\n          });\n\n          ideo.config.chromosomes[taxid] = chrs.slice();\n          ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n          for (k = 0; k < chrs.length; k++) {\n            chromosome = chrs[k];\n            bands = bandsByChr[chromosome];\n            bandsArray.push(bands);\n\n            chrLength = {\n              iscn: bands[bands.length - 1].iscn.stop,\n              bp: bands[bands.length - 1].bp.stop\n            };\n\n            if (chrLength.iscn > ideo.maxLength.iscn) {\n              ideo.maxLength.iscn = chrLength.iscn;\n            }\n\n            if (chrLength.bp > ideo.maxLength.bp) {\n              ideo.maxLength.bp = chrLength.bp;\n            }\n          }\n        } else if (ideo.coordinateSystem === 'bp') {\n          // If lacking band-level data\n\n          ideo.config.chromosomes[taxid] = chrs.slice();\n          ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n          for (k = 0; k < chrs.length; k++) {\n            chr = chrs[k];\n            if (chr.length > ideo.maxLength.bp) {\n              ideo.maxLength.bp = chr.length;\n            }\n          }\n        }\n      }\n\n      var t1B = new Date().getTime();\n      if (ideo.debug) {\n        console.log('Time in processBandData: ' + (t1B - t0B) + ' ms');\n      }\n\n      return bandsArray;\n    }\n\n    /**\n    * Initializes an ideogram.\n    * Sets some high-level properties based on instance configuration,\n    * fetches band and annotation data if needed, and\n    * writes an SVG element to the document to contain the ideogram\n    */\n\n  }, {\n    key: 'init',\n    value: function init() {\n      var taxid, i, svgClass;\n\n      var ideo = this;\n\n      var t0 = new Date().getTime();\n\n      var bandsArray = [],\n          numBandDataResponses = 0,\n          resolution = this.config.resolution,\n          accession;\n\n      var promise = new Promise(function (resolve) {\n        ideo.getTaxids(resolve);\n      });\n\n      promise.then(function (taxids) {\n        taxid = taxids[0];\n        ideo.config.taxid = taxid;\n        ideo.config.taxids = taxids;\n\n        var assemblies, bandFileName;\n\n        var bandDataFileNames = {\n          9606: '',\n          10090: ''\n        };\n\n        for (i = 0; i < taxids.length; i++) {\n          taxid = String(taxids[i]);\n\n          if (!ideo.config.assembly) {\n            ideo.config.assembly = 'default';\n          }\n          assemblies = ideo.organisms[taxid].assemblies;\n          accession = assemblies[ideo.config.assembly];\n\n          bandFileName = [];\n          bandFileName.push(slugify(ideo.organisms[taxid].scientificName));\n          if (accession !== assemblies.default) {\n            bandFileName.push(accession);\n          }\n          if (taxid === '9606' && (accession !== assemblies.default || resolution !== 850)) {\n            bandFileName.push(resolution);\n          }\n          bandFileName = bandFileName.join('-') + '.js';\n\n          if (taxid === '9606' || taxid === '10090') {\n            bandDataFileNames[taxid] = bandFileName;\n          }\n\n          if (typeof chrBands === 'undefined' && taxid in bandDataFileNames) {\n            _d2.default.request(ideo.config.dataDir + bandDataFileNames[taxid]).on('beforesend', function (data) {\n              // Ensures correct taxid is processed in response callback; using\n              // simply 'taxid' variable gives the last *requested* taxid, which\n              // fails when dealing with multiple taxa.\n              data.taxid = taxid;\n            }).get(function (error, data) {\n              eval(data.response);\n\n              ideo.bandData[data.taxid] = chrBands;\n              numBandDataResponses += 1;\n\n              if (numBandDataResponses === taxids.length) {\n                bandsArray = ideo.processBandData();\n                writeContainer();\n              }\n            });\n          } else {\n            if (typeof chrBands !== 'undefined') {\n              // If bands already available,\n              // e.g. via <script> tag in initial page load\n              ideo.bandData[taxid] = chrBands;\n            }\n            bandsArray = ideo.processBandData();\n            writeContainer();\n          }\n        }\n      });\n\n      function writeContainer() {\n        if (ideo.config.annotationsPath) {\n          _d2.default.json(ideo.config.annotationsPath, // URL\n          function (data) {\n            // Callback\n            ideo.rawAnnots = data;\n          });\n        }\n\n        // If ploidy description is a string, then convert it to the canonical\n        // array format.  String ploidyDesc is used when depicting e.g. parental\n        // origin each member of chromosome pair in a human genome.\n        // See ploidy_basic.html for usage example.\n        if ('ploidyDesc' in ideo.config && typeof ideo.config.ploidyDesc === 'string') {\n          var tmp = [];\n          for (var i = 0; i < ideo.numChromosomes; i++) {\n            tmp.push(ideo.config.ploidyDesc);\n          }\n          ideo.config.ploidyDesc = tmp;\n        }\n        // Organism ploidy description\n        ideo._ploidy = new Ploidy(ideo.config);\n\n        // Chromosome's layout\n        ideo._layout = Layout.getInstance(ideo.config, ideo);\n\n        svgClass = '';\n        if (ideo.config.showChromosomeLabels) {\n          if (ideo.config.orientation === 'horizontal') {\n            svgClass += 'labeledLeft ';\n          } else {\n            svgClass += 'labeled ';\n          }\n        }\n\n        if (ideo.config.annotationsLayout && ideo.config.annotationsLayout === 'overlay') {\n          svgClass += 'faint';\n        }\n\n        var gradients = ideo.getBandColorGradients();\n        var svgWidth = ideo._layout.getWidth(taxid);\n        var svgHeight = ideo._layout.getHeight(taxid);\n\n        _d2.default.select(ideo.config.container).append('div').append('svg').attr('id', '_ideogram').attr('class', svgClass).attr('width', svgWidth).attr('height', svgHeight).html(gradients);\n\n        finishInit();\n      }\n\n      function finishInit() {\n        try {\n          var t0A = new Date().getTime();\n\n          var i;\n\n          ideo.initDrawChromosomes(bandsArray);\n\n          // Waits for potentially large annotation dataset\n          // to be received by the client, then triggers annotation processing\n          if (ideo.config.annotationsPath) {\n            var pa = function pa() {\n              if (typeof ideo.timeout !== 'undefined') {\n                window.clearTimeout(ideo.timeout);\n              }\n\n              ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n              ideo.drawProcessedAnnots(ideo.annots);\n\n              if (typeof crossfilter !== 'undefined' && ideo.initCrossFilter) {\n                ideo.initCrossFilter();\n              }\n            };\n\n            if (ideo.rawAnnots) {\n              pa();\n            } else {\n              (function checkAnnotData() {\n                ideo.timeout = setTimeout(function () {\n                  if (!ideo.rawAnnots) {\n                    checkAnnotData();\n                  } else {\n                    pa();\n                  }\n                }, 50);\n              })();\n            }\n          }\n\n          if (ideo.config.showBandLabels === true) {\n            var bandsToShow = ideo.bandsToShow.join(',');\n\n            // d3.selectAll resolves to querySelectorAll (QSA).\n            // QSA takes a surprisingly long time to complete,\n            // and scales with the number of selectors.\n            // Most bands are hidden, so we can optimize by\n            // Hiding all bands, then QSA'ing and displaying the\n            // relatively few bands that are shown.\n            var t0C = new Date().getTime();\n            _d2.default.selectAll(ideo.selector + ' .bandLabel, .bandLabelStalk').style('display', 'none');\n            _d2.default.selectAll(bandsToShow).style('display', '');\n            var t1C = new Date().getTime();\n            if (ideo.debug) {\n              console.log('Time in showing bands: ' + (t1C - t0C) + ' ms');\n            }\n\n            if (ideo.config.orientation === 'vertical') {\n              var chrID;\n              for (i = 0; i < ideo.chromosomesArray.length; i++) {\n                chrID = '#' + ideo.chromosomesArray[i].id;\n                ideo.rotateChromosomeLabels(_d2.default.select(chrID), i);\n              }\n            }\n          }\n\n          if (ideo.config.showChromosomeLabels === true) {\n            ideo.drawChromosomeLabels(ideo.chromosomes);\n          }\n\n          if (ideo.config.brush === true) {\n            ideo.createBrush();\n          }\n\n          if (ideo.config.annotations) {\n            ideo.drawAnnots(ideo.config.annotations);\n          }\n\n          var t1A = new Date().getTime();\n          if (ideo.debug) {\n            console.log('Time in drawChromosome: ' + (t1A - t0A) + ' ms');\n          }\n\n          var t1 = new Date().getTime();\n          if (ideo.debug) {\n            console.log('Time constructing ideogram: ' + (t1 - t0) + ' ms');\n          }\n\n          if (ideo.onLoadCallback) {\n            ideo.onLoadCallback();\n          }\n\n          if (!('rotatable' in ideo.config && ideo.config.rotatable === false)) {\n            _d2.default.selectAll(ideo.selector + ' .chromosome').on('click', function () {\n              ideo.rotateAndToggleDisplay(this);\n            });\n          } else {\n            _d2.default.selectAll(ideo.selector + ' .chromosome').style('cursor', 'default');\n          }\n        } catch (e) {\n          // console.log(e);\n          throw e;\n        }\n      }\n    }\n  }]);\n\n  return Ideogram;\n}();","'use strict';\n\n// Chromosome's view utility class\nfunction ChromosomeUtil(node) {\n  this._node = node;\n}\n\nChromosomeUtil.prototype.getLabel = function () {\n  var label = d3.select(this._node).select('text.chrLabel').text();\n  return label;\n};\n\n// Get chromosome set label\nChromosomeUtil.prototype.getSetLabel = function () {\n  var setLabel = d3.select(this._node.parentNode).select('text.chromosome-set-label').text();\n  return setLabel;\n};","'use strict';\n\n/* Decompresses ideogram's annotations for crossfilter initialization\nBy default, annotations are clustered by chromosome, e.g.\n[\n  {\"chr\": \"1\", \"annots\": [{\"from\": 100, \"to\", 101, \"chr\": \"1\", ...}, ...]},\n  {\"chr\": \"2\", \"annots\": [{\"from\": 500, \"to\", 501, \"chr\": \"2\", ...}, ...]},\n  ...\n]\nThis method flattens that structure to e.g.\n[\n  {\"from\": 100, \"to\": 101, \"chr\": \"1\", ...},\n  ...\n  {\"from\": 500, \"to\": 501, \"chr\": \"2\", ...},\n]\nSee also: packAnnots\n*/\nIdeogram.prototype.unpackAnnots = function () {\n  var chr,\n      annots,\n      i,\n      unpackedAnnots = [],\n      ideo = this,\n      chrs = ideo.annots;\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots = chr.annots;\n    unpackedAnnots = unpackedAnnots.concat(annots);\n  }\n\n  return unpackedAnnots;\n};\n\n/*\n  Compresses annots back to default state.  Inverse of unpackAnnots.\n*/\nIdeogram.prototype.packAnnots = function (unpackedAnnots) {\n  var chr,\n      annot,\n      i,\n      annots = [],\n      ideo = this,\n      chrs = ideo.annots;\n\n  for (chr in chrs) {\n    annots.push({ chr: chrs[chr].chr, annots: [] });\n  }\n\n  for (i = 0; i < unpackedAnnots.length; i++) {\n    annot = unpackedAnnots[i];\n    annots[annot.chrIndex].annots.push(annot);\n  }\n\n  return annots;\n};\n\n/*\n  Initializes crossfilter.  Needed for client-side filtering.\n  More: https://github.com/square/crossfilter/wiki/API-Reference\n*/\nIdeogram.prototype.initCrossFilter = function () {\n  var ideo = this,\n      keys = ideo.rawAnnots.keys,\n      i,\n      facet;\n\n  ideo.unpackedAnnots = ideo.unpackAnnots();\n  ideo.crossfilter = crossfilter(ideo.unpackedAnnots);\n\n  ideo.annotsByFacet = {};\n\n  ideo.facets = keys.slice(3, keys.length);\n\n  for (i = 0; i < ideo.facets.length; i++) {\n    facet = ideo.facets[i];\n    ideo.annotsByFacet[facet] = ideo.crossfilter.dimension(function (d) {\n      return d[facet];\n    });\n  }\n};\n\n/*\n  Filters annotations based on the given selections\n  \"selections\" is an object of objects, e.g.\n\n    {\n      \"tissue-type\": {          <-- a facet\n        \"cerebral-cortex\": 1,   <-- a filter; \"1\" means it is selected\n        \"liver\": 1\n      },\n      \"gene-type\": {\n        mirna\": 1\n      }\n    }\n\n  Translation:\n  select where:\n      (tissue-type is cerebral-cortex OR liver) and (gene-type is mirna)\n\n  TODO:\n    * Filter counts\n    * Range filters\n    * Integrate server-side filtering for very large datasets\n*/\nIdeogram.prototype.filterAnnots = function (selections) {\n  var t0 = Date.now();\n\n  var i,\n      facet,\n\n  // prevFacet = null,\n  results,\n      fn,\n      counts = {},\n      ideo = this;\n\n  if (Object.keys(selections).length === 0) {\n    results = ideo.unpackedAnnots;\n  } else {\n    for (i = 0; i < ideo.facets.length; i++) {\n      facet = ideo.facets[i];\n      if (facet in selections) {\n        fn = function fn(d) {\n          if (d in selections[facet]) {\n            return true;\n          }\n        };\n      } else {\n        fn = null;\n      }\n      ideo.annotsByFacet[facet].filter(fn);\n      counts[facet] = ideo.annotsByFacet[facet].group().top(Infinity);\n    }\n\n    results = ideo.annotsByFacet[facet].top(Infinity);\n  }\n\n  for (i < 0; i < ideo.facets.length; i++) {\n    ideo.annotsByFacet[facet].filterAll(); // clear filters\n  }\n\n  results = ideo.packAnnots(results);\n\n  d3.selectAll(ideo.selector + ' polygon.annot').remove();\n  ideo.drawAnnots(results);\n\n  console.log('Time in filterAnnots: ' + (Date.now() - t0) + ' ms');\n\n  return counts;\n};"]}