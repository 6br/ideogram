{"version":3,"sources":["range.js","model-adapter.js","model-no-bands-adapter.js","layouts/layout.js","layouts/horizontal-layout.js","layouts/vertical-layout.js","layouts/paired-layout.js","layouts/small-layout.js","ploidy.js","color.js","views/chromosome.js","views/telocentric-chromosome.js","views/metacentric-chromosome.js","lib.js","views/chromosome-util.js","core.js","filter.js"],"names":["Range","data","this","_data","ModelAdapter","model","_model","_class","ModelNoBandsAdapter","call","Layout","config","ideo","_config","_ideo","_ploidy","_translate","undefined","_tickSize","_isRotated","HorizontalLayout","_margin","left","top","VerticalLayout","PairedLayout","SmallLayout","Ploidy","_description","_normilize","ploidyDesc","Color","Chromosome","adapter","_adapter","getModel","_color","_bumpCoefficient","TelocentricChromosome","_pArmOffset","MetacentricChromosome","naturalSort","a","b","q","r","c","d","e","f","g","h","i","insensitive","toLowerCase","replace","j","k","l","split","m","n","parseInt","match","length","Date","parse","o","p","parseFloat","s","t","u","v","Math","max","isNaN","test","localeCompare","w","abs","ChromosomeUtil","node","_node","prototype","getStart","start","getStop","stop","getLength","getColor","chrNumber","ploidy","_getColor","Array","isArray","color","getInstance","bands","getCssClass","Object","create","width","push","name","px","perspective","rows","orientation","_getLeftMargin","_getYScale","chrWidth","getChromosomeLabels","chrElement","util","getSetLabel","getLabel","filter","rotateBack","chrSetNumber","callback","Error","rotateForward","rotate","otherChrs","d3","selectAll","style","getChromosomeLabelClass","_getAdditionalOffset","annotationHeight","numAnnotTracks","_getChromosomeSetSize","setSize","getSetSize","getMargin","getHeight","taxId","getChromosomeBandTickY1","getChromosomeBandTickY2","getChromosomeBandLabelTranslate","band","getChromosomeSetLabelAnchor","getChromosomeBandLabelAnchor","getChromosomeLabelXPosition","getChromosomeLabelYPosition","getChromosomeSetLabelYPosition","getChromosomeSetLabelXPosition","getChromosomeSetLabelTranslate","getChromosomeSetTranslate","setNumber","getChromosomeSetYTranslate","margin","xOffset","ideoBox","select","getBoundingClientRect","chrBox","scaleX","height","scaleY","yOffset","transform","parentNode","transition","attr","on","labels","getSvg","append","enter","text","String","translate","remove","lastSetOffset","chromosomes","lastSetSize","x","round","y","chrMargin","self","chrHeight","marginTop","chromosomeSetYTranslate","pad","annotationsLayout","prevTranslate","translateY","Number","organisms","getTaxids","taxIdList","size","rowSize","additionalPadding","getChromosomesNumber","chrSetCode","keys","description","normalized","key","ancestors","existance","_getExistanceArray","array","getAncestor","isExists","armNumber","getArmColor","chrNmber","armColors","_getPolyploidArmColor","getBorderColor","centromerePosition","_addPArmShape","clipPath","isPArmRendered","concat","_getPArmShape","_addQArmShape","isQArmRendered","_getQArmShape","render","container","id","_renderPArm","_renderQArm","_renderRangeSet","path","class","rangeSet","range","chr","map","rangesContainer","bandsXOffset","_bandsXOffset","startPx","convertBpToPx","lengthPx","_getShapeData","firstQBand","lastBand","rightTerminalPosition","x1","x2","x3","_renderBands","arm","fill","stain","Boolean","G","Q","process","nextTick","B","X","document","createTextNode","observe","characterData","MessageChannel","port1","onmessage","port2","postMessage","setTimeout","J","tt","require","runOnLoop","runOnContext","constructor","rt","_state","arguments","_result","E","_","TypeError","then","ut","error","S","_label","it","st","et","resolve","nt","A","_onerror","T","ot","_subscribers","M","P","ct","C","O","at","Y","_t","promise","I","F","D","K","L","N","_instanceConstructor","_input","_remaining","_enumerate","U","W","global","Function","Promise","toString","cast","pt","z","H","R","window","V","MutationObserver","WebKitMutationObserver","Z","$","Uint8ClampedArray","importScripts","random","substring","ft","lt","ht","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","_settledAt","_willSettleAt","dt","vt","polyfill","define","amd","module","exports","ES6Promise","slice","apply","forEach","Ideogram","rect","JSON","stringify","_layout","debug","bandDir","resolution","showChromosomeLabels","querySelector","showBandLabels","brush","bump","adjustedBump","chromosome","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","9606","commonName","scientificName","scientificNameAbbr","assemblies","default","GRCh38","GRCh37","10090","7227","4641","chromosomesArray","bandsToShow","numChromosomes","bandData","init","getBands","content","taxid","lines","delimiter","tsvLines","columns","line","tsvLinesLength","source","firstColumn","chrBands","eval","indexOf","chromosomeName","getChromosomeModel","chrIndex","pxStop","chrLength","cs","hasBands","type","fullChromosomeLabels","orgName","csLength","pcenIndex","scale","multiorganism","drawChromosomeLabels","chromosomeLabelClass","chrSetLabelXPosition","chrSetLabelTranslate","each","reverse","fullLabels","setLabelTranslate","drawBandLabels","chrs","chrModel","textOffsets","lineY1","lineY2","overlappingLabelXRight","index","prevHiddenBoxIndex","xLeft","prevLabelXRight","textPadding","textsLength","indexesToShow","prevTextBoxLeft","prevTextBoxWidth","selectorsToShow","ithLength","rotateChromosomeLabels","scaleSvg","tracksHeight","hasOwnProperty","ci","chrMargin2","rotateBandLabels","bandLabels","coord","drawChromosome","rotateAndToggleDisplay","_groups","bpToIscnScale","offset","pxStart","pxLength","iscnStart","iscnStop","iscnLength","bpStart","bpStop","bpLength","convertPxToBp","pxToIscnScale","drawSynteny","syntenicRegions","r1","r2","syntenies","opacity","regionID","t0","getTime","insert","regions","stopPx","syntenicRegion","activeRegion","others","classed","t1","console","log","annotationsPath","localAnnotationsPath","annots","annotations","annotHeight","annotationTracks","barWidth","annotationsColor","drawAnnots","friendlyAnnots","annot","rawAnnot","rawAnnots","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","getHistogramBars","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","histogramScaling","firstGet","numBins","count","barAnnots","barCount","layout","triangle","circle","chrAnnot","y1","y2","thisChrWidth","createBrush","from","to","extent","event","selection","xScale","invert","floor","ceil","selectedRegion","x0","chrLengthBp","scaleLinear","domain","right","brushX","yTranslate","move","getBandColorGradients","colors","color1","color2","color3","css","gradients","getTaxidFromEutils","organism","taxonomySearch","json","esearchresult","idlist","taxids","org","orgs","taxidInit","tmpChrs","assembly","getAssemblyAndChromosomesFromEutils","asmChrArray","sortChromosomes","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","asmAndChrArray","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","links","ntSummary","results","result","cnIndex","rsuid","assemblyaccession","qs","linksets","linksetdbs","join","genome","subtype","subname","substr","slen","sort","initDrawChromosomes","bandsArray","defs","writeContainer","svgClass","svgHeight","html","finishInit","processBandData","bandsByChr","chrsByTaxid","t0B","t1B","pa","timeout","clearTimeout","initCrossFilter","t0A","checkAnnotData","t0C","t1C","chrID","t1A","ideogram","bandDataFileNames","accession","numBandDataResponses","request","get","response","unpackAnnots","unpackedAnnots","packAnnots","facet","crossfilter","annotsByFacet","facets","dimension","filterAnnots","selections","fn","now","counts","group","Infinity","filterAll","label","setLabel"],"mappings":"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","file":"ideogram.min.js","sourcesContent":["/**\n * Chromosome range.\n * @public\n * @class\n * @param {Object} data - range data.\n * @param {Integer} data.chr - chromosome index.\n * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n * @param {Integer} data.start - range start.\n * @param {Integer} data.stop - range end.\n * @param {String} data.color - range color.\n */\nfunction Range(data) {\n  this._data = data;\n}\n\nRange.prototype.getStart = function() {\n  return this._data.start;\n};\n\nRange.prototype.getStop = function() {\n  return this._data.stop;\n};\n\nRange.prototype.getLength = function() {\n  return this._data.stop - this._data.start;\n};\n\nRange.prototype.getColor = function(chrNumber) {\n  if (!('ploidy' in this._data)) {\n    return this._getColor(chrNumber);\n  } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n    return this._getColor(chrNumber);\n  } else {\n    return 'transparent';\n  }\n};\n\nRange.prototype._getColor = function(chrNumber) {\n  if (Array.isArray(this._data.color)) {\n    return this._data.color[chrNumber];\n  } else {\n    return this._data.color;\n  }\n};\n","function ModelAdapter(model) {\n  this._model = model;\n  this._class = 'ModelAdapter';\n}\n\nModelAdapter.getInstance = function(model) {\n  if (model.bands) {\n    return new ModelAdapter(model);\n  } else {\n    return new ModelNoBandsAdapter(model);\n  }\n};\n\nModelAdapter.prototype.getModel = function() {\n  return this._model;\n};\n\nModelAdapter.prototype.getCssClass = function() {\n  return '';\n};\n","function ModelNoBandsAdapter(model) {\n    /*\n     * Call parent constructor.\n     */\n  ModelAdapter.call(this, model);\n  this._class = 'ModelNoBandsAdapter';\n}\n\nModelNoBandsAdapter.prototype = Object.create(ModelAdapter.prototype);\n\nModelNoBandsAdapter.prototype.getModel = function() {\n  this._model.bands = [];\n\n    // If chromosome width more, then 1 add single band to bands array\n  if (this._model.width > 1) {\n    this._model.bands.push({\n      name: 'p',\n      px: {\n        start: 0,\n        stop: this._model.width,\n        width: this._model.width\n      }\n    });\n  }\n\n  return this._model;\n};\n\nModelNoBandsAdapter.prototype.getCssClass = function() {\n  return 'noBands';\n};\n","function Layout(config, ideo) {\n  this._config = config;\n  this._ideo = ideo;\n  this._ploidy = this._ideo._ploidy;\n  this._translate = undefined;\n\n     // Chromosome band's size.\n  this._tickSize = 8;\n\n    // Chromosome rotation state.\n  this._isRotated = false;\n}\n\n// Factory method\nLayout.getInstance = function(config, ideo) {\n  if (\"perspective\" in config && config.perspective == \"comparative\") {\n    return new PairedLayout(config, ideo);\n  } else if (\"rows\" in config && config.rows > 1) {\n    return new SmallLayout(config, ideo);\n  } else if (config.orientation === 'vertical') {\n    return new VerticalLayout(config, ideo);\n  } else if (config.orientation === 'horizontal') {\n    return new HorizontalLayout(config, ideo);\n  } else {\n    return new VerticalLayout(config, ideo);\n  }\n};\n\n// Get chart left margin\nLayout.prototype._getLeftMargin = function() {\n  return this._margin.left;\n};\n\n// Get rotated chromosome y scale\nLayout.prototype._getYScale = function() {\n    // 20 is width of rotated chromosome.\n  return 20 / this._config.chrWidth;\n};\n\n// Get chromosome labels\nLayout.prototype.getChromosomeLabels = function(chrElement) {\n  var util = new ChromosomeUtil(chrElement);\n\n  return [util.getSetLabel(), util.getLabel()].filter(function(d) {\n    return d.length > 0;\n  });\n};\n\n// Rotate chromosome to original position\nLayout.prototype.rotateBack = function(chrSetNumber, chrNumber, chrElement, callback) {\n  throw new Error(this._class + '#rotateBack not implemented');\n};\n\n// Rotate chromosome to opposite position\nLayout.prototype.rotateForward = function(chrSetNumber, chrNumber, chrElement, callback) {\n  throw new Error(this._class + '#rotateForward not implemented');\n};\n\nLayout.prototype.rotate = function(chrSetNumber, chrNumber, chrElement) {\n    // Find chromosomes which should be hidden\n  var otherChrs = d3.selectAll(\"g.chromosome\").filter(function(d, i) {\n    return this !== chrElement;\n  });\n\n  if (this._isRotated) {\n        // Reset _isRotated flag\n    this._isRotated = false;\n        // Rotate chromosome back\n    this.rotateBack(chrSetNumber, chrNumber, chrElement, function() {\n            // Show all other chromosomes and chromosome labels\n      otherChrs.style(\"display\", null);\n      d3.selectAll(\".chrSetLabel, .chrLabel\").style(\"display\", null);\n    });\n  } else {\n        // Set _isRotated flag\n    this._isRotated = true;\n\n        // Hide all other chromosomes and chromosome labels\n    otherChrs.style(\"display\", \"none\");\n    d3.selectAll(\".chrSetLabel, .chrLabel\").style(\"display\", \"none\");\n\n        // Rotate chromosome\n    this.rotateForward(chrSetNumber, chrNumber, chrElement);\n  }\n};\n\nLayout.prototype.getChromosomeLabelClass = function() {\n  if (this._config.ploidy === 1) {\n    return 'chrLabel';\n  } else {\n    return 'chrSetLabel';\n  }\n};\n\nLayout.prototype._getAdditionalOffset = function() {\n  return (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1);\n};\n\nLayout.prototype._getChromosomeSetSize = function(chrSetNumber) {\n    // Get last chromosome set size.\n  var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n    // Increase offset by last chromosome set size\n  return setSize * this._config.chrWidth * 2 + (this._config.ploidy > 1 ? 20 : 0);\n};\n\n// Get layout margin\nLayout.prototype.getMargin = function() {\n  return this._margin;\n};\n\n// Get SVG element height\nLayout.prototype.getHeight = function(taxId) {\n  throw new Error(this._class + '#getHeight not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n  throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n  throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n};\n\n// Get chromosome's band translate attribute\nLayout.prototype.getChromosomeBandLabelTranslate = function(band, chrNumber) {\n  throw new Error(this._class + '#getChromosomeBandLabelTranslate not implemented');\n};\n\n// Get chromosome set label anchor property\nLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'middle';\n};\n\n// Get chromosome's band label text-anchor value\nLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n  throw new Error(this._class + '#getChromosomeBandLabelAnchor not implemented');\n};\n\nLayout.prototype.getChromosomeLabelXPosition = function(i) {\n  throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n};\n\n// Get chromosome label y position. \"i\" is chromosome number\nLayout.prototype.getChromosomeLabelYPosition = function(i) {\n  return -5.5;\n};\n\nLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelYPosition(i);\n  } else {\n    return -2 * this._config.chrWidth;\n  }\n};\n\nLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n  throw new Error(this._class + '#getChromosomeSetLabelXPosition not implemented');\n};\n\nLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetLabelTranslate not implemented');\n};\n\n// Get chromosome set translate attribute.\nLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n};\n\n// Get chromosome set translate's y offset\nLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n};\n","function HorizontalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'HorizontalLayout';\n  this._margin = {\n    left: 20,\n    top: 30\n  };\n}\n\nHorizontalLayout.prototype = Object.create(Layout.prototype);\n\nHorizontalLayout.prototype._getLeftMargin = function() {\n  var margin = Layout.prototype._getLeftMargin.call(this);\n  if (this._config.ploidy > 1) {\n    margin *= 1.8;\n  }\n\n  return margin;\n};\n\nHorizontalLayout.prototype.rotateForward = function(setNumber, chrNumber, chrElement, callback) {\n  var self = this;\n\n  var xOffset = 30;\n\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.height / (chrBox.width + xOffset / 2)) * 0.9;\n  var scaleY = this._getYScale();\n\n  var yOffset = (chrNumber + 1) * ((this._config.chrWidth * 2) * scaleY);\n\n  var transform = 'rotate(90) translate(' + xOffset + ', -' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  d3.select(this._ideo.getSvg())\n        .append('g')\n        .attr('class', 'tmp')\n        .selectAll('text')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', function(d, i) {\n          return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n        }).attr('x', function(d, i) {\n          return 30;\n        }).attr('y', function(d, i) {\n          return (i + 1 + labels.length % 2) * 12;\n        }).style('text-anchor', 'middle')\n        .style('opacity', 0)\n        .text(String)\n        .transition()\n        .style('opacity', 1);\n};\n\nHorizontalLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nHorizontalLayout.prototype.getHeight = function(taxId) {\n    // Get last chromosome set offset.\n  var lastSetOffset = this.getChromosomeSetYTranslate(this._config.chromosomes[taxId].length - 1);\n\n    // Get last chromosome set size.\n  var lastSetSize = this._getChromosomeSetSize(this._config.chromosomes[taxId].length - 1);\n\n    // Increase offset by last chromosome set size\n  lastSetOffset += lastSetSize;\n\n  return lastSetOffset + this._getAdditionalOffset() * 2;\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'end';\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n  return 2;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n  return 10;\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelTranslate = function(band) {\n  var x = this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n  var y = -10;\n\n  return {\n    x: x,\n    y: y,\n    translate: 'translate(' + x + ',' + y + ')'\n  };\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  return \"translate(\" + this._getLeftMargin() + \", \" + this.getChromosomeSetYTranslate(setNumber) + \")\";\n};\n\nHorizontalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // If no detailed description provided just use one formula for all cases.\n  if (!this._config.ploidyDesc) {\n    return this._config.chrMargin * (setNumber + 1);\n  }\n\n    // Id detailed description provided start to calculate offsets\n    //  for each chromosome set separately. This should be done only once.\n  if (!this._translate) {\n        // First offset equals to zero.\n    this._translate = [1];\n\n        // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      this._translate[i] = this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelXPosition(i);\n  } else {\n    return -20;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return (this._ploidy.getSetSize(i) * this._config.chrWidth) / 2 + 3;\n  } else {\n    return this._ploidy.getSetSize(i) * this._config.chrWidth;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeLabelXPosition = function(i) {\n  return -8;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelYPosition = function(i) {\n  return this._config.chrWidth;\n};\n","\nfunction VerticalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'VerticalLayout';\n    // Layout margins\n  this._margin = {\n    top: 30,\n    left: 15\n  };\n}\n\nVerticalLayout.prototype = Object.create(Layout.prototype);\n\nVerticalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n\n  var xOffset = 20;\n\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  var transform =\n    \"translate(\" + xOffset + \", 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  var y = (xOffset + self._config.chrWidth) * 1.3;\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(labels)\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', y).style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nVerticalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nVerticalLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nVerticalLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nVerticalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var marginTop = this._margin.top;\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nVerticalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation/histogram tracks\n  var pad = this._getAdditionalOffset(),\n    margin = this._config.chrMargin,\n    width = this._config.chrWidth,\n    translate;\n\n    // If no detailed description provided just use one formula for all cases\n  if (!this._config.ploidyDesc) {\n   // TODO:\n   // This part of code contains a lot magic numbers and if\n   // statements for exactly corresponing to original ideogram examples.\n   // But all this stuff should be removed. Calculation of translate\n   // should be a simple formula applied for all cases listed below.\n   // Now they are diffirent because of Layout:_getAdditionalOffset do\n   // not meet for cases when no annotation, when annotation exists and\n   // when histogram used\n\n    if (this._config.annotationsLayout === \"histogram\") {\n      return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n    } else {\n      translate = width + setNumber * (margin + width) + pad * 2;\n      if (pad > 0) {\n        return translate;\n      } else {\n        return translate + 4 + (2 * setNumber);\n      }\n    }\n  }\n\n    // If detailed description provided start to calculate offsets\n    // for each chromosome set separately. This should be done only once\n  if (!this._translate) {\n    // First offset equals to zero\n    this._translate = [this._ploidy.getSetSize(0) * width * 2];\n    var prevTranslate;\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      prevTranslate = this._translate[i - 1];\n      this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nVerticalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function PairedLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'PairedLayout';\n\n  this._margin = {\n    left: 30\n  };\n}\n\nPairedLayout.prototype = Object.create(Layout.prototype);\n\nPairedLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n\n    // Get ideo container and chromosome set dimensions\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n    // Evaluate dimensions scale coefficients\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n    // Evaluate y offset of chromosome. It is different for first and the second one\n  var yOffset = setNumber ? 150 : 25;\n\n  var transform =\n    'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n    .transition()\n    .attr(\"transform\", transform)\n    .on('end', function() {\n        // Run callback function if provided\n      if (callback) {\n        callback();\n      }\n\n      var translateY = (6 * Number(!setNumber));\n\n      // Rotate band labels\n      d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n        .attr('transform', 'rotate(90) translate(0, ' + translateY + ')')\n        .attr(\"text-anchor\", \"middle\");\n\n      // Hide syntenic regions\n      d3.selectAll('.syntenicRegion').style(\"display\", 'none');\n    });\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(this.getChromosomeLabels(chrElement))\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', yOffset + (self._config.chrWidth * scaleX / 2) * 1.15)\n    .style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nPairedLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n    // Get intial transformation string for chromosome set\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', function() {\n            // Run callback fnuction if provided\n          callback();\n            // Show syntenic regions\n          d3.selectAll('.syntenicRegion').style(\"display\", null);\n            // Reset changed attributes to original state\n          d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n            .attr('transform', null)\n            .attr(\"text-anchor\", setNumber ? null : 'end');\n        });\n\n  d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nPairedLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.left * 1.5;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n  return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n  var width = this._config.chrWidth;\n  return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n  return chrNumber % 2 ? null : 'end';\n};\n\nPairedLayout.prototype.getChromosomeBandLabelTranslate = function(band,\n  chrNumber) {\n  var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n  var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n  return {\n    x: y,\n    y: y,\n    translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n  };\n};\n\nPairedLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nPairedLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nPairedLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  return 200 * (setNumber + 1);\n};\n","function SmallLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'SmallLayout';\n\n  this._margin = {\n    left: 36.5,\n    top: 10\n  };\n}\n\nSmallLayout.prototype = Object.create(Layout.prototype);\n\nSmallLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  transform = \"translate(5, 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.getHeight = function() {\n  return this._config.rows * (this._config.chrHeight + this._margin.top * 1.5);\n};\n\nSmallLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nSmallLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nSmallLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n    // Get organisms id list\n  var organisms = [];\n  this._ideo.getTaxids(function(taxIdList) {\n    organisms = taxIdList;\n  });\n    // Get first organism chromosomes amount\n  var size = this._ideo.config.chromosomes[organisms[0]].length;\n    // Amount of chromosomes per number\n  var rowSize = size / this._config.rows;\n\n  var xOffset;\n  var yOffset;\n\n  if (setNumber > rowSize - 1) {\n    xOffset = this._margin.left + this._config.chrHeight * 1.4;\n    yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n  } else {\n    xOffset = this._margin.left;\n    yOffset = this.getChromosomeSetYTranslate(setNumber);\n  }\n\n  return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n};\n\nSmallLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation tracks\n  var additionalPadding = this._getAdditionalOffset();\n    // If no detailed description provided just use one formula for all cases\n  return (\n    this._margin.left * (setNumber) + this._config.chrWidth +\n    additionalPadding * 2 + additionalPadding * setNumber\n  );\n};\n\nSmallLayout.prototype.getChromosomeSetLabelXPosition = function(setNumber) {\n  return (\n    ((this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2) +\n    (this._config.ploidy > 1 ? 0 : this._config.chrWidth)\n  );\n};\n\nSmallLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function Ploidy(config) {\n  this._config = config;\n  this._description = this._normilize(this._config.ploidyDesc);\n}\n\n// Get number of chromosomes in a chromosome set\nPloidy.prototype.getChromosomesNumber = function(setNumber) {\n  if (this._config.ploidyDesc) {\n    var chrSetCode = this._config.ploidyDesc[setNumber];\n    if (chrSetCode instanceof Object) {\n      return Object.keys(chrSetCode)[0].length;\n    } else {\n      return chrSetCode.length;\n    }\n  } else {\n    return this._config.ploidy || 1;\n  }\n};\n\n// Normalize use defined description\nPloidy.prototype._normilize = function(description) {\n    // Return the same if no description provided\n  if (!description) {\n    return description;\n  }\n\n    // Array of normalized description objects\n  var normalized = [];\n\n     // Loop through description and normalize\n  for (var key in description) {\n    if (typeof description[key] === 'string') {\n      normalized.push({\n        ancestors: description[key],\n        existance: this._getExistanceArray(description[key].length)\n      });\n    } else {\n      normalized.push({\n        ancestors: Object.keys(description[key])[0],\n        existance: description[key][Object.keys(description[key])[0]]\n      });\n    }\n  }\n\n  return normalized;\n};\n\n// Get array filled by '11' elements\nPloidy.prototype._getExistanceArray = function(length) {\n  var array = [];\n\n  for (var i = 0; i < length; i++) {\n    array.push('11');\n  }\n\n  return array;\n};\n\nPloidy.prototype.getSetSize = function(chrSetNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors.length;\n  } else {\n    return 1;\n  }\n};\n\n// Get ancestor letter\nPloidy.prototype.getAncestor = function(chrSetNumber, chrNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors[chrNumber];\n  } else {\n    return '';\n  }\n};\n\n// Check if chromosome's arm should be rendered.\n// If no description was provided, method returns true and\n// something another depending on user provided description.\nPloidy.prototype.isExists = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._description) {\n    return Number(this._description[chrSetNumber].existance[chrNumber][armNumber]) > 0;\n  } else {\n    return true;\n  }\n};\n","function Color(config) {\n    // Ideogram config\n  this._config = config;\n  this._ploidy = new Ploidy(this._config);\n}\n\nColor.prototype.getArmColor = function(chrSetNumber, chrNmber, armNumber) {\n  if (this._config.armColors) {\n    return this._config.armColors[armNumber];\n  } else if (this._config.ancestors) {\n    return this._getPolyploidArmColor(chrSetNumber, chrNmber, armNumber);\n  } else {\n    return null;\n  }\n};\n\nColor.prototype.getBorderColor = function(chrSetNumber, chrNmber, armNumber) {\n  if (chrNmber < this._config.ploidy) {\n    return '#000';\n  } else if (this._ploidy.isExists(chrSetNumber, chrNmber, armNumber)) {\n    return '#000';\n  } else {\n    return '#fff';\n  }\n};\n\nColor.prototype._getPolyploidArmColor = function(chrSetNumber, chrNmber, armNumber) {\n  if (!this._ploidy.isExists(chrSetNumber, chrNmber, armNumber)) {\n    return 'transparent';\n  } else {\n    return this._config.ancestors[this._ploidy.getAncestor(chrSetNumber, chrNmber, armNumber)];\n  }\n};\n","function Chromosome(adapter, config, ideo) {\n  this._adapter = adapter;\n  this._model = this._adapter.getModel();\n  this._config = config;\n  this._ideo = ideo;\n  this._color = new Color(this._config);\n  this._bumpCoefficient = 5;\n}\n\n// Factory method\nChromosome.getInstance = function(adapter, config, ideo) {\n  if (adapter.getModel().centromerePosition === 'telocentric') {\n    return new TelocentricChromosome(adapter, config, ideo);\n  } else {\n    return new MetacentricChromosome(adapter, config, ideo);\n  }\n};\n\nChromosome.prototype._addPArmShape = function(clipPath, isPArmRendered) {\n  if (isPArmRendered) {\n    return clipPath.concat(this._getPArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype._addQArmShape = function(clipPath, isQArmRendered) {\n  if (isQArmRendered) {\n    return clipPath.concat(this._getQArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype.render = function(container, chrSetNumber, chrNumber) {\n    // Append bands container and apply clip-path on it\n  container = container.append('g')\n    .attr('class', 'bands')\n    .attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n    // Render chromosome arms\n  var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n  var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n    // Render range set\n  this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n    // Push arms shape string into clipPath array\n  var clipPath = [];\n  clipPath = this._addPArmShape(clipPath, isPArmRendered);\n  clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n    // Render chromosome border\n  var self = this;\n  container.append('g')\n        .attr('class', 'chromosome-border')\n        .selectAll('path')\n        .data(clipPath)\n        .enter()\n        .append('path')\n        .attr('fill', 'transparent')\n        .attr('stroke', function(d, i) {\n          return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n        }).attr('stroke-width', 1)\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n\n  return clipPath;\n};\n\nChromosome.prototype._renderRangeSet = function(container, chrSetNumber,\n  chrNumber) {\n  if (!('rangeSet' in this._config)) {\n    return;\n  }\n\n  var rangeSet = this._config.rangeSet.filter(function(range) {\n    return range.chr - 1 === chrSetNumber;\n  }).map(function(range) {\n    return new Range(range);\n  });\n\n  var rangesContainer = container.append('g')\n        .attr('class', 'range-set');\n\n  var self = this;\n  var ideo = self._ideo;\n  var bandsXOffset = ideo._bandsXOffset;\n\n  rangesContainer.selectAll('rect.range')\n        .data(rangeSet)\n        .enter()\n        .append('rect')\n        .attr('class', 'range')\n        .attr('x', function(range) {\n          var startPx = ideo.convertBpToPx(self._model, range.getStart());\n          return startPx - bandsXOffset;\n        }).attr('y', 0)\n        .attr('width', function(range) {\n          var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n          return lengthPx - bandsXOffset;\n        }).attr('height', this._config.chrWidth)\n        .style('fill', function(range) {\n          return range.getColor(chrNumber);\n        });\n};\n\n// Get chromosome's shape main values\nChromosome.prototype._getShapeData = function() {\n    // First q band from bands sequence\n  var firstQBand;\n  for (var i = 0; i < this._model.bands.length; i++) {\n    if (this._model.bands[i].name[0] === 'q') {\n      firstQBand = this._model.bands[i];\n      break;\n    }\n  }\n\n  // Chromosome's right position\n  var lastBand = this._model.bands.length - 1;\n  var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n    // Properties description:\n    // x1 - left terminal start position\n    // x2 - centromere position\n    // x3 - right terminal end position\n    // w - chromosome width\n    // b - bump size\n  return {\n    x1: 0,\n    x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n    x3: rightTerminalPosition,\n    w: this._config.chrWidth,\n    b: this._config.chrWidth / this._bumpCoefficient\n  };\n};\n\nChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x2 - d.b;\n\n  return {\n    class: '',\n    path:\n      'M' + d.b + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + d.b + ',' + d.w + ' ' +\n      'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n  };\n};\n\nChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b;\n\n  return {\n    class: '',\n    path:\n      'M' + (d.x2 + d.b) + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + (d.x2 + d.b) + ',' + d.w + ' ' +\n      'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + (d.x2 + d.b) + ',0'\n  };\n};\n\n// Render arm bands\nChromosome.prototype._renderBands = function(container, chrSetNumber,\n  chrNumber, bands, arm) {\n  var self = this;\n  var armNumber = arm === 'p' ? 0 : 1;\n  var fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n\n  container.selectAll(\"path.band.\" + arm)\n    .data(bands)\n    .enter()\n    .append(\"path\")\n    .attr(\"id\", function(d) {\n      return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n    })\n    .attr(\"class\", function(d) {\n      return 'band ' + arm + '-band ' + d.stain;\n    })\n    .attr(\"d\", function(d) {\n      var start = self._ideo.round(d.px.start);\n      var length = self._ideo.round(d.px.width);\n\n      x = start + length;\n\n      return \"M \" + start + \", 0\" +\n            \"l \" + length + \" 0 \" +\n            \"l 0 \" + self._config.chrWidth + \" \" +\n            \"l -\" + length + \" 0 z\";\n    })\n    .style('fill', fill);\n};\n\n// Render chromosome's p arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderPArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'p';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n  return Boolean(bands.length);\n};\n\n// Render chromosome's q arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderQArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'q';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n  return Boolean(bands.length);\n};\n","function TelocentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'TelocentricChromosome';\n  this._pArmOffset = 3;\n}\n\nTelocentricChromosome.prototype = Object.create(Chromosome.prototype);\n\nTelocentricChromosome.prototype._addPArmShape = function(clipPath) {\n  return clipPath.concat(this._getPArmShape());\n};\n\nTelocentricChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData();\n  d.o = this._pArmOffset;\n\n  return [{\n    class: 'acen',\n    path: 'M' + d.x2 + ',1' +\n            'L' + (d.x2 - d.o) + ',1 ' +\n            'L' + (d.x2 - d.o) + ',' + (d.w - 1) + ' ' +\n            'L' + d.x2 + ',' + (d.w - 1)\n  }, {\n    class: 'gpos100',\n    path: 'M' + (d.x2 - d.o + 1) + ',0' +\n        'L' + (d.x2 - d.o) + ',0 ' +\n        'L' + (d.x2 - d.o) + ',' + d.w + ' ' +\n        'L' + (d.x2 - d.o + 1) + ',' + d.w\n  }];\n};\n\nTelocentricChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b;\n\n  return {\n    class: '',\n    path:\n      'M' + d.x2 + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + d.x2 + ',' + d.w\n  };\n};\n","function MetacentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'MetacentricChromosome';\n}\n\nMetacentricChromosome.prototype = Object.create(Chromosome.prototype);\n","// https://github.com/stefanpenner/es6-promise\n(function(){\"use strict\";function t(t){return\"function\"==typeof t||\"object\"==typeof t&&null!==t}function e(t){return\"function\"==typeof t}function n(t){G=t}function r(t){Q=t}function o(){return function(){process.nextTick(a)}}function i(){return function(){B(a)}}function s(){var t=0,e=new X(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){t.port2.postMessage(0)}}function c(){return function(){setTimeout(a,1)}}function a(){for(var t=0;J>t;t+=2){var e=tt[t],n=tt[t+1];e(n),tt[t]=void 0,tt[t+1]=void 0}J=0}function f(){try{var t=require,e=t(\"vertx\");return B=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[rt]&&k(r);var o=n._state;if(o){var i=arguments[o-1];Q(function(){x(o,r,i,n._result)})}else E(n,r,t,e);return r}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function _(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function v(t){try{return t.then}catch(e){return ut.error=e,ut}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){Q(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===it?S(t,e._result):e._state===st?j(t,e._result):E(e,void 0,function(e){g(t,e)},function(e){j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===et&&constructor.resolve===nt?b(t,n):r===ut?j(t,ut.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,_()):t(n)?w(e,n,v(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===ot&&(t._result=e,t._state=it,0!==t._subscribers.length&&Q(T,t))}function j(t,e){t._state===ot&&(t._state=st,t._result=e,Q(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+it]=n,o[i+st]=r,0===i&&t._state&&Q(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r,o,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return ct.error=n,ct}}function x(t,n,r,o){var i,s,u,c,a=e(r);if(a){if(i=P(r,o),i===ct?(c=!0,s=i.error,i=null):u=!0,n===i)return void j(n,d())}else i=o,u=!0;n._state!==ot||(a&&u?g(n,i):c?j(n,s):t===it?S(n,i):t===st&&j(n,i))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return at++}function k(t){t[rt]=at++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t){return new _t(this,t).promise}function q(t){var e=this;return new e(I(t)?function(n,r){for(var o=t.length,i=0;o>i;i++)e.resolve(t[i]).then(n,r)}:function(t,e){e(new TypeError(\"You must pass an array to race.\"))})}function F(t){var e=this,n=new e(p);return j(n,t),n}function D(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function K(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function L(t){this[rt]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&D(),this instanceof L?C(this,t):K())}function N(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[rt]||k(this.promise),I(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,U())}function U(){return new Error(\"Array Methods must be provided an Array\")}function W(){var t;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;(!n||\"[object Promise]\"!==Object.prototype.toString.call(n.resolve())||n.cast)&&(t.Promise=pt)}var z;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B,G,H,I=z,J=0,Q=function(t,e){tt[J]=t,tt[J+1]=e,J+=2,2===J&&(G?G(a):H())},R=\"undefined\"!=typeof window?window:void 0,V=R||{},X=V.MutationObserver||V.WebKitMutationObserver,Z=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),$=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,tt=new Array(1e3);H=Z?o():X?s():$?u():void 0===R&&\"function\"==typeof require?f():c();var et=l,nt=h,rt=Math.random().toString(36).substring(16),ot=void 0,it=1,st=2,ut=new M,ct=new M,at=0,ft=Y,lt=q,ht=F,pt=L;L.all=ft,L.race=lt,L.resolve=nt,L.reject=ht,L._setScheduler=n,L._setAsap=r,L._asap=Q,L.prototype={constructor:L,then:et,\"catch\":function(t){return this.then(null,t)}};var _t=N;N.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===ot&&t>n;n++)this._eachEntry(e[n],n)},N.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===nt){var o=v(t);if(o===et&&t._state!==ot)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===pt){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){e(t)}),e)}else this._willSettleAt(r(t),e)},N.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===ot&&(this._remaining--,t===st?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},N.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){n._settledAt(it,e,t)},function(t){n._settledAt(st,e,t)})};var dt=W,vt={Promise:pt,polyfill:dt};\"function\"==typeof define&&define.amd?define(function(){return vt}):\"undefined\"!=typeof module&&module.exports?module.exports=vt:\"undefined\"!=typeof this&&(this.ES6Promise=vt),dt()}).call(this);\n\n// https://github.com/kristw/d3.promise\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"d3\"],b):\"object\"==typeof exports?module.exports=b(require(\"d3\")):a.d3.promise=b(a.d3)}(this,function(a){var b=function(){function b(a,b){return function(){var c=Array.prototype.slice.call(arguments);return new Promise(function(d,e){var f=function(a,b){return a?void e(Error(a)):void d(b)};b.apply(a,c.concat(f))})}}var c={};return[\"csv\",\"tsv\",\"json\",\"xml\",\"text\",\"html\"].forEach(function(d){c[d]=b(a,a[d])}),c}();return a.promise=b,b});\n\n// https://github.com/overset/javascript-natural-sort\nfunction naturalSort(a,b){var q,r,c=/(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,d=/^\\s+|\\s+$/g,e=/\\s+/g,f=/(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,g=/^0x[0-9a-f]+$/i,h=/^0/,i=function(a){return(naturalSort.insensitive&&(\"\"+a).toLowerCase()||\"\"+a).replace(d,\"\")},j=i(a),k=i(b),l=j.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),m=k.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),n=parseInt(j.match(g),16)||1!==l.length&&Date.parse(j),o=parseInt(k.match(g),16)||n&&k.match(f)&&Date.parse(k)||null,p=function(a,b){return(!a.match(h)||1==b)&&parseFloat(a)||a.replace(e,\" \").replace(d,\"\")||0};if(o){if(n<o)return-1;if(n>o)return 1}for(var s=0,t=l.length,u=m.length,v=Math.max(t,u);s<v;s++){if(q=p(l[s]||\"\",t),r=p(m[s]||\"\",u),isNaN(q)!==isNaN(r))return isNaN(q)?1:-1;if(/[^\\x00-\\x80]/.test(q+r)&&q.localeCompare){var w=q.localeCompare(r);return w/Math.abs(w)}if(q<r)return-1;if(q>r)return 1}}\n","// Chromosome's view utility class\nfunction ChromosomeUtil(node) {\n  this._node = node;\n}\n\nChromosomeUtil.prototype.getLabel = function() {\n  var label =\n    d3\n      .select(this._node)\n      .select('text.chrLabel')\n      .text();\n  return label;\n};\n\n// Get chromosome set label\nChromosomeUtil.prototype.getSetLabel = function() {\n  var setLabel =\n    d3\n      .select(this._node.parentNode)\n      .select('text.chromosome-set-label')\n      .text();\n  return setLabel;\n};\n","// Developed by Eric Weitz (https://github.com/eweitz)\n\n/* Constructs a prototypal Ideogram class */\nvar Ideogram = function(config) {\n  var orientation,\n    chrWidth, chrHeight,\n    container, rect;\n\n  // Clone the config object, to allow multiple instantiations\n  // without picking up prior ideogram's settings\n  this.config = JSON.parse(JSON.stringify(config));\n\n  // Organism ploidy description\n  this._ploidy = new Ploidy(this.config);\n\n  // Chromosome's layout\n  this._layout = Layout.getInstance(this.config, this);\n\n  // TODO: Document this\n  this._bandsXOffset = 30;\n\n  this.debug = false;\n\n  if (!this.config.ploidy) {\n    this.config.ploidy = 1;\n  }\n\n  if (!this.config.bandDir) {\n    this.config.bandDir = \"../data/bands/\";\n  }\n\n  if (!this.config.container) {\n    this.config.container = \"body\";\n  }\n\n  if (!this.config.resolution) {\n    this.config.resolution = 850;\n  }\n\n  if (\"showChromosomeLabels\" in this.config === false) {\n    this.config.showChromosomeLabels = true;\n  }\n\n  if (!this.config.chrMargin) {\n    this.config.chrMargin = 10;\n  }\n\n  if (!this.config.orientation) {\n    orientation = \"vertical\";\n    this.config.orientation = orientation;\n  }\n\n  if (!this.config.chrHeight) {\n    container = this.config.container;\n    rect = document.querySelector(container).getBoundingClientRect();\n\n    if (orientation === \"vertical\") {\n      chrHeight = rect.height;\n    } else {\n      chrHeight = rect.width;\n    }\n\n    if (container === \"body\") {\n      chrHeight = 500;\n    }\n    this.config.chrHeight = chrHeight;\n  }\n\n  if (!this.config.chrWidth) {\n    chrWidth = 10;\n    chrHeight = this.config.chrHeight;\n\n    if (chrHeight < 900 && chrHeight > 500) {\n      chrWidth = Math.round(chrHeight / 40);\n    } else if (chrHeight >= 900) {\n      chrWidth = Math.round(chrHeight / 45);\n    }\n    this.config.chrWidth = chrWidth;\n  }\n\n  if (!this.config.showBandLabels) {\n    this.config.showBandLabels = false;\n  }\n\n  if (!this.config.brush) {\n    this.config.brush = false;\n  }\n\n  if (!this.config.rows) {\n    this.config.rows = 1;\n  }\n\n  this.bump = Math.round(this.config.chrHeight / 125);\n  this.adjustedBump = false;\n  if (this.config.chrHeight < 200) {\n    this.adjustedBump = true;\n    this.bump = 4;\n  }\n\n  if (config.showBandLabels) {\n    this.config.chrMargin += 20;\n  }\n\n  if (config.chromosome) {\n    this.config.chromosomes = [config.chromosome];\n    if (\"showBandLabels\" in config === false) {\n      this.config.showBandLabels = true;\n    }\n    if (\"rotatable\" in config === false) {\n      this.config.rotatable = false;\n    }\n  }\n\n  if (!this.config.showNonNuclearChromosomes) {\n    this.config.showNonNuclearChromosomes = false;\n  }\n\n  this.initAnnotSettings();\n\n  this.config.chrMargin = (\n    this.config.chrMargin +\n    this.config.chrWidth +\n    this.config.annotTracksHeight * 2\n  );\n\n  if (config.onLoad) {\n    this.onLoadCallback = config.onLoad;\n  }\n\n  if (config.onDrawAnnots) {\n    this.onDrawAnnotsCallback = config.onDrawAnnots;\n  }\n\n  if (config.onBrushMove) {\n    this.onBrushMoveCallback = config.onBrushMove;\n  }\n\n  this.coordinateSystem = \"iscn\";\n\n  this.maxLength = {\n    bp: 0,\n    iscn: 0\n  };\n\n  // The E-Utilies In Depth: Parameters, Syntax and More:\n  // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n  this.eutils = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/\";\n  this.esearch = this.eutils + \"esearch.fcgi?retmode=json\";\n  this.esummary = this.eutils + \"esummary.fcgi?retmode=json\";\n  this.elink = this.eutils + \"elink.fcgi?retmode=json\";\n\n  this.organisms = {\n    9606: {\n      commonName: \"Human\",\n      scientificName: \"Homo sapiens\",\n      scientificNameAbbr: \"H. sapiens\",\n      assemblies: { // technically, primary assembly unit of assembly\n        default: \"GCF_000001305.14\", // GRCh38\n        GRCh38: \"GCF_000001305.14\",\n        GRCh37: \"GCF_000001305.13\"\n      }\n    },\n    10090: {\n      commonName: \"Mouse\",\n      scientificName: \"Mus musculus\",\n      scientificNameAbbr: \"M. musculus\",\n      assemblies: {\n        default: \"GCF_000000055.19\"\n      }\n    },\n    7227: {\n      commonName: \"Fly\",\n      scientificName: \"Drosophlia melanogaster\",\n      scientificNameAbbr: \"D. melanogaster\"\n    },\n    4641: {\n      commonName: \"banana\",\n      scientificName: \"Musa acuminata\",\n      scientificNameAbbr: \"M. acuminata\",\n      assemblies: {\n        default: \"mock\"\n      }\n    }\n  };\n\n  // A flat array of chromosomes\n  // (this.chromosomes is an object of\n  // arrays of chromosomes, keyed by organism)\n  this.chromosomesArray = [];\n\n  this.bandsToShow = [];\n\n  this.chromosomes = {};\n  this.numChromosomes = 0;\n  this.bandData = {};\n\n  this.init();\n};\n\n/**\n* Gets chromosome band data from a\n* TSV file, or, if band data is prefetched, from an array\n*\n* UCSC: #chrom chromStart  chromEnd  name  gieStain\n* http://genome.ucsc.edu/cgi-bin/hgTables\n*  - group: Mapping and Sequencing\n*  - track: Chromosome Band (Ideogram)\n*\n* NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n* ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n*/\nIdeogram.prototype.getBands = function(content, taxid, chromosomes) {\n  var lines = {},\n    delimiter, tsvLines, columns, line, stain, chr,\n    i, init, tsvLinesLength, source,\n    start, stop, firstColumn;\n\n  if (content.slice(0, 8) === \"chrBands\") {\n    source = \"native\";\n  }\n\n  if (typeof chrBands === \"undefined\" && source !== \"native\") {\n    delimiter = /\\t/;\n    tsvLines = content.split(/\\r\\n|\\n/);\n    init = 1;\n  } else {\n    delimiter = / /;\n    if (source === \"native\") {\n      tsvLines = eval(content);\n    } else {\n      tsvLines = content;\n    }\n    init = 0;\n  }\n\n  firstColumn = tsvLines[0].split(delimiter)[0];\n  if (firstColumn === '#chromosome') {\n    source = 'ncbi';\n  } else if (firstColumn === '#chrom') {\n    source = 'ucsc';\n  } else {\n    source = 'native';\n  }\n\n  tsvLinesLength = tsvLines.length;\n\n  if (source === 'ncbi' || source === 'native') {\n    for (i = init; i < tsvLinesLength; i++) {\n      columns = tsvLines[i].split(delimiter);\n\n      chr = columns[0];\n\n      if (\n        // If a specific set of chromosomes has been requested, and\n        // the current chromosome\n        typeof (chromosomes) !== \"undefined\" &&\n        chromosomes.indexOf(chr) === -1\n      ) {\n        continue;\n      }\n\n      if (chr in lines === false) {\n        lines[chr] = [];\n      }\n\n      stain = columns[7];\n      if (columns[8]) {\n        // For e.g. acen and gvar, columns[8] (density) is undefined\n        stain += columns[8];\n      }\n\n      line = {\n        chr: chr,\n        bp: {\n          start: parseInt(columns[5], 10),\n          stop: parseInt(columns[6], 10)\n        },\n        iscn: {\n          start: parseInt(columns[3], 10),\n          stop: parseInt(columns[4], 10)\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[1] + columns[2],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  } else if (source === 'ucsc') {\n    for (i = init; i < tsvLinesLength; i++) {\n      // #chrom chromStart  chromEnd  name  gieStain\n      // e.g. for fly:\n      // chr4\t69508\t108296\t102A1\tn/a\n      columns = tsvLines[i].split(delimiter);\n\n      if (columns[0] !== 'chr' + chromosomeName) {\n        continue;\n      }\n\n      stain = columns[4];\n      if (stain === 'n/a') {\n        stain = 'gpos100';\n      }\n      start = parseInt(columns[1], 10);\n      stop = parseInt(columns[2], 10);\n\n      line = {\n        chr: columns[0].split('chr')[1],\n        bp: {\n          start: start,\n          stop: stop\n        },\n        iscn: {\n          start: start,\n          stop: stop\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[3],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  }\n\n  return lines;\n};\n\n/**\n* Generates a model object for each chromosome\n* containing information on its name, DOM ID,\n* length in base pairs or ISCN coordinates,\n* cytogenetic bands, centromere position, etc.\n*/\nIdeogram.prototype.getChromosomeModel = function(bands, chromosome, taxid,\n  chrIndex) {\n  var chr = {},\n    band,\n    width, pxStop,\n    chrHeight = this.config.chrHeight,\n    maxLength = this.maxLength,\n    chrLength,\n    cs, hasBands;\n\n  cs = this.coordinateSystem;\n  hasBands = (typeof bands !== \"undefined\");\n\n  if (hasBands) {\n    chr.name = chromosome;\n    chr.length = bands[bands.length - 1][cs].stop;\n    chr.type = \"nuclear\";\n  } else {\n    chr = chromosome;\n  }\n\n  chr.chrIndex = chrIndex;\n\n  chr.id = \"chr\" + chr.name + \"-\" + taxid;\n\n  if (this.config.fullChromosomeLabels === true) {\n    var orgName = this.organisms[taxid].scientificNameAbbr;\n    chr.name = orgName + \" chr\" + chr.name;\n  }\n\n  chrLength = chr.length;\n\n  pxStop = 0;\n\n  if (hasBands) {\n    for (var i = 0; i < bands.length; i++) {\n      band = bands[i];\n      var csLength = band[cs].stop - band[cs].start;\n      width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n      bands[i].px = {start: pxStop, stop: pxStop + width, width: width};\n\n      pxStop = bands[i].px.stop;\n\n      if (hasBands && band.stain === \"acen\" && band.name[0] === \"p\") {\n        chr.pcenIndex = i;\n      }\n    }\n  } else {\n    pxStop = chrHeight * chr.length / maxLength[cs];\n  }\n\n  chr.width = pxStop;\n\n  chr.scale = {};\n\n  // TODO:\n  //\n  // A chromosome-level scale property is likely\n  // nonsensical for any chromosomes that have cytogenetic band data.\n  // Different bands tend to have ratios between number of base pairs\n  // and physical length.\n  //\n  // However, a chromosome-level scale property is likely\n  // necessary for chromosomes that do not have band data.\n  //\n  // This needs further review.\n  if (this.config.multiorganism === true) {\n    chr.scale.bp = 1;\n    // chr.scale.bp = band.iscn.stop / band.bp.stop;\n    chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n  } else {\n    chr.scale.bp = chrHeight / maxLength.bp;\n    if (hasBands) {\n      chr.scale.iscn = chrHeight / maxLength.iscn;\n    }\n  }\n  chr.bands = bands;\n\n  chr.centromerePosition = \"\";\n  if (hasBands && bands[0].bp.stop - bands[0].bp.start === 1) {\n    // As with mouse\n    chr.centromerePosition = \"telocentric\";\n\n    // Remove placeholder pter band\n    chr.bands = chr.bands.slice(1);\n  }\n\n  return chr;\n};\n\n/**\n* Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n* If ideogram configuration has 'fullChromosomeLabels: True',\n* then labels includes name of taxon, which can help when\n* depicting orthologs.\n*/\nIdeogram.prototype.drawChromosomeLabels = function() {\n  var ideo = this;\n\n  var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n  var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n  var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes set's labels\n  d3.selectAll(\".chromosome-set-container\")\n        .append(\"text\")\n        .data(ideo.chromosomesArray)\n        .attr(\"class\", 'chromosome-set-label ' + chromosomeLabelClass)\n        .attr(\"transform\", chrSetLabelTranslate)\n        .attr(\"x\", chrSetLabelXPosition)\n        .attr(\"y\", function(d, i) {\n          return ideo._layout.getChromosomeSetLabelYPosition(i);\n        }).attr(\"text-anchor\", ideo._layout.getChromosomeSetLabelAnchor())\n        .each(function(d, i) {\n            // Get label lines\n          var lines;\n          if (d.name.indexOf(' ') === -1) {\n            lines = [d.name];\n          } else {\n            lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n          }\n\n          // Render label lines\n          d3.select(this).selectAll('tspan')\n            .data(lines)\n            .enter()\n            .append('tspan')\n            .attr('dy', function(d, i) {\n              return i * -1.2 + 'em';\n            })\n            .attr('x', ideo._layout.getChromosomeSetLabelXPosition())\n            .attr('class', function(a, i) {\n              var fullLabels = ideo.config.fullChromosomeLabels;\n              return i === 1 && fullLabels ? 'italic' : null;\n            }).text(String);\n        });\n\n  var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes labels\n  d3.selectAll(\".chromosome-set-container\")\n        .each(function(a, chrSetNumber) {\n          d3.select(this).selectAll(\".chromosome\")\n                .append(\"text\")\n                .attr(\"class\", \"chrLabel\")\n                .attr(\"transform\", setLabelTranslate)\n                .attr(\"x\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelXPosition(i);\n                }).attr(\"y\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelYPosition(i);\n                }).text(function(d, chrNumber) {\n                  return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n                }).attr(\"text-anchor\", \"middle\");\n        });\n};\n\n/**\n* Draws labels and stalks for cytogenetic bands.\n*\n* Band labels are text like \"p11.11\".\n* Stalks are small lines that visually connect labels to their bands.\n*/\nIdeogram.prototype.drawBandLabels = function(chromosomes) {\n  var i, chr, chrs, taxid, ideo, chrModel;\n\n  ideo = this;\n\n  chrs = [];\n\n  for (taxid in chromosomes) {\n    for (chr in chromosomes[taxid]) {\n      chrs.push(chromosomes[taxid][chr]);\n    }\n  }\n\n  var textOffsets = {};\n\n  chrIndex = 0;\n  for (i = 0; i < chrs.length; i++) {\n    chrIndex += 1;\n\n    chrModel = chrs[i];\n\n    chr = d3.select(\"#\" + chrModel.id);\n\n    var chrMargin = this.config.chrMargin * chrIndex,\n      lineY1, lineY2;\n\n    lineY1 = chrMargin;\n    lineY2 = chrMargin - 8;\n\n    if (\n      chrIndex === 1 &&\n      \"perspective\" in this.config && this.config.perspective === \"comparative\"\n    ) {\n      lineY1 += 18;\n      lineY2 += 18;\n    }\n\n    textOffsets[chrModel.id] = [];\n\n    chr.selectAll(\"text\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n        .attr(\"class\", function(d, i) {\n          return \"bandLabel bsbsl-\" + i;\n        })\n        .attr(\"transform\", function(d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          // var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        })\n        .append(\"text\")\n        .attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i))\n        .text(function(d) {\n          return d.name;\n        });\n\n    // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n    // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n    chr.selectAll(\"line.bandLabelStalk\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", function(d, i) {\n        return \"bandLabelStalk bsbsl-\" + i;\n      })\n      .attr(\"transform\", function(d) {\n        var x, y;\n\n        x = ideo.round(d.px.start + d.px.width / 2);\n\n        textOffsets[chrModel.id].push(x + 13);\n        y = -10;\n\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n        .append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", function() {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        }).attr(\"x2\", 0)\n        .attr(\"y2\", function() {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n  }\n\n  for (i = 0; i < chrs.length; i++) {\n    chrModel = chrs[i];\n\n    var textsLength = textOffsets[chrModel.id].length,\n      overlappingLabelXRight,\n      index,\n      indexesToShow = [],\n      prevHiddenBoxIndex,\n      xLeft,\n      prevLabelXRight,\n      textPadding;\n\n    overlappingLabelXRight = 0;\n\n    textPadding = 5;\n\n    for (index = 0; index < textsLength; index++) {\n      // Ensures band labels don't overlap\n\n      xLeft = textOffsets[chrModel.id][index];\n\n      if (xLeft < overlappingLabelXRight + textPadding === false) {\n        indexesToShow.push(index);\n      } else {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n        continue;\n      }\n\n      if (prevHiddenBoxIndex !== index) {\n        // This getBoundingClientRect() forces Chrome's\n        // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n        // TODO: This forced synchronous layout would be nice to eliminate.\n        // prevTextBox = texts[index].getBoundingClientRect();\n        // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n        // TODO: Account for number of characters in prevTextBoxWidth,\n        // maybe also zoom.\n        prevTextBoxLeft = textOffsets[chrModel.id][index];\n        prevTextBoxWidth = 36;\n\n        prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n      }\n\n      if (\n        xLeft < prevLabelXRight + textPadding\n      ) {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n      } else {\n        indexesToShow.push(index);\n      }\n    }\n\n    var selectorsToShow = [],\n      ithLength = indexesToShow.length,\n      j;\n\n    for (j = 0; j < ithLength; j++) {\n      index = indexesToShow[j];\n      selectorsToShow.push(\"#\" + chrModel.id + \" .bsbsl-\" + index);\n    }\n\n    this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n  }\n};\n\n// Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\nIdeogram.prototype.rotateChromosomeLabels = function(chr, chrIndex,\n  orientation, scale) {\n  var chrMargin, chrWidth, ideo, x, y,\n    numAnnotTracks, scaleSvg, tracksHeight;\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n  numAnnotTracks = this.config.numAnnotTracks;\n\n  ideo = this;\n\n  if (\n    typeof (scale) !== \"undefined\" &&\n    scale.hasOwnProperty(\"x\") &&\n    !(scale.x === 1 && scale.y === 1)\n  ) {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n    x = -6;\n    y = (scale === \"\" ? -16 : -14);\n  } else {\n    x = -8;\n    y = -16;\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  }\n\n  if (orientation === \"vertical\" || orientation === \"\") {\n    var ci = chrIndex - 1;\n\n    if (numAnnotTracks > 1 || orientation === \"\") {\n      ci -= 1;\n    }\n\n    chrMargin2 = -4;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n    }\n\n    chrMargin = ideo.config.chrMargin * ci;\n\n    if (numAnnotTracks > 1 === false) {\n      chrMargin += 1;\n    }\n\n    y = chrMargin + chrMargin2;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", scaleSvg)\n      .selectAll(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y);\n  } else {\n    chrIndex -= 1;\n\n    chrMargin2 = -chrWidth - 2;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + 8;\n    }\n\n    tracksHeight = ideo.config.annotTracksHeight;\n    if (ideo.config.annotationsLayout !== \"overlay\") {\n      tracksHeight *= 2;\n    }\n\n    chrMargin = ideo.config.chrMargin * chrIndex;\n    x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n    x /= scale.x;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", \"rotate(-90)\" + scaleSvg)\n      .selectAll(\"tspan\")\n      .attr(\"x\", x)\n      .attr(\"y\", y);\n  }\n};\n\n/**\n* Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n*\n* This method includes proportional scaling, which ensures that\n* while the parent chromosome group is scaled strongly in one dimension to fill\n* available space, the text in the chromosome's band labels is\n* not similarly distorted, and remains readable.\n*/\nIdeogram.prototype.rotateBandLabels = function(chr, chrIndex, scale) {\n  var chrMargin, scaleSvg,\n    orientation, bandLabels,\n    ideo = this;\n\n  bandLabels = chr.selectAll(\".bandLabel\");\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n\n  orientation = chr.attr(\"data-orientation\");\n\n  if (typeof (scale) === \"undefined\") {\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  } else {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n  }\n\n  if (\n    chrIndex === 1 &&\n    \"perspective\" in this.config && this.config.perspective === \"comparative\"\n  ) {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = (8 - chrMargin) - 26;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"text-anchor\", \"end\");\n  } else if (orientation === \"vertical\") {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = 8 - chrMargin;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n  } else {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n        y = chrMargin - 10;\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n\n    chr.selectAll(\".bandLabelStalk line\")\n      .attr(\"transform\", scaleSvg);\n  }\n};\n\nIdeogram.prototype.round = function(coord) {\n  // Rounds an SVG coordinates to two decimal places\n  // e.g. 42.1234567890 -> 42.12\n  // Per http://stackoverflow.com/a/9453447, below method is fastest\n  return Math.round(coord * 100) / 100;\n};\n\n/**\n* Renders all the bands and outlining boundaries of a chromosome.\n*/\nIdeogram.prototype.drawChromosome = function(chrModel, chrIndex, container, k) {\n    // Get chromosome model adapter class\n  var adapter = ModelAdapter.getInstance(chrModel);\n\n    // Append chromosome's container\n  var chromosome = container\n        .append(\"g\")\n        .attr(\"id\", chrModel.id)\n        .attr(\"class\", \"chromosome \" + adapter.getCssClass())\n        .attr(\"transform\", \"translate(0, \" + k * 20 + \")\");\n\n    // Render chromosome\n  return Chromosome.getInstance(adapter, this.config, this)\n        .render(chromosome, chrIndex, k);\n};\n\n/**\n* Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n* Useful for focusing or defocusing a particular chromosome\n*/\nIdeogram.prototype.rotateAndToggleDisplay = function(chromosome) {\n  /*\n   * Do nothing if taxId not defined. But it should be defined.\n   * To fix that bug we should have a way to find chromosome set number.\n   */\n  if (!this.config.taxid) {\n    return;\n  }\n\n  var chrSetNumber =\n    Number(d3.select(chromosome.parentNode).attr('data-set-number'));\n\n  var chrNumber = Array.prototype.slice.call(\n          d3.select(chromosome.parentNode).selectAll(\"g.chromosome\")._groups[0]\n      ).indexOf(chromosome);\n\n  return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertBpToPx = function(chr, bp) {\n  var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart,\n    iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    offset = this._bandsXOffset;\n    bpStart = band.bp.start;\n    bpStop = band.bp.stop;\n    bpLength = bpStop - bpStart;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n    iscnLength = iscnStop - iscnStart;\n    pxStart = band.px.start;\n    pxLength = band.px.width;\n\n    if (bp >= bpStart && bp <= bpStop) {\n      bpToIscnScale = iscnLength / bpLength;\n      iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n      px = offset + pxStart + (pxLength * (iscn - iscnStart) / (iscnLength));\n\n      return px;\n    }\n  }\n\n  throw new Error(\n    \"Base pair out of range.  \" +\n    \"bp: \" + bp + \"; length of chr\" + chr.name + \": \" + band.bp.stop\n  );\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertPxToBp = function(chr, px) {\n  var i, band, pxToIscnScale, iscn,\n    pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    pxStart = band.px.start;\n    pxStop = band.px.stop;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n\n    if (px >= pxStart && px <= pxStop) {\n      iscnLength = iscnStop - iscnStart;\n      pxLength = pxStop - pxStart;\n      bpLength = band.bp.stop - band.bp.start;\n\n      pxToIscnScale = iscnLength / pxLength;\n      iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n      bp = band.bp.start + (bpLength * (iscn - iscnStart) / iscnLength);\n\n      return Math.round(bp);\n    }\n  }\n\n  throw new Error(\n    \"Pixel out of range.  \" +\n    \"px: \" + bp + \"; length of chr\" + chr.name + \": \" + pxStop\n  );\n};\n\n/**\n* Draws a trapezoid connecting a genomic range on\n* one chromosome to a genomic range on another chromosome;\n* a syntenic region.\n*/\nIdeogram.prototype.drawSynteny = function(syntenicRegions) {\n  var t0 = new Date().getTime();\n\n  var r1, r2,\n    syntenies,\n    i, color, opacity,\n    regionID,\n    ideo = this;\n\n  syntenies = d3.select(\"svg\")\n    .insert(\"g\", \":first-child\")\n    .attr(\"class\", \"synteny\");\n\n  for (i = 0; i < syntenicRegions.length; i++) {\n    regions = syntenicRegions[i];\n\n    r1 = regions.r1;\n    r2 = regions.r2;\n\n    color = \"#CFC\";\n    if (\"color\" in regions) {\n      color = regions.color;\n    }\n\n    opacity = 1;\n    if (\"opacity\" in regions) {\n      opacity = regions.opacity;\n    }\n\n    r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n    r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n    r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n    r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n    regionID = (\n      r1.chr.id + \"_\" + r1.start + \"_\" + r1.stop + \"_\" +\n      \"__\" +\n      r2.chr.id + \"_\" + r2.start + \"_\" + r2.stop\n    );\n\n    syntenicRegion = syntenies.append(\"g\")\n      .attr(\"class\", \"syntenicRegion\")\n      .attr(\"id\", regionID)\n      .on(\"click\", function() {\n        var activeRegion = this;\n        var others = d3.selectAll(\".syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          });\n\n        others.classed(\"hidden\", !others.classed(\"hidden\"));\n      })\n      .on(\"mouseover\", function() {\n        var activeRegion = this;\n        d3.selectAll(\".syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          })\n          .classed(\"ghost\", true);\n      })\n      .on(\"mouseout\", function() {\n        d3.selectAll(\".syntenicRegion\").classed(\"ghost\", false);\n      });\n\n    var x1 = this._layout.getChromosomeSetYTranslate(0);\n    var x2 = this._layout.getChromosomeSetYTranslate(1) - ideo.config.chrWidth;\n\n    syntenicRegion.append(\"polygon\")\n      .attr(\"points\",\n        x1 + ', ' + r1.startPx + ' ' +\n        x1 + ', ' + r1.stopPx + ' ' +\n        x2 + ', ' + r2.stopPx + ' ' +\n        x2 + ', ' + r2.startPx\n      )\n      .attr('style', \"fill: \" + color + \"; fill-opacity: \" + opacity);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.startPx)\n      .attr(\"y2\", r2.startPx);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.stopPx)\n      .attr(\"y2\", r2.stopPx);\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in drawSyntenicRegions: \" + (t1 - t0) + \" ms\");\n  }\n};\n\n/**\n* Initializes various annotation settings.  Constructor help function.\n*/\nIdeogram.prototype.initAnnotSettings = function() {\n  if (this.config.annotationsPath || this.config.localAnnotationsPath ||\n    this.annots || this.config.annotations) {\n    if (!this.config.annotationHeight) {\n      var annotHeight = Math.round(this.config.chrHeight / 100);\n      this.config.annotationHeight = annotHeight;\n    }\n\n    if (this.config.annotationTracks) {\n      this.config.numAnnotTracks = this.config.annotationTracks.length;\n    } else {\n      this.config.numAnnotTracks = 1;\n    }\n    this.config.annotTracksHeight =\n      this.config.annotationHeight * this.config.numAnnotTracks;\n\n    if (typeof this.config.barWidth === \"undefined\") {\n      this.config.barWidth = 3;\n    }\n  } else {\n    this.config.annotTracksHeight = 0;\n  }\n\n  if (typeof this.config.annotationsColor === \"undefined\") {\n    this.config.annotationsColor = \"#F00\";\n  }\n};\n\n/**\n* Draws annotations defined by user\n*/\nIdeogram.prototype.drawAnnots = function(friendlyAnnots) {\n  var ideo = this,\n    i, j, annot,\n    rawAnnots = [],\n    rawAnnot, keys,\n    chr,\n    chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n  // Occurs when filtering\n  if (\"annots\" in friendlyAnnots[0]) {\n    return ideo.drawProcessedAnnots(friendlyAnnots);\n  }\n\n  for (chr in chrs) {\n    rawAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < friendlyAnnots.length; i++) {\n    annot = friendlyAnnots[i];\n\n    for (j = 0; j < rawAnnots.length; j++) {\n      if (annot.chr === rawAnnots[j].chr) {\n        rawAnnot = [\n          annot.name,\n          annot.start,\n          annot.stop - annot.start\n        ];\n        if (\"color\" in annot) {\n          rawAnnot.push(annot.color);\n        }\n        if (\"shape\" in annot) {\n          rawAnnot.push(annot.shape);\n        }\n        rawAnnots[j].annots.push(rawAnnot);\n        break;\n      }\n    }\n  }\n\n  keys = [\"name\", \"start\", \"length\"];\n  if (\"color\" in friendlyAnnots[0]) {\n    keys.push(\"color\");\n  }\n  if (\"shape\" in friendlyAnnots[0]) {\n    keys.push(\"shape\");\n  }\n  ideo.rawAnnots = {keys: keys, annots: rawAnnots};\n\n  ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n  ideo.drawProcessedAnnots(ideo.annots);\n};\n\n/**\n* Proccesses genome annotation data.\n* Genome annotations represent features like a gene, SNP, etc. as\n* a small graphical object on or beside a chromosome.\n* Converts raw annotation data from server, which is structured as\n* an array of arrays, into a more verbose data structure consisting\n* of an array of objects.\n* Also adds pixel offset information.\n*/\nIdeogram.prototype.processAnnotData = function(rawAnnots) {\n  var keys,\n    i, j, annot, annots, annotsByChr,\n    chr,\n    chrModel, ra,\n    startPx, stopPx, px,\n    color,\n    ideo = this;\n\n  keys = rawAnnots.keys;\n  rawAnnots = rawAnnots.annots;\n\n  annots = [];\n\n  for (i = 0; i < rawAnnots.length; i++) {\n    annotsByChr = rawAnnots[i];\n\n    annots.push({chr: annotsByChr.chr, annots: []});\n\n    for (j = 0; j < annotsByChr.annots.length; j++) {\n      chr = annotsByChr.chr;\n      ra = annotsByChr.annots[j];\n      annot = {};\n\n      for (var k = 0; k < keys.length; k++) {\n        annot[keys[k]] = ra[k];\n      }\n\n      annot.stop = annot.start + annot.length;\n\n      chrModel = ideo.chromosomes[\"9606\"][chr];\n\n      startPx = ideo.convertBpToPx(chrModel, annot.start);\n      stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n      px = Math.round((startPx + stopPx) / 2) - 28;\n\n      color = ideo.config.annotationsColor;\n      if (ideo.config.annotationTracks) {\n        annot.trackIndex = ra[3];\n        color = ideo.config.annotationTracks[annot.trackIndex].color;\n      } else {\n        annot.trackIndex = 0;\n      }\n\n      if ('color' in annot) {\n        color = annot.color;\n      }\n\n      annot.chr = chr;\n      annot.chrIndex = i;\n      annot.px = px;\n      annot.color = color;\n\n      annots[i].annots.push(annot);\n    }\n  }\n\n  return annots;\n};\n\n/*\n* Can be used for bar chart or sparkline\n*/\nIdeogram.prototype.getHistogramBars = function(annots) {\n  var t0 = new Date().getTime();\n\n  var i, j, chr,\n    chrModels, chrPxStop, px,\n    chrAnnots, chrName, chrIndex, annot,\n    bars, bar, barPx, nextBarPx, barWidth,\n    maxAnnotsPerBar, color,\n    firstGet = false,\n    histogramScaling,\n    ideo = this;\n\n  bars = [];\n\n  barWidth = ideo.config.barWidth;\n  chrModels = ideo.chromosomes[ideo.config.taxid];\n  color = ideo.config.annotationsColor;\n\n  if (\"histogramScaling\" in ideo.config) {\n    histogramScaling = ideo.config.histogramScaling;\n  } else {\n    histogramScaling = \"relative\";\n  }\n\n  if (typeof ideo.maxAnnotsPerBar === \"undefined\") {\n    ideo.maxAnnotsPerBar = {};\n    firstGet = true;\n  }\n\n  for (chr in chrModels) {\n    chrModel = chrModels[chr];\n    chrIndex = chrModel.chrIndex;\n    lastBand = chrModel.bands[chrModel.bands.length - 1];\n    chrPxStop = lastBand.px.stop;\n    numBins = Math.round(chrPxStop / barWidth);\n    bar = {chr: chr, annots: []};\n    for (i = 0; i < numBins; i++) {\n      px = i * barWidth - ideo.bump;\n      bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n      bar.annots.push({\n        bp: bp,\n        px: px - ideo.bump,\n        count: 0,\n        chrIndex: chrIndex,\n        chrName: chr,\n        color: color,\n        annots: []\n      });\n    }\n    bars.push(bar);\n  }\n\n  for (chr in annots) {\n    chrAnnots = annots[chr].annots;\n    chrName = annots[chr].chr;\n    chrModel = chrModels[chrName];\n    chrIndex = chrModel.chrIndex - 1;\n    barAnnots = bars[chrIndex].annots;\n    for (i = 0; i < chrAnnots.length; i++) {\n      annot = chrAnnots[i];\n      px = annot.px - ideo.bump;\n      for (j = 0; j < barAnnots.length; j++) {\n        barPx = barAnnots[j].px;\n        nextBarPx = barPx + barWidth;\n        if (j === barAnnots.length - 1) {\n          nextBarPx += barWidth;\n        }\n        if (px >= barPx && px < nextBarPx) {\n          bars[chrIndex].annots[j].count += 1;\n          bars[chrIndex].annots[j].annots.push(annot);\n          break;\n        }\n      }\n    }\n  }\n\n  if (firstGet === true || histogramScaling === \"relative\") {\n    maxAnnotsPerBar = 0;\n    for (i = 0; i < bars.length; i++) {\n      annots = bars[i].annots;\n      for (j = 0; j < annots.length; j++) {\n        barCount = annots[j].count;\n        if (barCount > maxAnnotsPerBar) {\n          maxAnnotsPerBar = barCount;\n        }\n      }\n    }\n    ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n  }\n\n  // Set each bar's height to be proportional to\n  // the height of the bar with the most annotations\n  for (i = 0; i < bars.length; i++) {\n    annots = bars[i].annots;\n    for (j = 0; j < annots.length; j++) {\n      barCount = annots[j].count;\n      height = (barCount / ideo.maxAnnotsPerBar[chr]) * ideo.config.chrMargin;\n      // console.log(height)\n      bars[i].annots[j].height = height;\n    }\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time spent in getHistogramBars: \" + (t1 - t0) + \" ms\");\n  }\n\n  ideo.bars = bars;\n\n  return bars;\n};\n\n/**\n* Draws genome annotations on chromosomes.\n* Annotations can be rendered as either overlaid directly\n* on a chromosome, or along one or more \"tracks\"\n* running parallel to each chromosome.\n*/\nIdeogram.prototype.drawProcessedAnnots = function(annots) {\n  var chrWidth, layout,\n    annotHeight, triangle, circle, r, chrAnnot,\n    x1, x2, y1, y2,\n    ideo = this;\n\n  chrMargin = this.config.chrMargin;\n  chrWidth = this.config.chrWidth;\n\n  layout = \"tracks\";\n  if (this.config.annotationsLayout) {\n    layout = this.config.annotationsLayout;\n  }\n\n  if (layout === \"histogram\") {\n    annots = ideo.getHistogramBars(annots);\n  }\n\n  annotHeight = ideo.config.annotationHeight;\n\n  triangle =\n    'l -' + annotHeight + ' ' +\n    (2 * annotHeight) +\n    ' l ' + (2 * annotHeight) + ' 0 z';\n\n  // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n  // Circles are supported natively via <circle>, but having it as a path\n  // simplifies handling triangles, circles and other shapes in the same\n  // D3 call\n  r = annotHeight;\n  circle =\n    'm -' + r + ', ' + r +\n    'a ' + r + ',' + r + ' 0 1,0 ' + (r * 2) + ',0' +\n    'a ' + r + ',' + r + ' 0 1,0 -' + (r * 2) + ',0';\n\n  chrAnnot = d3.selectAll(\".chromosome\")\n    .data(annots)\n      .selectAll(\"path.annot\")\n      .data(function(d) {\n        return d.annots;\n      })\n      .enter();\n\n  if (layout === \"tracks\") {\n    chrAnnot\n      .append(\"g\")\n      .attr(\"id\", function(d) {\n        return d.id;\n      })\n      .attr(\"class\", \"annot\")\n      .attr(\"transform\", function(d) {\n        var y = ideo.config.chrWidth + (d.trackIndex * annotHeight * 2);\n        return \"translate(\" + d.px + \",\" + y + \")\";\n      })\n      .append(\"path\")\n      .attr(\"d\", function(d) {\n        if (!d.shape || d.shape === \"triangle\") {\n          return \"m0,0\" + triangle;\n        } else if (d.shape === \"circle\") {\n          return circle;\n        }\n      })\n      .attr(\"fill\", function(d) {\n        return d.color;\n      });\n  } else if (layout === \"overlay\") {\n      // Overlaid annotations appear directly on chromosomes\n\n    chrAnnot.append(\"polygon\")\n        .attr(\"id\", function(d) {\n          return d.id;\n        })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px - 0.5;\n          x2 = d.px + 0.5;\n          y1 = chrWidth;\n          y2 = 0;\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  } else if (layout === \"histogram\") {\n    chrAnnot.append(\"polygon\")\n        // .attr(\"id\", function(d, i) { return d.id; })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  }\n\n  if (ideo.onDrawAnnotsCallback) {\n    ideo.onDrawAnnotsCallback();\n  }\n};\n\nIdeogram.prototype.onBrushMove = function() {\n  call(this.onBrushMoveCallback);\n};\n\nIdeogram.prototype.createBrush = function(from, to) {\n  var ideo = this,\n    width = ideo.config.chrWidth + 6.5,\n    length = ideo.config.chrHeight,\n    chr = ideo.chromosomesArray[0],\n    chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n    x0, x1,\n    xOffset = this._layout.getMargin().left,\n    xScale = d3.scaleLinear()\n          .domain([0, d3.max(chr.bands, function(band) {\n            return band.bp.stop;\n          })]).range([xOffset, d3.max(chr.bands, function(band) {\n            return band.px.stop;\n          }) + xOffset]);\n\n  if (typeof from === \"undefined\") {\n    from = Math.floor(chrLengthBp / 10);\n  }\n\n  if (typeof right === \"undefined\") {\n    to = Math.ceil(from * 2);\n  }\n\n  x0 = ideo.convertBpToPx(chr, from);\n  x1 = ideo.convertBpToPx(chr, to);\n\n  ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n  ideo.brush = d3.brushX()\n    .extent([[xOffset, 0], [length + xOffset, width]])\n    .on(\"brush\", onBrushMove);\n\n  var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n  var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n  d3.select(\"#_ideogram\").append(\"g\")\n    .attr(\"class\", \"brush\")\n    .attr(\"transform\", \"translate(0, \" + yOffset + \")\")\n    .call(ideo.brush)\n    .call(ideo.brush.move, [x0, x1]);\n\n  function onBrushMove() {\n    var extent = d3.event.selection.map(xScale.invert),\n      from = Math.floor(extent[0]),\n      to = Math.ceil(extent[1]);\n\n    ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n    if (ideo.onBrushMove) {\n      ideo.onBrushMoveCallback();\n    }\n  }\n};\n\n/**\n* Called when Ideogram has finished initializing.\n* Accounts for certain ideogram properties not being set until\n* asynchronous requests succeed, etc.\n*/\nIdeogram.prototype.onLoad = function() {\n  call(this.onLoadCallback);\n};\n\nIdeogram.prototype.onDrawAnnots = function() {\n  call(this.onDrawAnnotsCallback);\n};\n\nIdeogram.prototype.getBandColorGradients = function() {\n  var colors,\n    stain, color1, color2, color3,\n    css,\n    gradients = \"\";\n\n  colors = [\n    [\"gneg\", \"#FFF\", \"#FFF\", \"#DDD\"],\n    [\"gpos25\", \"#C8C8C8\", \"#DDD\", \"#BBB\"],\n    [\"gpos33\", \"#BBB\", \"#BBB\", \"#AAA\"],\n    [\"gpos50\", \"#999\", \"#AAA\", \"#888\"],\n    [\"gpos66\", \"#888\", \"#888\", \"#666\"],\n    [\"gpos75\", \"#777\", \"#777\", \"#444\"],\n    [\"gpos100\", \"#444\", \"#666\", \"#000\"],\n    [\"acen\", \"#FEE\", \"#FEE\", \"#FDD\"],\n    [\"noBands\", \"#BBB\", \"#BBB\", \"#AAA\"]\n  ];\n\n  for (var i = 0; i < colors.length; i++) {\n    stain = colors[i][0];\n    color1 = colors[i][1];\n    color2 = colors[i][2];\n    color3 = colors[i][3];\n    gradients +=\n      '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n    if (stain === \"gneg\") {\n      gradients +=\n        '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' +\n        '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n    } else {\n      gradients +=\n        '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' +\n        '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n    }\n    gradients +=\n      '</linearGradient>';\n  }\n\n  gradients +=\n    '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' +\n        'stroke-width:0.7;\" />' +\n    '</pattern>' +\n    '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(-30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' +\n          'stroke-width:0.7;\" />' +\n    '</pattern>';\n\n  gradients = \"<defs>\" + gradients + \"</defs>\";\n  css = \"<style>\" +\n    '.gneg {fill: url(\"#gneg\")} ' +\n    '.gpos25 {fill: url(\"#gpos25\")} ' +\n    '.gpos33 {fill: url(\"#gpos33\")} ' +\n    '.gpos50 {fill: url(\"#gpos50\")} ' +\n    '.gpos66 {fill: url(\"#gpos66\")} ' +\n    '.gpos75 {fill: url(\"#gpos75\")} ' +\n    '.gpos100 {fill: url(\"#gpos100\")} ' +\n    '.acen {fill: url(\"#acen\")} ' +\n    '.stalk {fill: url(\"#stalk\")} ' +\n    '.gvar {fill: url(\"#gvar\")} ' +\n    '.noBands {fill: url(\"#noBands\")} ' +\n  '</style>';\n  gradients = css + gradients;\n\n  // alert(gradients)\n\n  return gradients;\n};\n\n/*\n  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n*/\nIdeogram.prototype.getTaxidFromEutils = function(callback) {\n  var organism, taxonomySearch, taxid,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  taxonomySearch = ideo.esearch + \"&db=taxonomy&term=\" + organism;\n\n  d3.json(taxonomySearch, function(data) {\n    taxid = data.esearchresult.idlist[0];\n    return callback(taxid);\n  });\n};\n\n/**\n* Returns an array of taxids for the current ideogram\n* Also sets configuration parameters related to taxid(s), whether ideogram is\n* multiorganism, and adjusts chromosomes parameters as needed\n**/\nIdeogram.prototype.getTaxids = function(callback) {\n  var ideo = this,\n    taxid, taxids,\n    org, orgs, i,\n    taxidInit, tmpChrs,\n    assembly, chromosomes,\n    multiorganism;\n\n  taxidInit = \"taxid\" in ideo.config;\n\n  ideo.config.multiorganism = (\n    (\"organism\" in ideo.config && ideo.config.organism instanceof Array) ||\n    (taxidInit && ideo.config.taxid instanceof Array)\n  );\n\n  multiorganism = ideo.config.multiorganism;\n\n  if (\"organism\" in ideo.config) {\n    // Ideogram instance was constructed using common organism name(s)\n    if (multiorganism) {\n      orgs = ideo.config.organism;\n    } else {\n      orgs = [ideo.config.organism];\n    }\n\n    taxids = [];\n    tmpChrs = {};\n    for (i = 0; i < orgs.length; i++) {\n      // Gets a list of taxids from common organism names\n      org = orgs[i];\n      for (taxid in ideo.organisms) {\n        if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n          taxids.push(taxid);\n          if (multiorganism) {\n            // Adjusts 'chromosomes' configuration parameter to make object\n            // keys use taxid instead of common organism name\n            tmpChrs[taxid] = ideo.config.chromosomes[org];\n          }\n        }\n      }\n    }\n\n    if (taxids.length === 0) {\n      promise = new Promise(function(resolve) {\n        ideo.getTaxidFromEutils(resolve);\n      });\n      promise.then(function(data) {\n        taxid = data;\n        taxids.push(taxid);\n\n        ideo.config.taxids = taxids;\n        ideo.organisms[taxid] = {\n          commonName: \"\",\n          scientificName: ideo.config.organism,\n          scientificNameAbbr: \"\"\n        };\n        return new Promise(function(resolve) {\n          ideo.getAssemblyAndChromosomesFromEutils(resolve);\n        });\n      })\n      .then(function(asmChrArray) {\n        assembly = asmChrArray[0];\n        chromosomes = asmChrArray[1];\n\n        ideo.config.chromosomes = chromosomes;\n        ideo.organisms[taxid].assemblies = {\n          default: assembly\n        };\n\n        callback(taxids);\n      });\n    } else {\n      ideo.config.taxids = taxids;\n      if (multiorganism) {\n        ideo.config.chromosomes = tmpChrs;\n      }\n\n      callback(taxids);\n    }\n  } else {\n    if (multiorganism) {\n      ideo.coordinateSystem = \"bp\";\n      if (taxidInit) {\n        taxids = ideo.config.taxid;\n      }\n    } else {\n      if (taxidInit) {\n        taxids = [ideo.config.taxid];\n      }\n      ideo.config.taxids = taxids;\n    }\n\n    callback(taxids);\n  }\n};\n\nIdeogram.prototype.sortChromosomes = function(a, b) {\n  var aIsNuclear = a.type === \"nuclear\",\n    bIsNuclear = b.type === \"nuclear\",\n    aIsCP = a.type === \"chloroplast\",\n    bIsCP = b.type === \"chloroplast\",\n    aIsMT = a.type === \"mitochondrion\",\n    bIsMT = b.type === \"mitochondrion\";\n    // aIsPlastid = aIsMT && a.name !== \"MT\", // e.g. B1 in rice genome GCF_001433935.1\n    // bIsPlastid = bIsMT && b.name !== \"MT\";\n\n  if (aIsNuclear && bIsNuclear) {\n    return naturalSort(a.name, b.name);\n  } else if (!aIsNuclear && bIsNuclear) {\n    return 1;\n  } else if (aIsMT && bIsCP) {\n    return 1;\n  } else if (aIsCP && bIsMT) {\n    return -1;\n  } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n    return -1;\n  }\n};\n\n/**\n  Returns names and lengths of chromosomes for an organism's best-known\n  genome assembly.  Gets data from NCBI EUtils web API.\n*/\nIdeogram.prototype.getAssemblyAndChromosomesFromEutils = function(callback) {\n  var asmAndChrArray, // [assembly_accession, chromosome_objects_array]\n    assemblyAccession, chromosomes, asmSearch,\n    asmUid, asmSummary,\n    rsUid, nuccoreLink,\n    links, ntSummary,\n    results, result, cnIndex, chrName, chrLength, chromosome, type,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  asmAndChrArray = [];\n  chromosomes = [];\n\n  asmSearch =\n    ideo.esearch +\n    \"&db=assembly\" +\n    \"&term=%22\" + organism + \"%22[organism]\" +\n      \"AND%20(%22latest%20refseq%22[filter])%20\" +\n      \"AND%20%22chromosome%20level%22[filter]\";\n\n  var promise = d3.promise.json(asmSearch);\n\n  promise\n      .then(function(data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + \"&db=assembly&id=\" + asmUid;\n\n        return d3.promise.json(asmSummary);\n      })\n      .then(function(data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        var qs = \"&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=\" + rsUid;\n        nuccoreLink = ideo.elink + qs;\n\n        return d3.promise.json(nuccoreLink);\n      })\n      .then(function(data) {\n        links = data.linksets[0].linksetdbs[0].links.join(\",\");\n        ntSummary = ideo.esummary + \"&db=nucleotide&id=\" + links;\n\n        return d3.promise.json(ntSummary);\n      })\n      .then(function(data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === \"uids\") {\n            continue;\n          }\n\n          if (result.genome === \"mitochondrion\") {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split(\"|\").indexOf(\"plasmid\");\n              if (cnIndex === -1) {\n                chrName = \"MT\";\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                  // genome: \"mitochondrion\",\n                  // subtype: \"cell_line|plasmid\",\n                  // subname: \"A-58 CMS|B1\",\n                chrName = result.subname.split(\"|\")[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (\n            result.genome === \"chloroplast\" ||\n            result.genome === \"plastid\"\n          ) {\n            type = \"chloroplast\";\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = \"CP\";\n            } else {\n              continue;\n            }\n          } else {\n            type = \"nuclear\";\n            cnIndex = result.subtype.split(\"|\").indexOf(\"chromosome\");\n\n            chrName = result.subname.split(\"|\")[cnIndex];\n\n            if (\n              typeof chrName !== \"undefined\" &&\n              chrName.substr(0, 3) === \"chr\"\n            ) {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = \"bp\";\n\n        return callback(asmAndChrArray);\n      });\n};\n\nIdeogram.prototype.initDrawChromosomes = function(bandsArray) {\n  var ideo = this,\n    taxids = ideo.config.taxids,\n    taxid,\n    chrIndex = 0,\n    chrSetNumber = 0,\n    i, j, chrs, chromosome, chrModel,\n    defs, transform;\n\n  defs = d3.select(\"defs\");\n\n  for (i = 0; i < taxids.length; i++) {\n    taxid = taxids[i];\n    chrs = ideo.config.chromosomes[taxid];\n\n    ideo.chromosomes[taxid] = {};\n\n    for (j = 0; j < chrs.length; j++) {\n      chromosome = chrs[j];\n      bands = bandsArray[chrIndex];\n      chrIndex += 1;\n\n      chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n      ideo.chromosomes[taxid][chromosome] = chrModel;\n      ideo.chromosomesArray.push(chrModel);\n\n      transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n      chrSetNumber += 1;\n\n      // Append chromosome set container\n      var container = d3.select(\"svg\")\n        .append(\"g\")\n        .attr(\"class\", \"chromosome-set-container\")\n        .attr(\"data-set-number\", j)\n        .attr(\"transform\", transform)\n        .attr(\"id\", chrModel.id + \"-chromosome-set\");\n\n      var shape;\n      for (var k = 0; k < this._ploidy.getChromosomesNumber(j); k++) {\n        shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n      }\n\n      defs.append(\"clipPath\")\n        .attr(\"id\", chrModel.id + \"-chromosome-set-clippath\")\n        .selectAll('path')\n        .data(shape)\n        .enter()\n        .append('path')\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n    }\n\n    if (ideo.config.showBandLabels === true) {\n      ideo.drawBandLabels(ideo.chromosomes);\n    }\n  }\n};\n\n// Get ideogram SVG container\nIdeogram.prototype.getSvg = function() {\n  return d3.select('#_ideogram').node();\n};\n\n/**\n* Initializes an ideogram.\n* Sets some high-level properties based on instance configuration,\n* fetches band and annotation data if needed, and\n* writes an SVG element to the document to contain the ideogram\n*\n*/\nIdeogram.prototype.init = function() {\n  var bandDataFileNames,\n    taxid, i, svgClass;\n\n  var ideo = this;\n\n  var t0 = new Date().getTime();\n\n  var bandsArray = [],\n    numBandDataResponses = 0,\n    resolution = this.config.resolution,\n    accession;\n\n  var promise = new Promise(function(resolve) {\n    ideo.getTaxids(resolve);\n  });\n\n  promise.then(function(taxids) {\n    taxid = taxids[0];\n    ideo.config.taxid = taxid;\n    ideo.config.taxids = taxids;\n\n    for (i = 0; i < taxids.length; i++) {\n      taxid = taxids[i];\n\n      if (!ideo.config.assembly) {\n        ideo.config.assembly = \"default\";\n      }\n      accession = ideo.organisms[taxid].assemblies[ideo.config.assembly];\n\n      bandDataFileNames = {\n      // Homo sapiens (human)\n        9606: \"native/ideogram_9606_\" + accession + \"_\" + resolution + \"_V1.js\",\n      // 9606: \"ncbi/ideogram_9606_\" + accession + \"_\" + resolution + \"_V1.tsv\",\n\n      // Mus musculus (mouse)\n        10090: \"native/ideogram_10090_\" + accession + \"_NA_V2.js\"\n\n      // Drosophila melanogaster (fly)\n      // 7227: \"ucsc/drosophila_melanogaster_dm6.tsv\"\n      };\n\n      if (typeof chrBands === \"undefined\" && taxid in bandDataFileNames) {\n        d3.request(ideo.config.bandDir + bandDataFileNames[taxid])\n        .on(\"beforesend\", function(data) {\n          // Ensures correct taxid is processed in response callback; using\n          // simply 'taxid' variable gives the last *requested* taxid, which\n          // fails when dealing with multiple taxa.\n          data.taxid = taxid;\n        })\n        .get(function(error, data) {\n          ideo.bandData[data.taxid] = data.response;\n          numBandDataResponses += 1;\n\n          if (numBandDataResponses === taxids.length) {\n            processBandData();\n            writeContainer();\n          }\n        });\n      } else {\n        if (typeof chrBands !== \"undefined\") {\n        // If bands already available,\n        // e.g. via <script> tag in initial page load\n          ideo.bandData[taxid] = chrBands;\n        }\n        processBandData();\n        writeContainer();\n      }\n    }\n  });\n\n  function writeContainer() {\n    if (ideo.config.annotationsPath) {\n      d3.json(\n        ideo.config.annotationsPath, // URL\n        function(data) { // Callback\n          ideo.rawAnnots = data;\n        }\n      );\n    }\n\n    svgClass = \"\";\n    if (ideo.config.showChromosomeLabels) {\n      if (ideo.config.orientation === \"horizontal\") {\n        svgClass += \"labeledLeft \";\n      } else {\n        svgClass += \"labeled \";\n      }\n    }\n\n    if (\n      ideo.config.annotationsLayout &&\n      ideo.config.annotationsLayout === \"overlay\"\n    ) {\n      svgClass += \"faint\";\n    }\n\n    var gradients = ideo.getBandColorGradients();\n    var svgHeight = ideo._layout.getHeight(taxid);\n\n    d3.select(ideo.config.container)\n      .append(\"svg\")\n        .attr(\"id\", \"_ideogram\")\n        .attr(\"class\", svgClass)\n        .attr(\"width\", \"97%\")\n        .attr(\"height\", svgHeight)\n        .html(gradients);\n\n    finishInit();\n  }\n\n  /*\n  * Completes default ideogram initialization\n  * by calling downstream functions to\n  * process raw band data into full JSON objects,\n  * render chromosome and cytoband figures and labels,\n  * apply initial graphical transformations,\n  * hide overlapping band labels, and\n  * execute callbacks defined by client code\n  */\n  function processBandData() {\n    var j, k, chromosome, bands,\n      chrLength, chr,\n      bandData, bandsByChr,\n      taxid, taxids, chrs, chrsByTaxid;\n\n    bandsArray = [];\n    maxLength = 0;\n\n    if (ideo.config.multiorganism === true) {\n      ideo.coordinateSystem = \"bp\";\n      taxids = ideo.config.taxids;\n      for (i = 0; i < taxids.length; i++) {\n        taxid = taxids[i];\n      }\n    } else {\n      if (typeof ideo.config.taxid === \"undefined\") {\n        ideo.config.taxid = ideo.config.taxids[0];\n      }\n      taxid = ideo.config.taxid;\n      taxids = [taxid];\n      ideo.config.taxids = taxids;\n    }\n\n    if (\"chromosomes\" in ideo.config) {\n      chrs = ideo.config.chromosomes;\n    }\n    if (ideo.config.multiorganism) {\n      chrsByTaxid = chrs;\n    }\n\n    ideo.config.chromosomes = {};\n\n    var t0B = new Date().getTime();\n\n    for (j = 0; j < taxids.length; j++) {\n      taxid = taxids[j];\n\n      if (ideo.config.multiorganism) {\n        chrs = chrsByTaxid[taxid];\n      }\n\n      if (ideo.coordinateSystem === \"iscn\" || ideo.config.multiorganism) {\n        bandData = ideo.bandData[taxid];\n\n        bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n        chrs = Object.keys(bandsByChr);\n\n        ideo.config.chromosomes[taxid] = chrs.slice();\n        ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n        for (k = 0; k < chrs.length; k++) {\n          chromosome = chrs[k];\n          bands = bandsByChr[chromosome];\n          bandsArray.push(bands);\n\n          chrLength = {\n            iscn: bands[bands.length - 1].iscn.stop,\n            bp: bands[bands.length - 1].bp.stop\n          };\n\n          if (chrLength.iscn > ideo.maxLength.iscn) {\n            ideo.maxLength.iscn = chrLength.iscn;\n          }\n\n          if (chrLength.bp > ideo.maxLength.bp) {\n            ideo.maxLength.bp = chrLength.bp;\n          }\n        }\n      } else if (ideo.coordinateSystem === \"bp\") {\n        // If lacking band-level data\n\n        ideo.config.chromosomes[taxid] = chrs.slice();\n        ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n        for (k = 0; k < chrs.length; k++) {\n          chr = chrs[k];\n          if (chr.length > ideo.maxLength.bp) {\n            ideo.maxLength.bp = chr.length;\n          }\n        }\n      }\n    }\n\n    var t1B = new Date().getTime();\n    if (ideo.debug) {\n      console.log(\"Time in processBandData: \" + (t1B - t0B) + \" ms\");\n    }\n  }\n\n  function finishInit() {\n    try {\n      var t0A = new Date().getTime();\n\n      var i;\n\n      ideo.initDrawChromosomes(bandsArray);\n\n      // Waits for potentially large annotation dataset\n      // to be received by the client, then triggers annotation processing\n      if (ideo.config.annotationsPath) {\n        function pa() {\n          if (typeof timeout !== \"undefined\") {\n            window.clearTimeout(timeout);\n          }\n\n          ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n          ideo.drawProcessedAnnots(ideo.annots);\n\n          if (ideo.initCrossFilter) {\n            ideo.initCrossFilter();\n          }\n        }\n\n        if (ideo.rawAnnots) {\n          pa();\n        } else {\n          (function checkAnnotData() {\n            timeout = setTimeout(function() {\n              if (!ideo.rawAnnots) {\n                checkAnnotData();\n              } else {\n                pa();\n              }\n            },\n            50\n          );\n          })();\n        }\n      }\n\n      if (ideo.config.showBandLabels === true) {\n        var bandsToShow = ideo.bandsToShow.join(\",\");\n\n      // d3.selectAll resolves to querySelectorAll (QSA).\n      // QSA takes a surprisingly long time to complete,\n      // and scales with the number of selectors.\n      // Most bands are hidden, so we can optimize by\n      // Hiding all bands, then QSA'ing and displaying the\n      // relatively few bands that are shown.\n        var t0C = new Date().getTime();\n        d3.selectAll(\".bandLabel, .bandLabelStalk\").style(\"display\", \"none\");\n        d3.selectAll(bandsToShow).style(\"display\", \"\");\n        var t1C = new Date().getTime();\n        if (ideo.debug) {\n          console.log(\"Time in showing bands: \" + (t1C - t0C) + \" ms\");\n        }\n\n        if (ideo.config.orientation === \"vertical\") {\n          var chrID;\n          for (i = 0; i < ideo.chromosomesArray.length; i++) {\n            chrID = \"#\" + ideo.chromosomesArray[i].id;\n            ideo.rotateChromosomeLabels(d3.select(chrID), i);\n          }\n        }\n      }\n\n      if (ideo.config.showChromosomeLabels === true) {\n        ideo.drawChromosomeLabels(ideo.chromosomes);\n      }\n\n      if (ideo.config.brush === true) {\n        ideo.createBrush();\n      }\n\n      if (ideo.config.annotations) {\n        ideo.drawAnnots(ideo.config.annotations);\n      }\n\n      var t1A = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time in drawChromosome: \" + (t1A - t0A) + \" ms\");\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time constructing ideogram: \" + (t1 - t0) + \" ms\");\n      }\n\n      if (ideo.onLoadCallback) {\n        ideo.onLoadCallback();\n      }\n\n      if (!(\"rotatable\" in ideo.config && ideo.config.rotatable === false)) {\n        d3.selectAll(\".chromosome\").on(\"click\", function() {\n          ideogram.rotateAndToggleDisplay(this);\n        });\n      } else {\n        d3.selectAll(\".chromosome\").style(\"cursor\", \"default\");\n      }\n    } catch (e) {\n      console.log(e);\n      //  throw e;\n    }\n  }\n};\n","/* Decompresses ideogram's annotations for crossfilter initialization\nBy default, annotations are clustered by chromosome, e.g.\n[\n  {\"chr\": \"1\", \"annots\": [{\"from\": 100, \"to\", 101, \"chr\": \"1\", ...}, ...]},\n  {\"chr\": \"2\", \"annots\": [{\"from\": 500, \"to\", 501, \"chr\": \"2\", ...}, ...]},\n  ...\n]\nThis method flattens that structure to e.g.\n[\n  {\"from\": 100, \"to\": 101, \"chr\": \"1\", ...},\n  ...\n  {\"from\": 500, \"to\": 501, \"chr\": \"2\", ...},\n]\nSee also: packAnnots\n*/\nIdeogram.prototype.unpackAnnots = function() {\n  var chr, annots, i,\n    unpackedAnnots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots = chr.annots;\n    unpackedAnnots = unpackedAnnots.concat(annots);\n  }\n\n  return unpackedAnnots;\n};\n\n/*\n  Compresses annots back to default state.  Inverse of unpackAnnots.\n*/\nIdeogram.prototype.packAnnots = function(unpackedAnnots) {\n  var chr, annot, i,\n    annots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (chr in chrs) {\n    annots.push({chr: chrs[chr].chr, annots: []});\n  }\n\n  for (i = 0; i < unpackedAnnots.length; i++) {\n    annot = unpackedAnnots[i];\n    annots[annot.chrIndex].annots.push(annot);\n  }\n\n  return annots;\n};\n\n/*\n  Initializes crossfilter.  Needed for client-side filtering.\n  More: https://github.com/square/crossfilter/wiki/API-Reference\n*/\nIdeogram.prototype.initCrossFilter = function() {\n  var ideo = this,\n    keys = ideo.rawAnnots.keys,\n    i, facet;\n\n  ideo.unpackedAnnots = ideo.unpackAnnots();\n  ideo.crossfilter = crossfilter(ideo.unpackedAnnots);\n\n  ideo.annotsByFacet = {};\n\n  ideo.facets = keys.slice(3, keys.length);\n\n  for (i = 0; i < ideo.facets.length; i++) {\n    facet = ideo.facets[i];\n    ideo.annotsByFacet[facet] =\n      ideo.crossfilter\n        .dimension(function(d) {\n          return d[facet];\n        });\n  }\n};\n\n/*\n  Filters annotations based on the given selections\n  \"selections\" is an object of objects, e.g.\n\n    {\n      \"tissue-type\": {          <-- a facet\n        \"cerebral-cortex\": 1,   <-- a filter; \"1\" means it is selected\n        \"liver\": 1\n      },\n      \"gene-type\": {\n        mirna\": 1\n      }\n    }\n\n  Translation:\n  select where:\n      (tissue-type is cerebral-cortex OR liver) and (gene-type is mirna)\n\n  TODO:\n    * Filter counts\n    * Range filters\n    * Integrate server-side filtering for very large datasets\n*/\nIdeogram.prototype.filterAnnots = function(selections) {\n  var t0 = Date.now();\n\n  var i, facet,\n    prevFacet = null,\n    results, fn,\n    counts = {},\n    ideo = this;\n\n  if (Object.keys(selections).length === 0) {\n    results = ideo.unpackedAnnots;\n  } else {\n    for (i = 0; i < ideo.facets.length; i++) {\n      facet = ideo.facets[i];\n      if (facet in selections) {\n        fn = function(d) {\n          if (d in selections[facet]) {\n            return true;\n          }\n        };\n      } else {\n        fn = null;\n      }\n      ideo.annotsByFacet[facet].filter(fn);\n      counts[facet] = ideo.annotsByFacet[facet].group().top(Infinity);\n    }\n\n    results = ideo.annotsByFacet[facet].top(Infinity);\n  }\n\n  for (i < 0; i < ideo.facets.length; i++) {\n    ideo.annotsByFacet[facet].filterAll(); // clear filters\n  }\n\n  results = ideo.packAnnots(results);\n\n  d3.selectAll(\"polygon.annot\").remove();\n  ideo.drawAnnots(results);\n\n  console.log(\"Time in filterAnnots: \" + (Date.now() - t0) + \" ms\");\n\n  return counts;\n};\n"]}