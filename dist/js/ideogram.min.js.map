{"version":3,"sources":["range.js","model-adapter.js","model-no-bands-adapter.js","layouts/layout.js","layouts/horizontal-layout.js","layouts/vertical-layout.js","layouts/paired-layout.js","layouts/small-layout.js","ploidy.js","color.js","views/chromosome.js","views/telocentric-chromosome.js","views/metacentric-chromosome.js","lib.js","views/chromosome-util.js","core.js","filter.js"],"names":["Range","data","this","_data","ModelAdapter","model","_model","_class","ModelNoBandsAdapter","call","Layout","config","ideo","_config","_ideo","_ploidy","_translate","undefined","chrSetMargin","k","chrMargin","ploidy","_tickSize","_isRotated","HorizontalLayout","_margin","left","top","VerticalLayout","PairedLayout","SmallLayout","Ploidy","_description","_normalize","ploidyDesc","Color","Chromosome","adapter","_adapter","getModel","_color","_bumpCoefficient","TelocentricChromosome","_pArmOffset","MetacentricChromosome","naturalSort","a","b","q","r","c","d","e","f","g","h","i","insensitive","toLowerCase","replace","j","l","split","m","n","parseInt","match","length","Date","parse","o","p","parseFloat","s","t","u","v","Math","max","isNaN","test","localeCompare","w","abs","slugify","value","ChromosomeUtil","node","_node","prototype","getStart","start","getStop","stop","getLength","getColor","chrNumber","_getColor","Array","isArray","color","getInstance","bands","getCssClass","Object","create","width","push","name","px","perspective","rows","orientation","_getLeftMargin","_getYScale","chrWidth","getChromosomeLabels","chrElement","util","getSetLabel","getLabel","filter","rotateBack","Error","rotateForward","rotate","chrSetNumber","otherChrs","d3","selectAll","selector","style","getChromosomeLabelClass","_getAdditionalOffset","annotationHeight","numAnnotTracks","_getChromosomeSetSize","setSize","getSetSize","getMargin","getHeight","getChromosomeBandTickY1","getChromosomeBandTickY2","getChromosomeBandLabelTranslate","getChromosomeSetLabelAnchor","getChromosomeBandLabelAnchor","getChromosomeLabelXPosition","getChromosomeLabelYPosition","getChromosomeSetLabelYPosition","getChromosomeSetLabelXPosition","getChromosomeSetLabelTranslate","getChromosomeSetTranslate","getChromosomeSetYTranslate","margin","setNumber","callback","xOffset","ideoBox","select","getBoundingClientRect","chrBox","scaleX","height","scaleY","yOffset","transform","parentNode","transition","attr","on","labels","getSvg","append","enter","text","String","translate","remove","taxId","numChromosomes","chromosomes","lastSetOffset","lastSetSize","getWidth","chrHeight","band","x","round","y","leftMargin","chromosomeSetYTranslate","self","marginTop","pad","annotationsLayout","prevTranslate","translateY","Number","organisms","getTaxids","taxIdList","size","rowSize","additionalPadding","getChromosomesNumber","chrSetCode","keys","description","normalized","key","descValue","reverse","ancestors","existence","_getexistenceArray","array","getAncestor","exists","armNumber","desc","getArmColor","armColors","_getPolyploidArmColor","getBorderColor","ancestor","centromerePosition","_addPArmShape","clipPath","isPArmRendered","concat","_getPArmShape","_addQArmShape","isQArmRendered","_getQArmShape","render","container","id","_renderPArm","_renderQArm","_renderRangeSet","opacity","fill","isFullyBanded","strokeWidth","path","class","rangeSet","range","chr","map","rangesContainer","bandsXOffset","_bandsXOffset","startPx","convertBpToPx","lengthPx","_getShapeData","firstQBand","lastBand","rightTerminalPosition","x1","x2","x3","x2b","_renderBands","arm","stain","Boolean","_typeof","Symbol","iterator","obj","constructor","G","Q","process","nextTick","B","X","document","createTextNode","observe","characterData","MessageChannel","port1","onmessage","port2","postMessage","setTimeout","J","tt","require","runOnLoop","runOnContext","rt","_state","arguments","_result","E","_","TypeError","then","ut","error","S","_label","it","st","et","resolve","nt","A","_onerror","T","ot","_subscribers","M","P","ct","C","O","at","Y","_t","promise","I","F","D","K","L","N","_instanceConstructor","_input","_remaining","_enumerate","U","W","global","Function","Promise","toString","cast","pt","z","H","R","window","V","MutationObserver","WebKitMutationObserver","Z","$","Uint8ClampedArray","importScripts","random","substring","ft","lt","ht","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","_settledAt","_willSettleAt","dt","vt","polyfill","define","amd","module","exports","ES6Promise","slice","apply","forEach","Ideogram","rect","JSON","stringify","debug","dataDir","sexChromosomes","sex","resolution","showChromosomeLabels","querySelector","showBandLabels","showFullyBanded","brush","bump","adjustedBump","chromosome","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","9606","commonName","scientificName","scientificNameAbbr","assemblies","default","GRCh38","GRCh37","10090","4641","chromosomesArray","bandsToShow","bandData","init","getBands","content","taxid","lines","delimiter","tsvLines","columns","line","tsvLinesLength","source","firstColumn","tmp","chrBands","eval","indexOf","chromosomeName","getChromosomeModel","chrIndex","pxStop","chrLength","cs","hasBands","type","fullChromosomeLabels","orgName","csLength","pcenIndex","scale","multiorganism","drawChromosomeLabels","chromosomeLabelClass","_layout","chrSetLabelXPosition","chrSetLabelTranslate","each","index","fullLabels","setLabelTranslate","drawBandLabels","chrs","chrModel","textOffsets","overlappingLabelXRight","prevHiddenBoxIndex","xLeft","prevLabelXRight","textPadding","textsLength","indexesToShow","prevTextBoxLeft","prevTextBoxWidth","selectorsToShow","ithLength","rotateChromosomeLabels","scaleSvg","tracksHeight","hasOwnProperty","ci","chrMargin2","rotateBandLabels","bandLabels","coord","drawChromosome","rotateAndToggleDisplay","_groups","bpToIscnScale","offset","pxStart","pxLength","iscnStart","iscnStop","iscnLength","bpStart","bpStop","bpLength","convertPxToBp","pxToIscnScale","drawSynteny","syntenicRegions","r1","r2","syntenies","regionID","t0","getTime","insert","regions","stopPx","syntenicRegion","activeRegion","others","classed","t1","console","log","annotationsPath","localAnnotationsPath","annots","annotations","annotHeight","annotationTracks","barWidth","annotationsColor","drawAnnots","friendlyAnnots","annot","rawAnnot","rawAnnots","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","getHistogramBars","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","histogramScaling","firstGet","numBins","count","barAnnots","barCount","fillAnnots","filledAnnots","chrArray","layout","triangle","circle","chrAnnot","y1","y2","thisChrWidth","createBrush","from","to","extent","event","selection","xScale","invert","floor","ceil","selectedRegion","x0","chrLengthBp","scaleLinear","domain","right","brushX","yTranslate","move","getBandColorGradients","colors","color1","color2","color3","css","gradients","getTaxidFromEutils","organism","taxonomySearch","json","esearchresult","idlist","taxids","org","orgs","taxidInit","tmpChrs","assembly","urlOrg","fullyBandedTaxids","chromosomesUrl","request","get","asmAndChrArray","seenChrs","response","chromsomes","sort","sortChromosomes","getAssemblyAndChromosomesFromEutils","asmChrArray","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","links","ntSummary","results","result","cnIndex","rsuid","assemblyaccession","qs","linksets","linksetdbs","join","genome","subtype","subname","substr","slen","drawSexChromosomes","bandsArray","defs","sci","sexChromosomeIndexes","initDrawChromosomes","setSexChromosomes","numChrsInSet","sexChrs","list","processBandData","bandsByChr","chrsByTaxid","t0B","t1B","writeContainer","svgClass","svgWidth","svgHeight","html","finishInit","t0A","pa","timeout","clearTimeout","crossfilter","initCrossFilter","checkAnnotData","t0C","t1C","chrID","t1A","numBandDataResponses","accession","bandFileName","bandDataFileNames","unpackAnnots","unpackedAnnots","packAnnots","facet","annotsByFacet","facets","dimension","filterAnnots","selections","fn","now","counts","group","Infinity","filterAll","label","setLabel"],"mappings":"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","file":"ideogram.min.js","sourcesContent":["'use strict';\n\n/**\n * Chromosome range.\n * @public\n * @class\n * @param {Object} data - range data.\n * @param {Integer} data.chr - chromosome index.\n * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n * @param {Integer} data.start - range start.\n * @param {Integer} data.stop - range end.\n * @param {String} data.color - range color.\n */\nfunction Range(data) {\n  this._data = data;\n}\n\nRange.prototype.getStart = function () {\n  return this._data.start;\n};\n\nRange.prototype.getStop = function () {\n  return this._data.stop;\n};\n\nRange.prototype.getLength = function () {\n  return this._data.stop - this._data.start;\n};\n\nRange.prototype.getColor = function (chrNumber) {\n  if (!('ploidy' in this._data)) {\n    return this._getColor(chrNumber);\n  } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n    return this._getColor(chrNumber);\n  } else {\n    return 'transparent';\n  }\n};\n\nRange.prototype._getColor = function (chrNumber) {\n  if (Array.isArray(this._data.color)) {\n    return this._data.color[chrNumber];\n  } else {\n    return this._data.color;\n  }\n};","'use strict';\n\nfunction ModelAdapter(model) {\n  this._model = model;\n  this._class = 'ModelAdapter';\n}\n\nModelAdapter.getInstance = function (model) {\n  if (model.bands) {\n    return new ModelAdapter(model);\n  } else {\n    return new ModelNoBandsAdapter(model);\n  }\n};\n\nModelAdapter.prototype.getModel = function () {\n  return this._model;\n};\n\nModelAdapter.prototype.getCssClass = function () {\n  return '';\n};","'use strict';\n\nfunction ModelNoBandsAdapter(model) {\n  /*\n   * Call parent constructor.\n   */\n  ModelAdapter.call(this, model);\n  this._class = 'ModelNoBandsAdapter';\n}\n\nModelNoBandsAdapter.prototype = Object.create(ModelAdapter.prototype);\n\nModelNoBandsAdapter.prototype.getModel = function () {\n  this._model.bands = [];\n\n  // If chromosome width more, then 1 add single band to bands array\n  if (this._model.width > 1) {\n    this._model.bands.push({\n      name: 'q',\n      px: {\n        start: 0,\n        stop: this._model.width,\n        width: this._model.width\n      }\n    });\n  }\n\n  return this._model;\n};\n\nModelNoBandsAdapter.prototype.getCssClass = function () {\n  return 'noBands';\n};","\"use strict\";\n\nfunction Layout(config, ideo) {\n  this._config = config;\n  this._ideo = ideo;\n  this._ploidy = this._ideo._ploidy;\n  this._translate = undefined;\n\n  if ('chrSetMargin' in config) {\n    this.chrSetMargin = config.chrSetMargin;\n  } else {\n    var k = this._config.chrMargin;\n    this.chrSetMargin = this._config.ploidy > 1 ? k : 0;\n  }\n\n  // Chromosome band's size.\n  this._tickSize = 8;\n\n  // Chromosome rotation state.\n  this._isRotated = false;\n}\n\n// Factory method\nLayout.getInstance = function (config, ideo) {\n  if (\"perspective\" in config && config.perspective === \"comparative\") {\n    return new PairedLayout(config, ideo);\n  } else if (\"rows\" in config && config.rows > 1) {\n    return new SmallLayout(config, ideo);\n  } else if (config.orientation === 'vertical') {\n    return new VerticalLayout(config, ideo);\n  } else if (config.orientation === 'horizontal') {\n    return new HorizontalLayout(config, ideo);\n  } else {\n    return new VerticalLayout(config, ideo);\n  }\n};\n\n// Get chart left margin\nLayout.prototype._getLeftMargin = function () {\n  return this._margin.left;\n};\n\n// Get rotated chromosome y scale\nLayout.prototype._getYScale = function () {\n  // 20 is width of rotated chromosome.\n  return 20 / this._config.chrWidth;\n};\n\n// Get chromosome labels\nLayout.prototype.getChromosomeLabels = function (chrElement) {\n  var util = new ChromosomeUtil(chrElement);\n\n  return [util.getSetLabel(), util.getLabel()].filter(function (d) {\n    return d.length > 0;\n  });\n};\n\n// Rotate chromosome to original position\nLayout.prototype.rotateBack = function () {\n  throw new Error(this._class + '#rotateBack not implemented');\n};\n\n// Rotate chromosome to opposite position\nLayout.prototype.rotateForward = function () {\n  throw new Error(this._class + '#rotateForward not implemented');\n};\n\nLayout.prototype.rotate = function (chrSetNumber, chrNumber, chrElement) {\n  var ideo = this._ideo;\n\n  // Find chromosomes which should be hidden\n  var otherChrs = d3.selectAll(ideo.selector + \" g.chromosome\").filter(function () {\n    return this !== chrElement;\n  });\n\n  if (this._isRotated) {\n    // Reset _isRotated flag\n    this._isRotated = false;\n    // Rotate chromosome back\n    this.rotateBack(chrSetNumber, chrNumber, chrElement, function () {\n      // Show all other chromosomes and chromosome labels\n      otherChrs.style(\"display\", null);\n      d3.selectAll(ideo.selector + \" .chrSetLabel, .chrLabel\").style(\"display\", null);\n    });\n  } else {\n    // Set _isRotated flag\n    this._isRotated = true;\n\n    // Hide all other chromosomes and chromosome labels\n    otherChrs.style(\"display\", \"none\");\n    d3.selectAll(ideo.selector + \" .chrSetLabel, .chrLabel\").style(\"display\", \"none\");\n\n    // Rotate chromosome\n    this.rotateForward(chrSetNumber, chrNumber, chrElement);\n  }\n};\n\nLayout.prototype.getChromosomeLabelClass = function () {\n  if (this._config.ploidy === 1) {\n    return 'chrLabel';\n  } else {\n    return 'chrSetLabel';\n  }\n};\n\nLayout.prototype._getAdditionalOffset = function () {\n  return (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1);\n};\n\nLayout.prototype._getChromosomeSetSize = function (chrSetNumber) {\n  // Get last chromosome set size.\n  var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n  // Increase offset by last chromosome set size\n  return setSize * this._config.chrWidth * 2 + this.chrSetMargin;\n};\n\n// Get layout margin\nLayout.prototype.getMargin = function () {\n  return this._margin;\n};\n\n// Get SVG element height\nLayout.prototype.getHeight = function () {\n  throw new Error(this._class + '#getHeight not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY1 = function () {\n  throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY2 = function () {\n  throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n};\n\n// Get chromosome's band translate attribute\nLayout.prototype.getChromosomeBandLabelTranslate = function () {\n  throw new Error(this._class + '#getChromosomeBandLabelTranslate not implemented');\n};\n\n// Get chromosome set label anchor property\nLayout.prototype.getChromosomeSetLabelAnchor = function () {\n  return 'middle';\n};\n\n// Get chromosome's band label text-anchor value\nLayout.prototype.getChromosomeBandLabelAnchor = function () {\n  throw new Error(this._class + '#getChromosomeBandLabelAnchor not implemented');\n};\n\nLayout.prototype.getChromosomeLabelXPosition = function () {\n  throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n};\n\n// Get chromosome label y position.\nLayout.prototype.getChromosomeLabelYPosition = function () {\n  return -5.5;\n};\n\n// \"i\" is chromosome number\nLayout.prototype.getChromosomeSetLabelYPosition = function (i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelYPosition(i);\n  } else {\n    return -2 * this._config.chrWidth;\n  }\n};\n\nLayout.prototype.getChromosomeSetLabelXPosition = function () {\n  throw new Error(this._class + '#getChromosomeSetLabelXPosition not implemented');\n};\n\nLayout.prototype.getChromosomeSetLabelTranslate = function () {\n  throw new Error(this._class + '#getChromosomeSetLabelTranslate not implemented');\n};\n\n// Get chromosome set translate attribute\nLayout.prototype.getChromosomeSetTranslate = function () {\n  throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n};\n\n// Get chromosome set translate's y offset\nLayout.prototype.getChromosomeSetYTranslate = function () {\n  throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n};","'use strict';\n\nfunction HorizontalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'HorizontalLayout';\n  this._margin = {\n    left: 20,\n    top: 30\n  };\n}\n\nHorizontalLayout.prototype = Object.create(Layout.prototype);\n\nHorizontalLayout.prototype._getLeftMargin = function () {\n  var margin = Layout.prototype._getLeftMargin.call(this);\n  if (this._config.ploidy > 1) {\n    margin *= 1.8;\n  }\n\n  return margin;\n};\n\nHorizontalLayout.prototype.rotateForward = function (setNumber, chrNumber, chrElement, callback) {\n  var xOffset = 30;\n\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = ideoBox.height / (chrBox.width + xOffset / 2) * 0.9;\n  var scaleY = this._getYScale();\n\n  var yOffset = (chrNumber + 1) * (this._config.chrWidth * 2 * scaleY);\n\n  var transform = 'rotate(90) ' + 'translate(' + xOffset + ', -' + yOffset + ') ' + 'scale(' + scaleX + ', ' + scaleY + ')';\n\n  d3.select(chrElement.parentNode).transition().attr(\"transform\", transform).on('end', callback);\n\n  // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  d3.select(this._ideo.getSvg()).append('g').attr('class', 'tmp').selectAll('text').data(labels).enter().append('text').attr('class', function (d, i) {\n    return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n  }).attr('x', 30).attr('y', function (d, i) {\n    return (i + 1 + labels.length % 2) * 12;\n  }).style('text-anchor', 'middle').style('opacity', 0).text(String).transition().style('opacity', 1);\n};\n\nHorizontalLayout.prototype.rotateBack = function (setNumber, chrNumber, chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode).transition().attr(\"transform\", translate).on('end', callback);\n\n  d3.selectAll(this._ideo.selector + ' g.tmp').style('opacity', 0).remove();\n};\n\nHorizontalLayout.prototype.getHeight = function (taxId) {\n  // Get last chromosome set offset.\n  var numChromosomes = this._config.chromosomes[taxId].length;\n  var lastSetOffset = this.getChromosomeSetYTranslate(numChromosomes - 1);\n\n  // Get last chromosome set size.\n  var lastSetSize = this._getChromosomeSetSize(numChromosomes - 1);\n\n  // Increase offset by last chromosome set size\n  lastSetOffset += lastSetSize;\n\n  return lastSetOffset + this._getAdditionalOffset() * 2;\n};\n\nHorizontalLayout.prototype.getWidth = function () {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelAnchor = function () {\n  return 'end';\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelAnchor = function () {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY1 = function () {\n  return 2;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY2 = function () {\n  return 10;\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelTranslate = function (band) {\n  var x = this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n  var y = -10;\n\n  return {\n    x: x,\n    y: y,\n    translate: 'translate(' + x + ',' + y + ')'\n  };\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelTranslate = function () {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeSetTranslate = function (setNumber) {\n  var leftMargin = this._getLeftMargin();\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return \"translate(\" + leftMargin + \", \" + chromosomeSetYTranslate + \")\";\n};\n\nHorizontalLayout.prototype.getChromosomeSetYTranslate = function (setNumber) {\n  // If no detailed description provided just use one formula for all cases.\n  if (!this._config.ploidyDesc) {\n    return this._config.chrMargin * (setNumber + 1);\n  }\n\n  // Id detailed description provided start to calculate offsets\n  //  for each chromosome set separately. This should be done only once.\n  if (!this._translate) {\n    // First offset equals to zero.\n    this._translate = [1];\n\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      this._translate[i] = this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelXPosition = function (i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelXPosition(i);\n  } else {\n    return -20;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelYPosition = function (i) {\n  var setSize = this._ploidy.getSetSize(i),\n      config = this._config,\n      chrMargin = config.chrMargin,\n      chrWidth = config.chrWidth;\n\n  if (config.ploidy === 1) {\n    y = chrWidth / 2 + 3;\n  } else {\n    y = setSize * chrMargin / 2;\n  }\n\n  return y;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelXPosition = function () {\n  return -8;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelYPosition = function () {\n  return this._config.chrWidth;\n};","\"use strict\";\n\nfunction VerticalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'VerticalLayout';\n  // Layout margins\n  this._margin = {\n    top: 30,\n    left: 15\n  };\n}\n\nVerticalLayout.prototype = Object.create(Layout.prototype);\n\nVerticalLayout.prototype.rotateForward = function (setNumber, chrNumber, chrElement, callback) {\n  var self = this;\n\n  var xOffset = 20;\n\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = ideoBox.width / chrBox.height * 0.97;\n  var scaleY = this._getYScale();\n\n  var transform = \"translate(\" + xOffset + \", 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode).transition().attr(\"transform\", transform).on('end', callback);\n\n  // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  var y = (xOffset + self._config.chrWidth) * 1.3;\n  d3.select(this._ideo.getSvg()).append('g').attr('class', 'tmp').selectAll('text').data(labels).enter().append('text').attr('class', function (d, i) {\n    return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n  }).attr('x', 0).attr('y', y).style('opacity', 0).text(String).transition().style('opacity', 1);\n};\n\nVerticalLayout.prototype.rotateBack = function (setNumber, chrNumber, chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode).transition().attr(\"transform\", translate).on('end', callback);\n\n  d3.selectAll(this._ideo.selector + ' g.tmp').style('opacity', 0).remove();\n};\n\nVerticalLayout.prototype.getHeight = function () {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nVerticalLayout.prototype.getWidth = function () {\n  return '97%';\n};\n\nVerticalLayout.prototype.getChromosomeBandLabelTranslate = function () {};\n\nVerticalLayout.prototype.getChromosomeSetLabelTranslate = function () {\n  return 'rotate(-90)';\n};\n\nVerticalLayout.prototype.getChromosomeSetTranslate = function (setNumber) {\n  var marginTop = this._margin.top;\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return 'rotate(90) ' + 'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')';\n};\n\nVerticalLayout.prototype.getChromosomeSetYTranslate = function (setNumber) {\n  // Get additional padding caused by annotation/histogram tracks\n  var pad = this._getAdditionalOffset(),\n      margin = this._config.chrMargin,\n      width = this._config.chrWidth,\n      translate;\n\n  // If no detailed description provided just use one formula for all cases\n  if (!this._config.ploidyDesc) {\n    // TODO:\n    // This part of code contains a lot magic numbers and if\n    // statements for exactly corresponing to original ideogram examples.\n    // But all this stuff should be removed. Calculation of translate\n    // should be a simple formula applied for all cases listed below.\n    // Now they are diffirent because of Layout:_getAdditionalOffset do\n    // not meet for cases when no annotation, when annotation exists and\n    // when histogram used\n\n    if (this._config.annotationsLayout === \"histogram\") {\n      return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n    } else {\n      translate = width + setNumber * (margin + width) + pad * 2;\n      if (pad > 0) {\n        return translate;\n      } else {\n        return translate + 4 + 2 * setNumber;\n      }\n    }\n  }\n\n  // If detailed description provided start to calculate offsets\n  // for each chromosome set separately. This should be done only once\n  if (!this._translate) {\n    // First offset equals to zero\n    this._translate = [this._ploidy.getSetSize(0) * width * 2];\n    var prevTranslate;\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      prevTranslate = this._translate[i - 1];\n      this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelXPosition = function () {\n  return this._config.chrWidth * this._config.ploidy / -2;\n};\n\nVerticalLayout.prototype.getChromosomeLabelXPosition = function () {\n  return this._config.chrWidth / -2;\n};","'use strict';\n\nfunction PairedLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'PairedLayout';\n\n  this._margin = {\n    left: 30\n  };\n}\n\nPairedLayout.prototype = Object.create(Layout.prototype);\n\nPairedLayout.prototype.rotateForward = function (setNumber, chrNumber, chrElement, callback) {\n  var self = this;\n  var ideo = this._ideo;\n\n  // Get ideo container and chromosome set dimensions\n  var ideoBox = d3.select(ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n  // Evaluate dimensions scale coefficients\n  var scaleX = ideoBox.width / chrBox.height * 0.97;\n  var scaleY = this._getYScale();\n  // Evaluate y offset of chromosome. It is different for first and the second one\n  var yOffset = setNumber ? 150 : 25;\n\n  var transform = 'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n  // Run rotation procedure\n  d3.select(chrElement.parentNode).transition().attr(\"transform\", transform).on('end', function () {\n    // Run callback function if provided\n    if (callback) {\n      callback();\n    }\n\n    var translateY = 6 * Number(!setNumber);\n\n    // Rotate band labels\n    d3.select(chrElement.parentNode).selectAll('g.bandLabel text').attr('transform', 'rotate(90) translate(0, ' + translateY + ')').attr(\"text-anchor\", \"middle\");\n\n    // Hide syntenic regions\n    d3.selectAll(ideo.selector + ' .syntenicRegion').style(\"display\", 'none');\n  });\n\n  // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n\n  d3.select(this._ideo.getSvg()).append('g').attr('class', 'tmp').selectAll('text').data(this.getChromosomeLabels(chrElement)).enter().append('text').attr('class', function (d, i) {\n    return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n  }).attr('x', 0).attr('y', yOffset + self._config.chrWidth * scaleX / 2 * 1.15).style('opacity', 0).text(String).transition().style('opacity', 1);\n};\n\nPairedLayout.prototype.rotateBack = function (setNumber, chrNumber, chrElement, callback) {\n  var ideo = this._ideo;\n\n  // Get intial transformation string for chromosome set\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  // Run rotation procedure\n  d3.select(chrElement.parentNode).transition().attr(\"transform\", translate).on('end', function () {\n    // Run callback fnuction if provided\n    callback();\n    // Show syntenic regions\n    d3.selectAll(ideo.select + ' .syntenicRegion').style(\"display\", null);\n    // Reset changed attributes to original state\n    d3.select(chrElement.parentNode).selectAll('g.bandLabel text').attr('transform', null).attr(\"text-anchor\", setNumber ? null : 'end');\n  });\n\n  d3.selectAll(ideo.selector + ' g.tmp').style('opacity', 0).remove();\n};\n\nPairedLayout.prototype.getHeight = function () {\n  return this._config.chrHeight + this._margin.left * 1.5;\n};\n\nPairedLayout.prototype.getWidth = function () {\n  return '97%';\n};\n\nPairedLayout.prototype.getChromosomeBandTickY1 = function (chrNumber) {\n  return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY2 = function (chrNumber) {\n  var width = this._config.chrWidth;\n  return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeBandLabelAnchor = function (chrNumber) {\n  return chrNumber % 2 ? null : 'end';\n};\n\nPairedLayout.prototype.getChromosomeBandLabelTranslate = function (band, chrNumber) {\n  var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n  var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n  return {\n    x: y,\n    y: y,\n    translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n  };\n};\n\nPairedLayout.prototype.getChromosomeLabelXPosition = function () {\n  return -this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelXPosition = function () {\n  return this._config.chrWidth / -2;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelTranslate = function () {\n  return 'rotate(-90)';\n};\n\nPairedLayout.prototype.getChromosomeSetTranslate = function (setNumber) {\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return 'rotate(90) ' + 'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')';\n};\n\nPairedLayout.prototype.getChromosomeSetYTranslate = function (setNumber) {\n  return 200 * (setNumber + 1);\n};","\"use strict\";\n\nfunction SmallLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'SmallLayout';\n\n  this._margin = {\n    left: 36.5,\n    top: 10\n  };\n}\n\nSmallLayout.prototype = Object.create(Layout.prototype);\n\nSmallLayout.prototype.rotateForward = function (setNumber, chrNumber, chrElement, callback) {\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = ideoBox.width / chrBox.height * 0.97;\n  var scaleY = this._getYScale();\n\n  transform = \"translate(5, 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode).transition().attr(\"transform\", transform).on('end', callback);\n};\n\nSmallLayout.prototype.rotateBack = function (setNumber, chrNumber, chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode).transition().attr(\"transform\", translate).on('end', callback);\n};\n\nSmallLayout.prototype.getHeight = function () {\n  return this._config.rows * (this._config.chrHeight + this._margin.top * 1.5);\n};\n\nSmallLayout.prototype.getWidth = function () {\n  return '97%';\n};\n\nSmallLayout.prototype.getChromosomeBandLabelTranslate = function () {};\n\nSmallLayout.prototype.getChromosomeSetLabelTranslate = function () {\n  return 'rotate(-90)';\n};\n\nSmallLayout.prototype.getChromosomeSetTranslate = function (setNumber) {\n  // Get organisms id list\n  var organisms = [];\n  this._ideo.getTaxids(function (taxIdList) {\n    organisms = taxIdList;\n  });\n  // Get first organism chromosomes amount\n  var size = this._ideo.config.chromosomes[organisms[0]].length;\n  // Amount of chromosomes per number\n  var rowSize = size / this._config.rows;\n\n  var xOffset;\n  var yOffset;\n\n  if (setNumber > rowSize - 1) {\n    xOffset = this._margin.left + this._config.chrHeight * 1.4;\n    yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n  } else {\n    xOffset = this._margin.left;\n    yOffset = this.getChromosomeSetYTranslate(setNumber);\n  }\n\n  return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n};\n\nSmallLayout.prototype.getChromosomeSetYTranslate = function (setNumber) {\n  // Get additional padding caused by annotation tracks\n  var additionalPadding = this._getAdditionalOffset();\n  // If no detailed description provided just use one formula for all cases\n  return this._margin.left * setNumber + this._config.chrWidth + additionalPadding * 2 + additionalPadding * setNumber;\n};\n\nSmallLayout.prototype.getChromosomeSetLabelXPosition = function (setNumber) {\n  return (this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2 + (this._config.ploidy > 1 ? 0 : this._config.chrWidth);\n};\n\nSmallLayout.prototype.getChromosomeLabelXPosition = function () {\n  return this._config.chrWidth / -2;\n};","'use strict';\n\nfunction Ploidy(config) {\n  this._config = config;\n  this._description = this._normalize(this._config.ploidyDesc);\n}\n\n// Get number of chromosomes in a chromosome set\nPloidy.prototype.getChromosomesNumber = function (setNumber) {\n  if (this._config.ploidyDesc) {\n    var chrSetCode = this._config.ploidyDesc[setNumber];\n    if (chrSetCode instanceof Object) {\n      return Object.keys(chrSetCode)[0].length;\n    } else {\n      return chrSetCode.length;\n    }\n  } else {\n    return this._config.ploidy || 1;\n  }\n};\n\n// Normalize use defined description\nPloidy.prototype._normalize = function (description) {\n  var normalized, key, descValue;\n\n  // Return the same if no description provided\n  if (!description) {\n    return description;\n  }\n\n  // Array of normalized description objects\n  normalized = [];\n\n  // Loop through description and normalize\n  for (key in description) {\n    descValue = description[key];\n    if (typeof descValue === 'string') {\n      if (this._config.orientation === 'vertical') {\n        descValue = descValue.split('').reverse();\n      }\n      normalized.push({\n        ancestors: descValue,\n        existence: this._getexistenceArray(descValue.length)\n      });\n    } else {\n      normalized.push({\n        ancestors: Object.keys(descValue)[0],\n        existence: descValue[Object.keys(descValue)[0]]\n      });\n    }\n  }\n\n  return normalized;\n};\n\n// Get array filled by '11' elements\nPloidy.prototype._getexistenceArray = function (length) {\n  var array = [];\n\n  for (var i = 0; i < length; i++) {\n    array.push('11');\n  }\n\n  return array;\n};\n\nPloidy.prototype.getSetSize = function (chrSetNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors.length;\n  } else {\n    return 1;\n  }\n};\n\n// Get ancestor letter\nPloidy.prototype.getAncestor = function (chrSetNumber, chrNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors[chrNumber];\n  } else {\n    return '';\n  }\n};\n\n// Check if chromosome's arm should be rendered.\n// If no description was provided, method returns true and\n// something another depending on user provided description.\nPloidy.prototype.exists = function (chrSetNumber, chrNumber, armNumber) {\n  if (this._description) {\n    var desc = this._description[chrSetNumber].existence[chrNumber][armNumber];\n    return Number(desc) > 0;\n  } else {\n    return true;\n  }\n};","'use strict';\n\nfunction Color(config) {\n  // Ideogram config\n  this._config = config;\n  this._ploidy = new Ploidy(this._config);\n}\n\nColor.prototype.getArmColor = function (chrSetNumber, chrNumber, armNumber) {\n  if (this._config.armColors) {\n    return this._config.armColors[armNumber];\n  } else if (this._config.ancestors) {\n    return this._getPolyploidArmColor(chrSetNumber, chrNumber, armNumber);\n  } else {\n    return null;\n  }\n};\n\nColor.prototype.getBorderColor = function (chrSetNumber, chrNumber, armNumber) {\n  if (chrNumber < this._config.ploidy) {\n    return '#000';\n  } else if (this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return '#000';\n  } else {\n    return '#fff';\n  }\n};\n\nColor.prototype._getPolyploidArmColor = function (chrSetNumber, chrNumber, armNumber) {\n  if (!this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return 'transparent';\n  } else {\n    var ancestor = this._ploidy.getAncestor(chrSetNumber, chrNumber, armNumber);\n    return this._config.ancestors[ancestor];\n  }\n};","'use strict';\n\nfunction Chromosome(adapter, config, ideo) {\n  this._adapter = adapter;\n  this._model = this._adapter.getModel();\n  this._config = config;\n  this._ideo = ideo;\n  this._color = new Color(this._config);\n  this._bumpCoefficient = 5;\n}\n\n// Factory method\nChromosome.getInstance = function (adapter, config, ideo) {\n  if (adapter.getModel().centromerePosition === 'telocentric') {\n    return new TelocentricChromosome(adapter, config, ideo);\n  } else {\n    return new MetacentricChromosome(adapter, config, ideo);\n  }\n};\n\nChromosome.prototype._addPArmShape = function (clipPath, isPArmRendered) {\n  if (isPArmRendered) {\n    return clipPath.concat(this._getPArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype._addQArmShape = function (clipPath, isQArmRendered) {\n  if (isQArmRendered) {\n    return clipPath.concat(this._getQArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype.render = function (container, chrSetNumber, chrNumber) {\n  // Append bands container and apply clip-path on it\n\n  var self = this;\n\n  container = container.append('g').attr('class', 'bands').attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n  // Render chromosome arms\n  var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n  var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n  // Render range set\n  this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n  // Push arms shape string into clipPath array\n  var clipPath = [];\n  clipPath = this._addPArmShape(clipPath, isPArmRendered);\n  clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n  var opacity = '0';\n  var fill = '';\n  var isFullyBanded = this.isFullyBanded();\n  if ('ancestors' in this._ideo.config && !('rangeSet' in this._ideo.config)) {\n    // E.g. diploid human genome (with translucent overlay)\n    fill = self._color.getArmColor(chrSetNumber, chrNumber, 0);\n    if (isFullyBanded) {\n      opacity = '0.5';\n    }\n  } else if (isFullyBanded) {\n    // E.g. mouse reference genome\n    opacity = null;\n    fill = 'transparent';\n  } else if (!('ancestors' in this._ideo.config)) {\n    // E.g. chimpanzee assembly Pan_tro 3.0\n    opacity = '1';\n  }\n\n  // Render chromosome border\n  container.append('g').attr('class', 'chromosome-border').selectAll('path').data(clipPath).enter().append('path').attr('fill', fill).style('fill-opacity', opacity).attr('stroke', function (d, i) {\n    return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n  }).attr('stroke-width', function (d) {\n    return 'strokeWidth' in d ? d.strokeWidth : 1;\n  }).attr('d', function (d) {\n    return d.path;\n  }).attr('class', function (d) {\n    return d.class;\n  });\n\n  return clipPath;\n};\n\nChromosome.prototype._renderRangeSet = function (container, chrSetNumber, chrNumber) {\n  if (!('rangeSet' in this._config)) {\n    return;\n  }\n\n  var rangeSet = this._config.rangeSet.filter(function (range) {\n    return range.chr - 1 === chrSetNumber;\n  }).map(function (range) {\n    return new Range(range);\n  });\n\n  var rangesContainer = container.append('g').attr('class', 'range-set');\n\n  var self = this;\n  var ideo = self._ideo;\n  var bandsXOffset = ideo._bandsXOffset;\n\n  rangesContainer.selectAll('rect.range').data(rangeSet).enter().append('rect').attr('class', 'range').attr('x', function (range) {\n    var startPx = ideo.convertBpToPx(self._model, range.getStart());\n    return startPx - bandsXOffset;\n  }).attr('y', 0).attr('width', function (range) {\n    var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n    return lengthPx - bandsXOffset;\n  }).attr('height', this._config.chrWidth).style('fill', function (range) {\n    return range.getColor(chrNumber);\n  });\n};\n\n// Get chromosome's shape main values\nChromosome.prototype._getShapeData = function () {\n  // First q band from bands sequence\n  var firstQBand;\n  for (var i = 0; i < this._model.bands.length; i++) {\n    if (this._model.bands[i].name[0] === 'q') {\n      firstQBand = this._model.bands[i];\n      break;\n    }\n  }\n\n  // Chromosome's right position\n  var lastBand = this._model.bands.length - 1;\n  var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n  // Properties description:\n  // x1 - left terminal start position\n  // x2 - centromere position\n  // x3 - right terminal end position\n  // w - chromosome width\n  // b - bump size\n  return {\n    x1: 0,\n    x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n    x3: rightTerminalPosition,\n    w: this._config.chrWidth,\n    b: this._config.chrWidth / this._bumpCoefficient\n  };\n};\n\nChromosome.prototype._getPArmShape = function () {\n  var d = this._getShapeData(),\n      x = d.x2 - d.b;\n\n  if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n    // Encountered when chromosome has any of:\n    //  - One placeholder \"band\", e.g. pig genome GCF_000003025.5\n    //  - Many (> 2) bands, e.g. human reference genome\n    //  - Ancestor colors in ploidy configuration, as in ploidy_basic.html\n    return {\n      class: '',\n      path: 'M' + d.b + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x2 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + d.b + ',' + d.w + ' ' + 'Q-' + d.b + ',' + d.w / 2 + ',' + d.b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      class: '',\n      path: 'M' + d.b + ',0 ' + 'L' + (x - 2) + ',0 ' + 'L' + (x - 2) + ',' + d.w + ' ' + 'L' + d.b + ',' + d.w + ' ' + 'Q-' + d.b + ',' + d.w / 2 + ',' + d.b + ',0'\n    }, {\n      class: 'acen',\n      path: 'M' + x + ',0 ' + 'Q' + (d.x2 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + x + ',' + d.w + ' ' + 'L' + (x - 2) + ',' + d.w + ' ' + 'L' + (x - 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype._getQArmShape = function () {\n  var d = this._getShapeData(),\n      x = d.x3 - d.b,\n      x2b = d.x2 + d.b;\n\n  if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n    return {\n      class: '',\n      path: 'M' + x2b + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x3 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + x2b + ',' + d.w + ' ' + 'Q' + (d.x2 - d.b) + ',' + d.w / 2 + ',' + x2b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      path: 'M' + x2b + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x3 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + x2b + ',' + d.w + ' ' + 'L' + x2b + ',0'\n    }, {\n      class: 'acen',\n      path: 'M' + x2b + ',0' + 'Q' + (d.x2 - d.b) + ',' + d.w / 2 + ',' + x2b + ',' + d.w + ' ' + 'L' + x2b + ',' + d.w + 'L' + (x2b + 2) + ',' + d.w + 'L' + (x2b + 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype.isFullyBanded = function () {\n  return this._model.bands && (this._model.bands.length !== 2 || this._model.bands[0].name[0] === 'q');\n};\n\n// Render arm bands\nChromosome.prototype._renderBands = function (container, chrSetNumber, chrNumber, bands, arm) {\n  var self = this;\n  var armNumber = arm === 'p' ? 0 : 1;\n  var fill = '';\n  if ('ancestors' in this._ideo.config && !this.isFullyBanded()) {\n    fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n  }\n\n  container.selectAll(\"path.band.\" + arm).data(bands).enter().append(\"path\").attr(\"id\", function (d) {\n    return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n  }).attr(\"class\", function (d) {\n    return 'band ' + arm + '-band ' + d.stain;\n  }).attr(\"d\", function (d) {\n    var start = self._ideo.round(d.px.start);\n    var length = self._ideo.round(d.px.width);\n\n    x = start + length;\n\n    return \"M \" + start + \", 0\" + \"l \" + length + \" 0 \" + \"l 0 \" + self._config.chrWidth + \" \" + \"l -\" + length + \" 0 z\";\n  }).style('fill', fill);\n};\n\n// Render chromosome's p arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderPArm = function (container, chrSetNumber, chrNumber) {\n  var bands = this._model.bands.filter(function (band) {\n    return band.name[0] === 'p';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n  return Boolean(bands.length);\n};\n\n// Render chromosome's q arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderQArm = function (container, chrSetNumber, chrNumber) {\n  var bands = this._model.bands.filter(function (band) {\n    return band.name[0] === 'q';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n  return Boolean(bands.length);\n};","'use strict';\n\nfunction TelocentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'TelocentricChromosome';\n  this._pArmOffset = 3;\n}\n\nTelocentricChromosome.prototype = Object.create(Chromosome.prototype);\n\nTelocentricChromosome.prototype._addPArmShape = function (clipPath) {\n  return clipPath.concat(this._getPArmShape());\n};\n\nTelocentricChromosome.prototype._getPArmShape = function () {\n  var d = this._getShapeData();\n  d.o = this._pArmOffset;\n\n  return [{\n    class: 'acen',\n    path: 'M' + (d.x2 + 2) + ',1' + 'L' + (d.x2 + d.o + 3.25) + ',1 ' + 'L' + (d.x2 + d.o + 3.25) + ',' + (d.w - 1) + ' ' + 'L' + (d.x2 + 2) + ',' + (d.w - 1)\n  }, {\n    class: 'gpos66',\n    path: 'M' + (d.x2 - d.o + 5) + ',0' + 'L' + (d.x2 - d.o + 3) + ',0 ' + 'L' + (d.x2 - d.o + 3) + ',' + d.w + ' ' + 'L' + (d.x2 - d.o + 5) + ',' + d.w,\n    strokeWidth: 0.5\n  }];\n};\n\nTelocentricChromosome.prototype._getQArmShape = function () {\n  var d = this._getShapeData(),\n      x = d.x3 - d.b,\n      o = this._pArmOffset + 3;\n\n  return {\n    class: '',\n    path: 'M' + (d.x2 + o) + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x3 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + (d.x2 + o) + ',' + d.w\n  };\n};","'use strict';\n\nfunction MetacentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'MetacentricChromosome';\n}\n\nMetacentricChromosome.prototype = Object.create(Chromosome.prototype);","\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n// https://github.com/stefanpenner/es6-promise\n(function () {\n  \"use strict\";\n  function t(t) {\n    return \"function\" == typeof t || \"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t)) && null !== t;\n  }function e(t) {\n    return \"function\" == typeof t;\n  }function n(t) {\n    G = t;\n  }function r(t) {\n    Q = t;\n  }function o() {\n    return function () {\n      process.nextTick(a);\n    };\n  }function i() {\n    return function () {\n      B(a);\n    };\n  }function s() {\n    var t = 0,\n        e = new X(a),\n        n = document.createTextNode(\"\");return e.observe(n, { characterData: !0 }), function () {\n      n.data = t = ++t % 2;\n    };\n  }function u() {\n    var t = new MessageChannel();return t.port1.onmessage = a, function () {\n      t.port2.postMessage(0);\n    };\n  }function c() {\n    return function () {\n      setTimeout(a, 1);\n    };\n  }function a() {\n    for (var t = 0; J > t; t += 2) {\n      var e = tt[t],\n          n = tt[t + 1];e(n), tt[t] = void 0, tt[t + 1] = void 0;\n    }J = 0;\n  }function f() {\n    try {\n      var t = require,\n          e = t(\"vertx\");return B = e.runOnLoop || e.runOnContext, i();\n    } catch (n) {\n      return c();\n    }\n  }function l(t, e) {\n    var n = this,\n        r = new this.constructor(p);void 0 === r[rt] && k(r);var o = n._state;if (o) {\n      var i = arguments[o - 1];Q(function () {\n        x(o, r, i, n._result);\n      });\n    } else E(n, r, t, e);return r;\n  }function h(t) {\n    var e = this;if (t && \"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t)) && t.constructor === e) return t;var n = new e(p);return g(n, t), n;\n  }function p() {}function _() {\n    return new TypeError(\"You cannot resolve a promise with itself\");\n  }function d() {\n    return new TypeError(\"A promises callback cannot return that same promise.\");\n  }function v(t) {\n    try {\n      return t.then;\n    } catch (e) {\n      return ut.error = e, ut;\n    }\n  }function y(t, e, n, r) {\n    try {\n      t.call(e, n, r);\n    } catch (o) {\n      return o;\n    }\n  }function m(t, e, n) {\n    Q(function (t) {\n      var r = !1,\n          o = y(n, e, function (n) {\n        r || (r = !0, e !== n ? g(t, n) : S(t, n));\n      }, function (e) {\n        r || (r = !0, j(t, e));\n      }, \"Settle: \" + (t._label || \" unknown promise\"));!r && o && (r = !0, j(t, o));\n    }, t);\n  }function b(t, e) {\n    e._state === it ? S(t, e._result) : e._state === st ? j(t, e._result) : E(e, void 0, function (e) {\n      g(t, e);\n    }, function (e) {\n      j(t, e);\n    });\n  }function w(t, n, r) {\n    n.constructor === t.constructor && r === et && constructor.resolve === nt ? b(t, n) : r === ut ? j(t, ut.error) : void 0 === r ? S(t, n) : e(r) ? m(t, n, r) : S(t, n);\n  }function g(e, n) {\n    e === n ? j(e, _()) : t(n) ? w(e, n, v(n)) : S(e, n);\n  }function A(t) {\n    t._onerror && t._onerror(t._result), T(t);\n  }function S(t, e) {\n    t._state === ot && (t._result = e, t._state = it, 0 !== t._subscribers.length && Q(T, t));\n  }function j(t, e) {\n    t._state === ot && (t._state = st, t._result = e, Q(A, t));\n  }function E(t, e, n, r) {\n    var o = t._subscribers,\n        i = o.length;t._onerror = null, o[i] = e, o[i + it] = n, o[i + st] = r, 0 === i && t._state && Q(T, t);\n  }function T(t) {\n    var e = t._subscribers,\n        n = t._state;if (0 !== e.length) {\n      for (var r, o, i = t._result, s = 0; s < e.length; s += 3) {\n        r = e[s], o = e[s + n], r ? x(n, r, o, i) : o(i);\n      }t._subscribers.length = 0;\n    }\n  }function M() {\n    this.error = null;\n  }function P(t, e) {\n    try {\n      return t(e);\n    } catch (n) {\n      return ct.error = n, ct;\n    }\n  }function x(t, n, r, o) {\n    var i,\n        s,\n        u,\n        c,\n        a = e(r);if (a) {\n      if (i = P(r, o), i === ct ? (c = !0, s = i.error, i = null) : u = !0, n === i) return void j(n, d());\n    } else i = o, u = !0;n._state !== ot || (a && u ? g(n, i) : c ? j(n, s) : t === it ? S(n, i) : t === st && j(n, i));\n  }function C(t, e) {\n    try {\n      e(function (e) {\n        g(t, e);\n      }, function (e) {\n        j(t, e);\n      });\n    } catch (n) {\n      j(t, n);\n    }\n  }function O() {\n    return at++;\n  }function k(t) {\n    t[rt] = at++, t._state = void 0, t._result = void 0, t._subscribers = [];\n  }function Y(t) {\n    return new _t(this, t).promise;\n  }function q(t) {\n    var e = this;return new e(I(t) ? function (n, r) {\n      for (var o = t.length, i = 0; o > i; i++) {\n        e.resolve(t[i]).then(n, r);\n      }\n    } : function (t, e) {\n      e(new TypeError(\"You must pass an array to race.\"));\n    });\n  }function F(t) {\n    var e = this,\n        n = new e(p);return j(n, t), n;\n  }function D() {\n    throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\");\n  }function K() {\n    throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n  }function L(t) {\n    this[rt] = O(), this._result = this._state = void 0, this._subscribers = [], p !== t && (\"function\" != typeof t && D(), this instanceof L ? C(this, t) : K());\n  }function N(t, e) {\n    this._instanceConstructor = t, this.promise = new t(p), this.promise[rt] || k(this.promise), I(e) ? (this._input = e, this.length = e.length, this._remaining = e.length, this._result = new Array(this.length), 0 === this.length ? S(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(), 0 === this._remaining && S(this.promise, this._result))) : j(this.promise, U());\n  }function U() {\n    return new Error(\"Array Methods must be provided an Array\");\n  }function W() {\n    var t;if (\"undefined\" != typeof global) t = global;else if (\"undefined\" != typeof self) t = self;else try {\n      t = Function(\"return this\")();\n    } catch (e) {\n      throw new Error(\"polyfill failed because global object is unavailable in this environment\");\n    }var n = t.Promise;(!n || \"[object Promise]\" !== Object.prototype.toString.call(n.resolve()) || n.cast) && (t.Promise = pt);\n  }var z;z = Array.isArray ? Array.isArray : function (t) {\n    return \"[object Array]\" === Object.prototype.toString.call(t);\n  };var B,\n      G,\n      H,\n      I = z,\n      J = 0,\n      Q = function Q(t, e) {\n    tt[J] = t, tt[J + 1] = e, J += 2, 2 === J && (G ? G(a) : H());\n  },\n      R = \"undefined\" != typeof window ? window : void 0,\n      V = R || {},\n      X = V.MutationObserver || V.WebKitMutationObserver,\n      Z = \"undefined\" == typeof self && \"undefined\" != typeof process && \"[object process]\" === {}.toString.call(process),\n      $ = \"undefined\" != typeof Uint8ClampedArray && \"undefined\" != typeof importScripts && \"undefined\" != typeof MessageChannel,\n      tt = new Array(1e3);H = Z ? o() : X ? s() : $ ? u() : void 0 === R && \"function\" == typeof require ? f() : c();var et = l,\n      nt = h,\n      rt = Math.random().toString(36).substring(16),\n      ot = void 0,\n      it = 1,\n      st = 2,\n      ut = new M(),\n      ct = new M(),\n      at = 0,\n      ft = Y,\n      lt = q,\n      ht = F,\n      pt = L;L.all = ft, L.race = lt, L.resolve = nt, L.reject = ht, L._setScheduler = n, L._setAsap = r, L._asap = Q, L.prototype = { constructor: L, then: et, \"catch\": function _catch(t) {\n      return this.then(null, t);\n    } };var _t = N;N.prototype._enumerate = function () {\n    for (var t = this.length, e = this._input, n = 0; this._state === ot && t > n; n++) {\n      this._eachEntry(e[n], n);\n    }\n  }, N.prototype._eachEntry = function (t, e) {\n    var n = this._instanceConstructor,\n        r = n.resolve;if (r === nt) {\n      var o = v(t);if (o === et && t._state !== ot) this._settledAt(t._state, e, t._result);else if (\"function\" != typeof o) this._remaining--, this._result[e] = t;else if (n === pt) {\n        var i = new n(p);w(i, t, o), this._willSettleAt(i, e);\n      } else this._willSettleAt(new n(function (e) {\n        e(t);\n      }), e);\n    } else this._willSettleAt(r(t), e);\n  }, N.prototype._settledAt = function (t, e, n) {\n    var r = this.promise;r._state === ot && (this._remaining--, t === st ? j(r, n) : this._result[e] = n), 0 === this._remaining && S(r, this._result);\n  }, N.prototype._willSettleAt = function (t, e) {\n    var n = this;E(t, void 0, function (t) {\n      n._settledAt(it, e, t);\n    }, function (t) {\n      n._settledAt(st, e, t);\n    });\n  };var dt = W,\n      vt = { Promise: pt, polyfill: dt };\"function\" == typeof define && define.amd ? define(function () {\n    return vt;\n  }) : \"undefined\" != typeof module && module.exports ? module.exports = vt : \"undefined\" != typeof this && (this.ES6Promise = vt), dt();\n}).call(undefined);\n\n// https://github.com/kristw/d3.promise\n!function (a, b) {\n  \"function\" == typeof define && define.amd ? define([\"d3\"], b) : \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) ? module.exports = b(require(\"d3\")) : a.d3.promise = b(a.d3);\n}(undefined, function (a) {\n  var b = function () {\n    function b(a, b) {\n      return function () {\n        var c = Array.prototype.slice.call(arguments);return new Promise(function (d, e) {\n          var f = function f(a, b) {\n            return a ? void e(Error(a)) : void d(b);\n          };b.apply(a, c.concat(f));\n        });\n      };\n    }var c = {};return [\"csv\", \"tsv\", \"json\", \"xml\", \"text\", \"html\", \"get\"].forEach(function (d) {\n      c[d] = b(a, a[d]);\n    }), c;\n  }();return a.promise = b, b;\n});\n\n// https://github.com/overset/javascript-natural-sort\nfunction naturalSort(a, b) {\n  var q,\n      r,\n      c = /(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,\n      d = /^\\s+|\\s+$/g,\n      e = /\\s+/g,\n      f = /(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,\n      g = /^0x[0-9a-f]+$/i,\n      h = /^0/,\n      i = function i(a) {\n    return (naturalSort.insensitive && (\"\" + a).toLowerCase() || \"\" + a).replace(d, \"\");\n  },\n      j = i(a),\n      k = i(b),\n      l = j.replace(c, \"\\0$1\\0\").replace(/\\0$/, \"\").replace(/^\\0/, \"\").split(\"\\0\"),\n      m = k.replace(c, \"\\0$1\\0\").replace(/\\0$/, \"\").replace(/^\\0/, \"\").split(\"\\0\"),\n      n = parseInt(j.match(g), 16) || 1 !== l.length && Date.parse(j),\n      o = parseInt(k.match(g), 16) || n && k.match(f) && Date.parse(k) || null,\n      p = function p(a, b) {\n    return (!a.match(h) || 1 == b) && parseFloat(a) || a.replace(e, \" \").replace(d, \"\") || 0;\n  };if (o) {\n    if (n < o) return -1;if (n > o) return 1;\n  }for (var s = 0, t = l.length, u = m.length, v = Math.max(t, u); s < v; s++) {\n    if (q = p(l[s] || \"\", t), r = p(m[s] || \"\", u), isNaN(q) !== isNaN(r)) return isNaN(q) ? 1 : -1;if (/[^\\x00-\\x80]/.test(q + r) && q.localeCompare) {\n      var w = q.localeCompare(r);return w / Math.abs(w);\n    }if (q < r) return -1;if (q > r) return 1;\n  }\n}\n\n// e.g. \"Homo sapiens\" -> \"homo-sapiens\"\nfunction slugify(value) {\n  return value.toLowerCase().replace(' ', '-');\n};","'use strict';\n\n// Chromosome's view utility class\nfunction ChromosomeUtil(node) {\n  this._node = node;\n}\n\nChromosomeUtil.prototype.getLabel = function () {\n  var label = d3.select(this._node).select('text.chrLabel').text();\n  return label;\n};\n\n// Get chromosome set label\nChromosomeUtil.prototype.getSetLabel = function () {\n  var setLabel = d3.select(this._node.parentNode).select('text.chromosome-set-label').text();\n  return setLabel;\n};","\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n// Developed by Eric Weitz (https://github.com/eweitz)\n\n/* Constructs a prototypal Ideogram class */\nvar Ideogram = function Ideogram(config) {\n  var orientation, chrWidth, chrHeight, container, rect;\n\n  // Clone the config object, to allow multiple instantiations\n  // without picking up prior ideogram's settings\n  this.config = JSON.parse(JSON.stringify(config));\n\n  // TODO: Document this\n  this._bandsXOffset = 30;\n\n  this.debug = false;\n\n  if (!this.config.dataDir) {\n    this.config.dataDir = \"../data/bands/native/\";\n  }\n\n  if (!this.config.ploidy) {\n    this.config.ploidy = 1;\n  }\n\n  if (this.config.ploidy > 1) {\n    this.sexChromosomes = {};\n    if (!this.config.sex) {\n      // Default to 'male' per human, mouse reference genomes.\n      // TODO: The default sex value should probably be the heterogametic sex,\n      // i.e. whichever sex has allosomes that differ in morphology.\n      // In mammals and most insects that is the male.\n      // However, in birds and reptiles, that is female.\n      this.config.sex = 'male';\n    }\n    if (this.config.ploidy === 2 && !this.config.ancestors) {\n      this.config.ancestors = { M: \"#ffb6c1\", P: \"#add8e6\" };\n      this.config.ploidyDesc = \"MP\";\n    }\n  }\n\n  if (!this.config.container) {\n    this.config.container = \"body\";\n  }\n\n  this.selector = this.config.container + ' #_ideogram';\n\n  if (!this.config.resolution) {\n    this.config.resolution = 850;\n  }\n\n  if (\"showChromosomeLabels\" in this.config === false) {\n    this.config.showChromosomeLabels = true;\n  }\n\n  if (!this.config.orientation) {\n    orientation = \"vertical\";\n    this.config.orientation = orientation;\n  }\n\n  if (!this.config.chrHeight) {\n    container = this.config.container;\n    rect = document.querySelector(container).getBoundingClientRect();\n\n    if (orientation === \"vertical\") {\n      chrHeight = rect.height;\n    } else {\n      chrHeight = rect.width;\n    }\n\n    if (container === \"body\") {\n      chrHeight = 400;\n    }\n    this.config.chrHeight = chrHeight;\n  }\n\n  if (!this.config.chrWidth) {\n    chrWidth = 10;\n    chrHeight = this.config.chrHeight;\n\n    if (chrHeight < 900 && chrHeight > 500) {\n      chrWidth = Math.round(chrHeight / 40);\n    } else if (chrHeight >= 900) {\n      chrWidth = Math.round(chrHeight / 45);\n    }\n    this.config.chrWidth = chrWidth;\n  }\n\n  if (!this.config.chrMargin) {\n    if (this.config.ploidy === 1) {\n      this.config.chrMargin = 10;\n    } else {\n      // Defaults polyploid chromosomes to relatively small interchromatid gap\n      this.config.chrMargin = Math.round(this.config.chrWidth / 4);\n    }\n  }\n\n  if (!this.config.showBandLabels) {\n    this.config.showBandLabels = false;\n  }\n\n  if ('showFullyBanded' in this.config) {\n    this.config.showFullyBanded = this.config.showFullyBanded;\n  } else {\n    this.config.showFullyBanded = true;\n  }\n\n  if (!this.config.brush) {\n    this.config.brush = false;\n  }\n\n  if (!this.config.rows) {\n    this.config.rows = 1;\n  }\n\n  this.bump = Math.round(this.config.chrHeight / 125);\n  this.adjustedBump = false;\n  if (this.config.chrHeight < 200) {\n    this.adjustedBump = true;\n    this.bump = 4;\n  }\n\n  if (config.showBandLabels) {\n    this.config.chrMargin += 20;\n  }\n\n  if (config.chromosome) {\n    this.config.chromosomes = [config.chromosome];\n    if (\"showBandLabels\" in config === false) {\n      this.config.showBandLabels = true;\n    }\n    if (\"rotatable\" in config === false) {\n      this.config.rotatable = false;\n    }\n  }\n\n  if (!this.config.showNonNuclearChromosomes) {\n    this.config.showNonNuclearChromosomes = false;\n  }\n\n  this.initAnnotSettings();\n\n  this.config.chrMargin = this.config.chrMargin + this.config.chrWidth + this.config.annotTracksHeight * 2;\n\n  if (config.onLoad) {\n    this.onLoadCallback = config.onLoad;\n  }\n\n  if (config.onDrawAnnots) {\n    this.onDrawAnnotsCallback = config.onDrawAnnots;\n  }\n\n  if (config.onBrushMove) {\n    this.onBrushMoveCallback = config.onBrushMove;\n  }\n\n  this.coordinateSystem = \"iscn\";\n\n  this.maxLength = {\n    bp: 0,\n    iscn: 0\n  };\n\n  // The E-Utilies In Depth: Parameters, Syntax and More:\n  // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n  this.eutils = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/\";\n  this.esearch = this.eutils + \"esearch.fcgi?retmode=json\";\n  this.esummary = this.eutils + \"esummary.fcgi?retmode=json\";\n  this.elink = this.eutils + \"elink.fcgi?retmode=json\";\n\n  this.organisms = {\n    9606: {\n      commonName: \"Human\",\n      scientificName: \"Homo sapiens\",\n      scientificNameAbbr: \"H. sapiens\",\n      assemblies: {\n        default: \"GCF_000001405.26\", // GRCh38\n        GRCh38: \"GCF_000001405.26\",\n        GRCh37: \"GCF_000001405.13\"\n      }\n    },\n    10090: {\n      commonName: \"Mouse\",\n      scientificName: \"Mus musculus\",\n      scientificNameAbbr: \"M. musculus\",\n      assemblies: {\n        default: \"GCF_000001635.20\"\n      }\n    },\n    4641: {\n      commonName: \"banana\",\n      scientificName: \"Musa acuminata\",\n      scientificNameAbbr: \"M. acuminata\",\n      assemblies: {\n        default: \"mock\"\n      }\n    }\n  };\n\n  // A flat array of chromosomes\n  // (this.chromosomes is an object of\n  // arrays of chromosomes, keyed by organism)\n  this.chromosomesArray = [];\n\n  this.bandsToShow = [];\n\n  this.chromosomes = {};\n  this.numChromosomes = 0;\n  this.bandData = {};\n\n  this.init();\n};\n\n/**\n* Gets chromosome band data from a\n* TSV file, or, if band data is prefetched, from an array\n*\n* UCSC: #chrom chromStart  chromEnd  name  gieStain\n* http://genome.ucsc.edu/cgi-bin/hgTables\n*  - group: Mapping and Sequencing\n*  - track: Chromosome Band (Ideogram)\n*\n* NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n* ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n*/\nIdeogram.prototype.getBands = function (content, taxid, chromosomes) {\n  var lines = {},\n      delimiter,\n      tsvLines,\n      columns,\n      line,\n      stain,\n      chr,\n      i,\n      init,\n      tsvLinesLength,\n      source,\n      start,\n      stop,\n      firstColumn,\n      tmp;\n\n  if (content.slice(0, 8) === \"chrBands\") {\n    source = \"native\";\n  }\n\n  if (chromosomes instanceof Array && _typeof(chromosomes[0]) === 'object') {\n    tmp = [];\n    for (i = 0; i < chromosomes.length; i++) {\n      tmp.push(chromosomes[i].name);\n    }\n    chromosomes = tmp;\n  }\n\n  if (typeof chrBands === \"undefined\" && source !== \"native\") {\n    delimiter = /\\t/;\n    tsvLines = content.split(/\\r\\n|\\n/);\n    init = 1;\n  } else {\n    delimiter = / /;\n    if (source === \"native\") {\n      tsvLines = eval(content);\n    } else {\n      tsvLines = content;\n    }\n    init = 0;\n  }\n\n  firstColumn = tsvLines[0].split(delimiter)[0];\n  if (firstColumn === '#chromosome') {\n    source = 'ncbi';\n  } else if (firstColumn === '#chrom') {\n    source = 'ucsc';\n  } else {\n    source = 'native';\n  }\n\n  tsvLinesLength = tsvLines.length;\n\n  if (source === 'ncbi' || source === 'native') {\n    for (i = init; i < tsvLinesLength; i++) {\n      columns = tsvLines[i].split(delimiter);\n\n      chr = columns[0];\n\n      if (\n      // If a specific set of chromosomes has been requested, and\n      // the current chromosome\n      typeof chromosomes !== \"undefined\" && chromosomes.indexOf(chr) === -1) {\n        continue;\n      }\n\n      if (chr in lines === false) {\n        lines[chr] = [];\n      }\n\n      stain = columns[7];\n      if (columns[8]) {\n        // For e.g. acen and gvar, columns[8] (density) is undefined\n        stain += columns[8];\n      }\n\n      line = {\n        chr: chr,\n        bp: {\n          start: parseInt(columns[5], 10),\n          stop: parseInt(columns[6], 10)\n        },\n        iscn: {\n          start: parseInt(columns[3], 10),\n          stop: parseInt(columns[4], 10)\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[1] + columns[2],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  } else if (source === 'ucsc') {\n    for (i = init; i < tsvLinesLength; i++) {\n      // #chrom chromStart  chromEnd  name  gieStain\n      // e.g. for fly:\n      // chr4\t69508\t108296\t102A1\tn/a\n      columns = tsvLines[i].split(delimiter);\n\n      if (columns[0] !== 'chr' + chromosomeName) {\n        continue;\n      }\n\n      stain = columns[4];\n      if (stain === 'n/a') {\n        stain = 'gpos100';\n      }\n      start = parseInt(columns[1], 10);\n      stop = parseInt(columns[2], 10);\n\n      line = {\n        chr: columns[0].split('chr')[1],\n        bp: {\n          start: start,\n          stop: stop\n        },\n        iscn: {\n          start: start,\n          stop: stop\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[3],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  }\n\n  return lines;\n};\n\n/**\n* Generates a model object for each chromosome\n* containing information on its name, DOM ID,\n* length in base pairs or ISCN coordinates,\n* cytogenetic bands, centromere position, etc.\n*/\nIdeogram.prototype.getChromosomeModel = function (bands, chromosome, taxid, chrIndex) {\n  var chr = {},\n      band,\n      width,\n      pxStop,\n      chrHeight = this.config.chrHeight,\n      maxLength = this.maxLength,\n      chrLength,\n      cs,\n      hasBands;\n\n  cs = this.coordinateSystem;\n  hasBands = typeof bands !== \"undefined\";\n\n  if (hasBands) {\n    chr.name = chromosome;\n    chr.length = bands[bands.length - 1][cs].stop;\n    chr.type = \"nuclear\";\n  } else {\n    chr = chromosome;\n  }\n\n  chr.chrIndex = chrIndex;\n\n  chr.id = \"chr\" + chr.name + \"-\" + taxid;\n\n  if (this.config.fullChromosomeLabels === true) {\n    var orgName = this.organisms[taxid].scientificNameAbbr;\n    chr.name = orgName + \" chr\" + chr.name;\n  }\n\n  chrLength = chr.length;\n\n  pxStop = 0;\n\n  if (hasBands) {\n    for (var i = 0; i < bands.length; i++) {\n      band = bands[i];\n      var csLength = band[cs].stop - band[cs].start;\n      width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n      bands[i].px = { start: pxStop, stop: pxStop + width, width: width };\n\n      pxStop = bands[i].px.stop;\n\n      if (hasBands && band.stain === \"acen\" && band.name[0] === \"p\") {\n        chr.pcenIndex = i;\n      }\n    }\n  } else {\n    pxStop = chrHeight * chr.length / maxLength[cs];\n  }\n\n  chr.width = pxStop;\n\n  chr.scale = {};\n\n  // TODO:\n  //\n  // A chromosome-level scale property is likely\n  // nonsensical for any chromosomes that have cytogenetic band data.\n  // Different bands tend to have ratios between number of base pairs\n  // and physical length.\n  //\n  // However, a chromosome-level scale property is likely\n  // necessary for chromosomes that do not have band data.\n  //\n  // This needs further review.\n  if (this.config.multiorganism === true) {\n    chr.scale.bp = 1;\n    // chr.scale.bp = band.iscn.stop / band.bp.stop;\n    chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n  } else {\n    chr.scale.bp = chrHeight / maxLength.bp;\n    if (hasBands) {\n      chr.scale.iscn = chrHeight / maxLength.iscn;\n    }\n  }\n  chr.bands = bands;\n\n  chr.centromerePosition = \"\";\n  if (hasBands && bands[0].name[0] === 'p' && bands[1].name[0] === 'q' && bands[0].bp.stop - bands[0].bp.start < 2E6) {\n    // As with almost all mouse chromosome, chimpanzee chr22\n    chr.centromerePosition = \"telocentric\";\n\n    // Remove placeholder pter band\n    chr.bands = chr.bands.slice(1);\n  }\n\n  if (hasBands && chr.bands.length === 1) {\n    // Encountered when processing an assembly that has chromosomes with\n    // centromere data, but this chromosome does not.\n    // Example: chromosome F1 in Felis catus.\n    delete chr.bands;\n  }\n\n  return chr;\n};\n\n/**\n* Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n* If ideogram configuration has 'fullChromosomeLabels: True',\n* then labels includes name of taxon, which can help when\n* depicting orthologs.\n*/\nIdeogram.prototype.drawChromosomeLabels = function () {\n  var ideo = this;\n\n  var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n  var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n  var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes set's labels\n  d3.selectAll(ideo.selector + \" .chromosome-set-container\").append(\"text\").data(ideo.chromosomesArray).attr(\"class\", 'chromosome-set-label ' + chromosomeLabelClass).attr(\"transform\", chrSetLabelTranslate).attr(\"x\", chrSetLabelXPosition).attr(\"y\", function (d, i) {\n    return ideo._layout.getChromosomeSetLabelYPosition(i);\n  }).attr(\"text-anchor\", ideo._layout.getChromosomeSetLabelAnchor()).each(function (d, i) {\n    // Get label lines\n    var lines;\n    if (d.name.indexOf(' ') === -1) {\n      lines = [d.name];\n    } else {\n      lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n    }\n\n    if ('sex' in ideo.config && ideo.config.ploidy === 2 && i === ideo.sexChromosomes.index) {\n      if (ideo.config.sex === 'male') {\n        lines = ['XY'];\n      } else {\n        lines = ['XX'];\n      }\n    }\n\n    // Render label lines\n    d3.select(this).selectAll('tspan').data(lines).enter().append('tspan').attr('dy', function (d, i) {\n      return i * -1.2 + 'em';\n    }).attr('x', ideo._layout.getChromosomeSetLabelXPosition()).attr('class', function (a, i) {\n      var fullLabels = ideo.config.fullChromosomeLabels;\n      return i === 1 && fullLabels ? 'italic' : null;\n    }).text(String);\n  });\n\n  var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes labels\n  d3.selectAll(ideo.selector + \" .chromosome-set-container\").each(function (a, chrSetNumber) {\n    d3.select(this).selectAll(\".chromosome\").append(\"text\").attr(\"class\", \"chrLabel\").attr(\"transform\", setLabelTranslate).attr(\"x\", function (d, i) {\n      return ideo._layout.getChromosomeLabelXPosition(i);\n    }).attr(\"y\", function (d, i) {\n      return ideo._layout.getChromosomeLabelYPosition(i);\n    }).text(function (d, chrNumber) {\n      return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n    }).attr(\"text-anchor\", \"middle\");\n  });\n};\n\n/**\n* Draws labels and stalks for cytogenetic bands.\n*\n* Band labels are text like \"p11.11\".\n* Stalks are small lines that visually connect labels to their bands.\n*/\nIdeogram.prototype.drawBandLabels = function (chromosomes) {\n  var i, chr, chrs, taxid, ideo, chrModel;\n\n  ideo = this;\n\n  chrs = [];\n\n  for (taxid in chromosomes) {\n    for (chr in chromosomes[taxid]) {\n      chrs.push(chromosomes[taxid][chr]);\n    }\n  }\n\n  var textOffsets = {};\n\n  chrIndex = 0;\n  for (i = 0; i < chrs.length; i++) {\n    chrIndex += 1;\n\n    chrModel = chrs[i];\n\n    chr = d3.select(ideo.selector + \" #\" + chrModel.id);\n\n    // var chrMargin = this.config.chrMargin * chrIndex,\n    //   lineY1, lineY2;\n    //\n    // lineY1 = chrMargin;\n    // lineY2 = chrMargin - 8;\n    //\n    // if (\n    //   chrIndex === 1 &&\n    //   \"perspective\" in this.config && this.config.perspective === \"comparative\"\n    // ) {\n    //   lineY1 += 18;\n    //   lineY2 += 18;\n    // }\n\n    textOffsets[chrModel.id] = [];\n\n    chr.selectAll(\"text\").data(chrModel.bands).enter().append(\"g\").attr(\"class\", function (d, i) {\n      return \"bandLabel bsbsl-\" + i;\n    }).attr(\"transform\", function (d) {\n      var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n      var x = transform.x;\n      // var y = transform.y;\n\n      textOffsets[chrModel.id].push(x + 13);\n\n      return transform.translate;\n    }).append(\"text\").attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i)).text(function (d) {\n      return d.name;\n    });\n\n    // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n    // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n    chr.selectAll(\"line.bandLabelStalk\").data(chrModel.bands).enter().append(\"g\").attr(\"class\", function (d, i) {\n      return \"bandLabelStalk bsbsl-\" + i;\n    }).attr(\"transform\", function (d) {\n      var x, y;\n\n      x = ideo.round(d.px.start + d.px.width / 2);\n\n      textOffsets[chrModel.id].push(x + 13);\n      y = -10;\n\n      return \"translate(\" + x + \",\" + y + \")\";\n    }).append(\"line\").attr(\"x1\", 0).attr(\"y1\", function () {\n      return ideo._layout.getChromosomeBandTickY1(i);\n    }).attr(\"x2\", 0).attr(\"y2\", function () {\n      return ideo._layout.getChromosomeBandTickY2(i);\n    });\n  }\n\n  for (i = 0; i < chrs.length; i++) {\n    chrModel = chrs[i];\n\n    var textsLength = textOffsets[chrModel.id].length,\n        overlappingLabelXRight,\n        index,\n        indexesToShow = [],\n        prevHiddenBoxIndex,\n        xLeft,\n        prevLabelXRight,\n        textPadding;\n\n    overlappingLabelXRight = 0;\n\n    textPadding = 5;\n\n    for (index = 0; index < textsLength; index++) {\n      // Ensures band labels don't overlap\n\n      xLeft = textOffsets[chrModel.id][index];\n\n      if (xLeft < overlappingLabelXRight + textPadding === false) {\n        indexesToShow.push(index);\n      } else {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n        continue;\n      }\n\n      if (prevHiddenBoxIndex !== index) {\n        // This getBoundingClientRect() forces Chrome's\n        // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n        // TODO: This forced synchronous layout would be nice to eliminate.\n        // prevTextBox = texts[index].getBoundingClientRect();\n        // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n        // TODO: Account for number of characters in prevTextBoxWidth,\n        // maybe also zoom.\n        prevTextBoxLeft = textOffsets[chrModel.id][index];\n        prevTextBoxWidth = 36;\n\n        prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n      }\n\n      if (xLeft < prevLabelXRight + textPadding) {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n      } else {\n        indexesToShow.push(index);\n      }\n    }\n\n    var selectorsToShow = [],\n        ithLength = indexesToShow.length,\n        j;\n\n    for (j = 0; j < ithLength; j++) {\n      index = indexesToShow[j];\n      selectorsToShow.push(\"#\" + chrModel.id + \" .bsbsl-\" + index);\n    }\n\n    this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n  }\n};\n\n// Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\nIdeogram.prototype.rotateChromosomeLabels = function (chr, chrIndex, orientation, scale) {\n  var chrMargin, chrWidth, ideo, x, y, numAnnotTracks, scaleSvg, tracksHeight;\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n  numAnnotTracks = this.config.numAnnotTracks;\n\n  ideo = this;\n\n  if (typeof scale !== \"undefined\" && scale.hasOwnProperty(\"x\") && !(scale.x === 1 && scale.y === 1)) {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n    x = -6;\n    y = scale === \"\" ? -16 : -14;\n  } else {\n    x = -8;\n    y = -16;\n    scale = { x: 1, y: 1 };\n    scaleSvg = \"\";\n  }\n\n  if (orientation === \"vertical\" || orientation === \"\") {\n    var ci = chrIndex - 1;\n\n    if (numAnnotTracks > 1 || orientation === \"\") {\n      ci -= 1;\n    }\n\n    chrMargin2 = -4;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n    }\n\n    chrMargin = ideo.config.chrMargin * ci;\n\n    if (numAnnotTracks > 1 === false) {\n      chrMargin += 1;\n    }\n\n    y = chrMargin + chrMargin2;\n\n    chr.selectAll(\"text.chrLabel\").attr(\"transform\", scaleSvg).selectAll(\"tspan\").attr(\"x\", x).attr(\"y\", y);\n  } else {\n    chrIndex -= 1;\n\n    chrMargin2 = -chrWidth - 2;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + 8;\n    }\n\n    tracksHeight = ideo.config.annotTracksHeight;\n    if (ideo.config.annotationsLayout !== \"overlay\") {\n      tracksHeight *= 2;\n    }\n\n    chrMargin = ideo.config.chrMargin * chrIndex;\n    x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n    x /= scale.x;\n\n    chr.selectAll(\"text.chrLabel\").attr(\"transform\", \"rotate(-90)\" + scaleSvg).selectAll(\"tspan\").attr(\"x\", x).attr(\"y\", y);\n  }\n};\n\n/**\n* Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n*\n* This method includes proportional scaling, which ensures that\n* while the parent chromosome group is scaled strongly in one dimension to fill\n* available space, the text in the chromosome's band labels is\n* not similarly distorted, and remains readable.\n*/\nIdeogram.prototype.rotateBandLabels = function (chr, chrIndex, scale) {\n  var chrMargin,\n      scaleSvg,\n      orientation,\n      bandLabels,\n      ideo = this;\n\n  bandLabels = chr.selectAll(\".bandLabel\");\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n\n  orientation = chr.attr(\"data-orientation\");\n\n  if (typeof scale === \"undefined\") {\n    scale = { x: 1, y: 1 };\n    scaleSvg = \"\";\n  } else {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n  }\n\n  if (chrIndex === 1 && \"perspective\" in this.config && this.config.perspective === \"comparative\") {\n    bandLabels.attr(\"transform\", function (d) {\n      var x, y;\n      x = 8 - chrMargin - 26;\n      y = ideo.round(2 + d.px.start + d.px.width / 2);\n      return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n    }).selectAll(\"text\").attr(\"text-anchor\", \"end\");\n  } else if (orientation === \"vertical\") {\n    bandLabels.attr(\"transform\", function (d) {\n      var x, y;\n      x = 8 - chrMargin;\n      y = ideo.round(2 + d.px.start + d.px.width / 2);\n      return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n    }).selectAll(\"text\").attr(\"transform\", scaleSvg);\n  } else {\n    bandLabels.attr(\"transform\", function (d) {\n      var x, y;\n      x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n      y = chrMargin - 10;\n      return \"translate(\" + x + \",\" + y + \")\";\n    }).selectAll(\"text\").attr(\"transform\", scaleSvg);\n\n    chr.selectAll(\".bandLabelStalk line\").attr(\"transform\", scaleSvg);\n  }\n};\n\nIdeogram.prototype.round = function (coord) {\n  // Rounds an SVG coordinates to two decimal places\n  // e.g. 42.1234567890 -> 42.12\n  // Per http://stackoverflow.com/a/9453447, below method is fastest\n  return Math.round(coord * 100) / 100;\n};\n\n/**\n* Renders all the bands and outlining boundaries of a chromosome.\n*/\nIdeogram.prototype.drawChromosome = function (chrModel, chrIndex, container, k) {\n  var chrMargin = this.config.chrMargin;\n\n  // Get chromosome model adapter class\n  var adapter = ModelAdapter.getInstance(chrModel);\n\n  // Append chromosome's container\n  var chromosome = container.append(\"g\").attr(\"id\", chrModel.id).attr(\"class\", \"chromosome \" + adapter.getCssClass()).attr(\"transform\", \"translate(0, \" + k * chrMargin + \")\");\n\n  // Render chromosome\n  return Chromosome.getInstance(adapter, this.config, this).render(chromosome, chrIndex, k);\n};\n\n/**\n* Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n* Useful for focusing or defocusing a particular chromosome\n*/\nIdeogram.prototype.rotateAndToggleDisplay = function (chromosome) {\n  /*\n   * Do nothing if taxId not defined. But it should be defined.\n   * To fix that bug we should have a way to find chromosome set number.\n   */\n  if (!this.config.taxid) {\n    return;\n  }\n\n  var chrSetNumber = Number(d3.select(chromosome.parentNode).attr('data-set-number'));\n\n  var chrNumber = Array.prototype.slice.call(d3.select(chromosome.parentNode).selectAll(\"g.chromosome\")._groups[0]).indexOf(chromosome);\n\n  return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertBpToPx = function (chr, bp) {\n  var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart, iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    offset = this._bandsXOffset;\n    bpStart = band.bp.start;\n    bpStop = band.bp.stop;\n    bpLength = bpStop - bpStart;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n    iscnLength = iscnStop - iscnStart;\n    pxStart = band.px.start;\n    pxLength = band.px.width;\n\n    if (bp >= bpStart && bp <= bpStop) {\n      bpToIscnScale = iscnLength / bpLength;\n      iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n      px = offset + pxStart + pxLength * (iscn - iscnStart) / iscnLength;\n\n      return px;\n    }\n  }\n\n  throw new Error(\"Base pair out of range.  \" + \"bp: \" + bp + \"; length of chr\" + chr.name + \": \" + band.bp.stop);\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertPxToBp = function (chr, px) {\n  var i, band, pxToIscnScale, iscn, pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    pxStart = band.px.start;\n    pxStop = band.px.stop;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n\n    if (px >= pxStart && px <= pxStop) {\n      iscnLength = iscnStop - iscnStart;\n      pxLength = pxStop - pxStart;\n      bpLength = band.bp.stop - band.bp.start;\n\n      pxToIscnScale = iscnLength / pxLength;\n      iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n      bp = band.bp.start + bpLength * (iscn - iscnStart) / iscnLength;\n\n      return Math.round(bp);\n    }\n  }\n\n  throw new Error(\"Pixel out of range.  \" + \"px: \" + bp + \"; length of chr\" + chr.name + \": \" + pxStop);\n};\n\n/**\n* Draws a trapezoid connecting a genomic range on\n* one chromosome to a genomic range on another chromosome;\n* a syntenic region.\n*/\nIdeogram.prototype.drawSynteny = function (syntenicRegions) {\n  var t0 = new Date().getTime();\n\n  var r1,\n      r2,\n      syntenies,\n      i,\n      color,\n      opacity,\n      regionID,\n      ideo = this;\n\n  syntenies = d3.select(ideo.selector).insert(\"g\", \":first-child\").attr(\"class\", \"synteny\");\n\n  for (i = 0; i < syntenicRegions.length; i++) {\n    regions = syntenicRegions[i];\n\n    r1 = regions.r1;\n    r2 = regions.r2;\n\n    color = \"#CFC\";\n    if (\"color\" in regions) {\n      color = regions.color;\n    }\n\n    opacity = 1;\n    if (\"opacity\" in regions) {\n      opacity = regions.opacity;\n    }\n\n    r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n    r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n    r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n    r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n    regionID = r1.chr.id + \"_\" + r1.start + \"_\" + r1.stop + \"_\" + \"__\" + r2.chr.id + \"_\" + r2.start + \"_\" + r2.stop;\n\n    syntenicRegion = syntenies.append(\"g\").attr(\"class\", \"syntenicRegion\").attr(\"id\", regionID).on(\"click\", function () {\n      var activeRegion = this;\n      var others = d3.selectAll(ideo.selector + \" .syntenicRegion\").filter(function () {\n        return this !== activeRegion;\n      });\n\n      others.classed(\"hidden\", !others.classed(\"hidden\"));\n    }).on(\"mouseover\", function () {\n      var activeRegion = this;\n      d3.selectAll(ideo.selector + \" .syntenicRegion\").filter(function () {\n        return this !== activeRegion;\n      }).classed(\"ghost\", true);\n    }).on(\"mouseout\", function () {\n      d3.selectAll(ideo.selector + \" .syntenicRegion\").classed(\"ghost\", false);\n    });\n\n    var x1 = this._layout.getChromosomeSetYTranslate(0);\n    var x2 = this._layout.getChromosomeSetYTranslate(1) - ideo.config.chrWidth;\n\n    syntenicRegion.append(\"polygon\").attr(\"points\", x1 + ', ' + r1.startPx + ' ' + x1 + ', ' + r1.stopPx + ' ' + x2 + ', ' + r2.stopPx + ' ' + x2 + ', ' + r2.startPx).attr('style', \"fill: \" + color + \"; fill-opacity: \" + opacity);\n\n    syntenicRegion.append(\"line\").attr(\"class\", \"syntenyBorder\").attr(\"x1\", x1).attr(\"x2\", x2).attr(\"y1\", r1.startPx).attr(\"y2\", r2.startPx);\n\n    syntenicRegion.append(\"line\").attr(\"class\", \"syntenyBorder\").attr(\"x1\", x1).attr(\"x2\", x2).attr(\"y1\", r1.stopPx).attr(\"y2\", r2.stopPx);\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in drawSyntenicRegions: \" + (t1 - t0) + \" ms\");\n  }\n};\n\n/**\n* Initializes various annotation settings.  Constructor help function.\n*/\nIdeogram.prototype.initAnnotSettings = function () {\n  if (this.config.annotationsPath || this.config.localAnnotationsPath || this.annots || this.config.annotations) {\n    if (!this.config.annotationHeight) {\n      var annotHeight = Math.round(this.config.chrHeight / 100);\n      this.config.annotationHeight = annotHeight;\n    }\n\n    if (this.config.annotationTracks) {\n      this.config.numAnnotTracks = this.config.annotationTracks.length;\n    } else {\n      this.config.numAnnotTracks = 1;\n    }\n    this.config.annotTracksHeight = this.config.annotationHeight * this.config.numAnnotTracks;\n\n    if (typeof this.config.barWidth === \"undefined\") {\n      this.config.barWidth = 3;\n    }\n  } else {\n    this.config.annotTracksHeight = 0;\n  }\n\n  if (typeof this.config.annotationsColor === \"undefined\") {\n    this.config.annotationsColor = \"#F00\";\n  }\n};\n\n/**\n* Draws annotations defined by user\n*/\nIdeogram.prototype.drawAnnots = function (friendlyAnnots) {\n  var ideo = this,\n      i,\n      j,\n      annot,\n      rawAnnots = [],\n      rawAnnot,\n      keys,\n      chr,\n      chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n  // Occurs when filtering\n  if (\"annots\" in friendlyAnnots[0]) {\n    return ideo.drawProcessedAnnots(friendlyAnnots);\n  }\n\n  for (chr in chrs) {\n    rawAnnots.push({ chr: chr, annots: [] });\n  }\n\n  for (i = 0; i < friendlyAnnots.length; i++) {\n    annot = friendlyAnnots[i];\n\n    for (j = 0; j < rawAnnots.length; j++) {\n      if (annot.chr === rawAnnots[j].chr) {\n        rawAnnot = [annot.name, annot.start, annot.stop - annot.start];\n        if (\"color\" in annot) {\n          rawAnnot.push(annot.color);\n        }\n        if (\"shape\" in annot) {\n          rawAnnot.push(annot.shape);\n        }\n        rawAnnots[j].annots.push(rawAnnot);\n        break;\n      }\n    }\n  }\n\n  keys = [\"name\", \"start\", \"length\"];\n  if (\"color\" in friendlyAnnots[0]) {\n    keys.push(\"color\");\n  }\n  if (\"shape\" in friendlyAnnots[0]) {\n    keys.push(\"shape\");\n  }\n  ideo.rawAnnots = { keys: keys, annots: rawAnnots };\n\n  ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n  ideo.drawProcessedAnnots(ideo.annots);\n};\n\n/**\n* Proccesses genome annotation data.\n* Genome annotations represent features like a gene, SNP, etc. as\n* a small graphical object on or beside a chromosome.\n* Converts raw annotation data from server, which is structured as\n* an array of arrays, into a more verbose data structure consisting\n* of an array of objects.\n* Also adds pixel offset information.\n*/\nIdeogram.prototype.processAnnotData = function (rawAnnots) {\n  var keys,\n      i,\n      j,\n      annot,\n      annots,\n      annotsByChr,\n      chr,\n      chrModel,\n      ra,\n      startPx,\n      stopPx,\n      px,\n      color,\n      ideo = this;\n\n  keys = rawAnnots.keys;\n  rawAnnots = rawAnnots.annots;\n\n  annots = [];\n\n  for (i = 0; i < rawAnnots.length; i++) {\n    annotsByChr = rawAnnots[i];\n\n    annots.push({ chr: annotsByChr.chr, annots: [] });\n\n    for (j = 0; j < annotsByChr.annots.length; j++) {\n      chr = annotsByChr.chr;\n      ra = annotsByChr.annots[j];\n      annot = {};\n\n      for (var k = 0; k < keys.length; k++) {\n        annot[keys[k]] = ra[k];\n      }\n\n      annot.stop = annot.start + annot.length;\n\n      chrModel = ideo.chromosomes[ideo.config.taxid][chr];\n\n      startPx = ideo.convertBpToPx(chrModel, annot.start);\n      stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n      px = Math.round((startPx + stopPx) / 2) - 28;\n\n      color = ideo.config.annotationsColor;\n      if (ideo.config.annotationTracks) {\n        annot.trackIndex = ra[3];\n        color = ideo.config.annotationTracks[annot.trackIndex].color;\n      } else {\n        annot.trackIndex = 0;\n      }\n\n      if ('color' in annot) {\n        color = annot.color;\n      }\n\n      annot.chr = chr;\n      annot.chrIndex = i;\n      annot.px = px;\n      annot.startPx = startPx - 30;\n      annot.stopPx = stopPx - 30;\n      annot.color = color;\n\n      annots[i].annots.push(annot);\n    }\n  }\n\n  return annots;\n};\n\n/*\n* Can be used for bar chart or sparkline\n*/\nIdeogram.prototype.getHistogramBars = function (annots) {\n  var t0 = new Date().getTime();\n\n  var i,\n      j,\n      chr,\n      chrModels,\n      chrPxStop,\n      px,\n      chrAnnots,\n      chrName,\n      chrIndex,\n      annot,\n      bars,\n      bar,\n      barPx,\n      nextBarPx,\n      barWidth,\n      maxAnnotsPerBar,\n      color,\n      firstGet = false,\n      histogramScaling,\n      ideo = this;\n\n  bars = [];\n\n  barWidth = ideo.config.barWidth;\n  chrModels = ideo.chromosomes[ideo.config.taxid];\n  color = ideo.config.annotationsColor;\n\n  if (\"histogramScaling\" in ideo.config) {\n    histogramScaling = ideo.config.histogramScaling;\n  } else {\n    histogramScaling = \"relative\";\n  }\n\n  if (typeof ideo.maxAnnotsPerBar === \"undefined\") {\n    ideo.maxAnnotsPerBar = {};\n    firstGet = true;\n  }\n\n  for (chr in chrModels) {\n    chrModel = chrModels[chr];\n    chrIndex = chrModel.chrIndex;\n    lastBand = chrModel.bands[chrModel.bands.length - 1];\n    chrPxStop = lastBand.px.stop;\n    numBins = Math.round(chrPxStop / barWidth);\n    bar = { chr: chr, annots: [] };\n    for (i = 0; i < numBins; i++) {\n      px = i * barWidth - ideo.bump;\n      bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n      bar.annots.push({\n        bp: bp,\n        px: px - ideo.bump,\n        count: 0,\n        chrIndex: chrIndex,\n        chrName: chr,\n        color: color,\n        annots: []\n      });\n    }\n    bars.push(bar);\n  }\n\n  for (chr in annots) {\n    chrAnnots = annots[chr].annots;\n    chrName = annots[chr].chr;\n    chrModel = chrModels[chrName];\n    chrIndex = chrModel.chrIndex - 1;\n    barAnnots = bars[chrIndex].annots;\n    for (i = 0; i < chrAnnots.length; i++) {\n      annot = chrAnnots[i];\n      px = annot.px - ideo.bump;\n      for (j = 0; j < barAnnots.length; j++) {\n        barPx = barAnnots[j].px;\n        nextBarPx = barPx + barWidth;\n        if (j === barAnnots.length - 1) {\n          nextBarPx += barWidth;\n        }\n        if (px >= barPx && px < nextBarPx) {\n          bars[chrIndex].annots[j].count += 1;\n          bars[chrIndex].annots[j].annots.push(annot);\n          break;\n        }\n      }\n    }\n  }\n\n  if (firstGet === true || histogramScaling === \"relative\") {\n    maxAnnotsPerBar = 0;\n    for (i = 0; i < bars.length; i++) {\n      annots = bars[i].annots;\n      for (j = 0; j < annots.length; j++) {\n        barCount = annots[j].count;\n        if (barCount > maxAnnotsPerBar) {\n          maxAnnotsPerBar = barCount;\n        }\n      }\n    }\n    ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n  }\n\n  // Set each bar's height to be proportional to\n  // the height of the bar with the most annotations\n  for (i = 0; i < bars.length; i++) {\n    annots = bars[i].annots;\n    for (j = 0; j < annots.length; j++) {\n      barCount = annots[j].count;\n      height = barCount / ideo.maxAnnotsPerBar[chr] * ideo.config.chrMargin;\n      // console.log(height)\n      bars[i].annots[j].height = height;\n    }\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time spent in getHistogramBars: \" + (t1 - t0) + \" ms\");\n  }\n\n  ideo.bars = bars;\n\n  return bars;\n};\n\n/**\n* Fills out annotations data structure such that its top-level list of arrays\n* matches that of this ideogram's chromosomes list in order and number\n* Fixes https://github.com/eweitz/ideogram/issues/66\n*/\nIdeogram.prototype.fillAnnots = function (annots) {\n  var filledAnnots, chrs, chrArray, i, chr, annot, chrIndex;\n\n  filledAnnots = [];\n  chrs = [];\n  chrArray = this.chromosomesArray;\n\n  for (i = 0; i < chrArray.length; i++) {\n    chr = chrArray[i].name;\n    chrs.push(chr);\n    filledAnnots.push({ chr: chr, annots: [] });\n  }\n\n  for (i = 0; i < annots.length; i++) {\n    annot = annots[i];\n    chrIndex = chrs.indexOf(annot.chr);\n    if (chrIndex !== -1) {\n      filledAnnots[chrIndex] = annot;\n    }\n  }\n\n  return filledAnnots;\n};\n\n/**\n* Draws genome annotations on chromosomes.\n* Annotations can be rendered as either overlaid directly\n* on a chromosome, or along one or more \"tracks\"\n* running parallel to each chromosome.\n*/\nIdeogram.prototype.drawProcessedAnnots = function (annots) {\n  var chrWidth,\n      layout,\n      annotHeight,\n      triangle,\n      circle,\n      r,\n      chrAnnot,\n      x1,\n      x2,\n      y1,\n      y2,\n      filledAnnots,\n      ideo = this;\n\n  chrMargin = this.config.chrMargin;\n  chrWidth = this.config.chrWidth;\n\n  layout = \"tracks\";\n  if (this.config.annotationsLayout) {\n    layout = this.config.annotationsLayout;\n  }\n\n  if (layout === \"histogram\") {\n    annots = ideo.getHistogramBars(annots);\n  }\n\n  annotHeight = ideo.config.annotationHeight;\n\n  triangle = 'l -' + annotHeight + ' ' + 2 * annotHeight + ' l ' + 2 * annotHeight + ' 0 z';\n\n  // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n  // Circles are supported natively via <circle>, but having it as a path\n  // simplifies handling triangles, circles and other shapes in the same\n  // D3 call\n  r = annotHeight;\n  circle = 'm -' + r + ', ' + r + 'a ' + r + ',' + r + ' 0 1,0 ' + r * 2 + ',0' + 'a ' + r + ',' + r + ' 0 1,0 -' + r * 2 + ',0';\n\n  filledAnnots = ideo.fillAnnots(annots);\n\n  chrAnnot = d3.selectAll(ideo.selector + \" .chromosome\").data(filledAnnots).selectAll(\"path.annot\").data(function (d) {\n    return d.annots;\n  }).enter();\n\n  if (layout === \"tracks\") {\n    chrAnnot.append(\"g\").attr(\"id\", function (d) {\n      return d.id;\n    }).attr(\"class\", \"annot\").attr(\"transform\", function (d) {\n      var y = ideo.config.chrWidth + d.trackIndex * annotHeight * 2;\n      return \"translate(\" + d.px + \",\" + y + \")\";\n    }).append(\"path\").attr(\"d\", function (d) {\n      if (!d.shape || d.shape === \"triangle\") {\n        return \"m0,0\" + triangle;\n      } else if (d.shape === \"circle\") {\n        return circle;\n      }\n    }).attr(\"fill\", function (d) {\n      return d.color;\n    });\n  } else if (layout === \"overlay\") {\n    // Overlaid annotations appear directly on chromosomes\n\n    chrAnnot.append(\"polygon\").attr(\"id\", function (d) {\n      return d.id;\n    }).attr(\"class\", \"annot\").attr(\"points\", function (d) {\n      if (d.stopPx - d.startPx > 1) {\n        x1 = d.startPx;\n        x2 = d.stopPx;\n      } else {\n        x1 = d.px - 0.5;\n        x2 = d.px + 0.5;\n      }\n      y1 = chrWidth;\n      y2 = 0;\n\n      return x1 + \",\" + y1 + \" \" + x2 + \",\" + y1 + \" \" + x2 + \",\" + y2 + \" \" + x1 + \",\" + y2;\n    }).attr(\"fill\", function (d) {\n      return d.color;\n    });\n  } else if (layout === \"histogram\") {\n    chrAnnot.append(\"polygon\")\n    // .attr(\"id\", function(d, i) { return d.id; })\n    .attr(\"class\", \"annot\").attr(\"points\", function (d) {\n      x1 = d.px + ideo.bump;\n      x2 = d.px + ideo.config.barWidth + ideo.bump;\n      y1 = chrWidth;\n      y2 = chrWidth + d.height;\n\n      var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n      if (x2 > thisChrWidth) {\n        x2 = thisChrWidth;\n      }\n\n      return x1 + \",\" + y1 + \" \" + x2 + \",\" + y1 + \" \" + x2 + \",\" + y2 + \" \" + x1 + \",\" + y2;\n    }).attr(\"fill\", function (d) {\n      return d.color;\n    });\n  }\n\n  if (ideo.onDrawAnnotsCallback) {\n    ideo.onDrawAnnotsCallback();\n  }\n};\n\nIdeogram.prototype.onBrushMove = function () {\n  call(this.onBrushMoveCallback);\n};\n\nIdeogram.prototype.createBrush = function (from, to) {\n  var ideo = this,\n      width = ideo.config.chrWidth + 6.5,\n      length = ideo.config.chrHeight,\n      chr = ideo.chromosomesArray[0],\n      chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n      x0,\n      x1,\n      xOffset = this._layout.getMargin().left,\n      xScale = d3.scaleLinear().domain([0, d3.max(chr.bands, function (band) {\n    return band.bp.stop;\n  })]).range([xOffset, d3.max(chr.bands, function (band) {\n    return band.px.stop;\n  }) + xOffset]);\n\n  if (typeof from === \"undefined\") {\n    from = Math.floor(chrLengthBp / 10);\n  }\n\n  if (typeof right === \"undefined\") {\n    to = Math.ceil(from * 2);\n  }\n\n  x0 = ideo.convertBpToPx(chr, from);\n  x1 = ideo.convertBpToPx(chr, to);\n\n  ideo.selectedRegion = { from: from, to: to, extent: to - from };\n\n  ideo.brush = d3.brushX().extent([[xOffset, 0], [length + xOffset, width]]).on(\"brush\", onBrushMove);\n\n  var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n  var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n  d3.select(ideo.selector).append(\"g\").attr(\"class\", \"brush\").attr(\"transform\", \"translate(0, \" + yOffset + \")\").call(ideo.brush).call(ideo.brush.move, [x0, x1]);\n\n  function onBrushMove() {\n    var extent = d3.event.selection.map(xScale.invert),\n        from = Math.floor(extent[0]),\n        to = Math.ceil(extent[1]);\n\n    ideo.selectedRegion = { from: from, to: to, extent: to - from };\n\n    if (ideo.onBrushMove) {\n      ideo.onBrushMoveCallback();\n    }\n  }\n};\n\n/**\n* Called when Ideogram has finished initializing.\n* Accounts for certain ideogram properties not being set until\n* asynchronous requests succeed, etc.\n*/\nIdeogram.prototype.onLoad = function () {\n  call(this.onLoadCallback);\n};\n\nIdeogram.prototype.onDrawAnnots = function () {\n  call(this.onDrawAnnotsCallback);\n};\n\nIdeogram.prototype.getBandColorGradients = function () {\n  var colors,\n      stain,\n      color1,\n      color2,\n      color3,\n      css,\n      gradients = \"\";\n\n  colors = [[\"gneg\", \"#FFF\", \"#FFF\", \"#DDD\"], [\"gpos25\", \"#C8C8C8\", \"#DDD\", \"#BBB\"], [\"gpos33\", \"#BBB\", \"#BBB\", \"#AAA\"], [\"gpos50\", \"#999\", \"#AAA\", \"#888\"], [\"gpos66\", \"#888\", \"#888\", \"#666\"], [\"gpos75\", \"#777\", \"#777\", \"#444\"], [\"gpos100\", \"#444\", \"#666\", \"#000\"], [\"acen\", \"#FEE\", \"#FEE\", \"#FDD\"], [\"noBands\", \"#BBB\", \"#BBB\", \"#AAA\"]];\n\n  for (var i = 0; i < colors.length; i++) {\n    stain = colors[i][0];\n    color1 = colors[i][1];\n    color2 = colors[i][2];\n    color3 = colors[i][3];\n    gradients += '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n    if (stain === \"gneg\") {\n      gradients += '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' + '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' + '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n    } else {\n      gradients += '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' + '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' + '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n    }\n    gradients += '</linearGradient>';\n  }\n\n  gradients += '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' + 'patternTransform=\"rotate(30 0 0)\">' + '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' + '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' + 'stroke-width:0.7;\" />' + '</pattern>' + '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' + 'patternTransform=\"rotate(-30 0 0)\">' + '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' + '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' + 'stroke-width:0.7;\" />' + '</pattern>';\n\n  gradients = \"<defs>\" + gradients + \"</defs>\";\n  css = \"<style>\" + '.gneg {fill: url(\"#gneg\")} ' + '.gpos25 {fill: url(\"#gpos25\")} ' + '.gpos33 {fill: url(\"#gpos33\")} ' + '.gpos50 {fill: url(\"#gpos50\")} ' + '.gpos66 {fill: url(\"#gpos66\")} ' + '.gpos75 {fill: url(\"#gpos75\")} ' + '.gpos100 {fill: url(\"#gpos100\")} ' + '.gpos {fill: url(\"#gpos100\")} ' + '.acen {fill: url(\"#acen\")} ' + '.stalk {fill: url(\"#stalk\")} ' + '.gvar {fill: url(\"#gvar\")} ' + '.noBands {fill: url(\"#noBands\")} ' + '.chromosome {fill: url(\"#noBands\")} ' + '</style>';\n  gradients = css + gradients;\n\n  // alert(gradients)\n\n  return gradients;\n};\n\n/*\n  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n*/\nIdeogram.prototype.getTaxidFromEutils = function (callback) {\n  var organism,\n      taxonomySearch,\n      taxid,\n      ideo = this;\n\n  organism = ideo.config.organism;\n\n  taxonomySearch = ideo.esearch + \"&db=taxonomy&term=\" + organism;\n\n  d3.json(taxonomySearch, function (data) {\n    taxid = data.esearchresult.idlist[0];\n    return callback(taxid);\n  });\n};\n\n/**\n* Returns an array of taxids for the current ideogram\n* Also sets configuration parameters related to taxid(s), whether ideogram is\n* multiorganism, and adjusts chromosomes parameters as needed\n**/\nIdeogram.prototype.getTaxids = function (callback) {\n  var ideo = this,\n      taxid,\n      taxids,\n      org,\n      orgs,\n      i,\n      taxidInit,\n      tmpChrs,\n      assembly,\n      chromosomes,\n      multiorganism;\n\n  taxidInit = \"taxid\" in ideo.config;\n\n  ideo.config.multiorganism = \"organism\" in ideo.config && ideo.config.organism instanceof Array || taxidInit && ideo.config.taxid instanceof Array;\n\n  multiorganism = ideo.config.multiorganism;\n\n  if (\"organism\" in ideo.config) {\n    // Ideogram instance was constructed using common organism name(s)\n    if (multiorganism) {\n      orgs = ideo.config.organism;\n    } else {\n      orgs = [ideo.config.organism];\n    }\n\n    taxids = [];\n    tmpChrs = {};\n    for (i = 0; i < orgs.length; i++) {\n      // Gets a list of taxids from common organism names\n      org = orgs[i];\n      for (taxid in ideo.organisms) {\n        if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n          taxids.push(taxid);\n          if (multiorganism) {\n            // Adjusts 'chromosomes' configuration parameter to make object\n            // keys use taxid instead of common organism name\n            tmpChrs[taxid] = ideo.config.chromosomes[org];\n          }\n        }\n      }\n    }\n\n    if (taxids.length === 0) {\n      promise = new Promise(function (resolve) {\n        ideo.getTaxidFromEutils(resolve);\n      });\n\n      promise.then(function (data) {\n        var organism = ideo.config.organism,\n            dataDir = ideo.config.dataDir,\n            urlOrg = organism.replace(\" \", \"-\");\n\n        taxid = data;\n        taxids.push(taxid);\n\n        ideo.config.taxids = taxids;\n        ideo.organisms[taxid] = {\n          commonName: \"\",\n          scientificName: ideo.config.organism,\n          scientificNameAbbr: \"\"\n        };\n\n        var fullyBandedTaxids = ['9606', '10090', '10116'];\n        if (fullyBandedTaxids.indexOf(taxid) !== -1 && ideo.config.showFullyBanded === false) {\n          urlOrg += '-no-bands';\n        }\n        var chromosomesUrl = dataDir + urlOrg + \".js\";\n\n        var promise = new Promise(function (resolve, reject) {\n          d3.request(chromosomesUrl).get(function (error, data) {\n            if (error) {\n              reject(Error(error));\n            }\n            resolve(data);\n          });\n        });\n\n        return promise.then(function (data) {\n          // Check if chromosome data exists locally.\n          // This is used for pre-processed centromere data,\n          // which is not accessible via EUtils.  See get_chromosomes.py.\n\n          var asmAndChrArray = [],\n              chromosomes = [],\n              seenChrs = {},\n              chr;\n\n          eval(data.response);\n\n          asmAndChrArray.push('');\n\n          for (var i = 0; i < chrBands.length; i++) {\n            chr = chrBands[i].split(' ')[0];\n            if (chr in seenChrs) {\n              continue;\n            } else {\n              chromosomes.push({ name: chr, type: 'nuclear' });\n              seenChrs[chr] = 1;\n            }\n          }\n          chromsomes = chromosomes.sort(ideo.sortChromosomes);\n          asmAndChrArray.push(chromosomes);\n          ideo.coordinateSystem = \"iscn\";\n          return asmAndChrArray;\n        }, function () {\n          return new Promise(function (resolve) {\n            ideo.coordinateSystem = \"bp\";\n            ideo.getAssemblyAndChromosomesFromEutils(resolve);\n          });\n        });\n      }).then(function (asmChrArray) {\n        assembly = asmChrArray[0];\n        chromosomes = asmChrArray[1];\n\n        ideo.config.chromosomes = chromosomes;\n        ideo.organisms[taxid].assemblies = {\n          default: assembly\n        };\n\n        callback(taxids);\n      });\n    } else {\n      ideo.config.taxids = taxids;\n      if (multiorganism) {\n        ideo.config.chromosomes = tmpChrs;\n      }\n\n      callback(taxids);\n    }\n  } else {\n    if (multiorganism) {\n      ideo.coordinateSystem = \"bp\";\n      if (taxidInit) {\n        taxids = ideo.config.taxid;\n      }\n    } else {\n      if (taxidInit) {\n        taxids = [ideo.config.taxid];\n      }\n      ideo.config.taxids = taxids;\n    }\n\n    callback(taxids);\n  }\n};\n\nIdeogram.prototype.sortChromosomes = function (a, b) {\n  var aIsNuclear = a.type === \"nuclear\",\n      bIsNuclear = b.type === \"nuclear\",\n      aIsCP = a.type === \"chloroplast\",\n      bIsCP = b.type === \"chloroplast\",\n      aIsMT = a.type === \"mitochondrion\",\n      bIsMT = b.type === \"mitochondrion\";\n  // aIsPlastid = aIsMT && a.name !== \"MT\", // e.g. B1 in rice genome GCF_001433935.1\n  // bIsPlastid = bIsMT && b.name !== \"MT\";\n\n  if (aIsNuclear && bIsNuclear) {\n    return naturalSort(a.name, b.name);\n  } else if (!aIsNuclear && bIsNuclear) {\n    return 1;\n  } else if (aIsMT && bIsCP) {\n    return 1;\n  } else if (aIsCP && bIsMT) {\n    return -1;\n  } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n    return -1;\n  }\n};\n\n/**\n  Returns names and lengths of chromosomes for an organism's best-known\n  genome assembly.  Gets data from NCBI EUtils web API.\n*/\nIdeogram.prototype.getAssemblyAndChromosomesFromEutils = function (callback) {\n  var asmAndChrArray,\n      // [assembly_accession, chromosome_objects_array]\n  assemblyAccession,\n      chromosomes,\n      asmSearch,\n      asmUid,\n      asmSummary,\n      rsUid,\n      nuccoreLink,\n      links,\n      ntSummary,\n      results,\n      result,\n      cnIndex,\n      chrName,\n      chrLength,\n      chromosome,\n      type,\n      ideo = this;\n\n  organism = ideo.config.organism;\n\n  asmAndChrArray = [];\n  chromosomes = [];\n\n  asmSearch = ideo.esearch + \"&db=assembly\" + \"&term=%22\" + organism + \"%22[organism]\" + \"AND%20(%22latest%20refseq%22[filter])%20\" + \"AND%20(%22chromosome%20level%22[filter]%20\" + \"OR%20%22complete%20genome%22[filter])\";\n\n  var promise = d3.promise.json(asmSearch);\n\n  promise.then(function (data) {\n    // NCBI Assembly database's internal identifier (uid) for this assembly\n    asmUid = data.esearchresult.idlist[0];\n    asmSummary = ideo.esummary + \"&db=assembly&id=\" + asmUid;\n\n    return d3.promise.json(asmSummary);\n  }).then(function (data) {\n    // RefSeq UID for this assembly\n    rsUid = data.result[asmUid].rsuid;\n    assemblyAccession = data.result[asmUid].assemblyaccession;\n\n    asmAndChrArray.push(assemblyAccession);\n\n    // Get a list of IDs for the chromosomes in this genome.\n    //\n    // This information does not seem to be available from well-known\n    // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n    // a lesser-known NCBI database.\n    var qs = \"&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=\" + rsUid;\n    nuccoreLink = ideo.elink + qs;\n\n    return d3.promise.json(nuccoreLink);\n  }).then(function (data) {\n    links = data.linksets[0].linksetdbs[0].links.join(\",\");\n    ntSummary = ideo.esummary + \"&db=nucleotide&id=\" + links;\n\n    return d3.promise.json(ntSummary);\n  }).then(function (data) {\n    results = data.result;\n\n    for (var x in results) {\n      result = results[x];\n\n      // omit list of reult uids\n      if (x === \"uids\") {\n        continue;\n      }\n\n      if (result.genome === \"mitochondrion\") {\n        if (ideo.config.showNonNuclearChromosomes) {\n          type = result.genome;\n          cnIndex = result.subtype.split(\"|\").indexOf(\"plasmid\");\n          if (cnIndex === -1) {\n            chrName = \"MT\";\n          } else {\n            // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n            // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n            // genome: \"mitochondrion\",\n            // subtype: \"cell_line|plasmid\",\n            // subname: \"A-58 CMS|B1\",\n            chrName = result.subname.split(\"|\")[cnIndex];\n          }\n        } else {\n          continue;\n        }\n      } else if (result.genome === \"chloroplast\" || result.genome === \"plastid\") {\n        type = \"chloroplast\";\n        // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n        if (ideo.config.showNonNuclearChromosomes) {\n          chrName = \"CP\";\n        } else {\n          continue;\n        }\n      } else {\n        type = \"nuclear\";\n        cnIndex = result.subtype.split(\"|\").indexOf(\"chromosome\");\n\n        chrName = result.subname.split(\"|\")[cnIndex];\n\n        if (typeof chrName !== \"undefined\" && chrName.substr(0, 3) === \"chr\") {\n          // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n          chrName = chrName.substr(3);\n        }\n      }\n\n      chrLength = result.slen;\n\n      chromosome = {\n        name: chrName,\n        length: chrLength,\n        type: type\n      };\n\n      chromosomes.push(chromosome);\n    }\n\n    chromosomes = chromosomes.sort(ideo.sortChromosomes);\n    asmAndChrArray.push(chromosomes);\n\n    ideo.coordinateSystem = \"bp\";\n\n    return callback(asmAndChrArray);\n  });\n};\n\nIdeogram.prototype.drawSexChromosomes = function (bandsArray, taxid, container, defs, j, chrs) {\n  var chromosome,\n      bands,\n      chrModel,\n      shape,\n      sci,\n      k,\n      sexChromosomeIndexes,\n      ideo = this;\n\n  if (ideo.config.sex === 'male') {\n    sexChromosomeIndexes = [1, 0];\n  } else {\n    sexChromosomeIndexes = [0, 0];\n  }\n\n  for (k = 0; k < sexChromosomeIndexes.length; k++) {\n    sci = sexChromosomeIndexes[k] + j;\n    chromosome = chrs[sci];\n    bands = bandsArray[sci];\n    chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, sci);\n    shape = ideo.drawChromosome(chrModel, j, container, k);\n    defs.append(\"clipPath\").attr(\"id\", chrModel.id + \"-chromosome-set-clippath\").selectAll('path').data(shape).enter().append('path').attr('d', function (d) {\n      return d.path;\n    }).attr('class', function (d) {\n      return d.class;\n    });\n  }\n};\n\nIdeogram.prototype.initDrawChromosomes = function (bandsArray) {\n  var ideo = this,\n      taxids = ideo.config.taxids,\n      ploidy = ideo.config.ploidy,\n      taxid,\n      chrIndex = 0,\n      chrSetNumber = 0,\n      bands,\n      i,\n      j,\n      chrs,\n      chromosome,\n      chrModel,\n      defs,\n      transform;\n\n  defs = d3.select(ideo.selector + \" defs\");\n\n  for (i = 0; i < taxids.length; i++) {\n    taxid = taxids[i];\n    chrs = ideo.config.chromosomes[taxid];\n\n    ideo.chromosomes[taxid] = {};\n\n    ideo.setSexChromosomes(chrs);\n\n    for (j = 0; j < chrs.length; j++) {\n      chromosome = chrs[j];\n      bands = bandsArray[chrIndex];\n      chrIndex += 1;\n\n      chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n      ideo.chromosomes[taxid][chromosome] = chrModel;\n      ideo.chromosomesArray.push(chrModel);\n\n      if ('sex' in ideo.config && (ploidy === 2 && ideo.sexChromosomes.index + 2 === chrIndex || ideo.config.sex === 'female' && chrModel.name === 'Y')) {\n        continue;\n      }\n\n      transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n      chrSetNumber += 1;\n\n      // Append chromosome set container\n      var container = d3.select(ideo.selector).append(\"g\").attr(\"class\", \"chromosome-set-container\").attr(\"data-set-number\", j).attr(\"transform\", transform).attr(\"id\", chrModel.id + \"-chromosome-set\");\n\n      if ('sex' in ideo.config && ploidy === 2 && ideo.sexChromosomes.index + 1 === chrIndex) {\n        ideo.drawSexChromosomes(bandsArray, taxid, container, defs, j, chrs);\n        continue;\n      }\n\n      var shape;\n      var numChrsInSet = 1;\n      if (ploidy > 1) {\n        numChrsInSet = this._ploidy.getChromosomesNumber(j);\n      }\n      for (var k = 0; k < numChrsInSet; k++) {\n        shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n      }\n\n      defs.append(\"clipPath\").attr(\"id\", chrModel.id + \"-chromosome-set-clippath\").selectAll('path').data(shape).enter().append('path').attr('d', function (d) {\n        return d.path;\n      }).attr('class', function (d) {\n        return d.class;\n      });\n    }\n\n    if (ideo.config.showBandLabels === true) {\n      ideo.drawBandLabels(ideo.chromosomes);\n    }\n  }\n};\n\n// Get ideogram SVG container\nIdeogram.prototype.getSvg = function () {\n  return d3.select(this.selector).node();\n};\n\nIdeogram.prototype.setSexChromosomes = function (chrs) {\n  // Currently only supported for mammals\n  // TODO: Support all sexually reproducing taxa\n  //  XY sex-determination (mammals):\n  //  - Male: XY <- heterogametic\n  //  - Female: XX\n  //  ZW sex-determination (birds):\n  //  - Male: ZZ\n  //  - Female: ZW <- heterogametic\n  //  X0 sex-determination (some insects):\n  //  - Male: X0, i.e. only X <- heterogametic?\n  //  - Female: XX\n  // TODO: Support sex chromosome aneuploidies in mammals\n  //  - Turner syndrome: X0\n  //  - Klinefelter syndome: XXY\n  //  More types:\n  //  https://en.wikipedia.org/wiki/Category:Sex_chromosome_aneuploidies\n\n  if (this.config.ploidy !== 2 || !this.config.sex) {\n    return;\n  }\n\n  var ideo = this,\n      sexChrs = { X: 1, Y: 1 },\n      chr,\n      i;\n\n  ideo.sexChromosomes.list = [];\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n\n    if (ideo.config.sex === 'male' && chr in sexChrs) {\n      ideo.sexChromosomes.list.push(chr);\n      if (!ideo.sexChromosomes.index) {\n        ideo.sexChromosomes.index = i;\n      }\n    } else if (chr === 'X') {\n      ideo.sexChromosomes.list.push(chr, chr);\n      ideo.sexChromosomes.index = i;\n    }\n  }\n};\n\n/*\n* Completes default ideogram initialization\n* by calling downstream functions to\n* process raw band data into full JSON objects,\n* render chromosome and cytoband figures and labels,\n* apply initial graphical transformations,\n* hide overlapping band labels, and\n* execute callbacks defined by client code\n*/\nIdeogram.prototype.processBandData = function () {\n  var bandsArray,\n      j,\n      k,\n      chromosome,\n      bands,\n      chrLength,\n      chr,\n      bandData,\n      bandsByChr,\n      taxid,\n      taxids,\n      chrs,\n      chrsByTaxid,\n      ideo = this;\n\n  bandsArray = [];\n  maxLength = 0;\n\n  if (ideo.config.multiorganism === true) {\n    ideo.coordinateSystem = \"bp\";\n    taxids = ideo.config.taxids;\n    for (i = 0; i < taxids.length; i++) {\n      taxid = taxids[i];\n    }\n  } else {\n    if (typeof ideo.config.taxid === \"undefined\") {\n      ideo.config.taxid = ideo.config.taxids[0];\n    }\n    taxid = ideo.config.taxid;\n    taxids = [taxid];\n    ideo.config.taxids = taxids;\n  }\n\n  if (\"chromosomes\" in ideo.config) {\n    chrs = ideo.config.chromosomes;\n  }\n  if (ideo.config.multiorganism) {\n    chrsByTaxid = chrs;\n  }\n\n  ideo.config.chromosomes = {};\n\n  var t0B = new Date().getTime();\n\n  for (j = 0; j < taxids.length; j++) {\n    taxid = taxids[j];\n\n    if (ideo.config.multiorganism) {\n      chrs = chrsByTaxid[taxid];\n    }\n\n    if (ideo.coordinateSystem === \"iscn\" || ideo.config.multiorganism) {\n      bandData = ideo.bandData[taxid];\n\n      bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n      chrs = Object.keys(bandsByChr).sort(function (a, b) {\n        return naturalSort(a, b);\n      });\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chromosome = chrs[k];\n        bands = bandsByChr[chromosome];\n        bandsArray.push(bands);\n\n        chrLength = {\n          iscn: bands[bands.length - 1].iscn.stop,\n          bp: bands[bands.length - 1].bp.stop\n        };\n\n        if (chrLength.iscn > ideo.maxLength.iscn) {\n          ideo.maxLength.iscn = chrLength.iscn;\n        }\n\n        if (chrLength.bp > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chrLength.bp;\n        }\n      }\n    } else if (ideo.coordinateSystem === \"bp\") {\n      // If lacking band-level data\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chr = chrs[k];\n        if (chr.length > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chr.length;\n        }\n      }\n    }\n  }\n\n  var t1B = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in processBandData: \" + (t1B - t0B) + \" ms\");\n  }\n\n  return bandsArray;\n};\n\n/**\n* Initializes an ideogram.\n* Sets some high-level properties based on instance configuration,\n* fetches band and annotation data if needed, and\n* writes an SVG element to the document to contain the ideogram\n*\n*/\nIdeogram.prototype.init = function () {\n  var taxid, i, svgClass;\n\n  var ideo = this;\n\n  var t0 = new Date().getTime();\n\n  var bandsArray = [],\n      numBandDataResponses = 0,\n      resolution = this.config.resolution,\n      accession;\n\n  var promise = new Promise(function (resolve) {\n    ideo.getTaxids(resolve);\n  });\n\n  promise.then(function (taxids) {\n    taxid = taxids[0];\n    ideo.config.taxid = taxid;\n    ideo.config.taxids = taxids;\n\n    var assemblies, bandFileName;\n\n    var bandDataFileNames = {\n      9606: '',\n      10090: ''\n    };\n\n    for (i = 0; i < taxids.length; i++) {\n      taxid = String(taxids[i]);\n\n      if (!ideo.config.assembly) {\n        ideo.config.assembly = \"default\";\n      }\n      assemblies = ideo.organisms[taxid].assemblies;\n      accession = assemblies[ideo.config.assembly];\n\n      bandFileName = [];\n      bandFileName.push(slugify(ideo.organisms[taxid].scientificName));\n      if (accession !== assemblies.default) {\n        bandFileName.push(accession);\n      }\n      if (taxid === '9606' && (accession !== assemblies.default || resolution !== 850)) {\n        bandFileName.push(resolution);\n      }\n      bandFileName = bandFileName.join('-') + '.js';\n\n      if (taxid === '9606' || taxid === '10090') {\n        bandDataFileNames[taxid] = bandFileName;\n      }\n\n      if (typeof chrBands === \"undefined\" && taxid in bandDataFileNames) {\n        d3.request(ideo.config.dataDir + bandDataFileNames[taxid]).on(\"beforesend\", function (data) {\n          // Ensures correct taxid is processed in response callback; using\n          // simply 'taxid' variable gives the last *requested* taxid, which\n          // fails when dealing with multiple taxa.\n          data.taxid = taxid;\n        }).get(function (error, data) {\n          eval(data.response);\n\n          ideo.bandData[data.taxid] = chrBands;\n          numBandDataResponses += 1;\n\n          if (numBandDataResponses === taxids.length) {\n            bandsArray = ideo.processBandData();\n            writeContainer();\n          }\n        });\n      } else {\n        if (typeof chrBands !== \"undefined\") {\n          // If bands already available,\n          // e.g. via <script> tag in initial page load\n          ideo.bandData[taxid] = chrBands;\n        }\n        bandsArray = ideo.processBandData();\n        writeContainer();\n      }\n    }\n  });\n\n  function writeContainer() {\n    if (ideo.config.annotationsPath) {\n      d3.json(ideo.config.annotationsPath, // URL\n      function (data) {\n        // Callback\n        ideo.rawAnnots = data;\n      });\n    }\n\n    // If ploidy description is a string, then convert it to the canonical\n    // array format.  String ploidyDesc is used when depicting e.g. parental\n    // origin each member of chromosome pair in a human genome.\n    // See ploidy_basic.html for usage example.\n    if ('ploidyDesc' in ideo.config && typeof ideo.config.ploidyDesc === \"string\") {\n      var tmp = [];\n      for (var i = 0; i < ideo.numChromosomes; i++) {\n        tmp.push(ideo.config.ploidyDesc);\n      }\n      ideo.config.ploidyDesc = tmp;\n    }\n    // Organism ploidy description\n    ideo._ploidy = new Ploidy(ideo.config);\n\n    // Chromosome's layout\n    ideo._layout = Layout.getInstance(ideo.config, ideo);\n\n    svgClass = \"\";\n    if (ideo.config.showChromosomeLabels) {\n      if (ideo.config.orientation === \"horizontal\") {\n        svgClass += \"labeledLeft \";\n      } else {\n        svgClass += \"labeled \";\n      }\n    }\n\n    if (ideo.config.annotationsLayout && ideo.config.annotationsLayout === \"overlay\") {\n      svgClass += \"faint\";\n    }\n\n    var gradients = ideo.getBandColorGradients();\n    var svgWidth = ideo._layout.getWidth(taxid);\n    var svgHeight = ideo._layout.getHeight(taxid);\n\n    d3.select(ideo.config.container).append(\"div\").append(\"svg\").attr(\"id\", \"_ideogram\").attr(\"class\", svgClass).attr(\"width\", svgWidth).attr(\"height\", svgHeight).html(gradients);\n\n    finishInit();\n  }\n\n  function finishInit() {\n    try {\n      var t0A = new Date().getTime();\n\n      var i;\n\n      ideo.initDrawChromosomes(bandsArray);\n\n      // Waits for potentially large annotation dataset\n      // to be received by the client, then triggers annotation processing\n      if (ideo.config.annotationsPath) {\n        var pa = function pa() {\n          if (typeof ideo.timeout !== \"undefined\") {\n            window.clearTimeout(ideo.timeout);\n          }\n\n          ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n          ideo.drawProcessedAnnots(ideo.annots);\n\n          if (typeof crossfilter !== 'undefined' && ideo.initCrossFilter) {\n            ideo.initCrossFilter();\n          }\n        };\n\n        if (ideo.rawAnnots) {\n          pa();\n        } else {\n          (function checkAnnotData() {\n            ideo.timeout = setTimeout(function () {\n              if (!ideo.rawAnnots) {\n                checkAnnotData();\n              } else {\n                pa();\n              }\n            }, 50);\n          })();\n        }\n      }\n\n      if (ideo.config.showBandLabels === true) {\n        var bandsToShow = ideo.bandsToShow.join(\",\");\n\n        // d3.selectAll resolves to querySelectorAll (QSA).\n        // QSA takes a surprisingly long time to complete,\n        // and scales with the number of selectors.\n        // Most bands are hidden, so we can optimize by\n        // Hiding all bands, then QSA'ing and displaying the\n        // relatively few bands that are shown.\n        var t0C = new Date().getTime();\n        d3.selectAll(ideo.selector + \" .bandLabel, .bandLabelStalk\").style(\"display\", \"none\");\n        d3.selectAll(bandsToShow).style(\"display\", \"\");\n        var t1C = new Date().getTime();\n        if (ideo.debug) {\n          console.log(\"Time in showing bands: \" + (t1C - t0C) + \" ms\");\n        }\n\n        if (ideo.config.orientation === \"vertical\") {\n          var chrID;\n          for (i = 0; i < ideo.chromosomesArray.length; i++) {\n            chrID = \"#\" + ideo.chromosomesArray[i].id;\n            ideo.rotateChromosomeLabels(d3.select(chrID), i);\n          }\n        }\n      }\n\n      if (ideo.config.showChromosomeLabels === true) {\n        ideo.drawChromosomeLabels(ideo.chromosomes);\n      }\n\n      if (ideo.config.brush === true) {\n        ideo.createBrush();\n      }\n\n      if (ideo.config.annotations) {\n        ideo.drawAnnots(ideo.config.annotations);\n      }\n\n      var t1A = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time in drawChromosome: \" + (t1A - t0A) + \" ms\");\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time constructing ideogram: \" + (t1 - t0) + \" ms\");\n      }\n\n      if (ideo.onLoadCallback) {\n        ideo.onLoadCallback();\n      }\n\n      if (!(\"rotatable\" in ideo.config && ideo.config.rotatable === false)) {\n        d3.selectAll(ideo.selector + \" .chromosome\").on(\"click\", function () {\n          ideo.rotateAndToggleDisplay(this);\n        });\n      } else {\n        d3.selectAll(ideo.selector + \" .chromosome\").style(\"cursor\", \"default\");\n      }\n    } catch (e) {\n      // console.log(e);\n      throw e;\n    }\n  }\n};\n\nexports.default = Ideogram;","\"use strict\";\n\n/* Decompresses ideogram's annotations for crossfilter initialization\nBy default, annotations are clustered by chromosome, e.g.\n[\n  {\"chr\": \"1\", \"annots\": [{\"from\": 100, \"to\", 101, \"chr\": \"1\", ...}, ...]},\n  {\"chr\": \"2\", \"annots\": [{\"from\": 500, \"to\", 501, \"chr\": \"2\", ...}, ...]},\n  ...\n]\nThis method flattens that structure to e.g.\n[\n  {\"from\": 100, \"to\": 101, \"chr\": \"1\", ...},\n  ...\n  {\"from\": 500, \"to\": 501, \"chr\": \"2\", ...},\n]\nSee also: packAnnots\n*/\nIdeogram.prototype.unpackAnnots = function () {\n  var chr,\n      annots,\n      i,\n      unpackedAnnots = [],\n      ideo = this,\n      chrs = ideo.annots;\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots = chr.annots;\n    unpackedAnnots = unpackedAnnots.concat(annots);\n  }\n\n  return unpackedAnnots;\n};\n\n/*\n  Compresses annots back to default state.  Inverse of unpackAnnots.\n*/\nIdeogram.prototype.packAnnots = function (unpackedAnnots) {\n  var chr,\n      annot,\n      i,\n      annots = [],\n      ideo = this,\n      chrs = ideo.annots;\n\n  for (chr in chrs) {\n    annots.push({ chr: chrs[chr].chr, annots: [] });\n  }\n\n  for (i = 0; i < unpackedAnnots.length; i++) {\n    annot = unpackedAnnots[i];\n    annots[annot.chrIndex].annots.push(annot);\n  }\n\n  return annots;\n};\n\n/*\n  Initializes crossfilter.  Needed for client-side filtering.\n  More: https://github.com/square/crossfilter/wiki/API-Reference\n*/\nIdeogram.prototype.initCrossFilter = function () {\n  var ideo = this,\n      keys = ideo.rawAnnots.keys,\n      i,\n      facet;\n\n  ideo.unpackedAnnots = ideo.unpackAnnots();\n  ideo.crossfilter = crossfilter(ideo.unpackedAnnots);\n\n  ideo.annotsByFacet = {};\n\n  ideo.facets = keys.slice(3, keys.length);\n\n  for (i = 0; i < ideo.facets.length; i++) {\n    facet = ideo.facets[i];\n    ideo.annotsByFacet[facet] = ideo.crossfilter.dimension(function (d) {\n      return d[facet];\n    });\n  }\n};\n\n/*\n  Filters annotations based on the given selections\n  \"selections\" is an object of objects, e.g.\n\n    {\n      \"tissue-type\": {          <-- a facet\n        \"cerebral-cortex\": 1,   <-- a filter; \"1\" means it is selected\n        \"liver\": 1\n      },\n      \"gene-type\": {\n        mirna\": 1\n      }\n    }\n\n  Translation:\n  select where:\n      (tissue-type is cerebral-cortex OR liver) and (gene-type is mirna)\n\n  TODO:\n    * Filter counts\n    * Range filters\n    * Integrate server-side filtering for very large datasets\n*/\nIdeogram.prototype.filterAnnots = function (selections) {\n  var t0 = Date.now();\n\n  var i,\n      facet,\n\n  // prevFacet = null,\n  results,\n      fn,\n      counts = {},\n      ideo = this;\n\n  if (Object.keys(selections).length === 0) {\n    results = ideo.unpackedAnnots;\n  } else {\n    for (i = 0; i < ideo.facets.length; i++) {\n      facet = ideo.facets[i];\n      if (facet in selections) {\n        fn = function fn(d) {\n          if (d in selections[facet]) {\n            return true;\n          }\n        };\n      } else {\n        fn = null;\n      }\n      ideo.annotsByFacet[facet].filter(fn);\n      counts[facet] = ideo.annotsByFacet[facet].group().top(Infinity);\n    }\n\n    results = ideo.annotsByFacet[facet].top(Infinity);\n  }\n\n  for (i < 0; i < ideo.facets.length; i++) {\n    ideo.annotsByFacet[facet].filterAll(); // clear filters\n  }\n\n  results = ideo.packAnnots(results);\n\n  d3.selectAll(ideo.selector + \" polygon.annot\").remove();\n  ideo.drawAnnots(results);\n\n  console.log(\"Time in filterAnnots: \" + (Date.now() - t0) + \" ms\");\n\n  return counts;\n};"]}