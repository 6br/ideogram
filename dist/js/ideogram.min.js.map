{"version":3,"sources":["range.js","model-adapter.js","model-no-bands-adapter.js","layouts/layout.js","layouts/horizontal-layout.js","layouts/vertical-layout.js","layouts/paired-layout.js","layouts/small-layout.js","ploidy.js","color.js","views/chromosome.js","views/telocentric-chromosome.js","views/metacentric-chromosome.js","lib.js","views/chromosome-util.js","core.js","filter.js"],"names":["Range","data","this","_data","ModelAdapter","model","_model","_class","ModelNoBandsAdapter","call","Layout","config","ideo","_config","_ideo","_ploidy","_translate","undefined","_tickSize","_isRotated","HorizontalLayout","_margin","left","top","VerticalLayout","PairedLayout","SmallLayout","Ploidy","_description","_normalize","ploidyDesc","Color","Chromosome","adapter","_adapter","getModel","_color","_bumpCoefficient","TelocentricChromosome","_pArmOffset","MetacentricChromosome","naturalSort","a","b","q","r","c","d","e","f","g","h","i","insensitive","toLowerCase","replace","j","k","l","split","m","n","parseInt","match","length","Date","parse","o","p","parseFloat","s","t","u","v","Math","max","isNaN","test","localeCompare","w","abs","slugify","value","ChromosomeUtil","node","_node","prototype","getStart","start","getStop","stop","getLength","getColor","chrNumber","ploidy","_getColor","Array","isArray","color","getInstance","bands","getCssClass","Object","create","width","push","name","px","perspective","rows","orientation","_getLeftMargin","_getYScale","chrWidth","getChromosomeLabels","chrElement","util","getSetLabel","getLabel","filter","rotateBack","Error","rotateForward","rotate","chrSetNumber","otherChrs","d3","selectAll","style","getChromosomeLabelClass","_getAdditionalOffset","annotationHeight","numAnnotTracks","_getChromosomeSetSize","setSize","getSetSize","getMargin","getHeight","getChromosomeBandTickY1","getChromosomeBandTickY2","getChromosomeBandLabelTranslate","getChromosomeSetLabelAnchor","getChromosomeBandLabelAnchor","getChromosomeLabelXPosition","getChromosomeLabelYPosition","getChromosomeSetLabelYPosition","getChromosomeSetLabelXPosition","getChromosomeSetLabelTranslate","getChromosomeSetTranslate","getChromosomeSetYTranslate","margin","setNumber","callback","xOffset","ideoBox","select","getBoundingClientRect","chrBox","scaleX","height","scaleY","yOffset","transform","parentNode","transition","attr","on","labels","getSvg","append","enter","text","String","translate","remove","taxId","numChromosomes","chromosomes","lastSetOffset","lastSetSize","band","x","round","y","leftMargin","chromosomeSetYTranslate","chrMargin","self","chrHeight","marginTop","pad","annotationsLayout","prevTranslate","translateY","Number","organisms","getTaxids","taxIdList","size","rowSize","additionalPadding","getChromosomesNumber","chrSetCode","keys","description","normalized","key","ancestors","existence","_getexistenceArray","array","getAncestor","exists","armNumber","desc","getArmColor","armColors","_getPolyploidArmColor","getBorderColor","ancestor","centromerePosition","_addPArmShape","clipPath","isPArmRendered","concat","_getPArmShape","_addQArmShape","isQArmRendered","_getQArmShape","render","container","id","_renderPArm","_renderQArm","_renderRangeSet","path","class","rangeSet","range","chr","map","rangesContainer","bandsXOffset","_bandsXOffset","startPx","convertBpToPx","lengthPx","_getShapeData","firstQBand","lastBand","rightTerminalPosition","x1","x2","x3","_renderBands","arm","fill","stain","Boolean","G","Q","process","nextTick","B","X","document","createTextNode","observe","characterData","MessageChannel","port1","onmessage","port2","postMessage","setTimeout","J","tt","require","runOnLoop","runOnContext","constructor","rt","_state","arguments","_result","E","_","TypeError","then","ut","error","S","_label","it","st","et","resolve","nt","A","_onerror","T","ot","_subscribers","M","P","ct","C","O","at","Y","_t","promise","I","F","D","K","L","N","_instanceConstructor","_input","_remaining","_enumerate","U","W","global","Function","Promise","toString","cast","pt","z","H","R","window","V","MutationObserver","WebKitMutationObserver","Z","$","Uint8ClampedArray","importScripts","random","substring","ft","lt","ht","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","_settledAt","_willSettleAt","dt","vt","polyfill","define","amd","module","exports","ES6Promise","slice","apply","forEach","Ideogram","rect","JSON","stringify","_layout","debug","dataDir","resolution","showChromosomeLabels","querySelector","showBandLabels","brush","bump","adjustedBump","chromosome","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","9606","commonName","scientificName","scientificNameAbbr","assemblies","default","GRCh38","GRCh37","10090","4641","chromosomesArray","bandsToShow","bandData","init","getBands","content","taxid","lines","delimiter","tsvLines","columns","line","tsvLinesLength","source","firstColumn","tmp","chrBands","eval","indexOf","chromosomeName","getChromosomeModel","chrIndex","pxStop","chrLength","cs","hasBands","type","fullChromosomeLabels","orgName","csLength","pcenIndex","scale","multiorganism","drawChromosomeLabels","chromosomeLabelClass","chrSetLabelXPosition","chrSetLabelTranslate","each","reverse","fullLabels","setLabelTranslate","drawBandLabels","chrs","chrModel","textOffsets","overlappingLabelXRight","index","prevHiddenBoxIndex","xLeft","prevLabelXRight","textPadding","textsLength","indexesToShow","prevTextBoxLeft","prevTextBoxWidth","selectorsToShow","ithLength","rotateChromosomeLabels","scaleSvg","tracksHeight","hasOwnProperty","ci","chrMargin2","rotateBandLabels","bandLabels","coord","drawChromosome","rotateAndToggleDisplay","_groups","bpToIscnScale","offset","pxStart","pxLength","iscnStart","iscnStop","iscnLength","bpStart","bpStop","bpLength","convertPxToBp","pxToIscnScale","drawSynteny","syntenicRegions","r1","r2","syntenies","opacity","regionID","t0","getTime","insert","regions","stopPx","syntenicRegion","activeRegion","others","classed","t1","console","log","annotationsPath","localAnnotationsPath","annots","annotations","annotHeight","annotationTracks","barWidth","annotationsColor","drawAnnots","friendlyAnnots","annot","rawAnnot","rawAnnots","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","getHistogramBars","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","histogramScaling","firstGet","numBins","count","barAnnots","barCount","layout","triangle","circle","chrAnnot","y1","y2","thisChrWidth","createBrush","from","to","extent","event","selection","xScale","invert","floor","ceil","selectedRegion","x0","chrLengthBp","scaleLinear","domain","right","brushX","yTranslate","move","getBandColorGradients","colors","color1","color2","color3","css","gradients","getTaxidFromEutils","organism","taxonomySearch","json","esearchresult","idlist","taxids","org","orgs","taxidInit","tmpChrs","assembly","urlOrg","chromosomesUrl","request","get","asmAndChrArray","seenChrs","response","chromsomes","sort","sortChromosomes","getAssemblyAndChromosomesFromEutils","asmChrArray","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","links","ntSummary","results","result","cnIndex","rsuid","assemblyaccession","qs","linksets","linksetdbs","join","genome","subtype","subname","substr","slen","initDrawChromosomes","bandsArray","defs","processBandData","bandsByChr","chrsByTaxid","t0B","t1B","writeContainer","svgClass","svgHeight","html","finishInit","pa","timeout","clearTimeout","initCrossFilter","t0A","checkAnnotData","t0C","t1C","chrID","t1A","ideogram","accession","numBandDataResponses","bandFileName","bandDataFileNames","unpackAnnots","unpackedAnnots","packAnnots","facet","crossfilter","annotsByFacet","facets","dimension","filterAnnots","selections","fn","now","counts","group","Infinity","filterAll","label","setLabel"],"mappings":"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","file":"ideogram.min.js","sourcesContent":["/**\n * Chromosome range.\n * @public\n * @class\n * @param {Object} data - range data.\n * @param {Integer} data.chr - chromosome index.\n * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n * @param {Integer} data.start - range start.\n * @param {Integer} data.stop - range end.\n * @param {String} data.color - range color.\n */\nfunction Range(data) {\n  this._data = data;\n}\n\nRange.prototype.getStart = function() {\n  return this._data.start;\n};\n\nRange.prototype.getStop = function() {\n  return this._data.stop;\n};\n\nRange.prototype.getLength = function() {\n  return this._data.stop - this._data.start;\n};\n\nRange.prototype.getColor = function(chrNumber) {\n  if (!('ploidy' in this._data)) {\n    return this._getColor(chrNumber);\n  } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n    return this._getColor(chrNumber);\n  } else {\n    return 'transparent';\n  }\n};\n\nRange.prototype._getColor = function(chrNumber) {\n  if (Array.isArray(this._data.color)) {\n    return this._data.color[chrNumber];\n  } else {\n    return this._data.color;\n  }\n};\n","function ModelAdapter(model) {\n  this._model = model;\n  this._class = 'ModelAdapter';\n}\n\nModelAdapter.getInstance = function(model) {\n  if (model.bands) {\n    return new ModelAdapter(model);\n  } else {\n    return new ModelNoBandsAdapter(model);\n  }\n};\n\nModelAdapter.prototype.getModel = function() {\n  return this._model;\n};\n\nModelAdapter.prototype.getCssClass = function() {\n  return '';\n};\n","function ModelNoBandsAdapter(model) {\n    /*\n     * Call parent constructor.\n     */\n  ModelAdapter.call(this, model);\n  this._class = 'ModelNoBandsAdapter';\n}\n\nModelNoBandsAdapter.prototype = Object.create(ModelAdapter.prototype);\n\nModelNoBandsAdapter.prototype.getModel = function() {\n  this._model.bands = [];\n\n    // If chromosome width more, then 1 add single band to bands array\n  if (this._model.width > 1) {\n    this._model.bands.push({\n      name: 'q',\n      px: {\n        start: 0,\n        stop: this._model.width,\n        width: this._model.width\n      }\n    });\n  }\n\n  return this._model;\n};\n\nModelNoBandsAdapter.prototype.getCssClass = function() {\n  return 'noBands';\n};\n","function Layout(config, ideo) {\n  this._config = config;\n  this._ideo = ideo;\n  this._ploidy = this._ideo._ploidy;\n  this._translate = undefined;\n\n  // Chromosome band's size.\n  this._tickSize = 8;\n\n  // Chromosome rotation state.\n  this._isRotated = false;\n}\n\n// Factory method\nLayout.getInstance = function(config, ideo) {\n  if (\"perspective\" in config && config.perspective === \"comparative\") {\n    return new PairedLayout(config, ideo);\n  } else if (\"rows\" in config && config.rows > 1) {\n    return new SmallLayout(config, ideo);\n  } else if (config.orientation === 'vertical') {\n    return new VerticalLayout(config, ideo);\n  } else if (config.orientation === 'horizontal') {\n    return new HorizontalLayout(config, ideo);\n  } else {\n    return new VerticalLayout(config, ideo);\n  }\n};\n\n// Get chart left margin\nLayout.prototype._getLeftMargin = function() {\n  return this._margin.left;\n};\n\n// Get rotated chromosome y scale\nLayout.prototype._getYScale = function() {\n    // 20 is width of rotated chromosome.\n  return 20 / this._config.chrWidth;\n};\n\n// Get chromosome labels\nLayout.prototype.getChromosomeLabels = function(chrElement) {\n  var util = new ChromosomeUtil(chrElement);\n\n  return [util.getSetLabel(), util.getLabel()].filter(function(d) {\n    return d.length > 0;\n  });\n};\n\n// Rotate chromosome to original position\nLayout.prototype.rotateBack = function() {\n  throw new Error(this._class + '#rotateBack not implemented');\n};\n\n// Rotate chromosome to opposite position\nLayout.prototype.rotateForward = function() {\n  throw new Error(this._class + '#rotateForward not implemented');\n};\n\nLayout.prototype.rotate = function(chrSetNumber, chrNumber, chrElement) {\n    // Find chromosomes which should be hidden\n  var otherChrs = d3.selectAll(\"g.chromosome\").filter(function() {\n    return this !== chrElement;\n  });\n\n  if (this._isRotated) {\n        // Reset _isRotated flag\n    this._isRotated = false;\n        // Rotate chromosome back\n    this.rotateBack(chrSetNumber, chrNumber, chrElement, function() {\n            // Show all other chromosomes and chromosome labels\n      otherChrs.style(\"display\", null);\n      d3.selectAll(\".chrSetLabel, .chrLabel\").style(\"display\", null);\n    });\n  } else {\n        // Set _isRotated flag\n    this._isRotated = true;\n\n        // Hide all other chromosomes and chromosome labels\n    otherChrs.style(\"display\", \"none\");\n    d3.selectAll(\".chrSetLabel, .chrLabel\").style(\"display\", \"none\");\n\n        // Rotate chromosome\n    this.rotateForward(chrSetNumber, chrNumber, chrElement);\n  }\n};\n\nLayout.prototype.getChromosomeLabelClass = function() {\n  if (this._config.ploidy === 1) {\n    return 'chrLabel';\n  } else {\n    return 'chrSetLabel';\n  }\n};\n\nLayout.prototype._getAdditionalOffset = function() {\n  return (\n    (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1)\n  );\n};\n\nLayout.prototype._getChromosomeSetSize = function(chrSetNumber) {\n    // Get last chromosome set size.\n  var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n    // Increase offset by last chromosome set size\n  return (\n    setSize * this._config.chrWidth * 2 + (this._config.ploidy > 1 ? 20 : 0)\n  );\n};\n\n// Get layout margin\nLayout.prototype.getMargin = function() {\n  return this._margin;\n};\n\n// Get SVG element height\nLayout.prototype.getHeight = function() {\n  throw new Error(this._class + '#getHeight not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY1 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY2 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n};\n\n// Get chromosome's band translate attribute\nLayout.prototype.getChromosomeBandLabelTranslate = function() {\n  throw new Error(\n    this._class + '#getChromosomeBandLabelTranslate not implemented'\n  );\n};\n\n// Get chromosome set label anchor property\nLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'middle';\n};\n\n// Get chromosome's band label text-anchor value\nLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  throw (\n    new Error(this._class + '#getChromosomeBandLabelAnchor not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeLabelXPosition = function() {\n  throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n};\n\n// Get chromosome label y position.\nLayout.prototype.getChromosomeLabelYPosition = function() {\n  return -5.5;\n};\n\n// \"i\" is chromosome number\nLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelYPosition(i);\n  } else {\n    return -2 * this._config.chrWidth;\n  }\n};\n\nLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelXPosition not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelTranslate not implemented')\n  );\n};\n\n// Get chromosome set translate attribute\nLayout.prototype.getChromosomeSetTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n};\n\n// Get chromosome set translate's y offset\nLayout.prototype.getChromosomeSetYTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n};\n","function HorizontalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'HorizontalLayout';\n  this._margin = {\n    left: 20,\n    top: 30\n  };\n}\n\nHorizontalLayout.prototype = Object.create(Layout.prototype);\n\nHorizontalLayout.prototype._getLeftMargin = function() {\n  var margin = Layout.prototype._getLeftMargin.call(this);\n  if (this._config.ploidy > 1) {\n    margin *= 1.8;\n  }\n\n  return margin;\n};\n\nHorizontalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var xOffset = 30;\n\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.height / (chrBox.width + xOffset / 2)) * 0.9;\n  var scaleY = this._getYScale();\n\n  var yOffset = (chrNumber + 1) * ((this._config.chrWidth * 2) * scaleY);\n\n  var transform = (\n    'rotate(90) ' +\n    'translate(' + xOffset + ', -' + yOffset + ') ' +\n    'scale(' + scaleX + ', ' + scaleY + ')'\n  );\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  d3.select(this._ideo.getSvg())\n        .append('g')\n        .attr('class', 'tmp')\n        .selectAll('text')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', function(d, i) {\n          return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n        })\n        .attr('x', 30)\n        .attr('y', function(d, i) {\n          return (i + 1 + labels.length % 2) * 12;\n        })\n        .style('text-anchor', 'middle')\n        .style('opacity', 0)\n        .text(String)\n        .transition()\n        .style('opacity', 1);\n};\n\nHorizontalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nHorizontalLayout.prototype.getHeight = function(taxId) {\n    // Get last chromosome set offset.\n  var numChromosomes = this._config.chromosomes[taxId].length;\n  var lastSetOffset = this.getChromosomeSetYTranslate(numChromosomes - 1);\n\n    // Get last chromosome set size.\n  var lastSetSize = this._getChromosomeSetSize(numChromosomes - 1);\n\n    // Increase offset by last chromosome set size\n  lastSetOffset += lastSetSize;\n\n  return lastSetOffset + this._getAdditionalOffset() * 2;\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'end';\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY1 = function() {\n  return 2;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY2 = function() {\n  return 10;\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelTranslate = function(band) {\n  var x = this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n  var y = -10;\n\n  return {\n    x: x,\n    y: y,\n    translate: 'translate(' + x + ',' + y + ')'\n  };\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var leftMargin = this._getLeftMargin();\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return \"translate(\" + leftMargin + \", \" + chromosomeSetYTranslate + \")\";\n};\n\nHorizontalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  // If no detailed description provided just use one formula for all cases.\n  if (!this._config.ploidyDesc) {\n    return this._config.chrMargin * (setNumber + 1);\n  }\n\n  // Id detailed description provided start to calculate offsets\n  //  for each chromosome set separately. This should be done only once.\n  if (!this._translate) {\n    // First offset equals to zero.\n    this._translate = [1];\n\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      this._translate[i] =\n        this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelXPosition(i);\n  } else {\n    return -20;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return (this._ploidy.getSetSize(i) * this._config.chrWidth) / 2 + 3;\n  } else {\n    return this._ploidy.getSetSize(i) * this._config.chrWidth;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -8;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelYPosition = function() {\n  return this._config.chrWidth;\n};\n","\nfunction VerticalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'VerticalLayout';\n    // Layout margins\n  this._margin = {\n    top: 30,\n    left: 15\n  };\n}\n\nVerticalLayout.prototype = Object.create(Layout.prototype);\n\nVerticalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n\n  var xOffset = 20;\n\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  var transform =\n    \"translate(\" + xOffset + \", 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  var y = (xOffset + self._config.chrWidth) * 1.3;\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(labels)\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', y).style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nVerticalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nVerticalLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nVerticalLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nVerticalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var marginTop = this._margin.top;\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nVerticalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation/histogram tracks\n  var pad = this._getAdditionalOffset(),\n    margin = this._config.chrMargin,\n    width = this._config.chrWidth,\n    translate;\n\n    // If no detailed description provided just use one formula for all cases\n  if (!this._config.ploidyDesc) {\n   // TODO:\n   // This part of code contains a lot magic numbers and if\n   // statements for exactly corresponing to original ideogram examples.\n   // But all this stuff should be removed. Calculation of translate\n   // should be a simple formula applied for all cases listed below.\n   // Now they are diffirent because of Layout:_getAdditionalOffset do\n   // not meet for cases when no annotation, when annotation exists and\n   // when histogram used\n\n    if (this._config.annotationsLayout === \"histogram\") {\n      return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n    } else {\n      translate = width + setNumber * (margin + width) + pad * 2;\n      if (pad > 0) {\n        return translate;\n      } else {\n        return translate + 4 + (2 * setNumber);\n      }\n    }\n  }\n\n    // If detailed description provided start to calculate offsets\n    // for each chromosome set separately. This should be done only once\n  if (!this._translate) {\n    // First offset equals to zero\n    this._translate = [this._ploidy.getSetSize(0) * width * 2];\n    var prevTranslate;\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      prevTranslate = this._translate[i - 1];\n      this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nVerticalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function PairedLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'PairedLayout';\n\n  this._margin = {\n    left: 30\n  };\n}\n\nPairedLayout.prototype = Object.create(Layout.prototype);\n\nPairedLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n\n    // Get ideo container and chromosome set dimensions\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n    // Evaluate dimensions scale coefficients\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n    // Evaluate y offset of chromosome. It is different for first and the second one\n  var yOffset = setNumber ? 150 : 25;\n\n  var transform =\n    'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n    .transition()\n    .attr(\"transform\", transform)\n    .on('end', function() {\n        // Run callback function if provided\n      if (callback) {\n        callback();\n      }\n\n      var translateY = (6 * Number(!setNumber));\n\n      // Rotate band labels\n      d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n        .attr('transform', 'rotate(90) translate(0, ' + translateY + ')')\n        .attr(\"text-anchor\", \"middle\");\n\n      // Hide syntenic regions\n      d3.selectAll('.syntenicRegion').style(\"display\", 'none');\n    });\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(this.getChromosomeLabels(chrElement))\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', yOffset + (self._config.chrWidth * scaleX / 2) * 1.15)\n    .style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nPairedLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n    // Get intial transformation string for chromosome set\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', function() {\n            // Run callback fnuction if provided\n          callback();\n            // Show syntenic regions\n          d3.selectAll('.syntenicRegion').style(\"display\", null);\n            // Reset changed attributes to original state\n          d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n            .attr('transform', null)\n            .attr(\"text-anchor\", setNumber ? null : 'end');\n        });\n\n  d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nPairedLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.left * 1.5;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n  return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n  var width = this._config.chrWidth;\n  return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n  return chrNumber % 2 ? null : 'end';\n};\n\nPairedLayout.prototype.getChromosomeBandLabelTranslate = function(band,\n  chrNumber) {\n  var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n  var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n  return {\n    x: y,\n    y: y,\n    translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n  };\n};\n\nPairedLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nPairedLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nPairedLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  return 200 * (setNumber + 1);\n};\n","function SmallLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'SmallLayout';\n\n  this._margin = {\n    left: 36.5,\n    top: 10\n  };\n}\n\nSmallLayout.prototype = Object.create(Layout.prototype);\n\nSmallLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  transform = \"translate(5, 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.getHeight = function() {\n  return this._config.rows * (this._config.chrHeight + this._margin.top * 1.5);\n};\n\nSmallLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nSmallLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nSmallLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n    // Get organisms id list\n  var organisms = [];\n  this._ideo.getTaxids(function(taxIdList) {\n    organisms = taxIdList;\n  });\n    // Get first organism chromosomes amount\n  var size = this._ideo.config.chromosomes[organisms[0]].length;\n    // Amount of chromosomes per number\n  var rowSize = size / this._config.rows;\n\n  var xOffset;\n  var yOffset;\n\n  if (setNumber > rowSize - 1) {\n    xOffset = this._margin.left + this._config.chrHeight * 1.4;\n    yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n  } else {\n    xOffset = this._margin.left;\n    yOffset = this.getChromosomeSetYTranslate(setNumber);\n  }\n\n  return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n};\n\nSmallLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation tracks\n  var additionalPadding = this._getAdditionalOffset();\n    // If no detailed description provided just use one formula for all cases\n  return (\n    this._margin.left * (setNumber) + this._config.chrWidth +\n    additionalPadding * 2 + additionalPadding * setNumber\n  );\n};\n\nSmallLayout.prototype.getChromosomeSetLabelXPosition = function(setNumber) {\n  return (\n    ((this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2) +\n    (this._config.ploidy > 1 ? 0 : this._config.chrWidth)\n  );\n};\n\nSmallLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function Ploidy(config) {\n  this._config = config;\n  this._description = this._normalize(this._config.ploidyDesc);\n}\n\n// Get number of chromosomes in a chromosome set\nPloidy.prototype.getChromosomesNumber = function(setNumber) {\n  if (this._config.ploidyDesc) {\n    var chrSetCode = this._config.ploidyDesc[setNumber];\n    if (chrSetCode instanceof Object) {\n      return Object.keys(chrSetCode)[0].length;\n    } else {\n      return chrSetCode.length;\n    }\n  } else {\n    return this._config.ploidy || 1;\n  }\n};\n\n// Normalize use defined description\nPloidy.prototype._normalize = function(description) {\n    // Return the same if no description provided\n  if (!description) {\n    return description;\n  }\n\n    // Array of normalized description objects\n  var normalized = [];\n\n     // Loop through description and normalize\n  for (var key in description) {\n    if (typeof description[key] === 'string') {\n      normalized.push({\n        ancestors: description[key],\n        existence: this._getexistenceArray(description[key].length)\n      });\n    } else {\n      normalized.push({\n        ancestors: Object.keys(description[key])[0],\n        existence: description[key][Object.keys(description[key])[0]]\n      });\n    }\n  }\n\n  return normalized;\n};\n\n// Get array filled by '11' elements\nPloidy.prototype._getexistenceArray = function(length) {\n  var array = [];\n\n  for (var i = 0; i < length; i++) {\n    array.push('11');\n  }\n\n  return array;\n};\n\nPloidy.prototype.getSetSize = function(chrSetNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors.length;\n  } else {\n    return 1;\n  }\n};\n\n// Get ancestor letter\nPloidy.prototype.getAncestor = function(chrSetNumber, chrNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors[chrNumber];\n  } else {\n    return '';\n  }\n};\n\n// Check if chromosome's arm should be rendered.\n// If no description was provided, method returns true and\n// something another depending on user provided description.\nPloidy.prototype.exists = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._description) {\n    var desc = this._description[chrSetNumber].existence[chrNumber][armNumber];\n    return Number(desc) > 0;\n  } else {\n    return true;\n  }\n};\n","function Color(config) {\n    // Ideogram config\n  this._config = config;\n  this._ploidy = new Ploidy(this._config);\n}\n\nColor.prototype.getArmColor = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._config.armColors) {\n    return this._config.armColors[armNumber];\n  } else if (this._config.ancestors) {\n    return this._getPolyploidArmColor(chrSetNumber, chrNumber, armNumber);\n  } else {\n    return null;\n  }\n};\n\nColor.prototype.getBorderColor = function(chrSetNumber, chrNumber, armNumber) {\n  if (chrNumber < this._config.ploidy) {\n    return '#000';\n  } else if (this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return '#000';\n  } else {\n    return '#fff';\n  }\n};\n\nColor.prototype._getPolyploidArmColor = function(chrSetNumber, chrNumber,\n  armNumber) {\n  if (!this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return 'transparent';\n  } else {\n    var ancestor = this._ploidy.getAncestor(chrSetNumber, chrNumber, armNumber);\n    return this._config.ancestors[ancestor];\n  }\n};\n","function Chromosome(adapter, config, ideo) {\n  this._adapter = adapter;\n  this._model = this._adapter.getModel();\n  this._config = config;\n  this._ideo = ideo;\n  this._color = new Color(this._config);\n  this._bumpCoefficient = 5;\n}\n\n// Factory method\nChromosome.getInstance = function(adapter, config, ideo) {\n  if (adapter.getModel().centromerePosition === 'telocentric') {\n    return new TelocentricChromosome(adapter, config, ideo);\n  } else {\n    return new MetacentricChromosome(adapter, config, ideo);\n  }\n};\n\nChromosome.prototype._addPArmShape = function(clipPath, isPArmRendered) {\n  if (isPArmRendered) {\n    return clipPath.concat(this._getPArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype._addQArmShape = function(clipPath, isQArmRendered) {\n  if (isQArmRendered) {\n    return clipPath.concat(this._getQArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype.render = function(container, chrSetNumber, chrNumber) {\n    // Append bands container and apply clip-path on it\n  container = container.append('g')\n    .attr('class', 'bands')\n    .attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n    // Render chromosome arms\n  var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n  var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n    // Render range set\n  this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n    // Push arms shape string into clipPath array\n  var clipPath = [];\n  clipPath = this._addPArmShape(clipPath, isPArmRendered);\n  clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n    // Render chromosome border\n  var self = this;\n  container.append('g')\n        .attr('class', 'chromosome-border')\n        .selectAll('path')\n        .data(clipPath)\n        .enter()\n        .append('path')\n        .attr('fill', 'transparent')\n        .attr('stroke', function(d, i) {\n          return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n        }).attr('stroke-width', 1)\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n\n  return clipPath;\n};\n\nChromosome.prototype._renderRangeSet = function(container, chrSetNumber,\n  chrNumber) {\n  if (!('rangeSet' in this._config)) {\n    return;\n  }\n\n  var rangeSet = this._config.rangeSet.filter(function(range) {\n    return range.chr - 1 === chrSetNumber;\n  }).map(function(range) {\n    return new Range(range);\n  });\n\n  var rangesContainer = container.append('g')\n        .attr('class', 'range-set');\n\n  var self = this;\n  var ideo = self._ideo;\n  var bandsXOffset = ideo._bandsXOffset;\n\n  rangesContainer.selectAll('rect.range')\n        .data(rangeSet)\n        .enter()\n        .append('rect')\n        .attr('class', 'range')\n        .attr('x', function(range) {\n          var startPx = ideo.convertBpToPx(self._model, range.getStart());\n          return startPx - bandsXOffset;\n        }).attr('y', 0)\n        .attr('width', function(range) {\n          var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n          return lengthPx - bandsXOffset;\n        }).attr('height', this._config.chrWidth)\n        .style('fill', function(range) {\n          return range.getColor(chrNumber);\n        });\n};\n\n// Get chromosome's shape main values\nChromosome.prototype._getShapeData = function() {\n    // First q band from bands sequence\n  var firstQBand;\n  for (var i = 0; i < this._model.bands.length; i++) {\n    if (this._model.bands[i].name[0] === 'q') {\n      firstQBand = this._model.bands[i];\n      break;\n    }\n  }\n\n  // Chromosome's right position\n  var lastBand = this._model.bands.length - 1;\n  var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n    // Properties description:\n    // x1 - left terminal start position\n    // x2 - centromere position\n    // x3 - right terminal end position\n    // w - chromosome width\n    // b - bump size\n  return {\n    x1: 0,\n    x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n    x3: rightTerminalPosition,\n    w: this._config.chrWidth,\n    b: this._config.chrWidth / this._bumpCoefficient\n  };\n};\n\nChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x2 - d.b;\n\n  return {\n    class: '',\n    path:\n      'M' + d.b + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + d.b + ',' + d.w + ' ' +\n      'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n  };\n};\n\nChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b;\n\n  return {\n    class: '',\n    path:\n      'M' + (d.x2 + d.b) + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + (d.x2 + d.b) + ',' + d.w + ' ' +\n      'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + (d.x2 + d.b) + ',0'\n  };\n};\n\n// Render arm bands\nChromosome.prototype._renderBands = function(container, chrSetNumber,\n  chrNumber, bands, arm) {\n  var self = this;\n  var armNumber = arm === 'p' ? 0 : 1;\n  var fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n\n  container.selectAll(\"path.band.\" + arm)\n    .data(bands)\n    .enter()\n    .append(\"path\")\n    .attr(\"id\", function(d) {\n      return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n    })\n    .attr(\"class\", function(d) {\n      return 'band ' + arm + '-band ' + d.stain;\n    })\n    .attr(\"d\", function(d) {\n      var start = self._ideo.round(d.px.start);\n      var length = self._ideo.round(d.px.width);\n\n      x = start + length;\n\n      return \"M \" + start + \", 0\" +\n            \"l \" + length + \" 0 \" +\n            \"l 0 \" + self._config.chrWidth + \" \" +\n            \"l -\" + length + \" 0 z\";\n    })\n    .style('fill', fill);\n};\n\n// Render chromosome's p arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderPArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'p';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n  return Boolean(bands.length);\n};\n\n// Render chromosome's q arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderQArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'q';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n  return Boolean(bands.length);\n};\n","function TelocentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'TelocentricChromosome';\n  this._pArmOffset = 3;\n}\n\nTelocentricChromosome.prototype = Object.create(Chromosome.prototype);\n\nTelocentricChromosome.prototype._addPArmShape = function(clipPath) {\n  return clipPath.concat(this._getPArmShape());\n};\n\nTelocentricChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData();\n  d.o = this._pArmOffset;\n\n  return [{\n    class: 'acen',\n    path: 'M' + d.x2 + ',1' +\n            'L' + (d.x2 - d.o) + ',1 ' +\n            'L' + (d.x2 - d.o) + ',' + (d.w - 1) + ' ' +\n            'L' + d.x2 + ',' + (d.w - 1)\n  }, {\n    class: 'gpos100',\n    path: 'M' + (d.x2 - d.o + 1) + ',0' +\n        'L' + (d.x2 - d.o) + ',0 ' +\n        'L' + (d.x2 - d.o) + ',' + d.w + ' ' +\n        'L' + (d.x2 - d.o + 1) + ',' + d.w\n  }];\n};\n\nTelocentricChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b;\n\n  return {\n    class: '',\n    path:\n      'M' + d.x2 + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + d.x2 + ',' + d.w\n  };\n};\n","function MetacentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'MetacentricChromosome';\n}\n\nMetacentricChromosome.prototype = Object.create(Chromosome.prototype);\n","// https://github.com/stefanpenner/es6-promise\n(function(){\"use strict\";function t(t){return\"function\"==typeof t||\"object\"==typeof t&&null!==t}function e(t){return\"function\"==typeof t}function n(t){G=t}function r(t){Q=t}function o(){return function(){process.nextTick(a)}}function i(){return function(){B(a)}}function s(){var t=0,e=new X(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){t.port2.postMessage(0)}}function c(){return function(){setTimeout(a,1)}}function a(){for(var t=0;J>t;t+=2){var e=tt[t],n=tt[t+1];e(n),tt[t]=void 0,tt[t+1]=void 0}J=0}function f(){try{var t=require,e=t(\"vertx\");return B=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[rt]&&k(r);var o=n._state;if(o){var i=arguments[o-1];Q(function(){x(o,r,i,n._result)})}else E(n,r,t,e);return r}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function _(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function v(t){try{return t.then}catch(e){return ut.error=e,ut}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){Q(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===it?S(t,e._result):e._state===st?j(t,e._result):E(e,void 0,function(e){g(t,e)},function(e){j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===et&&constructor.resolve===nt?b(t,n):r===ut?j(t,ut.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,_()):t(n)?w(e,n,v(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===ot&&(t._result=e,t._state=it,0!==t._subscribers.length&&Q(T,t))}function j(t,e){t._state===ot&&(t._state=st,t._result=e,Q(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+it]=n,o[i+st]=r,0===i&&t._state&&Q(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r,o,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return ct.error=n,ct}}function x(t,n,r,o){var i,s,u,c,a=e(r);if(a){if(i=P(r,o),i===ct?(c=!0,s=i.error,i=null):u=!0,n===i)return void j(n,d())}else i=o,u=!0;n._state!==ot||(a&&u?g(n,i):c?j(n,s):t===it?S(n,i):t===st&&j(n,i))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return at++}function k(t){t[rt]=at++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t){return new _t(this,t).promise}function q(t){var e=this;return new e(I(t)?function(n,r){for(var o=t.length,i=0;o>i;i++)e.resolve(t[i]).then(n,r)}:function(t,e){e(new TypeError(\"You must pass an array to race.\"))})}function F(t){var e=this,n=new e(p);return j(n,t),n}function D(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function K(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function L(t){this[rt]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&D(),this instanceof L?C(this,t):K())}function N(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[rt]||k(this.promise),I(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,U())}function U(){return new Error(\"Array Methods must be provided an Array\")}function W(){var t;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;(!n||\"[object Promise]\"!==Object.prototype.toString.call(n.resolve())||n.cast)&&(t.Promise=pt)}var z;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B,G,H,I=z,J=0,Q=function(t,e){tt[J]=t,tt[J+1]=e,J+=2,2===J&&(G?G(a):H())},R=\"undefined\"!=typeof window?window:void 0,V=R||{},X=V.MutationObserver||V.WebKitMutationObserver,Z=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),$=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,tt=new Array(1e3);H=Z?o():X?s():$?u():void 0===R&&\"function\"==typeof require?f():c();var et=l,nt=h,rt=Math.random().toString(36).substring(16),ot=void 0,it=1,st=2,ut=new M,ct=new M,at=0,ft=Y,lt=q,ht=F,pt=L;L.all=ft,L.race=lt,L.resolve=nt,L.reject=ht,L._setScheduler=n,L._setAsap=r,L._asap=Q,L.prototype={constructor:L,then:et,\"catch\":function(t){return this.then(null,t)}};var _t=N;N.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===ot&&t>n;n++)this._eachEntry(e[n],n)},N.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===nt){var o=v(t);if(o===et&&t._state!==ot)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===pt){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){e(t)}),e)}else this._willSettleAt(r(t),e)},N.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===ot&&(this._remaining--,t===st?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},N.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){n._settledAt(it,e,t)},function(t){n._settledAt(st,e,t)})};var dt=W,vt={Promise:pt,polyfill:dt};\"function\"==typeof define&&define.amd?define(function(){return vt}):\"undefined\"!=typeof module&&module.exports?module.exports=vt:\"undefined\"!=typeof this&&(this.ES6Promise=vt),dt()}).call(this);\n\n// https://github.com/kristw/d3.promise\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"d3\"],b):\"object\"==typeof exports?module.exports=b(require(\"d3\")):a.d3.promise=b(a.d3)}(this,function(a){var b=function(){function b(a,b){return function(){var c=Array.prototype.slice.call(arguments);return new Promise(function(d,e){var f=function(a,b){return a?void e(Error(a)):void d(b)};b.apply(a,c.concat(f))})}}var c={};return[\"csv\",\"tsv\",\"json\",\"xml\",\"text\",\"html\",\"get\"].forEach(function(d){c[d]=b(a,a[d])}),c}();return a.promise=b,b});\n\n// https://github.com/overset/javascript-natural-sort\nfunction naturalSort(a,b){var q,r,c=/(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,d=/^\\s+|\\s+$/g,e=/\\s+/g,f=/(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,g=/^0x[0-9a-f]+$/i,h=/^0/,i=function(a){return(naturalSort.insensitive&&(\"\"+a).toLowerCase()||\"\"+a).replace(d,\"\")},j=i(a),k=i(b),l=j.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),m=k.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),n=parseInt(j.match(g),16)||1!==l.length&&Date.parse(j),o=parseInt(k.match(g),16)||n&&k.match(f)&&Date.parse(k)||null,p=function(a,b){return(!a.match(h)||1==b)&&parseFloat(a)||a.replace(e,\" \").replace(d,\"\")||0};if(o){if(n<o)return-1;if(n>o)return 1}for(var s=0,t=l.length,u=m.length,v=Math.max(t,u);s<v;s++){if(q=p(l[s]||\"\",t),r=p(m[s]||\"\",u),isNaN(q)!==isNaN(r))return isNaN(q)?1:-1;if(/[^\\x00-\\x80]/.test(q+r)&&q.localeCompare){var w=q.localeCompare(r);return w/Math.abs(w)}if(q<r)return-1;if(q>r)return 1}}\n\n// e.g. \"Homo sapiens\" -> \"homo-sapiens\"\nfunction slugify(value){return value.toLowerCase().replace(' ', '-')};\n","// Chromosome's view utility class\nfunction ChromosomeUtil(node) {\n  this._node = node;\n}\n\nChromosomeUtil.prototype.getLabel = function() {\n  var label =\n    d3\n      .select(this._node)\n      .select('text.chrLabel')\n      .text();\n  return label;\n};\n\n// Get chromosome set label\nChromosomeUtil.prototype.getSetLabel = function() {\n  var setLabel =\n    d3\n      .select(this._node.parentNode)\n      .select('text.chromosome-set-label')\n      .text();\n  return setLabel;\n};\n","// Developed by Eric Weitz (https://github.com/eweitz)\n\n/* Constructs a prototypal Ideogram class */\nvar Ideogram = function(config) {\n  var orientation,\n    chrWidth, chrHeight,\n    container, rect;\n\n  // Clone the config object, to allow multiple instantiations\n  // without picking up prior ideogram's settings\n  this.config = JSON.parse(JSON.stringify(config));\n\n  // Organism ploidy description\n  this._ploidy = new Ploidy(this.config);\n\n  // Chromosome's layout\n  this._layout = Layout.getInstance(this.config, this);\n\n  // TODO: Document this\n  this._bandsXOffset = 30;\n\n  this.debug = false;\n\n  if (!this.config.dataDir) {\n    this.config.dataDir = \"../data/bands/native/\";\n  }\n\n  if (!this.config.ploidy) {\n    this.config.ploidy = 1;\n  }\n\n  if (!this.config.container) {\n    this.config.container = \"body\";\n  }\n\n  if (!this.config.resolution) {\n    this.config.resolution = 850;\n  }\n\n  if (\"showChromosomeLabels\" in this.config === false) {\n    this.config.showChromosomeLabels = true;\n  }\n\n  if (!this.config.chrMargin) {\n    this.config.chrMargin = 10;\n  }\n\n  if (!this.config.orientation) {\n    orientation = \"vertical\";\n    this.config.orientation = orientation;\n  }\n\n  if (!this.config.chrHeight) {\n    container = this.config.container;\n    rect = document.querySelector(container).getBoundingClientRect();\n\n    if (orientation === \"vertical\") {\n      chrHeight = rect.height;\n    } else {\n      chrHeight = rect.width;\n    }\n\n    if (container === \"body\") {\n      chrHeight = 500;\n    }\n    this.config.chrHeight = chrHeight;\n  }\n\n  if (!this.config.chrWidth) {\n    chrWidth = 10;\n    chrHeight = this.config.chrHeight;\n\n    if (chrHeight < 900 && chrHeight > 500) {\n      chrWidth = Math.round(chrHeight / 40);\n    } else if (chrHeight >= 900) {\n      chrWidth = Math.round(chrHeight / 45);\n    }\n    this.config.chrWidth = chrWidth;\n  }\n\n  if (!this.config.showBandLabels) {\n    this.config.showBandLabels = false;\n  }\n\n  if (!this.config.brush) {\n    this.config.brush = false;\n  }\n\n  if (!this.config.rows) {\n    this.config.rows = 1;\n  }\n\n  this.bump = Math.round(this.config.chrHeight / 125);\n  this.adjustedBump = false;\n  if (this.config.chrHeight < 200) {\n    this.adjustedBump = true;\n    this.bump = 4;\n  }\n\n  if (config.showBandLabels) {\n    this.config.chrMargin += 20;\n  }\n\n  if (config.chromosome) {\n    this.config.chromosomes = [config.chromosome];\n    if (\"showBandLabels\" in config === false) {\n      this.config.showBandLabels = true;\n    }\n    if (\"rotatable\" in config === false) {\n      this.config.rotatable = false;\n    }\n  }\n\n  if (!this.config.showNonNuclearChromosomes) {\n    this.config.showNonNuclearChromosomes = false;\n  }\n\n  this.initAnnotSettings();\n\n  this.config.chrMargin = (\n    this.config.chrMargin +\n    this.config.chrWidth +\n    this.config.annotTracksHeight * 2\n  );\n\n  if (config.onLoad) {\n    this.onLoadCallback = config.onLoad;\n  }\n\n  if (config.onDrawAnnots) {\n    this.onDrawAnnotsCallback = config.onDrawAnnots;\n  }\n\n  if (config.onBrushMove) {\n    this.onBrushMoveCallback = config.onBrushMove;\n  }\n\n  this.coordinateSystem = \"iscn\";\n\n  this.maxLength = {\n    bp: 0,\n    iscn: 0\n  };\n\n  // The E-Utilies In Depth: Parameters, Syntax and More:\n  // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n  this.eutils = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/\";\n  this.esearch = this.eutils + \"esearch.fcgi?retmode=json\";\n  this.esummary = this.eutils + \"esummary.fcgi?retmode=json\";\n  this.elink = this.eutils + \"elink.fcgi?retmode=json\";\n\n  this.organisms = {\n    9606: {\n      commonName: \"Human\",\n      scientificName: \"Homo sapiens\",\n      scientificNameAbbr: \"H. sapiens\",\n      assemblies: {\n        default: \"GCF_000001405.26\", // GRCh38\n        GRCh38: \"GCF_000001405.26\",\n        GRCh37: \"GCF_000001405.13\"\n      }\n    },\n    10090: {\n      commonName: \"Mouse\",\n      scientificName: \"Mus musculus\",\n      scientificNameAbbr: \"M. musculus\",\n      assemblies: {\n        default: \"GCF_000001635.20\"\n      }\n    },\n    4641: {\n      commonName: \"banana\",\n      scientificName: \"Musa acuminata\",\n      scientificNameAbbr: \"M. acuminata\",\n      assemblies: {\n        default: \"mock\"\n      }\n    }\n  };\n\n  // A flat array of chromosomes\n  // (this.chromosomes is an object of\n  // arrays of chromosomes, keyed by organism)\n  this.chromosomesArray = [];\n\n  this.bandsToShow = [];\n\n  this.chromosomes = {};\n  this.numChromosomes = 0;\n  this.bandData = {};\n\n  this.init();\n};\n\n/**\n* Gets chromosome band data from a\n* TSV file, or, if band data is prefetched, from an array\n*\n* UCSC: #chrom chromStart  chromEnd  name  gieStain\n* http://genome.ucsc.edu/cgi-bin/hgTables\n*  - group: Mapping and Sequencing\n*  - track: Chromosome Band (Ideogram)\n*\n* NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n* ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n*/\nIdeogram.prototype.getBands = function(content, taxid, chromosomes) {\n  var lines = {},\n    delimiter, tsvLines, columns, line, stain, chr,\n    i, init, tsvLinesLength, source,\n    start, stop, firstColumn, tmp;\n\n  if (content.slice(0, 8) === \"chrBands\") {\n    source = \"native\";\n  }\n\n  if (typeof chromosomes === \"object\") {\n    tmp = [];\n    for (i = 0; i < chromosomes.length; i++) {\n      tmp.push(chromosomes[i].name)\n    }\n    chromosomes = tmp;\n  }\n\n  if (typeof chrBands === \"undefined\" && source !== \"native\") {\n    delimiter = /\\t/;\n    tsvLines = content.split(/\\r\\n|\\n/);\n    init = 1;\n  } else {\n    delimiter = / /;\n    if (source === \"native\") {\n      tsvLines = eval(content);\n    } else {\n      tsvLines = content;\n    }\n    init = 0;\n  }\n\n  firstColumn = tsvLines[0].split(delimiter)[0];\n  if (firstColumn === '#chromosome') {\n    source = 'ncbi';\n  } else if (firstColumn === '#chrom') {\n    source = 'ucsc';\n  } else {\n    source = 'native';\n  }\n\n  tsvLinesLength = tsvLines.length;\n\n  if (source === 'ncbi' || source === 'native') {\n    for (i = init; i < tsvLinesLength; i++) {\n      columns = tsvLines[i].split(delimiter);\n\n      chr = columns[0];\n\n      if (\n        // If a specific set of chromosomes has been requested, and\n        // the current chromosome\n        typeof (chromosomes) !== \"undefined\" &&\n        chromosomes.indexOf(chr) === -1\n      ) {\n        continue;\n      }\n\n      if (chr in lines === false) {\n        lines[chr] = [];\n      }\n\n      stain = columns[7];\n      if (columns[8]) {\n        // For e.g. acen and gvar, columns[8] (density) is undefined\n        stain += columns[8];\n      }\n\n      line = {\n        chr: chr,\n        bp: {\n          start: parseInt(columns[5], 10),\n          stop: parseInt(columns[6], 10)\n        },\n        iscn: {\n          start: parseInt(columns[3], 10),\n          stop: parseInt(columns[4], 10)\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[1] + columns[2],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  } else if (source === 'ucsc') {\n    for (i = init; i < tsvLinesLength; i++) {\n      // #chrom chromStart  chromEnd  name  gieStain\n      // e.g. for fly:\n      // chr4\t69508\t108296\t102A1\tn/a\n      columns = tsvLines[i].split(delimiter);\n\n      if (columns[0] !== 'chr' + chromosomeName) {\n        continue;\n      }\n\n      stain = columns[4];\n      if (stain === 'n/a') {\n        stain = 'gpos100';\n      }\n      start = parseInt(columns[1], 10);\n      stop = parseInt(columns[2], 10);\n\n      line = {\n        chr: columns[0].split('chr')[1],\n        bp: {\n          start: start,\n          stop: stop\n        },\n        iscn: {\n          start: start,\n          stop: stop\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[3],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  }\n\n  return lines;\n};\n\n/**\n* Generates a model object for each chromosome\n* containing information on its name, DOM ID,\n* length in base pairs or ISCN coordinates,\n* cytogenetic bands, centromere position, etc.\n*/\nIdeogram.prototype.getChromosomeModel = function(bands, chromosome, taxid,\n  chrIndex) {\n  var chr = {},\n    band,\n    width, pxStop,\n    chrHeight = this.config.chrHeight,\n    maxLength = this.maxLength,\n    chrLength,\n    cs, hasBands;\n\n  cs = this.coordinateSystem;\n  hasBands = (typeof bands !== \"undefined\");\n\n  if (hasBands) {\n    chr.name = chromosome;\n    chr.length = bands[bands.length - 1][cs].stop;\n    chr.type = \"nuclear\";\n  } else {\n    chr = chromosome;\n  }\n\n  chr.chrIndex = chrIndex;\n\n  chr.id = \"chr\" + chr.name + \"-\" + taxid;\n\n  if (this.config.fullChromosomeLabels === true) {\n    var orgName = this.organisms[taxid].scientificNameAbbr;\n    chr.name = orgName + \" chr\" + chr.name;\n  }\n\n  chrLength = chr.length;\n\n  pxStop = 0;\n\n  if (hasBands) {\n    for (var i = 0; i < bands.length; i++) {\n      band = bands[i];\n      var csLength = band[cs].stop - band[cs].start;\n      width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n      bands[i].px = {start: pxStop, stop: pxStop + width, width: width};\n\n      pxStop = bands[i].px.stop;\n\n      if (hasBands && band.stain === \"acen\" && band.name[0] === \"p\") {\n        chr.pcenIndex = i;\n      }\n    }\n  } else {\n    pxStop = chrHeight * chr.length / maxLength[cs];\n  }\n\n  chr.width = pxStop;\n\n  chr.scale = {};\n\n  // TODO:\n  //\n  // A chromosome-level scale property is likely\n  // nonsensical for any chromosomes that have cytogenetic band data.\n  // Different bands tend to have ratios between number of base pairs\n  // and physical length.\n  //\n  // However, a chromosome-level scale property is likely\n  // necessary for chromosomes that do not have band data.\n  //\n  // This needs further review.\n  if (this.config.multiorganism === true) {\n    chr.scale.bp = 1;\n    // chr.scale.bp = band.iscn.stop / band.bp.stop;\n    chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n  } else {\n    chr.scale.bp = chrHeight / maxLength.bp;\n    if (hasBands) {\n      chr.scale.iscn = chrHeight / maxLength.iscn;\n    }\n  }\n  chr.bands = bands;\n\n  chr.centromerePosition = \"\";\n  if (hasBands && bands[0].name[0] === 'p' && bands[1].name[0] == 'q' && bands[0].bp.stop - bands[0].bp.start < 2E6) {\n    // As with almost all mouse chromosome, chimpanzee chr22\n    chr.centromerePosition = \"telocentric\";\n\n    // Remove placeholder pter band\n    chr.bands = chr.bands.slice(1);\n  }\n\n  if (hasBands && chr.bands.length === 1) {\n    // Encountered when processing an assembly that has chromosomes with\n    // centromere data, but this chromosome does not.\n    // Example: chromosome F1 in Felis catus.\n    delete chr.bands;\n  }\n\n  return chr;\n};\n\n/**\n* Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n* If ideogram configuration has 'fullChromosomeLabels: True',\n* then labels includes name of taxon, which can help when\n* depicting orthologs.\n*/\nIdeogram.prototype.drawChromosomeLabels = function() {\n  var ideo = this;\n\n  var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n  var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n  var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes set's labels\n  d3.selectAll(\".chromosome-set-container\")\n        .append(\"text\")\n        .data(ideo.chromosomesArray)\n        .attr(\"class\", 'chromosome-set-label ' + chromosomeLabelClass)\n        .attr(\"transform\", chrSetLabelTranslate)\n        .attr(\"x\", chrSetLabelXPosition)\n        .attr(\"y\", function(d, i) {\n          return ideo._layout.getChromosomeSetLabelYPosition(i);\n        })\n        .attr(\"text-anchor\", ideo._layout.getChromosomeSetLabelAnchor())\n        .each(function(d) {\n            // Get label lines\n          var lines;\n          if (d.name.indexOf(' ') === -1) {\n            lines = [d.name];\n          } else {\n            lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n          }\n\n          // Render label lines\n          d3.select(this).selectAll('tspan')\n            .data(lines)\n            .enter()\n            .append('tspan')\n            .attr('dy', function(d, i) {\n              return i * -1.2 + 'em';\n            })\n            .attr('x', ideo._layout.getChromosomeSetLabelXPosition())\n            .attr('class', function(a, i) {\n              var fullLabels = ideo.config.fullChromosomeLabels;\n              return i === 1 && fullLabels ? 'italic' : null;\n            }).text(String);\n        });\n\n  var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes labels\n  d3.selectAll(\".chromosome-set-container\")\n        .each(function(a, chrSetNumber) {\n          d3.select(this).selectAll(\".chromosome\")\n                .append(\"text\")\n                .attr(\"class\", \"chrLabel\")\n                .attr(\"transform\", setLabelTranslate)\n                .attr(\"x\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelXPosition(i);\n                }).attr(\"y\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelYPosition(i);\n                }).text(function(d, chrNumber) {\n                  return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n                }).attr(\"text-anchor\", \"middle\");\n        });\n};\n\n/**\n* Draws labels and stalks for cytogenetic bands.\n*\n* Band labels are text like \"p11.11\".\n* Stalks are small lines that visually connect labels to their bands.\n*/\nIdeogram.prototype.drawBandLabels = function(chromosomes) {\n  var i, chr, chrs, taxid, ideo, chrModel;\n\n  ideo = this;\n\n  chrs = [];\n\n  for (taxid in chromosomes) {\n    for (chr in chromosomes[taxid]) {\n      chrs.push(chromosomes[taxid][chr]);\n    }\n  }\n\n  var textOffsets = {};\n\n  chrIndex = 0;\n  for (i = 0; i < chrs.length; i++) {\n    chrIndex += 1;\n\n    chrModel = chrs[i];\n\n    chr = d3.select(\"#\" + chrModel.id);\n\n    // var chrMargin = this.config.chrMargin * chrIndex,\n    //   lineY1, lineY2;\n    //\n    // lineY1 = chrMargin;\n    // lineY2 = chrMargin - 8;\n    //\n    // if (\n    //   chrIndex === 1 &&\n    //   \"perspective\" in this.config && this.config.perspective === \"comparative\"\n    // ) {\n    //   lineY1 += 18;\n    //   lineY2 += 18;\n    // }\n\n    textOffsets[chrModel.id] = [];\n\n    chr.selectAll(\"text\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n        .attr(\"class\", function(d, i) {\n          return \"bandLabel bsbsl-\" + i;\n        })\n        .attr(\"transform\", function(d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          // var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        })\n        .append(\"text\")\n        .attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i))\n        .text(function(d) {\n          return d.name;\n        });\n\n    // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n    // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n    chr.selectAll(\"line.bandLabelStalk\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", function(d, i) {\n        return \"bandLabelStalk bsbsl-\" + i;\n      })\n      .attr(\"transform\", function(d) {\n        var x, y;\n\n        x = ideo.round(d.px.start + d.px.width / 2);\n\n        textOffsets[chrModel.id].push(x + 13);\n        y = -10;\n\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n        .append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", function() {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        }).attr(\"x2\", 0)\n        .attr(\"y2\", function() {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n  }\n\n  for (i = 0; i < chrs.length; i++) {\n    chrModel = chrs[i];\n\n    var textsLength = textOffsets[chrModel.id].length,\n      overlappingLabelXRight,\n      index,\n      indexesToShow = [],\n      prevHiddenBoxIndex,\n      xLeft,\n      prevLabelXRight,\n      textPadding;\n\n    overlappingLabelXRight = 0;\n\n    textPadding = 5;\n\n    for (index = 0; index < textsLength; index++) {\n      // Ensures band labels don't overlap\n\n      xLeft = textOffsets[chrModel.id][index];\n\n      if (xLeft < overlappingLabelXRight + textPadding === false) {\n        indexesToShow.push(index);\n      } else {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n        continue;\n      }\n\n      if (prevHiddenBoxIndex !== index) {\n        // This getBoundingClientRect() forces Chrome's\n        // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n        // TODO: This forced synchronous layout would be nice to eliminate.\n        // prevTextBox = texts[index].getBoundingClientRect();\n        // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n        // TODO: Account for number of characters in prevTextBoxWidth,\n        // maybe also zoom.\n        prevTextBoxLeft = textOffsets[chrModel.id][index];\n        prevTextBoxWidth = 36;\n\n        prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n      }\n\n      if (\n        xLeft < prevLabelXRight + textPadding\n      ) {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n      } else {\n        indexesToShow.push(index);\n      }\n    }\n\n    var selectorsToShow = [],\n      ithLength = indexesToShow.length,\n      j;\n\n    for (j = 0; j < ithLength; j++) {\n      index = indexesToShow[j];\n      selectorsToShow.push(\"#\" + chrModel.id + \" .bsbsl-\" + index);\n    }\n\n    this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n  }\n};\n\n// Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\nIdeogram.prototype.rotateChromosomeLabels = function(chr, chrIndex,\n  orientation, scale) {\n  var chrMargin, chrWidth, ideo, x, y,\n    numAnnotTracks, scaleSvg, tracksHeight;\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n  numAnnotTracks = this.config.numAnnotTracks;\n\n  ideo = this;\n\n  if (\n    typeof (scale) !== \"undefined\" &&\n    scale.hasOwnProperty(\"x\") &&\n    !(scale.x === 1 && scale.y === 1)\n  ) {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n    x = -6;\n    y = (scale === \"\" ? -16 : -14);\n  } else {\n    x = -8;\n    y = -16;\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  }\n\n  if (orientation === \"vertical\" || orientation === \"\") {\n    var ci = chrIndex - 1;\n\n    if (numAnnotTracks > 1 || orientation === \"\") {\n      ci -= 1;\n    }\n\n    chrMargin2 = -4;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n    }\n\n    chrMargin = ideo.config.chrMargin * ci;\n\n    if (numAnnotTracks > 1 === false) {\n      chrMargin += 1;\n    }\n\n    y = chrMargin + chrMargin2;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", scaleSvg)\n      .selectAll(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y);\n  } else {\n    chrIndex -= 1;\n\n    chrMargin2 = -chrWidth - 2;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + 8;\n    }\n\n    tracksHeight = ideo.config.annotTracksHeight;\n    if (ideo.config.annotationsLayout !== \"overlay\") {\n      tracksHeight *= 2;\n    }\n\n    chrMargin = ideo.config.chrMargin * chrIndex;\n    x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n    x /= scale.x;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", \"rotate(-90)\" + scaleSvg)\n      .selectAll(\"tspan\")\n      .attr(\"x\", x)\n      .attr(\"y\", y);\n  }\n};\n\n/**\n* Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n*\n* This method includes proportional scaling, which ensures that\n* while the parent chromosome group is scaled strongly in one dimension to fill\n* available space, the text in the chromosome's band labels is\n* not similarly distorted, and remains readable.\n*/\nIdeogram.prototype.rotateBandLabels = function(chr, chrIndex, scale) {\n  var chrMargin, scaleSvg,\n    orientation, bandLabels,\n    ideo = this;\n\n  bandLabels = chr.selectAll(\".bandLabel\");\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n\n  orientation = chr.attr(\"data-orientation\");\n\n  if (typeof (scale) === \"undefined\") {\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  } else {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n  }\n\n  if (\n    chrIndex === 1 &&\n    \"perspective\" in this.config && this.config.perspective === \"comparative\"\n  ) {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = (8 - chrMargin) - 26;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"text-anchor\", \"end\");\n  } else if (orientation === \"vertical\") {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = 8 - chrMargin;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n  } else {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n        y = chrMargin - 10;\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n\n    chr.selectAll(\".bandLabelStalk line\")\n      .attr(\"transform\", scaleSvg);\n  }\n};\n\nIdeogram.prototype.round = function(coord) {\n  // Rounds an SVG coordinates to two decimal places\n  // e.g. 42.1234567890 -> 42.12\n  // Per http://stackoverflow.com/a/9453447, below method is fastest\n  return Math.round(coord * 100) / 100;\n};\n\n/**\n* Renders all the bands and outlining boundaries of a chromosome.\n*/\nIdeogram.prototype.drawChromosome = function(chrModel, chrIndex, container, k) {\n    // Get chromosome model adapter class\n  var adapter = ModelAdapter.getInstance(chrModel);\n\n    // Append chromosome's container\n  var chromosome = container\n        .append(\"g\")\n        .attr(\"id\", chrModel.id)\n        .attr(\"class\", \"chromosome \" + adapter.getCssClass())\n        .attr(\"transform\", \"translate(0, \" + k * 20 + \")\");\n\n    // Render chromosome\n  return Chromosome.getInstance(adapter, this.config, this)\n        .render(chromosome, chrIndex, k);\n};\n\n/**\n* Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n* Useful for focusing or defocusing a particular chromosome\n*/\nIdeogram.prototype.rotateAndToggleDisplay = function(chromosome) {\n  /*\n   * Do nothing if taxId not defined. But it should be defined.\n   * To fix that bug we should have a way to find chromosome set number.\n   */\n  if (!this.config.taxid) {\n    return;\n  }\n\n  var chrSetNumber =\n    Number(d3.select(chromosome.parentNode).attr('data-set-number'));\n\n  var chrNumber = Array.prototype.slice.call(\n          d3.select(chromosome.parentNode).selectAll(\"g.chromosome\")._groups[0]\n      ).indexOf(chromosome);\n\n  return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertBpToPx = function(chr, bp) {\n  var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart,\n    iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    offset = this._bandsXOffset;\n    bpStart = band.bp.start;\n    bpStop = band.bp.stop;\n    bpLength = bpStop - bpStart;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n    iscnLength = iscnStop - iscnStart;\n    pxStart = band.px.start;\n    pxLength = band.px.width;\n\n    if (bp >= bpStart && bp <= bpStop) {\n      bpToIscnScale = iscnLength / bpLength;\n      iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n      px = offset + pxStart + (pxLength * (iscn - iscnStart) / (iscnLength));\n\n      return px;\n    }\n  }\n\n  throw new Error(\n    \"Base pair out of range.  \" +\n    \"bp: \" + bp + \"; length of chr\" + chr.name + \": \" + band.bp.stop\n  );\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertPxToBp = function(chr, px) {\n  var i, band, pxToIscnScale, iscn,\n    pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    pxStart = band.px.start;\n    pxStop = band.px.stop;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n\n    if (px >= pxStart && px <= pxStop) {\n      iscnLength = iscnStop - iscnStart;\n      pxLength = pxStop - pxStart;\n      bpLength = band.bp.stop - band.bp.start;\n\n      pxToIscnScale = iscnLength / pxLength;\n      iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n      bp = band.bp.start + (bpLength * (iscn - iscnStart) / iscnLength);\n\n      return Math.round(bp);\n    }\n  }\n\n  throw new Error(\n    \"Pixel out of range.  \" +\n    \"px: \" + bp + \"; length of chr\" + chr.name + \": \" + pxStop\n  );\n};\n\n/**\n* Draws a trapezoid connecting a genomic range on\n* one chromosome to a genomic range on another chromosome;\n* a syntenic region.\n*/\nIdeogram.prototype.drawSynteny = function(syntenicRegions) {\n  var t0 = new Date().getTime();\n\n  var r1, r2,\n    syntenies,\n    i, color, opacity,\n    regionID,\n    ideo = this;\n\n  syntenies = d3.select(\"svg\")\n    .insert(\"g\", \":first-child\")\n    .attr(\"class\", \"synteny\");\n\n  for (i = 0; i < syntenicRegions.length; i++) {\n    regions = syntenicRegions[i];\n\n    r1 = regions.r1;\n    r2 = regions.r2;\n\n    color = \"#CFC\";\n    if (\"color\" in regions) {\n      color = regions.color;\n    }\n\n    opacity = 1;\n    if (\"opacity\" in regions) {\n      opacity = regions.opacity;\n    }\n\n    r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n    r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n    r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n    r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n    regionID = (\n      r1.chr.id + \"_\" + r1.start + \"_\" + r1.stop + \"_\" +\n      \"__\" +\n      r2.chr.id + \"_\" + r2.start + \"_\" + r2.stop\n    );\n\n    syntenicRegion = syntenies.append(\"g\")\n      .attr(\"class\", \"syntenicRegion\")\n      .attr(\"id\", regionID)\n      .on(\"click\", function() {\n        var activeRegion = this;\n        var others = d3.selectAll(\".syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          });\n\n        others.classed(\"hidden\", !others.classed(\"hidden\"));\n      })\n      .on(\"mouseover\", function() {\n        var activeRegion = this;\n        d3.selectAll(\".syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          })\n          .classed(\"ghost\", true);\n      })\n      .on(\"mouseout\", function() {\n        d3.selectAll(\".syntenicRegion\").classed(\"ghost\", false);\n      });\n\n    var x1 = this._layout.getChromosomeSetYTranslate(0);\n    var x2 = this._layout.getChromosomeSetYTranslate(1) - ideo.config.chrWidth;\n\n    syntenicRegion.append(\"polygon\")\n      .attr(\"points\",\n        x1 + ', ' + r1.startPx + ' ' +\n        x1 + ', ' + r1.stopPx + ' ' +\n        x2 + ', ' + r2.stopPx + ' ' +\n        x2 + ', ' + r2.startPx\n      )\n      .attr('style', \"fill: \" + color + \"; fill-opacity: \" + opacity);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.startPx)\n      .attr(\"y2\", r2.startPx);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.stopPx)\n      .attr(\"y2\", r2.stopPx);\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in drawSyntenicRegions: \" + (t1 - t0) + \" ms\");\n  }\n};\n\n/**\n* Initializes various annotation settings.  Constructor help function.\n*/\nIdeogram.prototype.initAnnotSettings = function() {\n  if (this.config.annotationsPath || this.config.localAnnotationsPath ||\n    this.annots || this.config.annotations) {\n    if (!this.config.annotationHeight) {\n      var annotHeight = Math.round(this.config.chrHeight / 100);\n      this.config.annotationHeight = annotHeight;\n    }\n\n    if (this.config.annotationTracks) {\n      this.config.numAnnotTracks = this.config.annotationTracks.length;\n    } else {\n      this.config.numAnnotTracks = 1;\n    }\n    this.config.annotTracksHeight =\n      this.config.annotationHeight * this.config.numAnnotTracks;\n\n    if (typeof this.config.barWidth === \"undefined\") {\n      this.config.barWidth = 3;\n    }\n  } else {\n    this.config.annotTracksHeight = 0;\n  }\n\n  if (typeof this.config.annotationsColor === \"undefined\") {\n    this.config.annotationsColor = \"#F00\";\n  }\n};\n\n/**\n* Draws annotations defined by user\n*/\nIdeogram.prototype.drawAnnots = function(friendlyAnnots) {\n  var ideo = this,\n    i, j, annot,\n    rawAnnots = [],\n    rawAnnot, keys,\n    chr,\n    chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n  // Occurs when filtering\n  if (\"annots\" in friendlyAnnots[0]) {\n    return ideo.drawProcessedAnnots(friendlyAnnots);\n  }\n\n  for (chr in chrs) {\n    rawAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < friendlyAnnots.length; i++) {\n    annot = friendlyAnnots[i];\n\n    for (j = 0; j < rawAnnots.length; j++) {\n      if (annot.chr === rawAnnots[j].chr) {\n        rawAnnot = [\n          annot.name,\n          annot.start,\n          annot.stop - annot.start\n        ];\n        if (\"color\" in annot) {\n          rawAnnot.push(annot.color);\n        }\n        if (\"shape\" in annot) {\n          rawAnnot.push(annot.shape);\n        }\n        rawAnnots[j].annots.push(rawAnnot);\n        break;\n      }\n    }\n  }\n\n  keys = [\"name\", \"start\", \"length\"];\n  if (\"color\" in friendlyAnnots[0]) {\n    keys.push(\"color\");\n  }\n  if (\"shape\" in friendlyAnnots[0]) {\n    keys.push(\"shape\");\n  }\n  ideo.rawAnnots = {keys: keys, annots: rawAnnots};\n\n  ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n  ideo.drawProcessedAnnots(ideo.annots);\n};\n\n/**\n* Proccesses genome annotation data.\n* Genome annotations represent features like a gene, SNP, etc. as\n* a small graphical object on or beside a chromosome.\n* Converts raw annotation data from server, which is structured as\n* an array of arrays, into a more verbose data structure consisting\n* of an array of objects.\n* Also adds pixel offset information.\n*/\nIdeogram.prototype.processAnnotData = function(rawAnnots) {\n  var keys,\n    i, j, annot, annots, annotsByChr,\n    chr,\n    chrModel, ra,\n    startPx, stopPx, px,\n    color,\n    ideo = this;\n\n  keys = rawAnnots.keys;\n  rawAnnots = rawAnnots.annots;\n\n  annots = [];\n\n  for (i = 0; i < rawAnnots.length; i++) {\n    annotsByChr = rawAnnots[i];\n\n    annots.push({chr: annotsByChr.chr, annots: []});\n\n    for (j = 0; j < annotsByChr.annots.length; j++) {\n      chr = annotsByChr.chr;\n      ra = annotsByChr.annots[j];\n      annot = {};\n\n      for (var k = 0; k < keys.length; k++) {\n        annot[keys[k]] = ra[k];\n      }\n\n      annot.stop = annot.start + annot.length;\n\n      chrModel = ideo.chromosomes[\"9606\"][chr];\n\n      startPx = ideo.convertBpToPx(chrModel, annot.start);\n      stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n      px = Math.round((startPx + stopPx) / 2) - 28;\n\n      color = ideo.config.annotationsColor;\n      if (ideo.config.annotationTracks) {\n        annot.trackIndex = ra[3];\n        color = ideo.config.annotationTracks[annot.trackIndex].color;\n      } else {\n        annot.trackIndex = 0;\n      }\n\n      if ('color' in annot) {\n        color = annot.color;\n      }\n\n      annot.chr = chr;\n      annot.chrIndex = i;\n      annot.px = px;\n      annot.color = color;\n\n      annots[i].annots.push(annot);\n    }\n  }\n\n  return annots;\n};\n\n/*\n* Can be used for bar chart or sparkline\n*/\nIdeogram.prototype.getHistogramBars = function(annots) {\n  var t0 = new Date().getTime();\n\n  var i, j, chr,\n    chrModels, chrPxStop, px,\n    chrAnnots, chrName, chrIndex, annot,\n    bars, bar, barPx, nextBarPx, barWidth,\n    maxAnnotsPerBar, color,\n    firstGet = false,\n    histogramScaling,\n    ideo = this;\n\n  bars = [];\n\n  barWidth = ideo.config.barWidth;\n  chrModels = ideo.chromosomes[ideo.config.taxid];\n  color = ideo.config.annotationsColor;\n\n  if (\"histogramScaling\" in ideo.config) {\n    histogramScaling = ideo.config.histogramScaling;\n  } else {\n    histogramScaling = \"relative\";\n  }\n\n  if (typeof ideo.maxAnnotsPerBar === \"undefined\") {\n    ideo.maxAnnotsPerBar = {};\n    firstGet = true;\n  }\n\n  for (chr in chrModels) {\n    chrModel = chrModels[chr];\n    chrIndex = chrModel.chrIndex;\n    lastBand = chrModel.bands[chrModel.bands.length - 1];\n    chrPxStop = lastBand.px.stop;\n    numBins = Math.round(chrPxStop / barWidth);\n    bar = {chr: chr, annots: []};\n    for (i = 0; i < numBins; i++) {\n      px = i * barWidth - ideo.bump;\n      bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n      bar.annots.push({\n        bp: bp,\n        px: px - ideo.bump,\n        count: 0,\n        chrIndex: chrIndex,\n        chrName: chr,\n        color: color,\n        annots: []\n      });\n    }\n    bars.push(bar);\n  }\n\n  for (chr in annots) {\n    chrAnnots = annots[chr].annots;\n    chrName = annots[chr].chr;\n    chrModel = chrModels[chrName];\n    chrIndex = chrModel.chrIndex - 1;\n    barAnnots = bars[chrIndex].annots;\n    for (i = 0; i < chrAnnots.length; i++) {\n      annot = chrAnnots[i];\n      px = annot.px - ideo.bump;\n      for (j = 0; j < barAnnots.length; j++) {\n        barPx = barAnnots[j].px;\n        nextBarPx = barPx + barWidth;\n        if (j === barAnnots.length - 1) {\n          nextBarPx += barWidth;\n        }\n        if (px >= barPx && px < nextBarPx) {\n          bars[chrIndex].annots[j].count += 1;\n          bars[chrIndex].annots[j].annots.push(annot);\n          break;\n        }\n      }\n    }\n  }\n\n  if (firstGet === true || histogramScaling === \"relative\") {\n    maxAnnotsPerBar = 0;\n    for (i = 0; i < bars.length; i++) {\n      annots = bars[i].annots;\n      for (j = 0; j < annots.length; j++) {\n        barCount = annots[j].count;\n        if (barCount > maxAnnotsPerBar) {\n          maxAnnotsPerBar = barCount;\n        }\n      }\n    }\n    ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n  }\n\n  // Set each bar's height to be proportional to\n  // the height of the bar with the most annotations\n  for (i = 0; i < bars.length; i++) {\n    annots = bars[i].annots;\n    for (j = 0; j < annots.length; j++) {\n      barCount = annots[j].count;\n      height = (barCount / ideo.maxAnnotsPerBar[chr]) * ideo.config.chrMargin;\n      // console.log(height)\n      bars[i].annots[j].height = height;\n    }\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time spent in getHistogramBars: \" + (t1 - t0) + \" ms\");\n  }\n\n  ideo.bars = bars;\n\n  return bars;\n};\n\n/**\n* Draws genome annotations on chromosomes.\n* Annotations can be rendered as either overlaid directly\n* on a chromosome, or along one or more \"tracks\"\n* running parallel to each chromosome.\n*/\nIdeogram.prototype.drawProcessedAnnots = function(annots) {\n  var chrWidth, layout,\n    annotHeight, triangle, circle, r, chrAnnot,\n    x1, x2, y1, y2,\n    ideo = this;\n\n  chrMargin = this.config.chrMargin;\n  chrWidth = this.config.chrWidth;\n\n  layout = \"tracks\";\n  if (this.config.annotationsLayout) {\n    layout = this.config.annotationsLayout;\n  }\n\n  if (layout === \"histogram\") {\n    annots = ideo.getHistogramBars(annots);\n  }\n\n  annotHeight = ideo.config.annotationHeight;\n\n  triangle =\n    'l -' + annotHeight + ' ' +\n    (2 * annotHeight) +\n    ' l ' + (2 * annotHeight) + ' 0 z';\n\n  // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n  // Circles are supported natively via <circle>, but having it as a path\n  // simplifies handling triangles, circles and other shapes in the same\n  // D3 call\n  r = annotHeight;\n  circle =\n    'm -' + r + ', ' + r +\n    'a ' + r + ',' + r + ' 0 1,0 ' + (r * 2) + ',0' +\n    'a ' + r + ',' + r + ' 0 1,0 -' + (r * 2) + ',0';\n\n  chrAnnot = d3.selectAll(\".chromosome\")\n    .data(annots)\n      .selectAll(\"path.annot\")\n      .data(function(d) {\n        return d.annots;\n      })\n      .enter();\n\n  if (layout === \"tracks\") {\n    chrAnnot\n      .append(\"g\")\n      .attr(\"id\", function(d) {\n        return d.id;\n      })\n      .attr(\"class\", \"annot\")\n      .attr(\"transform\", function(d) {\n        var y = ideo.config.chrWidth + (d.trackIndex * annotHeight * 2);\n        return \"translate(\" + d.px + \",\" + y + \")\";\n      })\n      .append(\"path\")\n      .attr(\"d\", function(d) {\n        if (!d.shape || d.shape === \"triangle\") {\n          return \"m0,0\" + triangle;\n        } else if (d.shape === \"circle\") {\n          return circle;\n        }\n      })\n      .attr(\"fill\", function(d) {\n        return d.color;\n      });\n  } else if (layout === \"overlay\") {\n      // Overlaid annotations appear directly on chromosomes\n\n    chrAnnot.append(\"polygon\")\n        .attr(\"id\", function(d) {\n          return d.id;\n        })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px - 0.5;\n          x2 = d.px + 0.5;\n          y1 = chrWidth;\n          y2 = 0;\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  } else if (layout === \"histogram\") {\n    chrAnnot.append(\"polygon\")\n        // .attr(\"id\", function(d, i) { return d.id; })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  }\n\n  if (ideo.onDrawAnnotsCallback) {\n    ideo.onDrawAnnotsCallback();\n  }\n};\n\nIdeogram.prototype.onBrushMove = function() {\n  call(this.onBrushMoveCallback);\n};\n\nIdeogram.prototype.createBrush = function(from, to) {\n  var ideo = this,\n    width = ideo.config.chrWidth + 6.5,\n    length = ideo.config.chrHeight,\n    chr = ideo.chromosomesArray[0],\n    chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n    x0, x1,\n    xOffset = this._layout.getMargin().left,\n    xScale = d3.scaleLinear()\n          .domain([0, d3.max(chr.bands, function(band) {\n            return band.bp.stop;\n          })]).range([xOffset, d3.max(chr.bands, function(band) {\n            return band.px.stop;\n          }) + xOffset]);\n\n  if (typeof from === \"undefined\") {\n    from = Math.floor(chrLengthBp / 10);\n  }\n\n  if (typeof right === \"undefined\") {\n    to = Math.ceil(from * 2);\n  }\n\n  x0 = ideo.convertBpToPx(chr, from);\n  x1 = ideo.convertBpToPx(chr, to);\n\n  ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n  ideo.brush = d3.brushX()\n    .extent([[xOffset, 0], [length + xOffset, width]])\n    .on(\"brush\", onBrushMove);\n\n  var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n  var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n  d3.select(\"#_ideogram\").append(\"g\")\n    .attr(\"class\", \"brush\")\n    .attr(\"transform\", \"translate(0, \" + yOffset + \")\")\n    .call(ideo.brush)\n    .call(ideo.brush.move, [x0, x1]);\n\n  function onBrushMove() {\n    var extent = d3.event.selection.map(xScale.invert),\n      from = Math.floor(extent[0]),\n      to = Math.ceil(extent[1]);\n\n    ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n    if (ideo.onBrushMove) {\n      ideo.onBrushMoveCallback();\n    }\n  }\n};\n\n/**\n* Called when Ideogram has finished initializing.\n* Accounts for certain ideogram properties not being set until\n* asynchronous requests succeed, etc.\n*/\nIdeogram.prototype.onLoad = function() {\n  call(this.onLoadCallback);\n};\n\nIdeogram.prototype.onDrawAnnots = function() {\n  call(this.onDrawAnnotsCallback);\n};\n\nIdeogram.prototype.getBandColorGradients = function() {\n  var colors,\n    stain, color1, color2, color3,\n    css,\n    gradients = \"\";\n\n  colors = [\n    [\"gneg\", \"#FFF\", \"#FFF\", \"#DDD\"],\n    [\"gpos25\", \"#C8C8C8\", \"#DDD\", \"#BBB\"],\n    [\"gpos33\", \"#BBB\", \"#BBB\", \"#AAA\"],\n    [\"gpos50\", \"#999\", \"#AAA\", \"#888\"],\n    [\"gpos66\", \"#888\", \"#888\", \"#666\"],\n    [\"gpos75\", \"#777\", \"#777\", \"#444\"],\n    [\"gpos100\", \"#444\", \"#666\", \"#000\"],\n    [\"acen\", \"#FEE\", \"#FEE\", \"#FDD\"],\n    [\"noBands\", \"#BBB\", \"#BBB\", \"#AAA\"]\n  ];\n\n  for (var i = 0; i < colors.length; i++) {\n    stain = colors[i][0];\n    color1 = colors[i][1];\n    color2 = colors[i][2];\n    color3 = colors[i][3];\n    gradients +=\n      '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n    if (stain === \"gneg\") {\n      gradients +=\n        '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' +\n        '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n    } else {\n      gradients +=\n        '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' +\n        '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n    }\n    gradients +=\n      '</linearGradient>';\n  }\n\n  gradients +=\n    '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' +\n        'stroke-width:0.7;\" />' +\n    '</pattern>' +\n    '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(-30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' +\n          'stroke-width:0.7;\" />' +\n    '</pattern>';\n\n  gradients = \"<defs>\" + gradients + \"</defs>\";\n  css = \"<style>\" +\n    '.gneg {fill: url(\"#gneg\")} ' +\n    '.gpos25 {fill: url(\"#gpos25\")} ' +\n    '.gpos33 {fill: url(\"#gpos33\")} ' +\n    '.gpos50 {fill: url(\"#gpos50\")} ' +\n    '.gpos66 {fill: url(\"#gpos66\")} ' +\n    '.gpos75 {fill: url(\"#gpos75\")} ' +\n    '.gpos100 {fill: url(\"#gpos100\")} ' +\n    '.gpos {fill: url(\"#gpos100\")} ' +\n    '.acen {fill: url(\"#acen\")} ' +\n    '.stalk {fill: url(\"#stalk\")} ' +\n    '.gvar {fill: url(\"#gvar\")} ' +\n    '.noBands {fill: url(\"#noBands\")} ' +\n    '.chromosome {fill: url(\"#noBands\")} ' +\n  '</style>';\n  gradients = css + gradients;\n\n  // alert(gradients)\n\n  return gradients;\n};\n\n/*\n  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n*/\nIdeogram.prototype.getTaxidFromEutils = function(callback) {\n  var organism, taxonomySearch, taxid,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  taxonomySearch = ideo.esearch + \"&db=taxonomy&term=\" + organism;\n\n  d3.json(taxonomySearch, function(data) {\n    taxid = data.esearchresult.idlist[0];\n    return callback(taxid);\n  });\n};\n\n/**\n* Returns an array of taxids for the current ideogram\n* Also sets configuration parameters related to taxid(s), whether ideogram is\n* multiorganism, and adjusts chromosomes parameters as needed\n**/\nIdeogram.prototype.getTaxids = function(callback) {\n  var ideo = this,\n    taxid, taxids,\n    org, orgs, i,\n    taxidInit, tmpChrs,\n    assembly, chromosomes,\n    multiorganism;\n\n  taxidInit = \"taxid\" in ideo.config;\n\n  ideo.config.multiorganism = (\n    (\"organism\" in ideo.config && ideo.config.organism instanceof Array) ||\n    (taxidInit && ideo.config.taxid instanceof Array)\n  );\n\n  multiorganism = ideo.config.multiorganism;\n\n  if (\"organism\" in ideo.config) {\n    // Ideogram instance was constructed using common organism name(s)\n    if (multiorganism) {\n      orgs = ideo.config.organism;\n    } else {\n      orgs = [ideo.config.organism];\n    }\n\n    taxids = [];\n    tmpChrs = {};\n    for (i = 0; i < orgs.length; i++) {\n      // Gets a list of taxids from common organism names\n      org = orgs[i];\n      for (taxid in ideo.organisms) {\n        if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n          taxids.push(taxid);\n          if (multiorganism) {\n            // Adjusts 'chromosomes' configuration parameter to make object\n            // keys use taxid instead of common organism name\n            tmpChrs[taxid] = ideo.config.chromosomes[org];\n          }\n        }\n      }\n    }\n\n    if (taxids.length === 0) {\n      promise = new Promise(function(resolve) {\n        ideo.getTaxidFromEutils(resolve);\n      });\n\n      promise.then(function(data) {\n        var organism = ideo.config.organism,\n          dataDir = ideo.config.dataDir,\n          urlOrg = organism.replace(\" \", \"-\");\n\n        taxid = data;\n        taxids.push(taxid);\n\n        ideo.config.taxids = taxids;\n        ideo.organisms[taxid] = {\n          commonName: \"\",\n          scientificName: ideo.config.organism,\n          scientificNameAbbr: \"\"\n        };\n\n        var chromosomesUrl = dataDir + urlOrg + \".js\";\n\n        var promise = new Promise(function(resolve, reject) {\n          d3.request(chromosomesUrl).get(function(error, data) {\n            if (error) {\n              reject(Error(error));\n            }\n            resolve(data);\n          });\n        })\n\n        return promise\n          .then(\n            function(data) {\n              // Check if chromosome data exists locally.\n              // This is used for pre-processed centromere data,\n              // which is not accessible via EUtils.  See get_chromosomes.py.\n\n              var asmAndChrArray = [],\n                chromosomes = [],\n                seenChrs = {},\n                chr;\n\n              eval(data.response);\n\n              asmAndChrArray.push('');\n\n              for (var i = 0; i < chrBands.length; i++) {\n                chr = chrBands[i].split(' ')[0];\n                if (chr in seenChrs) {\n                  continue;\n                } else {\n                  chromosomes.push({'name': chr, 'type': 'nuclear'})\n                  seenChrs[chr] = 1;\n                }\n              }\n              chromsomes = chromosomes.sort(ideo.sortChromosomes);\n              asmAndChrArray.push(chromosomes);\n              ideo.coordinateSystem = \"iscn\";\n              return asmAndChrArray;\n            },\n            function() {\n              return new Promise(function(resolve) {\n                ideo.coordinateSystem = \"bp\";\n                ideo.getAssemblyAndChromosomesFromEutils(resolve);\n              });\n            }\n          );\n      })\n      .then(function(asmChrArray) {\n        assembly = asmChrArray[0];\n        chromosomes = asmChrArray[1];\n\n        ideo.config.chromosomes = chromosomes;\n        ideo.organisms[taxid].assemblies = {\n          default: assembly\n        };\n\n        callback(taxids);\n      });\n    } else {\n      ideo.config.taxids = taxids;\n      if (multiorganism) {\n        ideo.config.chromosomes = tmpChrs;\n      }\n\n      callback(taxids);\n    }\n  } else {\n    if (multiorganism) {\n      ideo.coordinateSystem = \"bp\";\n      if (taxidInit) {\n        taxids = ideo.config.taxid;\n      }\n    } else {\n      if (taxidInit) {\n        taxids = [ideo.config.taxid];\n      }\n      ideo.config.taxids = taxids;\n    }\n\n    callback(taxids);\n  }\n};\n\nIdeogram.prototype.sortChromosomes = function(a, b) {\n  var aIsNuclear = a.type === \"nuclear\",\n    bIsNuclear = b.type === \"nuclear\",\n    aIsCP = a.type === \"chloroplast\",\n    bIsCP = b.type === \"chloroplast\",\n    aIsMT = a.type === \"mitochondrion\",\n    bIsMT = b.type === \"mitochondrion\";\n    // aIsPlastid = aIsMT && a.name !== \"MT\", // e.g. B1 in rice genome GCF_001433935.1\n    // bIsPlastid = bIsMT && b.name !== \"MT\";\n\n  if (aIsNuclear && bIsNuclear) {\n    return naturalSort(a.name, b.name);\n  } else if (!aIsNuclear && bIsNuclear) {\n    return 1;\n  } else if (aIsMT && bIsCP) {\n    return 1;\n  } else if (aIsCP && bIsMT) {\n    return -1;\n  } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n    return -1;\n  }\n};\n\n/**\n  Returns names and lengths of chromosomes for an organism's best-known\n  genome assembly.  Gets data from NCBI EUtils web API.\n*/\nIdeogram.prototype.getAssemblyAndChromosomesFromEutils = function(callback) {\n  var asmAndChrArray, // [assembly_accession, chromosome_objects_array]\n    assemblyAccession, chromosomes, asmSearch,\n    asmUid, asmSummary,\n    rsUid, nuccoreLink,\n    links, ntSummary,\n    results, result, cnIndex, chrName, chrLength, chromosome, type,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  asmAndChrArray = [];\n  chromosomes = [];\n\n  asmSearch =\n    ideo.esearch +\n    \"&db=assembly\" +\n    \"&term=%22\" + organism + \"%22[organism]\" +\n      \"AND%20(%22latest%20refseq%22[filter])%20\" +\n      \"AND%20%22chromosome%20level%22[filter]\";\n\n  var promise = d3.promise.json(asmSearch);\n\n  promise\n      .then(function(data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + \"&db=assembly&id=\" + asmUid;\n\n        return d3.promise.json(asmSummary);\n      })\n      .then(function(data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        var qs = \"&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=\" + rsUid;\n        nuccoreLink = ideo.elink + qs;\n\n        return d3.promise.json(nuccoreLink);\n      })\n      .then(function(data) {\n        links = data.linksets[0].linksetdbs[0].links.join(\",\");\n        ntSummary = ideo.esummary + \"&db=nucleotide&id=\" + links;\n\n        return d3.promise.json(ntSummary);\n      })\n      .then(function(data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === \"uids\") {\n            continue;\n          }\n\n          if (result.genome === \"mitochondrion\") {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split(\"|\").indexOf(\"plasmid\");\n              if (cnIndex === -1) {\n                chrName = \"MT\";\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                  // genome: \"mitochondrion\",\n                  // subtype: \"cell_line|plasmid\",\n                  // subname: \"A-58 CMS|B1\",\n                chrName = result.subname.split(\"|\")[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (\n            result.genome === \"chloroplast\" ||\n            result.genome === \"plastid\"\n          ) {\n            type = \"chloroplast\";\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = \"CP\";\n            } else {\n              continue;\n            }\n          } else {\n            type = \"nuclear\";\n            cnIndex = result.subtype.split(\"|\").indexOf(\"chromosome\");\n\n            chrName = result.subname.split(\"|\")[cnIndex];\n\n            if (\n              typeof chrName !== \"undefined\" &&\n              chrName.substr(0, 3) === \"chr\"\n            ) {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = \"bp\";\n\n        return callback(asmAndChrArray);\n      });\n};\n\nIdeogram.prototype.initDrawChromosomes = function(bandsArray) {\n  var ideo = this,\n    taxids = ideo.config.taxids,\n    taxid,\n    chrIndex = 0,\n    chrSetNumber = 0,\n    bands,\n    i, j, chrs, chromosome, chrModel,\n    defs, transform;\n\n  defs = d3.select(\"defs\");\n\n  for (i = 0; i < taxids.length; i++) {\n    taxid = taxids[i];\n    chrs = ideo.config.chromosomes[taxid];\n\n    ideo.chromosomes[taxid] = {};\n\n    for (j = 0; j < chrs.length; j++) {\n      chromosome = chrs[j];\n      bands = bandsArray[chrIndex];\n      chrIndex += 1;\n\n      chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n      ideo.chromosomes[taxid][chromosome] = chrModel;\n      ideo.chromosomesArray.push(chrModel);\n\n      transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n      chrSetNumber += 1;\n\n      // Append chromosome set container\n      var container = d3.select(\"svg\")\n        .append(\"g\")\n        .attr(\"class\", \"chromosome-set-container\")\n        .attr(\"data-set-number\", j)\n        .attr(\"transform\", transform)\n        .attr(\"id\", chrModel.id + \"-chromosome-set\");\n\n      var shape;\n      for (var k = 0; k < this._ploidy.getChromosomesNumber(j); k++) {\n        shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n      }\n\n      defs.append(\"clipPath\")\n        .attr(\"id\", chrModel.id + \"-chromosome-set-clippath\")\n        .selectAll('path')\n        .data(shape)\n        .enter()\n        .append('path')\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n    }\n\n    if (ideo.config.showBandLabels === true) {\n      ideo.drawBandLabels(ideo.chromosomes);\n    }\n  }\n};\n\n// Get ideogram SVG container\nIdeogram.prototype.getSvg = function() {\n  return d3.select('#_ideogram').node();\n};\n\n/*\n* Completes default ideogram initialization\n* by calling downstream functions to\n* process raw band data into full JSON objects,\n* render chromosome and cytoband figures and labels,\n* apply initial graphical transformations,\n* hide overlapping band labels, and\n* execute callbacks defined by client code\n*/\nIdeogram.prototype.processBandData = function() {\n  var bandsArray, j, k, chromosome, bands,\n    chrLength, chr,\n    bandData, bandsByChr,\n    taxid, taxids, chrs, chrsByTaxid,\n    ideo = this;\n\n  bandsArray = [];\n  maxLength = 0;\n\n  if (ideo.config.multiorganism === true) {\n    ideo.coordinateSystem = \"bp\";\n    taxids = ideo.config.taxids;\n    for (i = 0; i < taxids.length; i++) {\n      taxid = taxids[i];\n    }\n  } else {\n    if (typeof ideo.config.taxid === \"undefined\") {\n      ideo.config.taxid = ideo.config.taxids[0];\n    }\n    taxid = ideo.config.taxid;\n    taxids = [taxid];\n    ideo.config.taxids = taxids;\n  }\n\n  if (\"chromosomes\" in ideo.config) {\n    chrs = ideo.config.chromosomes;\n  }\n  if (ideo.config.multiorganism) {\n    chrsByTaxid = chrs;\n  }\n\n  ideo.config.chromosomes = {};\n\n  var t0B = new Date().getTime();\n\n  for (j = 0; j < taxids.length; j++) {\n    taxid = taxids[j];\n\n    if (ideo.config.multiorganism) {\n      chrs = chrsByTaxid[taxid];\n    }\n\n    if (ideo.coordinateSystem === \"iscn\" || ideo.config.multiorganism) {\n      bandData = ideo.bandData[taxid];\n\n      bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n      chrs = Object.keys(bandsByChr).sort(function(a, b) {\n        return naturalSort(a, b)\n      });\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chromosome = chrs[k];\n        bands = bandsByChr[chromosome];\n        bandsArray.push(bands);\n\n        chrLength = {\n          iscn: bands[bands.length - 1].iscn.stop,\n          bp: bands[bands.length - 1].bp.stop\n        };\n\n        if (chrLength.iscn > ideo.maxLength.iscn) {\n          ideo.maxLength.iscn = chrLength.iscn;\n        }\n\n        if (chrLength.bp > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chrLength.bp;\n        }\n      }\n    } else if (ideo.coordinateSystem === \"bp\") {\n      // If lacking band-level data\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chr = chrs[k];\n        if (chr.length > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chr.length;\n        }\n      }\n    }\n  }\n\n  var t1B = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in processBandData: \" + (t1B - t0B) + \" ms\");\n  }\n\n  return bandsArray;\n};\n\n/**\n* Initializes an ideogram.\n* Sets some high-level properties based on instance configuration,\n* fetches band and annotation data if needed, and\n* writes an SVG element to the document to contain the ideogram\n*\n*/\nIdeogram.prototype.init = function() {\n  var taxid, i, svgClass;\n\n  var ideo = this;\n\n  var t0 = new Date().getTime();\n\n  var bandsArray = [],\n    numBandDataResponses = 0,\n    resolution = this.config.resolution,\n    accession;\n\n  var promise = new Promise(function(resolve) {\n    ideo.getTaxids(resolve);\n  });\n\n  promise.then(function(taxids) {\n    taxid = taxids[0];\n    ideo.config.taxid = taxid;\n    ideo.config.taxids = taxids;\n\n    var assemblies,\n      bandFileName;\n\n    var bandDataFileNames = {\n      9606: '',\n      10090: ''\n    };\n\n    for (i = 0; i < taxids.length; i++) {\n      taxid = String(taxids[i]);\n\n      if (!ideo.config.assembly) {\n        ideo.config.assembly = \"default\";\n      }\n      assemblies = ideo.organisms[taxid].assemblies;\n      accession = assemblies[ideo.config.assembly];\n\n      bandFileName = slugify(ideo.organisms[taxid].scientificName);\n      if (accession !== assemblies.default) {\n        bandFileName += '-' + accession + '-';\n      }\n      if (taxid === '9606' && resolution !== 850) {\n        if (accession === assemblies.default) {\n          bandFileName += '-';\n        }\n        bandFileName += resolution;\n      }\n      bandFileName += '.js';\n\n      if (taxid === '9606' || taxid === '10090') {\n        bandDataFileNames[taxid] = bandFileName;\n      }\n\n      if (typeof chrBands === \"undefined\" && taxid in bandDataFileNames) {\n        d3.request(ideo.config.dataDir + bandDataFileNames[taxid])\n        .on(\"beforesend\", function(data) {\n          // Ensures correct taxid is processed in response callback; using\n          // simply 'taxid' variable gives the last *requested* taxid, which\n          // fails when dealing with multiple taxa.\n          data.taxid = taxid;\n        })\n        .get(function(error, data) {\n          ideo.bandData[data.taxid] = data.response;\n          numBandDataResponses += 1;\n\n          if (numBandDataResponses === taxids.length) {\n            bandsArray = ideo.processBandData();\n            writeContainer();\n          }\n        });\n      } else {\n        if (typeof chrBands !== \"undefined\") {\n          // If bands already available,\n          // e.g. via <script> tag in initial page load\n          ideo.bandData[taxid] = chrBands;\n        }\n        bandsArray = ideo.processBandData();\n        writeContainer();\n      }\n    }\n  });\n\n  function writeContainer() {\n    if (ideo.config.annotationsPath) {\n      d3.json(\n        ideo.config.annotationsPath, // URL\n        function(data) { // Callback\n          ideo.rawAnnots = data;\n        }\n      );\n    }\n\n    svgClass = \"\";\n    if (ideo.config.showChromosomeLabels) {\n      if (ideo.config.orientation === \"horizontal\") {\n        svgClass += \"labeledLeft \";\n      } else {\n        svgClass += \"labeled \";\n      }\n    }\n\n    if (\n      ideo.config.annotationsLayout &&\n      ideo.config.annotationsLayout === \"overlay\"\n    ) {\n      svgClass += \"faint\";\n    }\n\n    var gradients = ideo.getBandColorGradients();\n    var svgHeight = ideo._layout.getHeight(taxid);\n\n    d3.select(ideo.config.container)\n      .append(\"svg\")\n        .attr(\"id\", \"_ideogram\")\n        .attr(\"class\", svgClass)\n        .attr(\"width\", \"97%\")\n        .attr(\"height\", svgHeight)\n        .html(gradients);\n\n    finishInit();\n  }\n\n  function finishInit() {\n    try {\n      var t0A = new Date().getTime();\n\n      var i;\n\n      ideo.initDrawChromosomes(bandsArray);\n\n      // Waits for potentially large annotation dataset\n      // to be received by the client, then triggers annotation processing\n      if (ideo.config.annotationsPath) {\n        function pa() {\n          if (typeof timeout !== \"undefined\") {\n            window.clearTimeout(timeout);\n          }\n\n          ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n          ideo.drawProcessedAnnots(ideo.annots);\n\n          if (ideo.initCrossFilter) {\n            ideo.initCrossFilter();\n          }\n        }\n\n        if (ideo.rawAnnots) {\n          pa();\n        } else {\n          (function checkAnnotData() {\n            timeout = setTimeout(function() {\n              if (!ideo.rawAnnots) {\n                checkAnnotData();\n              } else {\n                pa();\n              }\n            },\n            50\n          );\n          })();\n        }\n      }\n\n      if (ideo.config.showBandLabels === true) {\n        var bandsToShow = ideo.bandsToShow.join(\",\");\n\n      // d3.selectAll resolves to querySelectorAll (QSA).\n      // QSA takes a surprisingly long time to complete,\n      // and scales with the number of selectors.\n      // Most bands are hidden, so we can optimize by\n      // Hiding all bands, then QSA'ing and displaying the\n      // relatively few bands that are shown.\n        var t0C = new Date().getTime();\n        d3.selectAll(\".bandLabel, .bandLabelStalk\").style(\"display\", \"none\");\n        d3.selectAll(bandsToShow).style(\"display\", \"\");\n        var t1C = new Date().getTime();\n        if (ideo.debug) {\n          console.log(\"Time in showing bands: \" + (t1C - t0C) + \" ms\");\n        }\n\n        if (ideo.config.orientation === \"vertical\") {\n          var chrID;\n          for (i = 0; i < ideo.chromosomesArray.length; i++) {\n            chrID = \"#\" + ideo.chromosomesArray[i].id;\n            ideo.rotateChromosomeLabels(d3.select(chrID), i);\n          }\n        }\n      }\n\n      if (ideo.config.showChromosomeLabels === true) {\n        ideo.drawChromosomeLabels(ideo.chromosomes);\n      }\n\n      if (ideo.config.brush === true) {\n        ideo.createBrush();\n      }\n\n      if (ideo.config.annotations) {\n        ideo.drawAnnots(ideo.config.annotations);\n      }\n\n      var t1A = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time in drawChromosome: \" + (t1A - t0A) + \" ms\");\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time constructing ideogram: \" + (t1 - t0) + \" ms\");\n      }\n\n      if (ideo.onLoadCallback) {\n        ideo.onLoadCallback();\n      }\n\n      if (!(\"rotatable\" in ideo.config && ideo.config.rotatable === false)) {\n        d3.selectAll(\".chromosome\").on(\"click\", function() {\n          ideogram.rotateAndToggleDisplay(this);\n        });\n      } else {\n        d3.selectAll(\".chromosome\").style(\"cursor\", \"default\");\n      }\n    } catch (e) {\n      // console.log(e);\n      throw e;\n    }\n  }\n};\n","/* Decompresses ideogram's annotations for crossfilter initialization\nBy default, annotations are clustered by chromosome, e.g.\n[\n  {\"chr\": \"1\", \"annots\": [{\"from\": 100, \"to\", 101, \"chr\": \"1\", ...}, ...]},\n  {\"chr\": \"2\", \"annots\": [{\"from\": 500, \"to\", 501, \"chr\": \"2\", ...}, ...]},\n  ...\n]\nThis method flattens that structure to e.g.\n[\n  {\"from\": 100, \"to\": 101, \"chr\": \"1\", ...},\n  ...\n  {\"from\": 500, \"to\": 501, \"chr\": \"2\", ...},\n]\nSee also: packAnnots\n*/\nIdeogram.prototype.unpackAnnots = function() {\n  var chr, annots, i,\n    unpackedAnnots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots = chr.annots;\n    unpackedAnnots = unpackedAnnots.concat(annots);\n  }\n\n  return unpackedAnnots;\n};\n\n/*\n  Compresses annots back to default state.  Inverse of unpackAnnots.\n*/\nIdeogram.prototype.packAnnots = function(unpackedAnnots) {\n  var chr, annot, i,\n    annots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (chr in chrs) {\n    annots.push({chr: chrs[chr].chr, annots: []});\n  }\n\n  for (i = 0; i < unpackedAnnots.length; i++) {\n    annot = unpackedAnnots[i];\n    annots[annot.chrIndex].annots.push(annot);\n  }\n\n  return annots;\n};\n\n/*\n  Initializes crossfilter.  Needed for client-side filtering.\n  More: https://github.com/square/crossfilter/wiki/API-Reference\n*/\nIdeogram.prototype.initCrossFilter = function() {\n  var ideo = this,\n    keys = ideo.rawAnnots.keys,\n    i, facet;\n\n  ideo.unpackedAnnots = ideo.unpackAnnots();\n  ideo.crossfilter = crossfilter(ideo.unpackedAnnots);\n\n  ideo.annotsByFacet = {};\n\n  ideo.facets = keys.slice(3, keys.length);\n\n  for (i = 0; i < ideo.facets.length; i++) {\n    facet = ideo.facets[i];\n    ideo.annotsByFacet[facet] =\n      ideo.crossfilter\n        .dimension(function(d) {\n          return d[facet];\n        });\n  }\n};\n\n/*\n  Filters annotations based on the given selections\n  \"selections\" is an object of objects, e.g.\n\n    {\n      \"tissue-type\": {          <-- a facet\n        \"cerebral-cortex\": 1,   <-- a filter; \"1\" means it is selected\n        \"liver\": 1\n      },\n      \"gene-type\": {\n        mirna\": 1\n      }\n    }\n\n  Translation:\n  select where:\n      (tissue-type is cerebral-cortex OR liver) and (gene-type is mirna)\n\n  TODO:\n    * Filter counts\n    * Range filters\n    * Integrate server-side filtering for very large datasets\n*/\nIdeogram.prototype.filterAnnots = function(selections) {\n  var t0 = Date.now();\n\n  var i, facet,\n    // prevFacet = null,\n    results, fn,\n    counts = {},\n    ideo = this;\n\n  if (Object.keys(selections).length === 0) {\n    results = ideo.unpackedAnnots;\n  } else {\n    for (i = 0; i < ideo.facets.length; i++) {\n      facet = ideo.facets[i];\n      if (facet in selections) {\n        fn = function(d) {\n          if (d in selections[facet]) {\n            return true;\n          }\n        };\n      } else {\n        fn = null;\n      }\n      ideo.annotsByFacet[facet].filter(fn);\n      counts[facet] = ideo.annotsByFacet[facet].group().top(Infinity);\n    }\n\n    results = ideo.annotsByFacet[facet].top(Infinity);\n  }\n\n  for (i < 0; i < ideo.facets.length; i++) {\n    ideo.annotsByFacet[facet].filterAll(); // clear filters\n  }\n\n  results = ideo.packAnnots(results);\n\n  d3.selectAll(\"polygon.annot\").remove();\n  ideo.drawAnnots(results);\n\n  console.log(\"Time in filterAnnots: \" + (Date.now() - t0) + \" ms\");\n\n  return counts;\n};\n"]}