{"version":3,"sources":["range.js","model-adapter.js","model-no-bands-adapter.js","layouts/layout.js","layouts/horizontal-layout.js","layouts/vertical-layout.js","layouts/paired-layout.js","layouts/small-layout.js","ploidy.js","color.js","views/chromosome.js","views/telocentric-chromosome.js","views/metacentric-chromosome.js","lib.js","views/chromosome-util.js","core.js","filter.js"],"names":["Range","data","this","_data","ModelAdapter","model","_model","_class","ModelNoBandsAdapter","call","Layout","config","ideo","_config","_ideo","_ploidy","_translate","undefined","_tickSize","_isRotated","HorizontalLayout","_margin","left","top","VerticalLayout","PairedLayout","SmallLayout","Ploidy","_description","_normalize","ploidyDesc","Color","Chromosome","adapter","_adapter","getModel","_color","_bumpCoefficient","TelocentricChromosome","_pArmOffset","MetacentricChromosome","naturalSort","a","b","q","r","c","d","e","f","g","h","i","insensitive","toLowerCase","replace","j","k","l","split","m","n","parseInt","match","length","Date","parse","o","p","parseFloat","s","t","u","v","Math","max","isNaN","test","localeCompare","w","abs","ChromosomeUtil","node","_node","prototype","getStart","start","getStop","stop","getLength","getColor","chrNumber","ploidy","_getColor","Array","isArray","color","getInstance","bands","getCssClass","Object","create","width","push","name","px","perspective","rows","orientation","_getLeftMargin","_getYScale","chrWidth","getChromosomeLabels","chrElement","util","getSetLabel","getLabel","filter","rotateBack","Error","rotateForward","rotate","chrSetNumber","otherChrs","d3","selectAll","style","getChromosomeLabelClass","_getAdditionalOffset","annotationHeight","numAnnotTracks","_getChromosomeSetSize","setSize","getSetSize","getMargin","getHeight","getChromosomeBandTickY1","getChromosomeBandTickY2","getChromosomeBandLabelTranslate","getChromosomeSetLabelAnchor","getChromosomeBandLabelAnchor","getChromosomeLabelXPosition","getChromosomeLabelYPosition","getChromosomeSetLabelYPosition","getChromosomeSetLabelXPosition","getChromosomeSetLabelTranslate","getChromosomeSetTranslate","getChromosomeSetYTranslate","margin","setNumber","callback","xOffset","ideoBox","select","getBoundingClientRect","chrBox","scaleX","height","scaleY","yOffset","transform","parentNode","transition","attr","on","labels","getSvg","append","enter","text","String","translate","remove","taxId","numChromosomes","chromosomes","lastSetOffset","lastSetSize","band","x","round","y","leftMargin","chromosomeSetYTranslate","chrMargin","self","chrHeight","marginTop","pad","annotationsLayout","prevTranslate","translateY","Number","organisms","getTaxids","taxIdList","size","rowSize","additionalPadding","getChromosomesNumber","chrSetCode","keys","description","normalized","key","ancestors","existence","_getexistenceArray","array","getAncestor","exists","armNumber","getArmColor","chrNmber","armColors","_getPolyploidArmColor","getBorderColor","centromerePosition","_addPArmShape","clipPath","isPArmRendered","concat","_getPArmShape","_addQArmShape","isQArmRendered","_getQArmShape","render","container","id","_renderPArm","_renderQArm","_renderRangeSet","path","class","rangeSet","range","chr","map","rangesContainer","bandsXOffset","_bandsXOffset","startPx","convertBpToPx","lengthPx","_getShapeData","firstQBand","lastBand","rightTerminalPosition","x1","x2","x3","_renderBands","arm","fill","stain","Boolean","G","Q","process","nextTick","B","X","document","createTextNode","observe","characterData","MessageChannel","port1","onmessage","port2","postMessage","setTimeout","J","tt","require","runOnLoop","runOnContext","constructor","rt","_state","arguments","_result","E","_","TypeError","then","ut","error","S","_label","it","st","et","resolve","nt","A","_onerror","T","ot","_subscribers","M","P","ct","C","O","at","Y","_t","promise","I","F","D","K","L","N","_instanceConstructor","_input","_remaining","_enumerate","U","W","global","Function","Promise","toString","cast","pt","z","H","R","window","V","MutationObserver","WebKitMutationObserver","Z","$","Uint8ClampedArray","importScripts","random","substring","ft","lt","ht","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","_settledAt","_willSettleAt","dt","vt","polyfill","define","amd","module","exports","ES6Promise","slice","apply","forEach","Ideogram","rect","JSON","stringify","_layout","debug","bandDir","resolution","showChromosomeLabels","querySelector","showBandLabels","brush","bump","adjustedBump","chromosome","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","9606","commonName","scientificName","scientificNameAbbr","assemblies","default","GRCh38","GRCh37","10090","7227","4641","chromosomesArray","bandsToShow","bandData","init","getBands","content","taxid","lines","delimiter","tsvLines","columns","line","tsvLinesLength","source","firstColumn","chrBands","eval","indexOf","chromosomeName","getChromosomeModel","chrIndex","pxStop","chrLength","cs","hasBands","type","fullChromosomeLabels","orgName","csLength","pcenIndex","scale","multiorganism","drawChromosomeLabels","chromosomeLabelClass","chrSetLabelXPosition","chrSetLabelTranslate","each","reverse","fullLabels","setLabelTranslate","drawBandLabels","chrs","chrModel","textOffsets","lineY1","lineY2","overlappingLabelXRight","index","prevHiddenBoxIndex","xLeft","prevLabelXRight","textPadding","textsLength","indexesToShow","prevTextBoxLeft","prevTextBoxWidth","selectorsToShow","ithLength","rotateChromosomeLabels","scaleSvg","tracksHeight","hasOwnProperty","ci","chrMargin2","rotateBandLabels","bandLabels","coord","drawChromosome","rotateAndToggleDisplay","_groups","bpToIscnScale","offset","pxStart","pxLength","iscnStart","iscnStop","iscnLength","bpStart","bpStop","bpLength","convertPxToBp","pxToIscnScale","drawSynteny","syntenicRegions","r1","r2","syntenies","opacity","regionID","t0","getTime","insert","regions","stopPx","syntenicRegion","activeRegion","others","classed","t1","console","log","annotationsPath","localAnnotationsPath","annots","annotations","annotHeight","annotationTracks","barWidth","annotationsColor","drawAnnots","friendlyAnnots","annot","rawAnnot","rawAnnots","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","getHistogramBars","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","histogramScaling","firstGet","numBins","count","barAnnots","barCount","layout","triangle","circle","chrAnnot","y1","y2","thisChrWidth","createBrush","from","to","extent","event","selection","xScale","invert","floor","ceil","selectedRegion","x0","chrLengthBp","scaleLinear","domain","right","brushX","yTranslate","move","getBandColorGradients","colors","color1","color2","color3","css","gradients","getTaxidFromEutils","organism","taxonomySearch","json","esearchresult","idlist","taxids","org","orgs","taxidInit","tmpChrs","assembly","getAssemblyAndChromosomesFromEutils","asmChrArray","sortChromosomes","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","asmAndChrArray","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","links","ntSummary","results","result","cnIndex","rsuid","assemblyaccession","qs","linksets","linksetdbs","join","genome","subtype","subname","substr","slen","sort","initDrawChromosomes","bandsArray","defs","writeContainer","svgClass","svgHeight","html","finishInit","processBandData","bandsByChr","chrsByTaxid","t0B","t1B","pa","timeout","clearTimeout","initCrossFilter","t0A","checkAnnotData","t0C","t1C","chrID","t1A","ideogram","bandDataFileNames","accession","numBandDataResponses","request","get","response","unpackAnnots","unpackedAnnots","packAnnots","facet","crossfilter","annotsByFacet","facets","dimension","filterAnnots","selections","fn","now","counts","group","Infinity","filterAll","label","setLabel"],"mappings":"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","file":"ideogram.min.js","sourcesContent":["/**\n * Chromosome range.\n * @public\n * @class\n * @param {Object} data - range data.\n * @param {Integer} data.chr - chromosome index.\n * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n * @param {Integer} data.start - range start.\n * @param {Integer} data.stop - range end.\n * @param {String} data.color - range color.\n */\nfunction Range(data) {\n  this._data = data;\n}\n\nRange.prototype.getStart = function() {\n  return this._data.start;\n};\n\nRange.prototype.getStop = function() {\n  return this._data.stop;\n};\n\nRange.prototype.getLength = function() {\n  return this._data.stop - this._data.start;\n};\n\nRange.prototype.getColor = function(chrNumber) {\n  if (!('ploidy' in this._data)) {\n    return this._getColor(chrNumber);\n  } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n    return this._getColor(chrNumber);\n  } else {\n    return 'transparent';\n  }\n};\n\nRange.prototype._getColor = function(chrNumber) {\n  if (Array.isArray(this._data.color)) {\n    return this._data.color[chrNumber];\n  } else {\n    return this._data.color;\n  }\n};\n","function ModelAdapter(model) {\n  this._model = model;\n  this._class = 'ModelAdapter';\n}\n\nModelAdapter.getInstance = function(model) {\n  if (model.bands) {\n    return new ModelAdapter(model);\n  } else {\n    return new ModelNoBandsAdapter(model);\n  }\n};\n\nModelAdapter.prototype.getModel = function() {\n  return this._model;\n};\n\nModelAdapter.prototype.getCssClass = function() {\n  return '';\n};\n","function ModelNoBandsAdapter(model) {\n    /*\n     * Call parent constructor.\n     */\n  ModelAdapter.call(this, model);\n  this._class = 'ModelNoBandsAdapter';\n}\n\nModelNoBandsAdapter.prototype = Object.create(ModelAdapter.prototype);\n\nModelNoBandsAdapter.prototype.getModel = function() {\n  this._model.bands = [];\n\n    // If chromosome width more, then 1 add single band to bands array\n  if (this._model.width > 1) {\n    this._model.bands.push({\n      name: 'p',\n      px: {\n        start: 0,\n        stop: this._model.width,\n        width: this._model.width\n      }\n    });\n  }\n\n  return this._model;\n};\n\nModelNoBandsAdapter.prototype.getCssClass = function() {\n  return 'noBands';\n};\n","function Layout(config, ideo) {\n  this._config = config;\n  this._ideo = ideo;\n  this._ploidy = this._ideo._ploidy;\n  this._translate = undefined;\n\n  // Chromosome band's size.\n  this._tickSize = 8;\n\n  // Chromosome rotation state.\n  this._isRotated = false;\n}\n\n// Factory method\nLayout.getInstance = function(config, ideo) {\n  if (\"perspective\" in config && config.perspective === \"comparative\") {\n    return new PairedLayout(config, ideo);\n  } else if (\"rows\" in config && config.rows > 1) {\n    return new SmallLayout(config, ideo);\n  } else if (config.orientation === 'vertical') {\n    return new VerticalLayout(config, ideo);\n  } else if (config.orientation === 'horizontal') {\n    return new HorizontalLayout(config, ideo);\n  } else {\n    return new VerticalLayout(config, ideo);\n  }\n};\n\n// Get chart left margin\nLayout.prototype._getLeftMargin = function() {\n  return this._margin.left;\n};\n\n// Get rotated chromosome y scale\nLayout.prototype._getYScale = function() {\n    // 20 is width of rotated chromosome.\n  return 20 / this._config.chrWidth;\n};\n\n// Get chromosome labels\nLayout.prototype.getChromosomeLabels = function(chrElement) {\n  var util = new ChromosomeUtil(chrElement);\n\n  return [util.getSetLabel(), util.getLabel()].filter(function(d) {\n    return d.length > 0;\n  });\n};\n\n// Rotate chromosome to original position\nLayout.prototype.rotateBack = function() {\n  throw new Error(this._class + '#rotateBack not implemented');\n};\n\n// Rotate chromosome to opposite position\nLayout.prototype.rotateForward = function() {\n  throw new Error(this._class + '#rotateForward not implemented');\n};\n\nLayout.prototype.rotate = function(chrSetNumber, chrNumber, chrElement) {\n    // Find chromosomes which should be hidden\n  var otherChrs = d3.selectAll(\"g.chromosome\").filter(function() {\n    return this !== chrElement;\n  });\n\n  if (this._isRotated) {\n        // Reset _isRotated flag\n    this._isRotated = false;\n        // Rotate chromosome back\n    this.rotateBack(chrSetNumber, chrNumber, chrElement, function() {\n            // Show all other chromosomes and chromosome labels\n      otherChrs.style(\"display\", null);\n      d3.selectAll(\".chrSetLabel, .chrLabel\").style(\"display\", null);\n    });\n  } else {\n        // Set _isRotated flag\n    this._isRotated = true;\n\n        // Hide all other chromosomes and chromosome labels\n    otherChrs.style(\"display\", \"none\");\n    d3.selectAll(\".chrSetLabel, .chrLabel\").style(\"display\", \"none\");\n\n        // Rotate chromosome\n    this.rotateForward(chrSetNumber, chrNumber, chrElement);\n  }\n};\n\nLayout.prototype.getChromosomeLabelClass = function() {\n  if (this._config.ploidy === 1) {\n    return 'chrLabel';\n  } else {\n    return 'chrSetLabel';\n  }\n};\n\nLayout.prototype._getAdditionalOffset = function() {\n  return (\n    (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1)\n  );\n};\n\nLayout.prototype._getChromosomeSetSize = function(chrSetNumber) {\n    // Get last chromosome set size.\n  var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n    // Increase offset by last chromosome set size\n  return (\n    setSize * this._config.chrWidth * 2 + (this._config.ploidy > 1 ? 20 : 0)\n  );\n};\n\n// Get layout margin\nLayout.prototype.getMargin = function() {\n  return this._margin;\n};\n\n// Get SVG element height\nLayout.prototype.getHeight = function() {\n  throw new Error(this._class + '#getHeight not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY1 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY2 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n};\n\n// Get chromosome's band translate attribute\nLayout.prototype.getChromosomeBandLabelTranslate = function() {\n  throw new Error(\n    this._class + '#getChromosomeBandLabelTranslate not implemented'\n  );\n};\n\n// Get chromosome set label anchor property\nLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'middle';\n};\n\n// Get chromosome's band label text-anchor value\nLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  throw (\n    new Error(this._class + '#getChromosomeBandLabelAnchor not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeLabelXPosition = function() {\n  throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n};\n\n// Get chromosome label y position.\nLayout.prototype.getChromosomeLabelYPosition = function() {\n  return -5.5;\n};\n\n// \"i\" is chromosome number\nLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelYPosition(i);\n  } else {\n    return -2 * this._config.chrWidth;\n  }\n};\n\nLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelXPosition not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelTranslate not implemented')\n  );\n};\n\n// Get chromosome set translate attribute\nLayout.prototype.getChromosomeSetTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n};\n\n// Get chromosome set translate's y offset\nLayout.prototype.getChromosomeSetYTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n};\n","function HorizontalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'HorizontalLayout';\n  this._margin = {\n    left: 20,\n    top: 30\n  };\n}\n\nHorizontalLayout.prototype = Object.create(Layout.prototype);\n\nHorizontalLayout.prototype._getLeftMargin = function() {\n  var margin = Layout.prototype._getLeftMargin.call(this);\n  if (this._config.ploidy > 1) {\n    margin *= 1.8;\n  }\n\n  return margin;\n};\n\nHorizontalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var xOffset = 30;\n\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.height / (chrBox.width + xOffset / 2)) * 0.9;\n  var scaleY = this._getYScale();\n\n  var yOffset = (chrNumber + 1) * ((this._config.chrWidth * 2) * scaleY);\n\n  var transform = (\n    'rotate(90) ' +\n    'translate(' + xOffset + ', -' + yOffset + ') ' +\n    'scale(' + scaleX + ', ' + scaleY + ')'\n  );\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  d3.select(this._ideo.getSvg())\n        .append('g')\n        .attr('class', 'tmp')\n        .selectAll('text')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', function(d, i) {\n          return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n        })\n        .attr('x', 30)\n        .attr('y', function(d, i) {\n          return (i + 1 + labels.length % 2) * 12;\n        })\n        .style('text-anchor', 'middle')\n        .style('opacity', 0)\n        .text(String)\n        .transition()\n        .style('opacity', 1);\n};\n\nHorizontalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nHorizontalLayout.prototype.getHeight = function(taxId) {\n    // Get last chromosome set offset.\n  var numChromosomes = this._config.chromosomes[taxId].length;\n  var lastSetOffset = this.getChromosomeSetYTranslate(numChromosomes - 1);\n\n    // Get last chromosome set size.\n  var lastSetSize = this._getChromosomeSetSize(numChromosomes - 1);\n\n    // Increase offset by last chromosome set size\n  lastSetOffset += lastSetSize;\n\n  return lastSetOffset + this._getAdditionalOffset() * 2;\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'end';\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY1 = function() {\n  return 2;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY2 = function() {\n  return 10;\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelTranslate = function(band) {\n  var x = this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n  var y = -10;\n\n  return {\n    x: x,\n    y: y,\n    translate: 'translate(' + x + ',' + y + ')'\n  };\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var leftMargin = this._getLeftMargin();\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return \"translate(\" + leftMargin + \", \" + chromosomeSetYTranslate + \")\";\n};\n\nHorizontalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  // If no detailed description provided just use one formula for all cases.\n  if (!this._config.ploidyDesc) {\n    return this._config.chrMargin * (setNumber + 1);\n  }\n\n  // Id detailed description provided start to calculate offsets\n  //  for each chromosome set separately. This should be done only once.\n  if (!this._translate) {\n    // First offset equals to zero.\n    this._translate = [1];\n\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      this._translate[i] =\n        this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelXPosition(i);\n  } else {\n    return -20;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return (this._ploidy.getSetSize(i) * this._config.chrWidth) / 2 + 3;\n  } else {\n    return this._ploidy.getSetSize(i) * this._config.chrWidth;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -8;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelYPosition = function() {\n  return this._config.chrWidth;\n};\n","\nfunction VerticalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'VerticalLayout';\n    // Layout margins\n  this._margin = {\n    top: 30,\n    left: 15\n  };\n}\n\nVerticalLayout.prototype = Object.create(Layout.prototype);\n\nVerticalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n\n  var xOffset = 20;\n\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  var transform =\n    \"translate(\" + xOffset + \", 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  var y = (xOffset + self._config.chrWidth) * 1.3;\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(labels)\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', y).style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nVerticalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nVerticalLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nVerticalLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nVerticalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var marginTop = this._margin.top;\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nVerticalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation/histogram tracks\n  var pad = this._getAdditionalOffset(),\n    margin = this._config.chrMargin,\n    width = this._config.chrWidth,\n    translate;\n\n    // If no detailed description provided just use one formula for all cases\n  if (!this._config.ploidyDesc) {\n   // TODO:\n   // This part of code contains a lot magic numbers and if\n   // statements for exactly corresponing to original ideogram examples.\n   // But all this stuff should be removed. Calculation of translate\n   // should be a simple formula applied for all cases listed below.\n   // Now they are diffirent because of Layout:_getAdditionalOffset do\n   // not meet for cases when no annotation, when annotation exists and\n   // when histogram used\n\n    if (this._config.annotationsLayout === \"histogram\") {\n      return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n    } else {\n      translate = width + setNumber * (margin + width) + pad * 2;\n      if (pad > 0) {\n        return translate;\n      } else {\n        return translate + 4 + (2 * setNumber);\n      }\n    }\n  }\n\n    // If detailed description provided start to calculate offsets\n    // for each chromosome set separately. This should be done only once\n  if (!this._translate) {\n    // First offset equals to zero\n    this._translate = [this._ploidy.getSetSize(0) * width * 2];\n    var prevTranslate;\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      prevTranslate = this._translate[i - 1];\n      this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nVerticalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function PairedLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'PairedLayout';\n\n  this._margin = {\n    left: 30\n  };\n}\n\nPairedLayout.prototype = Object.create(Layout.prototype);\n\nPairedLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n\n    // Get ideo container and chromosome set dimensions\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n    // Evaluate dimensions scale coefficients\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n    // Evaluate y offset of chromosome. It is different for first and the second one\n  var yOffset = setNumber ? 150 : 25;\n\n  var transform =\n    'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n    .transition()\n    .attr(\"transform\", transform)\n    .on('end', function() {\n        // Run callback function if provided\n      if (callback) {\n        callback();\n      }\n\n      var translateY = (6 * Number(!setNumber));\n\n      // Rotate band labels\n      d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n        .attr('transform', 'rotate(90) translate(0, ' + translateY + ')')\n        .attr(\"text-anchor\", \"middle\");\n\n      // Hide syntenic regions\n      d3.selectAll('.syntenicRegion').style(\"display\", 'none');\n    });\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(this.getChromosomeLabels(chrElement))\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', yOffset + (self._config.chrWidth * scaleX / 2) * 1.15)\n    .style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nPairedLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n    // Get intial transformation string for chromosome set\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', function() {\n            // Run callback fnuction if provided\n          callback();\n            // Show syntenic regions\n          d3.selectAll('.syntenicRegion').style(\"display\", null);\n            // Reset changed attributes to original state\n          d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n            .attr('transform', null)\n            .attr(\"text-anchor\", setNumber ? null : 'end');\n        });\n\n  d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nPairedLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.left * 1.5;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n  return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n  var width = this._config.chrWidth;\n  return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n  return chrNumber % 2 ? null : 'end';\n};\n\nPairedLayout.prototype.getChromosomeBandLabelTranslate = function(band,\n  chrNumber) {\n  var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n  var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n  return {\n    x: y,\n    y: y,\n    translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n  };\n};\n\nPairedLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nPairedLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nPairedLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  return 200 * (setNumber + 1);\n};\n","function SmallLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'SmallLayout';\n\n  this._margin = {\n    left: 36.5,\n    top: 10\n  };\n}\n\nSmallLayout.prototype = Object.create(Layout.prototype);\n\nSmallLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  transform = \"translate(5, 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.getHeight = function() {\n  return this._config.rows * (this._config.chrHeight + this._margin.top * 1.5);\n};\n\nSmallLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nSmallLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nSmallLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n    // Get organisms id list\n  var organisms = [];\n  this._ideo.getTaxids(function(taxIdList) {\n    organisms = taxIdList;\n  });\n    // Get first organism chromosomes amount\n  var size = this._ideo.config.chromosomes[organisms[0]].length;\n    // Amount of chromosomes per number\n  var rowSize = size / this._config.rows;\n\n  var xOffset;\n  var yOffset;\n\n  if (setNumber > rowSize - 1) {\n    xOffset = this._margin.left + this._config.chrHeight * 1.4;\n    yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n  } else {\n    xOffset = this._margin.left;\n    yOffset = this.getChromosomeSetYTranslate(setNumber);\n  }\n\n  return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n};\n\nSmallLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation tracks\n  var additionalPadding = this._getAdditionalOffset();\n    // If no detailed description provided just use one formula for all cases\n  return (\n    this._margin.left * (setNumber) + this._config.chrWidth +\n    additionalPadding * 2 + additionalPadding * setNumber\n  );\n};\n\nSmallLayout.prototype.getChromosomeSetLabelXPosition = function(setNumber) {\n  return (\n    ((this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2) +\n    (this._config.ploidy > 1 ? 0 : this._config.chrWidth)\n  );\n};\n\nSmallLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function Ploidy(config) {\n  this._config = config;\n  this._description = this._normalize(this._config.ploidyDesc);\n}\n\n// Get number of chromosomes in a chromosome set\nPloidy.prototype.getChromosomesNumber = function(setNumber) {\n  if (this._config.ploidyDesc) {\n    var chrSetCode = this._config.ploidyDesc[setNumber];\n    if (chrSetCode instanceof Object) {\n      return Object.keys(chrSetCode)[0].length;\n    } else {\n      return chrSetCode.length;\n    }\n  } else {\n    return this._config.ploidy || 1;\n  }\n};\n\n// Normalize use defined description\nPloidy.prototype._normalize = function(description) {\n    // Return the same if no description provided\n  if (!description) {\n    return description;\n  }\n\n    // Array of normalized description objects\n  var normalized = [];\n\n     // Loop through description and normalize\n  for (var key in description) {\n    if (typeof description[key] === 'string') {\n      normalized.push({\n        ancestors: description[key],\n        existence: this._getexistenceArray(description[key].length)\n      });\n    } else {\n      normalized.push({\n        ancestors: Object.keys(description[key])[0],\n        existence: description[key][Object.keys(description[key])[0]]\n      });\n    }\n  }\n\n  return normalized;\n};\n\n// Get array filled by '11' elements\nPloidy.prototype._getexistenceArray = function(length) {\n  var array = [];\n\n  for (var i = 0; i < length; i++) {\n    array.push('11');\n  }\n\n  return array;\n};\n\nPloidy.prototype.getSetSize = function(chrSetNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors.length;\n  } else {\n    return 1;\n  }\n};\n\n// Get ancestor letter\nPloidy.prototype.getAncestor = function(chrSetNumber, chrNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors[chrNumber];\n  } else {\n    return '';\n  }\n};\n\n// Check if chromosome's arm should be rendered.\n// If no description was provided, method returns true and\n// something another depending on user provided description.\nPloidy.prototype.exists = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._description) {\n    return Number(this._description[chrSetNumber].existence[chrNumber][armNumber]) > 0;\n  } else {\n    return true;\n  }\n};\n","function Color(config) {\n    // Ideogram config\n  this._config = config;\n  this._ploidy = new Ploidy(this._config);\n}\n\nColor.prototype.getArmColor = function(chrSetNumber, chrNmber, armNumber) {\n  if (this._config.armColors) {\n    return this._config.armColors[armNumber];\n  } else if (this._config.ancestors) {\n    return this._getPolyploidArmColor(chrSetNumber, chrNmber, armNumber);\n  } else {\n    return null;\n  }\n};\n\nColor.prototype.getBorderColor = function(chrSetNumber, chrNmber, armNumber) {\n  if (chrNmber < this._config.ploidy) {\n    return '#000';\n  } else if (this._ploidy.exists(chrSetNumber, chrNmber, armNumber)) {\n    return '#000';\n  } else {\n    return '#fff';\n  }\n};\n\nColor.prototype._getPolyploidArmColor = function(chrSetNumber, chrNmber, armNumber) {\n  if (!this._ploidy.exists(chrSetNumber, chrNmber, armNumber)) {\n    return 'transparent';\n  } else {\n    return this._config.ancestors[this._ploidy.getAncestor(chrSetNumber, chrNmber, armNumber)];\n  }\n};\n","function Chromosome(adapter, config, ideo) {\n  this._adapter = adapter;\n  this._model = this._adapter.getModel();\n  this._config = config;\n  this._ideo = ideo;\n  this._color = new Color(this._config);\n  this._bumpCoefficient = 5;\n}\n\n// Factory method\nChromosome.getInstance = function(adapter, config, ideo) {\n  if (adapter.getModel().centromerePosition === 'telocentric') {\n    return new TelocentricChromosome(adapter, config, ideo);\n  } else {\n    return new MetacentricChromosome(adapter, config, ideo);\n  }\n};\n\nChromosome.prototype._addPArmShape = function(clipPath, isPArmRendered) {\n  if (isPArmRendered) {\n    return clipPath.concat(this._getPArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype._addQArmShape = function(clipPath, isQArmRendered) {\n  if (isQArmRendered) {\n    return clipPath.concat(this._getQArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype.render = function(container, chrSetNumber, chrNumber) {\n    // Append bands container and apply clip-path on it\n  container = container.append('g')\n    .attr('class', 'bands')\n    .attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n    // Render chromosome arms\n  var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n  var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n    // Render range set\n  this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n    // Push arms shape string into clipPath array\n  var clipPath = [];\n  clipPath = this._addPArmShape(clipPath, isPArmRendered);\n  clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n    // Render chromosome border\n  var self = this;\n  container.append('g')\n        .attr('class', 'chromosome-border')\n        .selectAll('path')\n        .data(clipPath)\n        .enter()\n        .append('path')\n        .attr('fill', 'transparent')\n        .attr('stroke', function(d, i) {\n          return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n        }).attr('stroke-width', 1)\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n\n  return clipPath;\n};\n\nChromosome.prototype._renderRangeSet = function(container, chrSetNumber,\n  chrNumber) {\n  if (!('rangeSet' in this._config)) {\n    return;\n  }\n\n  var rangeSet = this._config.rangeSet.filter(function(range) {\n    return range.chr - 1 === chrSetNumber;\n  }).map(function(range) {\n    return new Range(range);\n  });\n\n  var rangesContainer = container.append('g')\n        .attr('class', 'range-set');\n\n  var self = this;\n  var ideo = self._ideo;\n  var bandsXOffset = ideo._bandsXOffset;\n\n  rangesContainer.selectAll('rect.range')\n        .data(rangeSet)\n        .enter()\n        .append('rect')\n        .attr('class', 'range')\n        .attr('x', function(range) {\n          var startPx = ideo.convertBpToPx(self._model, range.getStart());\n          return startPx - bandsXOffset;\n        }).attr('y', 0)\n        .attr('width', function(range) {\n          var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n          return lengthPx - bandsXOffset;\n        }).attr('height', this._config.chrWidth)\n        .style('fill', function(range) {\n          return range.getColor(chrNumber);\n        });\n};\n\n// Get chromosome's shape main values\nChromosome.prototype._getShapeData = function() {\n    // First q band from bands sequence\n  var firstQBand;\n  for (var i = 0; i < this._model.bands.length; i++) {\n    if (this._model.bands[i].name[0] === 'q') {\n      firstQBand = this._model.bands[i];\n      break;\n    }\n  }\n\n  // Chromosome's right position\n  var lastBand = this._model.bands.length - 1;\n  var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n    // Properties description:\n    // x1 - left terminal start position\n    // x2 - centromere position\n    // x3 - right terminal end position\n    // w - chromosome width\n    // b - bump size\n  return {\n    x1: 0,\n    x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n    x3: rightTerminalPosition,\n    w: this._config.chrWidth,\n    b: this._config.chrWidth / this._bumpCoefficient\n  };\n};\n\nChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x2 - d.b;\n\n  return {\n    class: '',\n    path:\n      'M' + d.b + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + d.b + ',' + d.w + ' ' +\n      'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n  };\n};\n\nChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b;\n\n  return {\n    class: '',\n    path:\n      'M' + (d.x2 + d.b) + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + (d.x2 + d.b) + ',' + d.w + ' ' +\n      'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + (d.x2 + d.b) + ',0'\n  };\n};\n\n// Render arm bands\nChromosome.prototype._renderBands = function(container, chrSetNumber,\n  chrNumber, bands, arm) {\n  var self = this;\n  var armNumber = arm === 'p' ? 0 : 1;\n  var fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n\n  container.selectAll(\"path.band.\" + arm)\n    .data(bands)\n    .enter()\n    .append(\"path\")\n    .attr(\"id\", function(d) {\n      return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n    })\n    .attr(\"class\", function(d) {\n      return 'band ' + arm + '-band ' + d.stain;\n    })\n    .attr(\"d\", function(d) {\n      var start = self._ideo.round(d.px.start);\n      var length = self._ideo.round(d.px.width);\n\n      x = start + length;\n\n      return \"M \" + start + \", 0\" +\n            \"l \" + length + \" 0 \" +\n            \"l 0 \" + self._config.chrWidth + \" \" +\n            \"l -\" + length + \" 0 z\";\n    })\n    .style('fill', fill);\n};\n\n// Render chromosome's p arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderPArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'p';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n  return Boolean(bands.length);\n};\n\n// Render chromosome's q arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderQArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'q';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n  return Boolean(bands.length);\n};\n","function TelocentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'TelocentricChromosome';\n  this._pArmOffset = 3;\n}\n\nTelocentricChromosome.prototype = Object.create(Chromosome.prototype);\n\nTelocentricChromosome.prototype._addPArmShape = function(clipPath) {\n  return clipPath.concat(this._getPArmShape());\n};\n\nTelocentricChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData();\n  d.o = this._pArmOffset;\n\n  return [{\n    class: 'acen',\n    path: 'M' + d.x2 + ',1' +\n            'L' + (d.x2 - d.o) + ',1 ' +\n            'L' + (d.x2 - d.o) + ',' + (d.w - 1) + ' ' +\n            'L' + d.x2 + ',' + (d.w - 1)\n  }, {\n    class: 'gpos100',\n    path: 'M' + (d.x2 - d.o + 1) + ',0' +\n        'L' + (d.x2 - d.o) + ',0 ' +\n        'L' + (d.x2 - d.o) + ',' + d.w + ' ' +\n        'L' + (d.x2 - d.o + 1) + ',' + d.w\n  }];\n};\n\nTelocentricChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b;\n\n  return {\n    class: '',\n    path:\n      'M' + d.x2 + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + d.x2 + ',' + d.w\n  };\n};\n","function MetacentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'MetacentricChromosome';\n}\n\nMetacentricChromosome.prototype = Object.create(Chromosome.prototype);\n","// https://github.com/stefanpenner/es6-promise\n(function(){\"use strict\";function t(t){return\"function\"==typeof t||\"object\"==typeof t&&null!==t}function e(t){return\"function\"==typeof t}function n(t){G=t}function r(t){Q=t}function o(){return function(){process.nextTick(a)}}function i(){return function(){B(a)}}function s(){var t=0,e=new X(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){t.port2.postMessage(0)}}function c(){return function(){setTimeout(a,1)}}function a(){for(var t=0;J>t;t+=2){var e=tt[t],n=tt[t+1];e(n),tt[t]=void 0,tt[t+1]=void 0}J=0}function f(){try{var t=require,e=t(\"vertx\");return B=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[rt]&&k(r);var o=n._state;if(o){var i=arguments[o-1];Q(function(){x(o,r,i,n._result)})}else E(n,r,t,e);return r}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function _(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function v(t){try{return t.then}catch(e){return ut.error=e,ut}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){Q(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===it?S(t,e._result):e._state===st?j(t,e._result):E(e,void 0,function(e){g(t,e)},function(e){j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===et&&constructor.resolve===nt?b(t,n):r===ut?j(t,ut.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,_()):t(n)?w(e,n,v(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===ot&&(t._result=e,t._state=it,0!==t._subscribers.length&&Q(T,t))}function j(t,e){t._state===ot&&(t._state=st,t._result=e,Q(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+it]=n,o[i+st]=r,0===i&&t._state&&Q(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r,o,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return ct.error=n,ct}}function x(t,n,r,o){var i,s,u,c,a=e(r);if(a){if(i=P(r,o),i===ct?(c=!0,s=i.error,i=null):u=!0,n===i)return void j(n,d())}else i=o,u=!0;n._state!==ot||(a&&u?g(n,i):c?j(n,s):t===it?S(n,i):t===st&&j(n,i))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return at++}function k(t){t[rt]=at++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t){return new _t(this,t).promise}function q(t){var e=this;return new e(I(t)?function(n,r){for(var o=t.length,i=0;o>i;i++)e.resolve(t[i]).then(n,r)}:function(t,e){e(new TypeError(\"You must pass an array to race.\"))})}function F(t){var e=this,n=new e(p);return j(n,t),n}function D(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function K(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function L(t){this[rt]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&D(),this instanceof L?C(this,t):K())}function N(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[rt]||k(this.promise),I(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,U())}function U(){return new Error(\"Array Methods must be provided an Array\")}function W(){var t;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;(!n||\"[object Promise]\"!==Object.prototype.toString.call(n.resolve())||n.cast)&&(t.Promise=pt)}var z;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B,G,H,I=z,J=0,Q=function(t,e){tt[J]=t,tt[J+1]=e,J+=2,2===J&&(G?G(a):H())},R=\"undefined\"!=typeof window?window:void 0,V=R||{},X=V.MutationObserver||V.WebKitMutationObserver,Z=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),$=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,tt=new Array(1e3);H=Z?o():X?s():$?u():void 0===R&&\"function\"==typeof require?f():c();var et=l,nt=h,rt=Math.random().toString(36).substring(16),ot=void 0,it=1,st=2,ut=new M,ct=new M,at=0,ft=Y,lt=q,ht=F,pt=L;L.all=ft,L.race=lt,L.resolve=nt,L.reject=ht,L._setScheduler=n,L._setAsap=r,L._asap=Q,L.prototype={constructor:L,then:et,\"catch\":function(t){return this.then(null,t)}};var _t=N;N.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===ot&&t>n;n++)this._eachEntry(e[n],n)},N.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===nt){var o=v(t);if(o===et&&t._state!==ot)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===pt){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){e(t)}),e)}else this._willSettleAt(r(t),e)},N.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===ot&&(this._remaining--,t===st?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},N.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){n._settledAt(it,e,t)},function(t){n._settledAt(st,e,t)})};var dt=W,vt={Promise:pt,polyfill:dt};\"function\"==typeof define&&define.amd?define(function(){return vt}):\"undefined\"!=typeof module&&module.exports?module.exports=vt:\"undefined\"!=typeof this&&(this.ES6Promise=vt),dt()}).call(this);\n\n// https://github.com/kristw/d3.promise\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"d3\"],b):\"object\"==typeof exports?module.exports=b(require(\"d3\")):a.d3.promise=b(a.d3)}(this,function(a){var b=function(){function b(a,b){return function(){var c=Array.prototype.slice.call(arguments);return new Promise(function(d,e){var f=function(a,b){return a?void e(Error(a)):void d(b)};b.apply(a,c.concat(f))})}}var c={};return[\"csv\",\"tsv\",\"json\",\"xml\",\"text\",\"html\"].forEach(function(d){c[d]=b(a,a[d])}),c}();return a.promise=b,b});\n\n// https://github.com/overset/javascript-natural-sort\nfunction naturalSort(a,b){var q,r,c=/(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,d=/^\\s+|\\s+$/g,e=/\\s+/g,f=/(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,g=/^0x[0-9a-f]+$/i,h=/^0/,i=function(a){return(naturalSort.insensitive&&(\"\"+a).toLowerCase()||\"\"+a).replace(d,\"\")},j=i(a),k=i(b),l=j.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),m=k.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),n=parseInt(j.match(g),16)||1!==l.length&&Date.parse(j),o=parseInt(k.match(g),16)||n&&k.match(f)&&Date.parse(k)||null,p=function(a,b){return(!a.match(h)||1==b)&&parseFloat(a)||a.replace(e,\" \").replace(d,\"\")||0};if(o){if(n<o)return-1;if(n>o)return 1}for(var s=0,t=l.length,u=m.length,v=Math.max(t,u);s<v;s++){if(q=p(l[s]||\"\",t),r=p(m[s]||\"\",u),isNaN(q)!==isNaN(r))return isNaN(q)?1:-1;if(/[^\\x00-\\x80]/.test(q+r)&&q.localeCompare){var w=q.localeCompare(r);return w/Math.abs(w)}if(q<r)return-1;if(q>r)return 1}}\n","// Chromosome's view utility class\nfunction ChromosomeUtil(node) {\n  this._node = node;\n}\n\nChromosomeUtil.prototype.getLabel = function() {\n  var label =\n    d3\n      .select(this._node)\n      .select('text.chrLabel')\n      .text();\n  return label;\n};\n\n// Get chromosome set label\nChromosomeUtil.prototype.getSetLabel = function() {\n  var setLabel =\n    d3\n      .select(this._node.parentNode)\n      .select('text.chromosome-set-label')\n      .text();\n  return setLabel;\n};\n","// Developed by Eric Weitz (https://github.com/eweitz)\n\n/* Constructs a prototypal Ideogram class */\nvar Ideogram = function(config) {\n  var orientation,\n    chrWidth, chrHeight,\n    container, rect;\n\n  // Clone the config object, to allow multiple instantiations\n  // without picking up prior ideogram's settings\n  this.config = JSON.parse(JSON.stringify(config));\n\n  // Organism ploidy description\n  this._ploidy = new Ploidy(this.config);\n\n  // Chromosome's layout\n  this._layout = Layout.getInstance(this.config, this);\n\n  // TODO: Document this\n  this._bandsXOffset = 30;\n\n  this.debug = false;\n\n  if (!this.config.ploidy) {\n    this.config.ploidy = 1;\n  }\n\n  if (!this.config.bandDir) {\n    this.config.bandDir = \"../data/bands/\";\n  }\n\n  if (!this.config.container) {\n    this.config.container = \"body\";\n  }\n\n  if (!this.config.resolution) {\n    this.config.resolution = 850;\n  }\n\n  if (\"showChromosomeLabels\" in this.config === false) {\n    this.config.showChromosomeLabels = true;\n  }\n\n  if (!this.config.chrMargin) {\n    this.config.chrMargin = 10;\n  }\n\n  if (!this.config.orientation) {\n    orientation = \"vertical\";\n    this.config.orientation = orientation;\n  }\n\n  if (!this.config.chrHeight) {\n    container = this.config.container;\n    rect = document.querySelector(container).getBoundingClientRect();\n\n    if (orientation === \"vertical\") {\n      chrHeight = rect.height;\n    } else {\n      chrHeight = rect.width;\n    }\n\n    if (container === \"body\") {\n      chrHeight = 500;\n    }\n    this.config.chrHeight = chrHeight;\n  }\n\n  if (!this.config.chrWidth) {\n    chrWidth = 10;\n    chrHeight = this.config.chrHeight;\n\n    if (chrHeight < 900 && chrHeight > 500) {\n      chrWidth = Math.round(chrHeight / 40);\n    } else if (chrHeight >= 900) {\n      chrWidth = Math.round(chrHeight / 45);\n    }\n    this.config.chrWidth = chrWidth;\n  }\n\n  if (!this.config.showBandLabels) {\n    this.config.showBandLabels = false;\n  }\n\n  if (!this.config.brush) {\n    this.config.brush = false;\n  }\n\n  if (!this.config.rows) {\n    this.config.rows = 1;\n  }\n\n  this.bump = Math.round(this.config.chrHeight / 125);\n  this.adjustedBump = false;\n  if (this.config.chrHeight < 200) {\n    this.adjustedBump = true;\n    this.bump = 4;\n  }\n\n  if (config.showBandLabels) {\n    this.config.chrMargin += 20;\n  }\n\n  if (config.chromosome) {\n    this.config.chromosomes = [config.chromosome];\n    if (\"showBandLabels\" in config === false) {\n      this.config.showBandLabels = true;\n    }\n    if (\"rotatable\" in config === false) {\n      this.config.rotatable = false;\n    }\n  }\n\n  if (!this.config.showNonNuclearChromosomes) {\n    this.config.showNonNuclearChromosomes = false;\n  }\n\n  this.initAnnotSettings();\n\n  this.config.chrMargin = (\n    this.config.chrMargin +\n    this.config.chrWidth +\n    this.config.annotTracksHeight * 2\n  );\n\n  if (config.onLoad) {\n    this.onLoadCallback = config.onLoad;\n  }\n\n  if (config.onDrawAnnots) {\n    this.onDrawAnnotsCallback = config.onDrawAnnots;\n  }\n\n  if (config.onBrushMove) {\n    this.onBrushMoveCallback = config.onBrushMove;\n  }\n\n  this.coordinateSystem = \"iscn\";\n\n  this.maxLength = {\n    bp: 0,\n    iscn: 0\n  };\n\n  // The E-Utilies In Depth: Parameters, Syntax and More:\n  // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n  this.eutils = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/\";\n  this.esearch = this.eutils + \"esearch.fcgi?retmode=json\";\n  this.esummary = this.eutils + \"esummary.fcgi?retmode=json\";\n  this.elink = this.eutils + \"elink.fcgi?retmode=json\";\n\n  this.organisms = {\n    9606: {\n      commonName: \"Human\",\n      scientificName: \"Homo sapiens\",\n      scientificNameAbbr: \"H. sapiens\",\n      assemblies: { // technically, primary assembly unit of assembly\n        default: \"GCF_000001305.14\", // GRCh38\n        GRCh38: \"GCF_000001305.14\",\n        GRCh37: \"GCF_000001305.13\"\n      }\n    },\n    10090: {\n      commonName: \"Mouse\",\n      scientificName: \"Mus musculus\",\n      scientificNameAbbr: \"M. musculus\",\n      assemblies: {\n        default: \"GCF_000000055.19\"\n      }\n    },\n    7227: {\n      commonName: \"Fly\",\n      scientificName: \"Drosophlia melanogaster\",\n      scientificNameAbbr: \"D. melanogaster\"\n    },\n    4641: {\n      commonName: \"banana\",\n      scientificName: \"Musa acuminata\",\n      scientificNameAbbr: \"M. acuminata\",\n      assemblies: {\n        default: \"mock\"\n      }\n    }\n  };\n\n  // A flat array of chromosomes\n  // (this.chromosomes is an object of\n  // arrays of chromosomes, keyed by organism)\n  this.chromosomesArray = [];\n\n  this.bandsToShow = [];\n\n  this.chromosomes = {};\n  this.numChromosomes = 0;\n  this.bandData = {};\n\n  this.init();\n};\n\n/**\n* Gets chromosome band data from a\n* TSV file, or, if band data is prefetched, from an array\n*\n* UCSC: #chrom chromStart  chromEnd  name  gieStain\n* http://genome.ucsc.edu/cgi-bin/hgTables\n*  - group: Mapping and Sequencing\n*  - track: Chromosome Band (Ideogram)\n*\n* NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n* ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n*/\nIdeogram.prototype.getBands = function(content, taxid, chromosomes) {\n  var lines = {},\n    delimiter, tsvLines, columns, line, stain, chr,\n    i, init, tsvLinesLength, source,\n    start, stop, firstColumn;\n\n  if (content.slice(0, 8) === \"chrBands\") {\n    source = \"native\";\n  }\n\n  if (typeof chrBands === \"undefined\" && source !== \"native\") {\n    delimiter = /\\t/;\n    tsvLines = content.split(/\\r\\n|\\n/);\n    init = 1;\n  } else {\n    delimiter = / /;\n    if (source === \"native\") {\n      tsvLines = eval(content);\n    } else {\n      tsvLines = content;\n    }\n    init = 0;\n  }\n\n  firstColumn = tsvLines[0].split(delimiter)[0];\n  if (firstColumn === '#chromosome') {\n    source = 'ncbi';\n  } else if (firstColumn === '#chrom') {\n    source = 'ucsc';\n  } else {\n    source = 'native';\n  }\n\n  tsvLinesLength = tsvLines.length;\n\n  if (source === 'ncbi' || source === 'native') {\n    for (i = init; i < tsvLinesLength; i++) {\n      columns = tsvLines[i].split(delimiter);\n\n      chr = columns[0];\n\n      if (\n        // If a specific set of chromosomes has been requested, and\n        // the current chromosome\n        typeof (chromosomes) !== \"undefined\" &&\n        chromosomes.indexOf(chr) === -1\n      ) {\n        continue;\n      }\n\n      if (chr in lines === false) {\n        lines[chr] = [];\n      }\n\n      stain = columns[7];\n      if (columns[8]) {\n        // For e.g. acen and gvar, columns[8] (density) is undefined\n        stain += columns[8];\n      }\n\n      line = {\n        chr: chr,\n        bp: {\n          start: parseInt(columns[5], 10),\n          stop: parseInt(columns[6], 10)\n        },\n        iscn: {\n          start: parseInt(columns[3], 10),\n          stop: parseInt(columns[4], 10)\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[1] + columns[2],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  } else if (source === 'ucsc') {\n    for (i = init; i < tsvLinesLength; i++) {\n      // #chrom chromStart  chromEnd  name  gieStain\n      // e.g. for fly:\n      // chr4\t69508\t108296\t102A1\tn/a\n      columns = tsvLines[i].split(delimiter);\n\n      if (columns[0] !== 'chr' + chromosomeName) {\n        continue;\n      }\n\n      stain = columns[4];\n      if (stain === 'n/a') {\n        stain = 'gpos100';\n      }\n      start = parseInt(columns[1], 10);\n      stop = parseInt(columns[2], 10);\n\n      line = {\n        chr: columns[0].split('chr')[1],\n        bp: {\n          start: start,\n          stop: stop\n        },\n        iscn: {\n          start: start,\n          stop: stop\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[3],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  }\n\n  return lines;\n};\n\n/**\n* Generates a model object for each chromosome\n* containing information on its name, DOM ID,\n* length in base pairs or ISCN coordinates,\n* cytogenetic bands, centromere position, etc.\n*/\nIdeogram.prototype.getChromosomeModel = function(bands, chromosome, taxid,\n  chrIndex) {\n  var chr = {},\n    band,\n    width, pxStop,\n    chrHeight = this.config.chrHeight,\n    maxLength = this.maxLength,\n    chrLength,\n    cs, hasBands;\n\n  cs = this.coordinateSystem;\n  hasBands = (typeof bands !== \"undefined\");\n\n  if (hasBands) {\n    chr.name = chromosome;\n    chr.length = bands[bands.length - 1][cs].stop;\n    chr.type = \"nuclear\";\n  } else {\n    chr = chromosome;\n  }\n\n  chr.chrIndex = chrIndex;\n\n  chr.id = \"chr\" + chr.name + \"-\" + taxid;\n\n  if (this.config.fullChromosomeLabels === true) {\n    var orgName = this.organisms[taxid].scientificNameAbbr;\n    chr.name = orgName + \" chr\" + chr.name;\n  }\n\n  chrLength = chr.length;\n\n  pxStop = 0;\n\n  if (hasBands) {\n    for (var i = 0; i < bands.length; i++) {\n      band = bands[i];\n      var csLength = band[cs].stop - band[cs].start;\n      width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n      bands[i].px = {start: pxStop, stop: pxStop + width, width: width};\n\n      pxStop = bands[i].px.stop;\n\n      if (hasBands && band.stain === \"acen\" && band.name[0] === \"p\") {\n        chr.pcenIndex = i;\n      }\n    }\n  } else {\n    pxStop = chrHeight * chr.length / maxLength[cs];\n  }\n\n  chr.width = pxStop;\n\n  chr.scale = {};\n\n  // TODO:\n  //\n  // A chromosome-level scale property is likely\n  // nonsensical for any chromosomes that have cytogenetic band data.\n  // Different bands tend to have ratios between number of base pairs\n  // and physical length.\n  //\n  // However, a chromosome-level scale property is likely\n  // necessary for chromosomes that do not have band data.\n  //\n  // This needs further review.\n  if (this.config.multiorganism === true) {\n    chr.scale.bp = 1;\n    // chr.scale.bp = band.iscn.stop / band.bp.stop;\n    chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n  } else {\n    chr.scale.bp = chrHeight / maxLength.bp;\n    if (hasBands) {\n      chr.scale.iscn = chrHeight / maxLength.iscn;\n    }\n  }\n  chr.bands = bands;\n\n  chr.centromerePosition = \"\";\n  if (hasBands && bands[0].bp.stop - bands[0].bp.start === 1) {\n    // As with mouse\n    chr.centromerePosition = \"telocentric\";\n\n    // Remove placeholder pter band\n    chr.bands = chr.bands.slice(1);\n  }\n\n  return chr;\n};\n\n/**\n* Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n* If ideogram configuration has 'fullChromosomeLabels: True',\n* then labels includes name of taxon, which can help when\n* depicting orthologs.\n*/\nIdeogram.prototype.drawChromosomeLabels = function() {\n  var ideo = this;\n\n  var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n  var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n  var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes set's labels\n  d3.selectAll(\".chromosome-set-container\")\n        .append(\"text\")\n        .data(ideo.chromosomesArray)\n        .attr(\"class\", 'chromosome-set-label ' + chromosomeLabelClass)\n        .attr(\"transform\", chrSetLabelTranslate)\n        .attr(\"x\", chrSetLabelXPosition)\n        .attr(\"y\", function(d, i) {\n          return ideo._layout.getChromosomeSetLabelYPosition(i);\n        }).attr(\"text-anchor\", ideo._layout.getChromosomeSetLabelAnchor())\n        .each(function(d, i) {\n            // Get label lines\n          var lines;\n          if (d.name.indexOf(' ') === -1) {\n            lines = [d.name];\n          } else {\n            lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n          }\n\n          // Render label lines\n          d3.select(this).selectAll('tspan')\n            .data(lines)\n            .enter()\n            .append('tspan')\n            .attr('dy', function(d, i) {\n              return i * -1.2 + 'em';\n            })\n            .attr('x', ideo._layout.getChromosomeSetLabelXPosition())\n            .attr('class', function(a, i) {\n              var fullLabels = ideo.config.fullChromosomeLabels;\n              return i === 1 && fullLabels ? 'italic' : null;\n            }).text(String);\n        });\n\n  var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes labels\n  d3.selectAll(\".chromosome-set-container\")\n        .each(function(a, chrSetNumber) {\n          d3.select(this).selectAll(\".chromosome\")\n                .append(\"text\")\n                .attr(\"class\", \"chrLabel\")\n                .attr(\"transform\", setLabelTranslate)\n                .attr(\"x\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelXPosition(i);\n                }).attr(\"y\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelYPosition(i);\n                }).text(function(d, chrNumber) {\n                  return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n                }).attr(\"text-anchor\", \"middle\");\n        });\n};\n\n/**\n* Draws labels and stalks for cytogenetic bands.\n*\n* Band labels are text like \"p11.11\".\n* Stalks are small lines that visually connect labels to their bands.\n*/\nIdeogram.prototype.drawBandLabels = function(chromosomes) {\n  var i, chr, chrs, taxid, ideo, chrModel;\n\n  ideo = this;\n\n  chrs = [];\n\n  for (taxid in chromosomes) {\n    for (chr in chromosomes[taxid]) {\n      chrs.push(chromosomes[taxid][chr]);\n    }\n  }\n\n  var textOffsets = {};\n\n  chrIndex = 0;\n  for (i = 0; i < chrs.length; i++) {\n    chrIndex += 1;\n\n    chrModel = chrs[i];\n\n    chr = d3.select(\"#\" + chrModel.id);\n\n    var chrMargin = this.config.chrMargin * chrIndex,\n      lineY1, lineY2;\n\n    lineY1 = chrMargin;\n    lineY2 = chrMargin - 8;\n\n    if (\n      chrIndex === 1 &&\n      \"perspective\" in this.config && this.config.perspective === \"comparative\"\n    ) {\n      lineY1 += 18;\n      lineY2 += 18;\n    }\n\n    textOffsets[chrModel.id] = [];\n\n    chr.selectAll(\"text\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n        .attr(\"class\", function(d, i) {\n          return \"bandLabel bsbsl-\" + i;\n        })\n        .attr(\"transform\", function(d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          // var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        })\n        .append(\"text\")\n        .attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i))\n        .text(function(d) {\n          return d.name;\n        });\n\n    // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n    // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n    chr.selectAll(\"line.bandLabelStalk\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", function(d, i) {\n        return \"bandLabelStalk bsbsl-\" + i;\n      })\n      .attr(\"transform\", function(d) {\n        var x, y;\n\n        x = ideo.round(d.px.start + d.px.width / 2);\n\n        textOffsets[chrModel.id].push(x + 13);\n        y = -10;\n\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n        .append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", function() {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        }).attr(\"x2\", 0)\n        .attr(\"y2\", function() {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n  }\n\n  for (i = 0; i < chrs.length; i++) {\n    chrModel = chrs[i];\n\n    var textsLength = textOffsets[chrModel.id].length,\n      overlappingLabelXRight,\n      index,\n      indexesToShow = [],\n      prevHiddenBoxIndex,\n      xLeft,\n      prevLabelXRight,\n      textPadding;\n\n    overlappingLabelXRight = 0;\n\n    textPadding = 5;\n\n    for (index = 0; index < textsLength; index++) {\n      // Ensures band labels don't overlap\n\n      xLeft = textOffsets[chrModel.id][index];\n\n      if (xLeft < overlappingLabelXRight + textPadding === false) {\n        indexesToShow.push(index);\n      } else {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n        continue;\n      }\n\n      if (prevHiddenBoxIndex !== index) {\n        // This getBoundingClientRect() forces Chrome's\n        // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n        // TODO: This forced synchronous layout would be nice to eliminate.\n        // prevTextBox = texts[index].getBoundingClientRect();\n        // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n        // TODO: Account for number of characters in prevTextBoxWidth,\n        // maybe also zoom.\n        prevTextBoxLeft = textOffsets[chrModel.id][index];\n        prevTextBoxWidth = 36;\n\n        prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n      }\n\n      if (\n        xLeft < prevLabelXRight + textPadding\n      ) {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n      } else {\n        indexesToShow.push(index);\n      }\n    }\n\n    var selectorsToShow = [],\n      ithLength = indexesToShow.length,\n      j;\n\n    for (j = 0; j < ithLength; j++) {\n      index = indexesToShow[j];\n      selectorsToShow.push(\"#\" + chrModel.id + \" .bsbsl-\" + index);\n    }\n\n    this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n  }\n};\n\n// Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\nIdeogram.prototype.rotateChromosomeLabels = function(chr, chrIndex,\n  orientation, scale) {\n  var chrMargin, chrWidth, ideo, x, y,\n    numAnnotTracks, scaleSvg, tracksHeight;\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n  numAnnotTracks = this.config.numAnnotTracks;\n\n  ideo = this;\n\n  if (\n    typeof (scale) !== \"undefined\" &&\n    scale.hasOwnProperty(\"x\") &&\n    !(scale.x === 1 && scale.y === 1)\n  ) {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n    x = -6;\n    y = (scale === \"\" ? -16 : -14);\n  } else {\n    x = -8;\n    y = -16;\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  }\n\n  if (orientation === \"vertical\" || orientation === \"\") {\n    var ci = chrIndex - 1;\n\n    if (numAnnotTracks > 1 || orientation === \"\") {\n      ci -= 1;\n    }\n\n    chrMargin2 = -4;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n    }\n\n    chrMargin = ideo.config.chrMargin * ci;\n\n    if (numAnnotTracks > 1 === false) {\n      chrMargin += 1;\n    }\n\n    y = chrMargin + chrMargin2;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", scaleSvg)\n      .selectAll(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y);\n  } else {\n    chrIndex -= 1;\n\n    chrMargin2 = -chrWidth - 2;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + 8;\n    }\n\n    tracksHeight = ideo.config.annotTracksHeight;\n    if (ideo.config.annotationsLayout !== \"overlay\") {\n      tracksHeight *= 2;\n    }\n\n    chrMargin = ideo.config.chrMargin * chrIndex;\n    x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n    x /= scale.x;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", \"rotate(-90)\" + scaleSvg)\n      .selectAll(\"tspan\")\n      .attr(\"x\", x)\n      .attr(\"y\", y);\n  }\n};\n\n/**\n* Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n*\n* This method includes proportional scaling, which ensures that\n* while the parent chromosome group is scaled strongly in one dimension to fill\n* available space, the text in the chromosome's band labels is\n* not similarly distorted, and remains readable.\n*/\nIdeogram.prototype.rotateBandLabels = function(chr, chrIndex, scale) {\n  var chrMargin, scaleSvg,\n    orientation, bandLabels,\n    ideo = this;\n\n  bandLabels = chr.selectAll(\".bandLabel\");\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n\n  orientation = chr.attr(\"data-orientation\");\n\n  if (typeof (scale) === \"undefined\") {\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  } else {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n  }\n\n  if (\n    chrIndex === 1 &&\n    \"perspective\" in this.config && this.config.perspective === \"comparative\"\n  ) {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = (8 - chrMargin) - 26;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"text-anchor\", \"end\");\n  } else if (orientation === \"vertical\") {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = 8 - chrMargin;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n  } else {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n        y = chrMargin - 10;\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n\n    chr.selectAll(\".bandLabelStalk line\")\n      .attr(\"transform\", scaleSvg);\n  }\n};\n\nIdeogram.prototype.round = function(coord) {\n  // Rounds an SVG coordinates to two decimal places\n  // e.g. 42.1234567890 -> 42.12\n  // Per http://stackoverflow.com/a/9453447, below method is fastest\n  return Math.round(coord * 100) / 100;\n};\n\n/**\n* Renders all the bands and outlining boundaries of a chromosome.\n*/\nIdeogram.prototype.drawChromosome = function(chrModel, chrIndex, container, k) {\n    // Get chromosome model adapter class\n  var adapter = ModelAdapter.getInstance(chrModel);\n\n    // Append chromosome's container\n  var chromosome = container\n        .append(\"g\")\n        .attr(\"id\", chrModel.id)\n        .attr(\"class\", \"chromosome \" + adapter.getCssClass())\n        .attr(\"transform\", \"translate(0, \" + k * 20 + \")\");\n\n    // Render chromosome\n  return Chromosome.getInstance(adapter, this.config, this)\n        .render(chromosome, chrIndex, k);\n};\n\n/**\n* Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n* Useful for focusing or defocusing a particular chromosome\n*/\nIdeogram.prototype.rotateAndToggleDisplay = function(chromosome) {\n  /*\n   * Do nothing if taxId not defined. But it should be defined.\n   * To fix that bug we should have a way to find chromosome set number.\n   */\n  if (!this.config.taxid) {\n    return;\n  }\n\n  var chrSetNumber =\n    Number(d3.select(chromosome.parentNode).attr('data-set-number'));\n\n  var chrNumber = Array.prototype.slice.call(\n          d3.select(chromosome.parentNode).selectAll(\"g.chromosome\")._groups[0]\n      ).indexOf(chromosome);\n\n  return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertBpToPx = function(chr, bp) {\n  var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart,\n    iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    offset = this._bandsXOffset;\n    bpStart = band.bp.start;\n    bpStop = band.bp.stop;\n    bpLength = bpStop - bpStart;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n    iscnLength = iscnStop - iscnStart;\n    pxStart = band.px.start;\n    pxLength = band.px.width;\n\n    if (bp >= bpStart && bp <= bpStop) {\n      bpToIscnScale = iscnLength / bpLength;\n      iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n      px = offset + pxStart + (pxLength * (iscn - iscnStart) / (iscnLength));\n\n      return px;\n    }\n  }\n\n  throw new Error(\n    \"Base pair out of range.  \" +\n    \"bp: \" + bp + \"; length of chr\" + chr.name + \": \" + band.bp.stop\n  );\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertPxToBp = function(chr, px) {\n  var i, band, pxToIscnScale, iscn,\n    pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    pxStart = band.px.start;\n    pxStop = band.px.stop;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n\n    if (px >= pxStart && px <= pxStop) {\n      iscnLength = iscnStop - iscnStart;\n      pxLength = pxStop - pxStart;\n      bpLength = band.bp.stop - band.bp.start;\n\n      pxToIscnScale = iscnLength / pxLength;\n      iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n      bp = band.bp.start + (bpLength * (iscn - iscnStart) / iscnLength);\n\n      return Math.round(bp);\n    }\n  }\n\n  throw new Error(\n    \"Pixel out of range.  \" +\n    \"px: \" + bp + \"; length of chr\" + chr.name + \": \" + pxStop\n  );\n};\n\n/**\n* Draws a trapezoid connecting a genomic range on\n* one chromosome to a genomic range on another chromosome;\n* a syntenic region.\n*/\nIdeogram.prototype.drawSynteny = function(syntenicRegions) {\n  var t0 = new Date().getTime();\n\n  var r1, r2,\n    syntenies,\n    i, color, opacity,\n    regionID,\n    ideo = this;\n\n  syntenies = d3.select(\"svg\")\n    .insert(\"g\", \":first-child\")\n    .attr(\"class\", \"synteny\");\n\n  for (i = 0; i < syntenicRegions.length; i++) {\n    regions = syntenicRegions[i];\n\n    r1 = regions.r1;\n    r2 = regions.r2;\n\n    color = \"#CFC\";\n    if (\"color\" in regions) {\n      color = regions.color;\n    }\n\n    opacity = 1;\n    if (\"opacity\" in regions) {\n      opacity = regions.opacity;\n    }\n\n    r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n    r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n    r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n    r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n    regionID = (\n      r1.chr.id + \"_\" + r1.start + \"_\" + r1.stop + \"_\" +\n      \"__\" +\n      r2.chr.id + \"_\" + r2.start + \"_\" + r2.stop\n    );\n\n    syntenicRegion = syntenies.append(\"g\")\n      .attr(\"class\", \"syntenicRegion\")\n      .attr(\"id\", regionID)\n      .on(\"click\", function() {\n        var activeRegion = this;\n        var others = d3.selectAll(\".syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          });\n\n        others.classed(\"hidden\", !others.classed(\"hidden\"));\n      })\n      .on(\"mouseover\", function() {\n        var activeRegion = this;\n        d3.selectAll(\".syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          })\n          .classed(\"ghost\", true);\n      })\n      .on(\"mouseout\", function() {\n        d3.selectAll(\".syntenicRegion\").classed(\"ghost\", false);\n      });\n\n    var x1 = this._layout.getChromosomeSetYTranslate(0);\n    var x2 = this._layout.getChromosomeSetYTranslate(1) - ideo.config.chrWidth;\n\n    syntenicRegion.append(\"polygon\")\n      .attr(\"points\",\n        x1 + ', ' + r1.startPx + ' ' +\n        x1 + ', ' + r1.stopPx + ' ' +\n        x2 + ', ' + r2.stopPx + ' ' +\n        x2 + ', ' + r2.startPx\n      )\n      .attr('style', \"fill: \" + color + \"; fill-opacity: \" + opacity);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.startPx)\n      .attr(\"y2\", r2.startPx);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.stopPx)\n      .attr(\"y2\", r2.stopPx);\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in drawSyntenicRegions: \" + (t1 - t0) + \" ms\");\n  }\n};\n\n/**\n* Initializes various annotation settings.  Constructor help function.\n*/\nIdeogram.prototype.initAnnotSettings = function() {\n  if (this.config.annotationsPath || this.config.localAnnotationsPath ||\n    this.annots || this.config.annotations) {\n    if (!this.config.annotationHeight) {\n      var annotHeight = Math.round(this.config.chrHeight / 100);\n      this.config.annotationHeight = annotHeight;\n    }\n\n    if (this.config.annotationTracks) {\n      this.config.numAnnotTracks = this.config.annotationTracks.length;\n    } else {\n      this.config.numAnnotTracks = 1;\n    }\n    this.config.annotTracksHeight =\n      this.config.annotationHeight * this.config.numAnnotTracks;\n\n    if (typeof this.config.barWidth === \"undefined\") {\n      this.config.barWidth = 3;\n    }\n  } else {\n    this.config.annotTracksHeight = 0;\n  }\n\n  if (typeof this.config.annotationsColor === \"undefined\") {\n    this.config.annotationsColor = \"#F00\";\n  }\n};\n\n/**\n* Draws annotations defined by user\n*/\nIdeogram.prototype.drawAnnots = function(friendlyAnnots) {\n  var ideo = this,\n    i, j, annot,\n    rawAnnots = [],\n    rawAnnot, keys,\n    chr,\n    chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n  // Occurs when filtering\n  if (\"annots\" in friendlyAnnots[0]) {\n    return ideo.drawProcessedAnnots(friendlyAnnots);\n  }\n\n  for (chr in chrs) {\n    rawAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < friendlyAnnots.length; i++) {\n    annot = friendlyAnnots[i];\n\n    for (j = 0; j < rawAnnots.length; j++) {\n      if (annot.chr === rawAnnots[j].chr) {\n        rawAnnot = [\n          annot.name,\n          annot.start,\n          annot.stop - annot.start\n        ];\n        if (\"color\" in annot) {\n          rawAnnot.push(annot.color);\n        }\n        if (\"shape\" in annot) {\n          rawAnnot.push(annot.shape);\n        }\n        rawAnnots[j].annots.push(rawAnnot);\n        break;\n      }\n    }\n  }\n\n  keys = [\"name\", \"start\", \"length\"];\n  if (\"color\" in friendlyAnnots[0]) {\n    keys.push(\"color\");\n  }\n  if (\"shape\" in friendlyAnnots[0]) {\n    keys.push(\"shape\");\n  }\n  ideo.rawAnnots = {keys: keys, annots: rawAnnots};\n\n  ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n  ideo.drawProcessedAnnots(ideo.annots);\n};\n\n/**\n* Proccesses genome annotation data.\n* Genome annotations represent features like a gene, SNP, etc. as\n* a small graphical object on or beside a chromosome.\n* Converts raw annotation data from server, which is structured as\n* an array of arrays, into a more verbose data structure consisting\n* of an array of objects.\n* Also adds pixel offset information.\n*/\nIdeogram.prototype.processAnnotData = function(rawAnnots) {\n  var keys,\n    i, j, annot, annots, annotsByChr,\n    chr,\n    chrModel, ra,\n    startPx, stopPx, px,\n    color,\n    ideo = this;\n\n  keys = rawAnnots.keys;\n  rawAnnots = rawAnnots.annots;\n\n  annots = [];\n\n  for (i = 0; i < rawAnnots.length; i++) {\n    annotsByChr = rawAnnots[i];\n\n    annots.push({chr: annotsByChr.chr, annots: []});\n\n    for (j = 0; j < annotsByChr.annots.length; j++) {\n      chr = annotsByChr.chr;\n      ra = annotsByChr.annots[j];\n      annot = {};\n\n      for (var k = 0; k < keys.length; k++) {\n        annot[keys[k]] = ra[k];\n      }\n\n      annot.stop = annot.start + annot.length;\n\n      chrModel = ideo.chromosomes[\"9606\"][chr];\n\n      startPx = ideo.convertBpToPx(chrModel, annot.start);\n      stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n      px = Math.round((startPx + stopPx) / 2) - 28;\n\n      color = ideo.config.annotationsColor;\n      if (ideo.config.annotationTracks) {\n        annot.trackIndex = ra[3];\n        color = ideo.config.annotationTracks[annot.trackIndex].color;\n      } else {\n        annot.trackIndex = 0;\n      }\n\n      if ('color' in annot) {\n        color = annot.color;\n      }\n\n      annot.chr = chr;\n      annot.chrIndex = i;\n      annot.px = px;\n      annot.color = color;\n\n      annots[i].annots.push(annot);\n    }\n  }\n\n  return annots;\n};\n\n/*\n* Can be used for bar chart or sparkline\n*/\nIdeogram.prototype.getHistogramBars = function(annots) {\n  var t0 = new Date().getTime();\n\n  var i, j, chr,\n    chrModels, chrPxStop, px,\n    chrAnnots, chrName, chrIndex, annot,\n    bars, bar, barPx, nextBarPx, barWidth,\n    maxAnnotsPerBar, color,\n    firstGet = false,\n    histogramScaling,\n    ideo = this;\n\n  bars = [];\n\n  barWidth = ideo.config.barWidth;\n  chrModels = ideo.chromosomes[ideo.config.taxid];\n  color = ideo.config.annotationsColor;\n\n  if (\"histogramScaling\" in ideo.config) {\n    histogramScaling = ideo.config.histogramScaling;\n  } else {\n    histogramScaling = \"relative\";\n  }\n\n  if (typeof ideo.maxAnnotsPerBar === \"undefined\") {\n    ideo.maxAnnotsPerBar = {};\n    firstGet = true;\n  }\n\n  for (chr in chrModels) {\n    chrModel = chrModels[chr];\n    chrIndex = chrModel.chrIndex;\n    lastBand = chrModel.bands[chrModel.bands.length - 1];\n    chrPxStop = lastBand.px.stop;\n    numBins = Math.round(chrPxStop / barWidth);\n    bar = {chr: chr, annots: []};\n    for (i = 0; i < numBins; i++) {\n      px = i * barWidth - ideo.bump;\n      bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n      bar.annots.push({\n        bp: bp,\n        px: px - ideo.bump,\n        count: 0,\n        chrIndex: chrIndex,\n        chrName: chr,\n        color: color,\n        annots: []\n      });\n    }\n    bars.push(bar);\n  }\n\n  for (chr in annots) {\n    chrAnnots = annots[chr].annots;\n    chrName = annots[chr].chr;\n    chrModel = chrModels[chrName];\n    chrIndex = chrModel.chrIndex - 1;\n    barAnnots = bars[chrIndex].annots;\n    for (i = 0; i < chrAnnots.length; i++) {\n      annot = chrAnnots[i];\n      px = annot.px - ideo.bump;\n      for (j = 0; j < barAnnots.length; j++) {\n        barPx = barAnnots[j].px;\n        nextBarPx = barPx + barWidth;\n        if (j === barAnnots.length - 1) {\n          nextBarPx += barWidth;\n        }\n        if (px >= barPx && px < nextBarPx) {\n          bars[chrIndex].annots[j].count += 1;\n          bars[chrIndex].annots[j].annots.push(annot);\n          break;\n        }\n      }\n    }\n  }\n\n  if (firstGet === true || histogramScaling === \"relative\") {\n    maxAnnotsPerBar = 0;\n    for (i = 0; i < bars.length; i++) {\n      annots = bars[i].annots;\n      for (j = 0; j < annots.length; j++) {\n        barCount = annots[j].count;\n        if (barCount > maxAnnotsPerBar) {\n          maxAnnotsPerBar = barCount;\n        }\n      }\n    }\n    ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n  }\n\n  // Set each bar's height to be proportional to\n  // the height of the bar with the most annotations\n  for (i = 0; i < bars.length; i++) {\n    annots = bars[i].annots;\n    for (j = 0; j < annots.length; j++) {\n      barCount = annots[j].count;\n      height = (barCount / ideo.maxAnnotsPerBar[chr]) * ideo.config.chrMargin;\n      // console.log(height)\n      bars[i].annots[j].height = height;\n    }\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time spent in getHistogramBars: \" + (t1 - t0) + \" ms\");\n  }\n\n  ideo.bars = bars;\n\n  return bars;\n};\n\n/**\n* Draws genome annotations on chromosomes.\n* Annotations can be rendered as either overlaid directly\n* on a chromosome, or along one or more \"tracks\"\n* running parallel to each chromosome.\n*/\nIdeogram.prototype.drawProcessedAnnots = function(annots) {\n  var chrWidth, layout,\n    annotHeight, triangle, circle, r, chrAnnot,\n    x1, x2, y1, y2,\n    ideo = this;\n\n  chrMargin = this.config.chrMargin;\n  chrWidth = this.config.chrWidth;\n\n  layout = \"tracks\";\n  if (this.config.annotationsLayout) {\n    layout = this.config.annotationsLayout;\n  }\n\n  if (layout === \"histogram\") {\n    annots = ideo.getHistogramBars(annots);\n  }\n\n  annotHeight = ideo.config.annotationHeight;\n\n  triangle =\n    'l -' + annotHeight + ' ' +\n    (2 * annotHeight) +\n    ' l ' + (2 * annotHeight) + ' 0 z';\n\n  // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n  // Circles are supported natively via <circle>, but having it as a path\n  // simplifies handling triangles, circles and other shapes in the same\n  // D3 call\n  r = annotHeight;\n  circle =\n    'm -' + r + ', ' + r +\n    'a ' + r + ',' + r + ' 0 1,0 ' + (r * 2) + ',0' +\n    'a ' + r + ',' + r + ' 0 1,0 -' + (r * 2) + ',0';\n\n  chrAnnot = d3.selectAll(\".chromosome\")\n    .data(annots)\n      .selectAll(\"path.annot\")\n      .data(function(d) {\n        return d.annots;\n      })\n      .enter();\n\n  if (layout === \"tracks\") {\n    chrAnnot\n      .append(\"g\")\n      .attr(\"id\", function(d) {\n        return d.id;\n      })\n      .attr(\"class\", \"annot\")\n      .attr(\"transform\", function(d) {\n        var y = ideo.config.chrWidth + (d.trackIndex * annotHeight * 2);\n        return \"translate(\" + d.px + \",\" + y + \")\";\n      })\n      .append(\"path\")\n      .attr(\"d\", function(d) {\n        if (!d.shape || d.shape === \"triangle\") {\n          return \"m0,0\" + triangle;\n        } else if (d.shape === \"circle\") {\n          return circle;\n        }\n      })\n      .attr(\"fill\", function(d) {\n        return d.color;\n      });\n  } else if (layout === \"overlay\") {\n      // Overlaid annotations appear directly on chromosomes\n\n    chrAnnot.append(\"polygon\")\n        .attr(\"id\", function(d) {\n          return d.id;\n        })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px - 0.5;\n          x2 = d.px + 0.5;\n          y1 = chrWidth;\n          y2 = 0;\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  } else if (layout === \"histogram\") {\n    chrAnnot.append(\"polygon\")\n        // .attr(\"id\", function(d, i) { return d.id; })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  }\n\n  if (ideo.onDrawAnnotsCallback) {\n    ideo.onDrawAnnotsCallback();\n  }\n};\n\nIdeogram.prototype.onBrushMove = function() {\n  call(this.onBrushMoveCallback);\n};\n\nIdeogram.prototype.createBrush = function(from, to) {\n  var ideo = this,\n    width = ideo.config.chrWidth + 6.5,\n    length = ideo.config.chrHeight,\n    chr = ideo.chromosomesArray[0],\n    chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n    x0, x1,\n    xOffset = this._layout.getMargin().left,\n    xScale = d3.scaleLinear()\n          .domain([0, d3.max(chr.bands, function(band) {\n            return band.bp.stop;\n          })]).range([xOffset, d3.max(chr.bands, function(band) {\n            return band.px.stop;\n          }) + xOffset]);\n\n  if (typeof from === \"undefined\") {\n    from = Math.floor(chrLengthBp / 10);\n  }\n\n  if (typeof right === \"undefined\") {\n    to = Math.ceil(from * 2);\n  }\n\n  x0 = ideo.convertBpToPx(chr, from);\n  x1 = ideo.convertBpToPx(chr, to);\n\n  ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n  ideo.brush = d3.brushX()\n    .extent([[xOffset, 0], [length + xOffset, width]])\n    .on(\"brush\", onBrushMove);\n\n  var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n  var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n  d3.select(\"#_ideogram\").append(\"g\")\n    .attr(\"class\", \"brush\")\n    .attr(\"transform\", \"translate(0, \" + yOffset + \")\")\n    .call(ideo.brush)\n    .call(ideo.brush.move, [x0, x1]);\n\n  function onBrushMove() {\n    var extent = d3.event.selection.map(xScale.invert),\n      from = Math.floor(extent[0]),\n      to = Math.ceil(extent[1]);\n\n    ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n    if (ideo.onBrushMove) {\n      ideo.onBrushMoveCallback();\n    }\n  }\n};\n\n/**\n* Called when Ideogram has finished initializing.\n* Accounts for certain ideogram properties not being set until\n* asynchronous requests succeed, etc.\n*/\nIdeogram.prototype.onLoad = function() {\n  call(this.onLoadCallback);\n};\n\nIdeogram.prototype.onDrawAnnots = function() {\n  call(this.onDrawAnnotsCallback);\n};\n\nIdeogram.prototype.getBandColorGradients = function() {\n  var colors,\n    stain, color1, color2, color3,\n    css,\n    gradients = \"\";\n\n  colors = [\n    [\"gneg\", \"#FFF\", \"#FFF\", \"#DDD\"],\n    [\"gpos25\", \"#C8C8C8\", \"#DDD\", \"#BBB\"],\n    [\"gpos33\", \"#BBB\", \"#BBB\", \"#AAA\"],\n    [\"gpos50\", \"#999\", \"#AAA\", \"#888\"],\n    [\"gpos66\", \"#888\", \"#888\", \"#666\"],\n    [\"gpos75\", \"#777\", \"#777\", \"#444\"],\n    [\"gpos100\", \"#444\", \"#666\", \"#000\"],\n    [\"acen\", \"#FEE\", \"#FEE\", \"#FDD\"],\n    [\"noBands\", \"#BBB\", \"#BBB\", \"#AAA\"]\n  ];\n\n  for (var i = 0; i < colors.length; i++) {\n    stain = colors[i][0];\n    color1 = colors[i][1];\n    color2 = colors[i][2];\n    color3 = colors[i][3];\n    gradients +=\n      '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n    if (stain === \"gneg\") {\n      gradients +=\n        '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' +\n        '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n    } else {\n      gradients +=\n        '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' +\n        '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n    }\n    gradients +=\n      '</linearGradient>';\n  }\n\n  gradients +=\n    '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' +\n        'stroke-width:0.7;\" />' +\n    '</pattern>' +\n    '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(-30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' +\n          'stroke-width:0.7;\" />' +\n    '</pattern>';\n\n  gradients = \"<defs>\" + gradients + \"</defs>\";\n  css = \"<style>\" +\n    '.gneg {fill: url(\"#gneg\")} ' +\n    '.gpos25 {fill: url(\"#gpos25\")} ' +\n    '.gpos33 {fill: url(\"#gpos33\")} ' +\n    '.gpos50 {fill: url(\"#gpos50\")} ' +\n    '.gpos66 {fill: url(\"#gpos66\")} ' +\n    '.gpos75 {fill: url(\"#gpos75\")} ' +\n    '.gpos100 {fill: url(\"#gpos100\")} ' +\n    '.acen {fill: url(\"#acen\")} ' +\n    '.stalk {fill: url(\"#stalk\")} ' +\n    '.gvar {fill: url(\"#gvar\")} ' +\n    '.noBands {fill: url(\"#noBands\")} ' +\n  '</style>';\n  gradients = css + gradients;\n\n  // alert(gradients)\n\n  return gradients;\n};\n\n/*\n  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n*/\nIdeogram.prototype.getTaxidFromEutils = function(callback) {\n  var organism, taxonomySearch, taxid,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  taxonomySearch = ideo.esearch + \"&db=taxonomy&term=\" + organism;\n\n  d3.json(taxonomySearch, function(data) {\n    taxid = data.esearchresult.idlist[0];\n    return callback(taxid);\n  });\n};\n\n/**\n* Returns an array of taxids for the current ideogram\n* Also sets configuration parameters related to taxid(s), whether ideogram is\n* multiorganism, and adjusts chromosomes parameters as needed\n**/\nIdeogram.prototype.getTaxids = function(callback) {\n  var ideo = this,\n    taxid, taxids,\n    org, orgs, i,\n    taxidInit, tmpChrs,\n    assembly, chromosomes,\n    multiorganism;\n\n  taxidInit = \"taxid\" in ideo.config;\n\n  ideo.config.multiorganism = (\n    (\"organism\" in ideo.config && ideo.config.organism instanceof Array) ||\n    (taxidInit && ideo.config.taxid instanceof Array)\n  );\n\n  multiorganism = ideo.config.multiorganism;\n\n  if (\"organism\" in ideo.config) {\n    // Ideogram instance was constructed using common organism name(s)\n    if (multiorganism) {\n      orgs = ideo.config.organism;\n    } else {\n      orgs = [ideo.config.organism];\n    }\n\n    taxids = [];\n    tmpChrs = {};\n    for (i = 0; i < orgs.length; i++) {\n      // Gets a list of taxids from common organism names\n      org = orgs[i];\n      for (taxid in ideo.organisms) {\n        if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n          taxids.push(taxid);\n          if (multiorganism) {\n            // Adjusts 'chromosomes' configuration parameter to make object\n            // keys use taxid instead of common organism name\n            tmpChrs[taxid] = ideo.config.chromosomes[org];\n          }\n        }\n      }\n    }\n\n    if (taxids.length === 0) {\n      promise = new Promise(function(resolve) {\n        ideo.getTaxidFromEutils(resolve);\n      });\n      promise.then(function(data) {\n        taxid = data;\n        taxids.push(taxid);\n\n        ideo.config.taxids = taxids;\n        ideo.organisms[taxid] = {\n          commonName: \"\",\n          scientificName: ideo.config.organism,\n          scientificNameAbbr: \"\"\n        };\n        return new Promise(function(resolve) {\n          ideo.getAssemblyAndChromosomesFromEutils(resolve);\n        });\n      })\n      .then(function(asmChrArray) {\n        assembly = asmChrArray[0];\n        chromosomes = asmChrArray[1];\n\n        ideo.config.chromosomes = chromosomes;\n        ideo.organisms[taxid].assemblies = {\n          default: assembly\n        };\n\n        callback(taxids);\n      });\n    } else {\n      ideo.config.taxids = taxids;\n      if (multiorganism) {\n        ideo.config.chromosomes = tmpChrs;\n      }\n\n      callback(taxids);\n    }\n  } else {\n    if (multiorganism) {\n      ideo.coordinateSystem = \"bp\";\n      if (taxidInit) {\n        taxids = ideo.config.taxid;\n      }\n    } else {\n      if (taxidInit) {\n        taxids = [ideo.config.taxid];\n      }\n      ideo.config.taxids = taxids;\n    }\n\n    callback(taxids);\n  }\n};\n\nIdeogram.prototype.sortChromosomes = function(a, b) {\n  var aIsNuclear = a.type === \"nuclear\",\n    bIsNuclear = b.type === \"nuclear\",\n    aIsCP = a.type === \"chloroplast\",\n    bIsCP = b.type === \"chloroplast\",\n    aIsMT = a.type === \"mitochondrion\",\n    bIsMT = b.type === \"mitochondrion\";\n    // aIsPlastid = aIsMT && a.name !== \"MT\", // e.g. B1 in rice genome GCF_001433935.1\n    // bIsPlastid = bIsMT && b.name !== \"MT\";\n\n  if (aIsNuclear && bIsNuclear) {\n    return naturalSort(a.name, b.name);\n  } else if (!aIsNuclear && bIsNuclear) {\n    return 1;\n  } else if (aIsMT && bIsCP) {\n    return 1;\n  } else if (aIsCP && bIsMT) {\n    return -1;\n  } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n    return -1;\n  }\n};\n\n/**\n  Returns names and lengths of chromosomes for an organism's best-known\n  genome assembly.  Gets data from NCBI EUtils web API.\n*/\nIdeogram.prototype.getAssemblyAndChromosomesFromEutils = function(callback) {\n  var asmAndChrArray, // [assembly_accession, chromosome_objects_array]\n    assemblyAccession, chromosomes, asmSearch,\n    asmUid, asmSummary,\n    rsUid, nuccoreLink,\n    links, ntSummary,\n    results, result, cnIndex, chrName, chrLength, chromosome, type,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  asmAndChrArray = [];\n  chromosomes = [];\n\n  asmSearch =\n    ideo.esearch +\n    \"&db=assembly\" +\n    \"&term=%22\" + organism + \"%22[organism]\" +\n      \"AND%20(%22latest%20refseq%22[filter])%20\" +\n      \"AND%20%22chromosome%20level%22[filter]\";\n\n  var promise = d3.promise.json(asmSearch);\n\n  promise\n      .then(function(data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + \"&db=assembly&id=\" + asmUid;\n\n        return d3.promise.json(asmSummary);\n      })\n      .then(function(data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        var qs = \"&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=\" + rsUid;\n        nuccoreLink = ideo.elink + qs;\n\n        return d3.promise.json(nuccoreLink);\n      })\n      .then(function(data) {\n        links = data.linksets[0].linksetdbs[0].links.join(\",\");\n        ntSummary = ideo.esummary + \"&db=nucleotide&id=\" + links;\n\n        return d3.promise.json(ntSummary);\n      })\n      .then(function(data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === \"uids\") {\n            continue;\n          }\n\n          if (result.genome === \"mitochondrion\") {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split(\"|\").indexOf(\"plasmid\");\n              if (cnIndex === -1) {\n                chrName = \"MT\";\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                  // genome: \"mitochondrion\",\n                  // subtype: \"cell_line|plasmid\",\n                  // subname: \"A-58 CMS|B1\",\n                chrName = result.subname.split(\"|\")[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (\n            result.genome === \"chloroplast\" ||\n            result.genome === \"plastid\"\n          ) {\n            type = \"chloroplast\";\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = \"CP\";\n            } else {\n              continue;\n            }\n          } else {\n            type = \"nuclear\";\n            cnIndex = result.subtype.split(\"|\").indexOf(\"chromosome\");\n\n            chrName = result.subname.split(\"|\")[cnIndex];\n\n            if (\n              typeof chrName !== \"undefined\" &&\n              chrName.substr(0, 3) === \"chr\"\n            ) {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = \"bp\";\n\n        return callback(asmAndChrArray);\n      });\n};\n\nIdeogram.prototype.initDrawChromosomes = function(bandsArray) {\n  var ideo = this,\n    taxids = ideo.config.taxids,\n    taxid,\n    chrIndex = 0,\n    chrSetNumber = 0,\n    i, j, chrs, chromosome, chrModel,\n    defs, transform;\n\n  defs = d3.select(\"defs\");\n\n  for (i = 0; i < taxids.length; i++) {\n    taxid = taxids[i];\n    chrs = ideo.config.chromosomes[taxid];\n\n    ideo.chromosomes[taxid] = {};\n\n    for (j = 0; j < chrs.length; j++) {\n      chromosome = chrs[j];\n      bands = bandsArray[chrIndex];\n      chrIndex += 1;\n\n      chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n      ideo.chromosomes[taxid][chromosome] = chrModel;\n      ideo.chromosomesArray.push(chrModel);\n\n      transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n      chrSetNumber += 1;\n\n      // Append chromosome set container\n      var container = d3.select(\"svg\")\n        .append(\"g\")\n        .attr(\"class\", \"chromosome-set-container\")\n        .attr(\"data-set-number\", j)\n        .attr(\"transform\", transform)\n        .attr(\"id\", chrModel.id + \"-chromosome-set\");\n\n      var shape;\n      for (var k = 0; k < this._ploidy.getChromosomesNumber(j); k++) {\n        shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n      }\n\n      defs.append(\"clipPath\")\n        .attr(\"id\", chrModel.id + \"-chromosome-set-clippath\")\n        .selectAll('path')\n        .data(shape)\n        .enter()\n        .append('path')\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n    }\n\n    if (ideo.config.showBandLabels === true) {\n      ideo.drawBandLabels(ideo.chromosomes);\n    }\n  }\n};\n\n// Get ideogram SVG container\nIdeogram.prototype.getSvg = function() {\n  return d3.select('#_ideogram').node();\n};\n\n/**\n* Initializes an ideogram.\n* Sets some high-level properties based on instance configuration,\n* fetches band and annotation data if needed, and\n* writes an SVG element to the document to contain the ideogram\n*\n*/\nIdeogram.prototype.init = function() {\n  var bandDataFileNames,\n    taxid, i, svgClass;\n\n  var ideo = this;\n\n  var t0 = new Date().getTime();\n\n  var bandsArray = [],\n    numBandDataResponses = 0,\n    resolution = this.config.resolution,\n    accession;\n\n  var promise = new Promise(function(resolve) {\n    ideo.getTaxids(resolve);\n  });\n\n  promise.then(function(taxids) {\n    taxid = taxids[0];\n    ideo.config.taxid = taxid;\n    ideo.config.taxids = taxids;\n\n    for (i = 0; i < taxids.length; i++) {\n      taxid = taxids[i];\n\n      if (!ideo.config.assembly) {\n        ideo.config.assembly = \"default\";\n      }\n      accession = ideo.organisms[taxid].assemblies[ideo.config.assembly];\n\n      bandDataFileNames = {\n      // Homo sapiens (human)\n        9606: \"native/ideogram_9606_\" + accession + \"_\" + resolution + \"_V1.js\",\n      // 9606: \"ncbi/ideogram_9606_\" + accession + \"_\" + resolution + \"_V1.tsv\",\n\n      // Mus musculus (mouse)\n        10090: \"native/ideogram_10090_\" + accession + \"_NA_V2.js\"\n\n      // Drosophila melanogaster (fly)\n      // 7227: \"ucsc/drosophila_melanogaster_dm6.tsv\"\n      };\n\n      if (typeof chrBands === \"undefined\" && taxid in bandDataFileNames) {\n        d3.request(ideo.config.bandDir + bandDataFileNames[taxid])\n        .on(\"beforesend\", function(data) {\n          // Ensures correct taxid is processed in response callback; using\n          // simply 'taxid' variable gives the last *requested* taxid, which\n          // fails when dealing with multiple taxa.\n          data.taxid = taxid;\n        })\n        .get(function(error, data) {\n          ideo.bandData[data.taxid] = data.response;\n          numBandDataResponses += 1;\n\n          if (numBandDataResponses === taxids.length) {\n            processBandData();\n            writeContainer();\n          }\n        });\n      } else {\n        if (typeof chrBands !== \"undefined\") {\n        // If bands already available,\n        // e.g. via <script> tag in initial page load\n          ideo.bandData[taxid] = chrBands;\n        }\n        processBandData();\n        writeContainer();\n      }\n    }\n  });\n\n  function writeContainer() {\n    if (ideo.config.annotationsPath) {\n      d3.json(\n        ideo.config.annotationsPath, // URL\n        function(data) { // Callback\n          ideo.rawAnnots = data;\n        }\n      );\n    }\n\n    svgClass = \"\";\n    if (ideo.config.showChromosomeLabels) {\n      if (ideo.config.orientation === \"horizontal\") {\n        svgClass += \"labeledLeft \";\n      } else {\n        svgClass += \"labeled \";\n      }\n    }\n\n    if (\n      ideo.config.annotationsLayout &&\n      ideo.config.annotationsLayout === \"overlay\"\n    ) {\n      svgClass += \"faint\";\n    }\n\n    var gradients = ideo.getBandColorGradients();\n    var svgHeight = ideo._layout.getHeight(taxid);\n\n    d3.select(ideo.config.container)\n      .append(\"svg\")\n        .attr(\"id\", \"_ideogram\")\n        .attr(\"class\", svgClass)\n        .attr(\"width\", \"97%\")\n        .attr(\"height\", svgHeight)\n        .html(gradients);\n\n    finishInit();\n  }\n\n  /*\n  * Completes default ideogram initialization\n  * by calling downstream functions to\n  * process raw band data into full JSON objects,\n  * render chromosome and cytoband figures and labels,\n  * apply initial graphical transformations,\n  * hide overlapping band labels, and\n  * execute callbacks defined by client code\n  */\n  function processBandData() {\n    var j, k, chromosome, bands,\n      chrLength, chr,\n      bandData, bandsByChr,\n      taxid, taxids, chrs, chrsByTaxid;\n\n    bandsArray = [];\n    maxLength = 0;\n\n    if (ideo.config.multiorganism === true) {\n      ideo.coordinateSystem = \"bp\";\n      taxids = ideo.config.taxids;\n      for (i = 0; i < taxids.length; i++) {\n        taxid = taxids[i];\n      }\n    } else {\n      if (typeof ideo.config.taxid === \"undefined\") {\n        ideo.config.taxid = ideo.config.taxids[0];\n      }\n      taxid = ideo.config.taxid;\n      taxids = [taxid];\n      ideo.config.taxids = taxids;\n    }\n\n    if (\"chromosomes\" in ideo.config) {\n      chrs = ideo.config.chromosomes;\n    }\n    if (ideo.config.multiorganism) {\n      chrsByTaxid = chrs;\n    }\n\n    ideo.config.chromosomes = {};\n\n    var t0B = new Date().getTime();\n\n    for (j = 0; j < taxids.length; j++) {\n      taxid = taxids[j];\n\n      if (ideo.config.multiorganism) {\n        chrs = chrsByTaxid[taxid];\n      }\n\n      if (ideo.coordinateSystem === \"iscn\" || ideo.config.multiorganism) {\n        bandData = ideo.bandData[taxid];\n\n        bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n        chrs = Object.keys(bandsByChr);\n\n        ideo.config.chromosomes[taxid] = chrs.slice();\n        ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n        for (k = 0; k < chrs.length; k++) {\n          chromosome = chrs[k];\n          bands = bandsByChr[chromosome];\n          bandsArray.push(bands);\n\n          chrLength = {\n            iscn: bands[bands.length - 1].iscn.stop,\n            bp: bands[bands.length - 1].bp.stop\n          };\n\n          if (chrLength.iscn > ideo.maxLength.iscn) {\n            ideo.maxLength.iscn = chrLength.iscn;\n          }\n\n          if (chrLength.bp > ideo.maxLength.bp) {\n            ideo.maxLength.bp = chrLength.bp;\n          }\n        }\n      } else if (ideo.coordinateSystem === \"bp\") {\n        // If lacking band-level data\n\n        ideo.config.chromosomes[taxid] = chrs.slice();\n        ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n        for (k = 0; k < chrs.length; k++) {\n          chr = chrs[k];\n          if (chr.length > ideo.maxLength.bp) {\n            ideo.maxLength.bp = chr.length;\n          }\n        }\n      }\n    }\n\n    var t1B = new Date().getTime();\n    if (ideo.debug) {\n      console.log(\"Time in processBandData: \" + (t1B - t0B) + \" ms\");\n    }\n  }\n\n  function finishInit() {\n    try {\n      var t0A = new Date().getTime();\n\n      var i;\n\n      ideo.initDrawChromosomes(bandsArray);\n\n      // Waits for potentially large annotation dataset\n      // to be received by the client, then triggers annotation processing\n      if (ideo.config.annotationsPath) {\n        function pa() {\n          if (typeof timeout !== \"undefined\") {\n            window.clearTimeout(timeout);\n          }\n\n          ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n          ideo.drawProcessedAnnots(ideo.annots);\n\n          if (ideo.initCrossFilter) {\n            ideo.initCrossFilter();\n          }\n        }\n\n        if (ideo.rawAnnots) {\n          pa();\n        } else {\n          (function checkAnnotData() {\n            timeout = setTimeout(function() {\n              if (!ideo.rawAnnots) {\n                checkAnnotData();\n              } else {\n                pa();\n              }\n            },\n            50\n          );\n          })();\n        }\n      }\n\n      if (ideo.config.showBandLabels === true) {\n        var bandsToShow = ideo.bandsToShow.join(\",\");\n\n      // d3.selectAll resolves to querySelectorAll (QSA).\n      // QSA takes a surprisingly long time to complete,\n      // and scales with the number of selectors.\n      // Most bands are hidden, so we can optimize by\n      // Hiding all bands, then QSA'ing and displaying the\n      // relatively few bands that are shown.\n        var t0C = new Date().getTime();\n        d3.selectAll(\".bandLabel, .bandLabelStalk\").style(\"display\", \"none\");\n        d3.selectAll(bandsToShow).style(\"display\", \"\");\n        var t1C = new Date().getTime();\n        if (ideo.debug) {\n          console.log(\"Time in showing bands: \" + (t1C - t0C) + \" ms\");\n        }\n\n        if (ideo.config.orientation === \"vertical\") {\n          var chrID;\n          for (i = 0; i < ideo.chromosomesArray.length; i++) {\n            chrID = \"#\" + ideo.chromosomesArray[i].id;\n            ideo.rotateChromosomeLabels(d3.select(chrID), i);\n          }\n        }\n      }\n\n      if (ideo.config.showChromosomeLabels === true) {\n        ideo.drawChromosomeLabels(ideo.chromosomes);\n      }\n\n      if (ideo.config.brush === true) {\n        ideo.createBrush();\n      }\n\n      if (ideo.config.annotations) {\n        ideo.drawAnnots(ideo.config.annotations);\n      }\n\n      var t1A = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time in drawChromosome: \" + (t1A - t0A) + \" ms\");\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time constructing ideogram: \" + (t1 - t0) + \" ms\");\n      }\n\n      if (ideo.onLoadCallback) {\n        ideo.onLoadCallback();\n      }\n\n      if (!(\"rotatable\" in ideo.config && ideo.config.rotatable === false)) {\n        d3.selectAll(\".chromosome\").on(\"click\", function() {\n          ideogram.rotateAndToggleDisplay(this);\n        });\n      } else {\n        d3.selectAll(\".chromosome\").style(\"cursor\", \"default\");\n      }\n    } catch (e) {\n      console.log(e);\n      //  throw e;\n    }\n  }\n};\n","/* Decompresses ideogram's annotations for crossfilter initialization\nBy default, annotations are clustered by chromosome, e.g.\n[\n  {\"chr\": \"1\", \"annots\": [{\"from\": 100, \"to\", 101, \"chr\": \"1\", ...}, ...]},\n  {\"chr\": \"2\", \"annots\": [{\"from\": 500, \"to\", 501, \"chr\": \"2\", ...}, ...]},\n  ...\n]\nThis method flattens that structure to e.g.\n[\n  {\"from\": 100, \"to\": 101, \"chr\": \"1\", ...},\n  ...\n  {\"from\": 500, \"to\": 501, \"chr\": \"2\", ...},\n]\nSee also: packAnnots\n*/\nIdeogram.prototype.unpackAnnots = function() {\n  var chr, annots, i,\n    unpackedAnnots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots = chr.annots;\n    unpackedAnnots = unpackedAnnots.concat(annots);\n  }\n\n  return unpackedAnnots;\n};\n\n/*\n  Compresses annots back to default state.  Inverse of unpackAnnots.\n*/\nIdeogram.prototype.packAnnots = function(unpackedAnnots) {\n  var chr, annot, i,\n    annots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (chr in chrs) {\n    annots.push({chr: chrs[chr].chr, annots: []});\n  }\n\n  for (i = 0; i < unpackedAnnots.length; i++) {\n    annot = unpackedAnnots[i];\n    annots[annot.chrIndex].annots.push(annot);\n  }\n\n  return annots;\n};\n\n/*\n  Initializes crossfilter.  Needed for client-side filtering.\n  More: https://github.com/square/crossfilter/wiki/API-Reference\n*/\nIdeogram.prototype.initCrossFilter = function() {\n  var ideo = this,\n    keys = ideo.rawAnnots.keys,\n    i, facet;\n\n  ideo.unpackedAnnots = ideo.unpackAnnots();\n  ideo.crossfilter = crossfilter(ideo.unpackedAnnots);\n\n  ideo.annotsByFacet = {};\n\n  ideo.facets = keys.slice(3, keys.length);\n\n  for (i = 0; i < ideo.facets.length; i++) {\n    facet = ideo.facets[i];\n    ideo.annotsByFacet[facet] =\n      ideo.crossfilter\n        .dimension(function(d) {\n          return d[facet];\n        });\n  }\n};\n\n/*\n  Filters annotations based on the given selections\n  \"selections\" is an object of objects, e.g.\n\n    {\n      \"tissue-type\": {          <-- a facet\n        \"cerebral-cortex\": 1,   <-- a filter; \"1\" means it is selected\n        \"liver\": 1\n      },\n      \"gene-type\": {\n        mirna\": 1\n      }\n    }\n\n  Translation:\n  select where:\n      (tissue-type is cerebral-cortex OR liver) and (gene-type is mirna)\n\n  TODO:\n    * Filter counts\n    * Range filters\n    * Integrate server-side filtering for very large datasets\n*/\nIdeogram.prototype.filterAnnots = function(selections) {\n  var t0 = Date.now();\n\n  var i, facet,\n    prevFacet = null,\n    results, fn,\n    counts = {},\n    ideo = this;\n\n  if (Object.keys(selections).length === 0) {\n    results = ideo.unpackedAnnots;\n  } else {\n    for (i = 0; i < ideo.facets.length; i++) {\n      facet = ideo.facets[i];\n      if (facet in selections) {\n        fn = function(d) {\n          if (d in selections[facet]) {\n            return true;\n          }\n        };\n      } else {\n        fn = null;\n      }\n      ideo.annotsByFacet[facet].filter(fn);\n      counts[facet] = ideo.annotsByFacet[facet].group().top(Infinity);\n    }\n\n    results = ideo.annotsByFacet[facet].top(Infinity);\n  }\n\n  for (i < 0; i < ideo.facets.length; i++) {\n    ideo.annotsByFacet[facet].filterAll(); // clear filters\n  }\n\n  results = ideo.packAnnots(results);\n\n  d3.selectAll(\"polygon.annot\").remove();\n  ideo.drawAnnots(results);\n\n  console.log(\"Time in filterAnnots: \" + (Date.now() - t0) + \" ms\");\n\n  return counts;\n};\n"]}