{"version":3,"sources":["range.js","model-adapter.js","model-no-bands-adapter.js","layouts/layout.js","layouts/horizontal-layout.js","layouts/vertical-layout.js","layouts/paired-layout.js","layouts/small-layout.js","ploidy.js","color.js","views/chromosome.js","views/telocentric-chromosome.js","views/metacentric-chromosome.js","lib.js","views/chromosome-util.js","core.js","filter.js"],"names":["Range","data","this","_data","ModelAdapter","model","_model","_class","ModelNoBandsAdapter","call","Layout","config","ideo","_config","_ideo","_ploidy","_translate","undefined","chrSetMargin","k","chrMargin","ploidy","_tickSize","_isRotated","HorizontalLayout","_margin","left","top","VerticalLayout","PairedLayout","SmallLayout","Ploidy","_description","_normalize","ploidyDesc","Color","Chromosome","adapter","_adapter","getModel","_color","_bumpCoefficient","TelocentricChromosome","_pArmOffset","MetacentricChromosome","naturalSort","a","b","q","r","c","d","g","i","insensitive","toLowerCase","replace","j","l","split","m","n","parseInt","match","length","Date","parse","o","p","parseFloat","s","t","u","v","Math","max","isNaN","test","localeCompare","w","abs","slugify","value","ChromosomeUtil","node","_node","prototype","getStart","start","getStop","stop","getLength","getColor","chrNumber","_getColor","Array","isArray","color","getInstance","bands","getCssClass","Object","create","width","push","name","px","perspective","rows","orientation","_getLeftMargin","_getYScale","chrWidth","getChromosomeLabels","chrElement","util","getSetLabel","getLabel","filter","rotateBack","Error","rotateForward","rotate","chrSetNumber","otherChrs","d3","selectAll","selector","style","getChromosomeLabelClass","_getAdditionalOffset","annotationHeight","numAnnotTracks","_getChromosomeSetSize","getSetSize","getMargin","getHeight","getChromosomeBandTickY1","getChromosomeBandTickY2","getChromosomeBandLabelTranslate","getChromosomeSetLabelAnchor","getChromosomeBandLabelAnchor","getChromosomeLabelXPosition","getChromosomeLabelYPosition","getChromosomeSetLabelYPosition","getChromosomeSetLabelXPosition","getChromosomeSetLabelTranslate","getChromosomeSetTranslate","getChromosomeSetYTranslate","margin","setNumber","callback","ideoBox","select","getBoundingClientRect","chrBox","scaleX","height","xOffset","scaleY","yOffset","transform","parentNode","transition","attr","on","labels","getSvg","append","enter","text","String","translate","remove","taxId","numChromosomes","chromosomes","lastSetOffset","getWidth","chrHeight","band","x","round","y","setSize","self","pad","annotationsLayout","prevTranslate","translateY","Number","chromosomeSetYTranslate","organisms","getTaxids","taxIdList","size","rowSize","additionalPadding","getChromosomesNumber","chrSetCode","keys","description","normalized","key","descValue","reverse","ancestors","existence","_getexistenceArray","array","getAncestor","exists","armNumber","desc","getArmColor","armColors","_getPolyploidArmColor","getBorderColor","ancestor","centromerePosition","_addPArmShape","clipPath","isPArmRendered","concat","_getPArmShape","_addQArmShape","isQArmRendered","_getQArmShape","render","container","id","_renderPArm","_renderQArm","_renderRangeSet","opacity","fill","isFullyBanded","strokeWidth","path","class","rangeSet","range","chr","map","rangesContainer","bandsXOffset","_bandsXOffset","convertBpToPx","_getShapeData","firstQBand","lastBand","rightTerminalPosition","x1","x2","x3","x2b","_renderBands","arm","stain","Boolean","e","G","Q","B","setTimeout","J","tt","constructor","rt","_state","arguments","_result","E","h","_","TypeError","then","ut","error","S","_label","it","st","et","resolve","nt","A","_onerror","T","ot","_subscribers","M","P","ct","C","O","at","Y","_t","promise","I","F","D","K","L","N","_instanceConstructor","_input","_remaining","_enumerate","U","W","global","Function","Promise","toString","cast","pt","z","H","R","window","V","X","MutationObserver","WebKitMutationObserver","Z","process","$","Uint8ClampedArray","importScripts","MessageChannel","nextTick","document","createTextNode","observe","characterData","port1","onmessage","port2","postMessage","require","runOnLoop","runOnContext","random","substring","ft","lt","ht","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","_settledAt","_willSettleAt","dt","vt","polyfill","define","amd","module","exports","ES6Promise","slice","f","apply","forEach","Ideogram","rect","JSON","stringify","debug","dataDir","sexChromosomes","sex","resolution","showChromosomeLabels","querySelector","showBandLabels","showFullyBanded","brush","bump","adjustedBump","chromosome","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","9606","commonName","scientificName","scientificNameAbbr","assemblies","default","GRCh38","GRCh37","10090","4641","chromosomesArray","bandsToShow","bandData","init","getBands","content","taxid","lines","delimiter","tsvLines","columns","line","tsvLinesLength","source","firstColumn","tmp","chrBands","eval","indexOf","chromosomeName","getChromosomeModel","chrIndex","pxStop","chrLength","cs","hasBands","type","fullChromosomeLabels","orgName","csLength","pcenIndex","scale","multiorganism","drawChromosomeLabels","chromosomeLabelClass","_layout","chrSetLabelXPosition","chrSetLabelTranslate","each","index","fullLabels","setLabelTranslate","drawBandLabels","chrs","chrModel","textOffsets","overlappingLabelXRight","prevHiddenBoxIndex","xLeft","prevLabelXRight","textPadding","textsLength","indexesToShow","prevTextBoxLeft","prevTextBoxWidth","selectorsToShow","ithLength","rotateChromosomeLabels","scaleSvg","tracksHeight","hasOwnProperty","ci","chrMargin2","rotateBandLabels","bandLabels","coord","drawChromosome","rotateAndToggleDisplay","_groups","bpToIscnScale","offset","pxStart","pxLength","iscnStart","iscnStop","iscnLength","bpStart","bpStop","bpLength","convertPxToBp","pxToIscnScale","drawSynteny","syntenicRegions","r1","r2","syntenies","regionID","t0","getTime","insert","regions","startPx","stopPx","syntenicRegion","activeRegion","others","classed","t1","console","log","annotationsPath","localAnnotationsPath","annots","annotations","annotHeight","annotationTracks","barWidth","annotationsColor","parseBed","bed","annot","colorMap","rawAnnots","fetchAnnots","annotsUrl","json","extension","toUpperCase","alert","request","response","drawAnnots","friendlyAnnots","rawAnnot","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","getHistogramBars","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","histogramScaling","firstGet","numBins","count","barAnnots","barCount","fillAnnots","filledAnnots","chrArray","layout","triangle","circle","chrAnnot","y1","y2","thisChrWidth","createBrush","from","to","extent","event","selection","xScale","invert","floor","ceil","selectedRegion","x0","chrLengthBp","scaleLinear","domain","right","brushX","yTranslate","move","getBandColorGradients","colors","color1","color2","color3","css","gradients","getTaxidFromEutils","organism","taxonomySearch","esearchresult","idlist","taxids","org","orgs","taxidInit","tmpChrs","assembly","urlOrg","fullyBandedTaxids","chromosomesUrl","get","asmAndChrArray","seenChrs","chromsomes","sort","sortChromosomes","getAssemblyAndChromosomesFromEutils","asmChrArray","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","links","ntSummary","results","result","cnIndex","rsuid","assemblyaccession","qs","linksets","linksetdbs","join","genome","subtype","subname","substr","slen","drawSexChromosomes","bandsArray","defs","sci","sexChromosomeIndexes","initDrawChromosomes","setSexChromosomes","numChrsInSet","sexChrs","list","processBandData","bandsByChr","chrsByTaxid","t0B","t1B","writeContainer","svgClass","svgWidth","svgHeight","html","finishInit","pa","timeout","clearTimeout","crossfilter","initCrossFilter","t0A","checkAnnotData","t0C","t1C","chrID","t1A","numBandDataResponses","accession","bandFileName","bandDataFileNames","unpackAnnots","unpackedAnnots","packAnnots","facet","annotsByFacet","facets","dimension","filterAnnots","selections","fn","now","counts","group","Infinity","filterAll"],"mappings":"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","file":"ideogram.min.js","sourcesContent":["/**\n * Chromosome range.\n * @public\n * @class\n * @param {Object} data - range data.\n * @param {Integer} data.chr - chromosome index.\n * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n * @param {Integer} data.start - range start.\n * @param {Integer} data.stop - range end.\n * @param {String} data.color - range color.\n */\nfunction Range(data) {\n  this._data = data;\n}\n\nRange.prototype.getStart = function() {\n  return this._data.start;\n};\n\nRange.prototype.getStop = function() {\n  return this._data.stop;\n};\n\nRange.prototype.getLength = function() {\n  return this._data.stop - this._data.start;\n};\n\nRange.prototype.getColor = function(chrNumber) {\n  if (!('ploidy' in this._data)) {\n    return this._getColor(chrNumber);\n  } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n    return this._getColor(chrNumber);\n  } else {\n    return 'transparent';\n  }\n};\n\nRange.prototype._getColor = function(chrNumber) {\n  if (Array.isArray(this._data.color)) {\n    return this._data.color[chrNumber];\n  } else {\n    return this._data.color;\n  }\n};\n","function ModelAdapter(model) {\n  this._model = model;\n  this._class = 'ModelAdapter';\n}\n\nModelAdapter.getInstance = function(model) {\n  if (model.bands) {\n    return new ModelAdapter(model);\n  } else {\n    return new ModelNoBandsAdapter(model);\n  }\n};\n\nModelAdapter.prototype.getModel = function() {\n  return this._model;\n};\n\nModelAdapter.prototype.getCssClass = function() {\n  return '';\n};\n","function ModelNoBandsAdapter(model) {\n    /*\n     * Call parent constructor.\n     */\n  ModelAdapter.call(this, model);\n  this._class = 'ModelNoBandsAdapter';\n}\n\nModelNoBandsAdapter.prototype = Object.create(ModelAdapter.prototype);\n\nModelNoBandsAdapter.prototype.getModel = function() {\n  this._model.bands = [];\n\n    // If chromosome width more, then 1 add single band to bands array\n  if (this._model.width > 1) {\n    this._model.bands.push({\n      name: 'q',\n      px: {\n        start: 0,\n        stop: this._model.width,\n        width: this._model.width\n      }\n    });\n  }\n\n  return this._model;\n};\n\nModelNoBandsAdapter.prototype.getCssClass = function() {\n  return 'noBands';\n};\n","function Layout(config, ideo) {\n  this._config = config;\n  this._ideo = ideo;\n  this._ploidy = this._ideo._ploidy;\n  this._translate = undefined;\n\n  if ('chrSetMargin' in config) {\n    this.chrSetMargin = config.chrSetMargin;\n  } else {\n    var k = this._config.chrMargin;\n    this.chrSetMargin = (this._config.ploidy > 1 ? k : 0);\n  }\n\n  // Chromosome band's size.\n  this._tickSize = 8;\n\n  // Chromosome rotation state.\n  this._isRotated = false;\n}\n\n// Factory method\nLayout.getInstance = function(config, ideo) {\n  if (\"perspective\" in config && config.perspective === \"comparative\") {\n    return new PairedLayout(config, ideo);\n  } else if (\"rows\" in config && config.rows > 1) {\n    return new SmallLayout(config, ideo);\n  } else if (config.orientation === 'vertical') {\n    return new VerticalLayout(config, ideo);\n  } else if (config.orientation === 'horizontal') {\n    return new HorizontalLayout(config, ideo);\n  } else {\n    return new VerticalLayout(config, ideo);\n  }\n};\n\n// Get chart left margin\nLayout.prototype._getLeftMargin = function() {\n  return this._margin.left;\n};\n\n// Get rotated chromosome y scale\nLayout.prototype._getYScale = function() {\n    // 20 is width of rotated chromosome.\n  return 20 / this._config.chrWidth;\n};\n\n// Get chromosome labels\nLayout.prototype.getChromosomeLabels = function(chrElement) {\n  var util = new ChromosomeUtil(chrElement);\n\n  return [util.getSetLabel(), util.getLabel()].filter(function(d) {\n    return d.length > 0;\n  });\n};\n\n// Rotate chromosome to original position\nLayout.prototype.rotateBack = function() {\n  throw new Error(this._class + '#rotateBack not implemented');\n};\n\n// Rotate chromosome to opposite position\nLayout.prototype.rotateForward = function() {\n  throw new Error(this._class + '#rotateForward not implemented');\n};\n\nLayout.prototype.rotate = function(chrSetNumber, chrNumber, chrElement) {\n  var ideo = this._ideo;\n\n    // Find chromosomes which should be hidden\n  var otherChrs = d3.selectAll(ideo.selector + \" g.chromosome\")\n    .filter(function() {\n      return this !== chrElement;\n    });\n\n  if (this._isRotated) {\n        // Reset _isRotated flag\n    this._isRotated = false;\n        // Rotate chromosome back\n    this.rotateBack(chrSetNumber, chrNumber, chrElement, function() {\n            // Show all other chromosomes and chromosome labels\n      otherChrs.style(\"display\", null);\n      d3.selectAll(ideo.selector + \" .chrSetLabel, .chrLabel\")\n        .style(\"display\", null);\n    });\n  } else {\n        // Set _isRotated flag\n    this._isRotated = true;\n\n        // Hide all other chromosomes and chromosome labels\n    otherChrs.style(\"display\", \"none\");\n    d3.selectAll(ideo.selector + \" .chrSetLabel, .chrLabel\")\n      .style(\"display\", \"none\");\n\n        // Rotate chromosome\n    this.rotateForward(chrSetNumber, chrNumber, chrElement);\n  }\n};\n\nLayout.prototype.getChromosomeLabelClass = function() {\n  if (this._config.ploidy === 1) {\n    return 'chrLabel';\n  } else {\n    return 'chrSetLabel';\n  }\n};\n\nLayout.prototype._getAdditionalOffset = function() {\n  return (\n    (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1)\n  );\n};\n\nLayout.prototype._getChromosomeSetSize = function(chrSetNumber) {\n  // Get last chromosome set size.\n  var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n  // Increase offset by last chromosome set size\n  return (\n    setSize * this._config.chrWidth * 2 + (this.chrSetMargin)\n  );\n};\n\n// Get layout margin\nLayout.prototype.getMargin = function() {\n  return this._margin;\n};\n\n// Get SVG element height\nLayout.prototype.getHeight = function() {\n  throw new Error(this._class + '#getHeight not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY1 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY2 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n};\n\n// Get chromosome's band translate attribute\nLayout.prototype.getChromosomeBandLabelTranslate = function() {\n  throw new Error(\n    this._class + '#getChromosomeBandLabelTranslate not implemented'\n  );\n};\n\n// Get chromosome set label anchor property\nLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'middle';\n};\n\n// Get chromosome's band label text-anchor value\nLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  throw (\n    new Error(this._class + '#getChromosomeBandLabelAnchor not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeLabelXPosition = function() {\n  throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n};\n\n// Get chromosome label y position.\nLayout.prototype.getChromosomeLabelYPosition = function() {\n  return -5.5;\n};\n\n// \"i\" is chromosome number\nLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelYPosition(i);\n  } else {\n    return -2 * this._config.chrWidth;\n  }\n};\n\nLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelXPosition not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelTranslate not implemented')\n  );\n};\n\n// Get chromosome set translate attribute\nLayout.prototype.getChromosomeSetTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n};\n\n// Get chromosome set translate's y offset\nLayout.prototype.getChromosomeSetYTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n};\n","function HorizontalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'HorizontalLayout';\n  this._margin = {\n    left: 20,\n    top: 30\n  };\n}\n\nHorizontalLayout.prototype = Object.create(Layout.prototype);\n\nHorizontalLayout.prototype._getLeftMargin = function() {\n  var margin = Layout.prototype._getLeftMargin.call(this);\n  if (this._config.ploidy > 1) {\n    margin *= 1.8;\n  }\n\n  return margin;\n};\n\nHorizontalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var xOffset = 30;\n\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.height / (chrBox.width + xOffset / 2)) * 0.9;\n  var scaleY = this._getYScale();\n\n  var yOffset = (chrNumber + 1) * ((this._config.chrWidth * 2) * scaleY);\n\n  var transform = (\n    'rotate(90) ' +\n    'translate(' + xOffset + ', -' + yOffset + ') ' +\n    'scale(' + scaleX + ', ' + scaleY + ')'\n  );\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  d3.select(this._ideo.getSvg())\n        .append('g')\n        .attr('class', 'tmp')\n        .selectAll('text')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', function(d, i) {\n          return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n        })\n        .attr('x', 30)\n        .attr('y', function(d, i) {\n          return (i + 1 + labels.length % 2) * 12;\n        })\n        .style('text-anchor', 'middle')\n        .style('opacity', 0)\n        .text(String)\n        .transition()\n        .style('opacity', 1);\n};\n\nHorizontalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll(this._ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nHorizontalLayout.prototype.getHeight = function(taxId) {\n    // Get last chromosome set offset.\n  var numChromosomes = this._config.chromosomes[taxId].length;\n  var lastSetOffset = this.getChromosomeSetYTranslate(numChromosomes - 1);\n\n    // Get last chromosome set size.\n  var lastSetSize = this._getChromosomeSetSize(numChromosomes - 1);\n\n    // Increase offset by last chromosome set size\n  lastSetOffset += lastSetSize;\n\n  return lastSetOffset + this._getAdditionalOffset() * 2;\n};\n\nHorizontalLayout.prototype.getWidth = function() {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'end';\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY1 = function() {\n  return 2;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY2 = function() {\n  return 10;\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelTranslate = function(band) {\n  var x = this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n  var y = -10;\n\n  return {\n    x: x,\n    y: y,\n    translate: 'translate(' + x + ',' + y + ')'\n  };\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var leftMargin = this._getLeftMargin();\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return \"translate(\" + leftMargin + \", \" + chromosomeSetYTranslate + \")\";\n};\n\nHorizontalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  // If no detailed description provided just use one formula for all cases.\n  if (!this._config.ploidyDesc) {\n    return this._config.chrMargin * (setNumber + 1);\n  }\n\n  // Id detailed description provided start to calculate offsets\n  //  for each chromosome set separately. This should be done only once.\n  if (!this._translate) {\n    // First offset equals to zero.\n    this._translate = [1];\n\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      this._translate[i] =\n        this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelXPosition(i);\n  } else {\n    return -20;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  var setSize = this._ploidy.getSetSize(i),\n    config = this._config,\n    chrMargin = config.chrMargin,\n    chrWidth = config.chrWidth;\n\n  if (config.ploidy === 1) {\n    y = chrWidth / 2 + 3;\n  } else {\n    y = (setSize * chrMargin) / 2;\n  }\n\n  return y;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -8;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelYPosition = function() {\n  return this._config.chrWidth;\n};\n","\nfunction VerticalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'VerticalLayout';\n    // Layout margins\n  this._margin = {\n    top: 30,\n    left: 15\n  };\n}\n\nVerticalLayout.prototype = Object.create(Layout.prototype);\n\nVerticalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n\n  var xOffset = 20;\n\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  var transform =\n    \"translate(\" + xOffset + \", 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  var y = (xOffset + self._config.chrWidth) * 1.3;\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(labels)\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', y).style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nVerticalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll(this._ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nVerticalLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nVerticalLayout.prototype.getWidth = function() {\n  return '97%';\n};\n\nVerticalLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nVerticalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var marginTop = this._margin.top;\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nVerticalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation/histogram tracks\n  var pad = this._getAdditionalOffset(),\n    margin = this._config.chrMargin,\n    width = this._config.chrWidth,\n    translate;\n\n    // If no detailed description provided just use one formula for all cases\n  if (!this._config.ploidyDesc) {\n   // TODO:\n   // This part of code contains a lot magic numbers and if\n   // statements for exactly corresponing to original ideogram examples.\n   // But all this stuff should be removed. Calculation of translate\n   // should be a simple formula applied for all cases listed below.\n   // Now they are diffirent because of Layout:_getAdditionalOffset do\n   // not meet for cases when no annotation, when annotation exists and\n   // when histogram used\n\n    if (this._config.annotationsLayout === \"histogram\") {\n      return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n    } else {\n      translate = width + setNumber * (margin + width) + pad * 2;\n      if (pad > 0) {\n        return translate;\n      } else {\n        return translate + 4 + (2 * setNumber);\n      }\n    }\n  }\n\n    // If detailed description provided start to calculate offsets\n    // for each chromosome set separately. This should be done only once\n  if (!this._translate) {\n    // First offset equals to zero\n    this._translate = [this._ploidy.getSetSize(0) * width * 2];\n    var prevTranslate;\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      prevTranslate = this._translate[i - 1];\n      this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return (this._config.chrWidth * this._config.ploidy) / -2;\n};\n\nVerticalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function PairedLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'PairedLayout';\n\n  this._margin = {\n    left: 30\n  };\n}\n\nPairedLayout.prototype = Object.create(Layout.prototype);\n\nPairedLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n  var ideo = this._ideo;\n\n    // Get ideo container and chromosome set dimensions\n  var ideoBox = d3.select(ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n    // Evaluate dimensions scale coefficients\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n    // Evaluate y offset of chromosome. It is different for first and the second one\n  var yOffset = setNumber ? 150 : 25;\n\n  var transform =\n    'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n    .transition()\n    .attr(\"transform\", transform)\n    .on('end', function() {\n        // Run callback function if provided\n      if (callback) {\n        callback();\n      }\n\n      var translateY = (6 * Number(!setNumber));\n\n      // Rotate band labels\n      d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n        .attr('transform', 'rotate(90) translate(0, ' + translateY + ')')\n        .attr(\"text-anchor\", \"middle\");\n\n      // Hide syntenic regions\n      d3.selectAll(ideo.selector + ' .syntenicRegion').style(\"display\", 'none');\n    });\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(this.getChromosomeLabels(chrElement))\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', yOffset + (self._config.chrWidth * scaleX / 2) * 1.15)\n    .style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nPairedLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n  var ideo = this._ideo;\n\n    // Get intial transformation string for chromosome set\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', function() {\n            // Run callback fnuction if provided\n          callback();\n            // Show syntenic regions\n          d3.selectAll(ideo.select + ' .syntenicRegion').style(\"display\", null);\n            // Reset changed attributes to original state\n          d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n            .attr('transform', null)\n            .attr(\"text-anchor\", setNumber ? null : 'end');\n        });\n\n  d3.selectAll(ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nPairedLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.left * 1.5;\n};\n\nPairedLayout.prototype.getWidth = function() {\n  return '97%';\n};\n\nPairedLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n  return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n  var width = this._config.chrWidth;\n  return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n  return chrNumber % 2 ? null : 'end';\n};\n\nPairedLayout.prototype.getChromosomeBandLabelTranslate = function(band,\n  chrNumber) {\n  var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n  var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n  return {\n    x: y,\n    y: y,\n    translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n  };\n};\n\nPairedLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nPairedLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nPairedLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  return 200 * (setNumber + 1);\n};\n","function SmallLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'SmallLayout';\n\n  this._margin = {\n    left: 36.5,\n    top: 10\n  };\n}\n\nSmallLayout.prototype = Object.create(Layout.prototype);\n\nSmallLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  transform = \"translate(5, 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.getHeight = function() {\n  return this._config.rows * (this._config.chrHeight + this._margin.top * 1.5);\n};\n\nSmallLayout.prototype.getWidth = function() {\n  return '97%';\n};\n\nSmallLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nSmallLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nSmallLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n    // Get organisms id list\n  var organisms = [];\n  this._ideo.getTaxids(function(taxIdList) {\n    organisms = taxIdList;\n  });\n    // Get first organism chromosomes amount\n  var size = this._ideo.config.chromosomes[organisms[0]].length;\n    // Amount of chromosomes per number\n  var rowSize = size / this._config.rows;\n\n  var xOffset;\n  var yOffset;\n\n  if (setNumber > rowSize - 1) {\n    xOffset = this._margin.left + this._config.chrHeight * 1.4;\n    yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n  } else {\n    xOffset = this._margin.left;\n    yOffset = this.getChromosomeSetYTranslate(setNumber);\n  }\n\n  return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n};\n\nSmallLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation tracks\n  var additionalPadding = this._getAdditionalOffset();\n    // If no detailed description provided just use one formula for all cases\n  return (\n    this._margin.left * (setNumber) + this._config.chrWidth +\n    additionalPadding * 2 + additionalPadding * setNumber\n  );\n};\n\nSmallLayout.prototype.getChromosomeSetLabelXPosition = function(setNumber) {\n  return (\n    ((this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2) +\n    (this._config.ploidy > 1 ? 0 : this._config.chrWidth)\n  );\n};\n\nSmallLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function Ploidy(config) {\n  this._config = config;\n  this._description = this._normalize(this._config.ploidyDesc);\n}\n\n// Get number of chromosomes in a chromosome set\nPloidy.prototype.getChromosomesNumber = function(setNumber) {\n  if (this._config.ploidyDesc) {\n    var chrSetCode = this._config.ploidyDesc[setNumber];\n    if (chrSetCode instanceof Object) {\n      return Object.keys(chrSetCode)[0].length;\n    } else {\n      return chrSetCode.length;\n    }\n  } else {\n    return this._config.ploidy || 1;\n  }\n};\n\n// Normalize use defined description\nPloidy.prototype._normalize = function(description) {\n  var normalized, key, descValue;\n\n  // Return the same if no description provided\n  if (!description) {\n    return description;\n  }\n\n  // Array of normalized description objects\n  normalized = [];\n\n  // Loop through description and normalize\n  for (key in description) {\n    descValue = description[key];\n    if (typeof descValue === 'string') {\n      if (this._config.orientation === 'vertical') {\n        descValue = descValue.split('').reverse();\n      }\n      normalized.push({\n        ancestors: descValue,\n        existence: this._getexistenceArray(descValue.length)\n      });\n    } else {\n      normalized.push({\n        ancestors: Object.keys(descValue)[0],\n        existence: descValue[Object.keys(descValue)[0]]\n      });\n    }\n  }\n\n  return normalized;\n};\n\n// Get array filled by '11' elements\nPloidy.prototype._getexistenceArray = function(length) {\n  var array = [];\n\n  for (var i = 0; i < length; i++) {\n    array.push('11');\n  }\n\n  return array;\n};\n\nPloidy.prototype.getSetSize = function(chrSetNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors.length;\n  } else {\n    return 1;\n  }\n};\n\n// Get ancestor letter\nPloidy.prototype.getAncestor = function(chrSetNumber, chrNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors[chrNumber];\n  } else {\n    return '';\n  }\n};\n\n// Check if chromosome's arm should be rendered.\n// If no description was provided, method returns true and\n// something another depending on user provided description.\nPloidy.prototype.exists = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._description) {\n    var desc = this._description[chrSetNumber].existence[chrNumber][armNumber];\n    return Number(desc) > 0;\n  } else {\n    return true;\n  }\n};\n","function Color(config) {\n    // Ideogram config\n  this._config = config;\n  this._ploidy = new Ploidy(this._config);\n}\n\nColor.prototype.getArmColor = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._config.armColors) {\n    return this._config.armColors[armNumber];\n  } else if (this._config.ancestors) {\n    return this._getPolyploidArmColor(chrSetNumber, chrNumber, armNumber);\n  } else {\n    return null;\n  }\n};\n\nColor.prototype.getBorderColor = function(chrSetNumber, chrNumber, armNumber) {\n  if (chrNumber < this._config.ploidy) {\n    return '#000';\n  } else if (this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return '#000';\n  } else {\n    return '#fff';\n  }\n};\n\nColor.prototype._getPolyploidArmColor = function(chrSetNumber, chrNumber,\n  armNumber) {\n  if (!this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return 'transparent';\n  } else {\n    var ancestor = this._ploidy.getAncestor(chrSetNumber, chrNumber, armNumber);\n    return this._config.ancestors[ancestor];\n  }\n};\n","function Chromosome(adapter, config, ideo) {\n  this._adapter = adapter;\n  this._model = this._adapter.getModel();\n  this._config = config;\n  this._ideo = ideo;\n  this._color = new Color(this._config);\n  this._bumpCoefficient = 5;\n}\n\n// Factory method\nChromosome.getInstance = function(adapter, config, ideo) {\n  if (adapter.getModel().centromerePosition === 'telocentric') {\n    return new TelocentricChromosome(adapter, config, ideo);\n  } else {\n    return new MetacentricChromosome(adapter, config, ideo);\n  }\n};\n\nChromosome.prototype._addPArmShape = function(clipPath, isPArmRendered) {\n  if (isPArmRendered) {\n    return clipPath.concat(this._getPArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype._addQArmShape = function(clipPath, isQArmRendered) {\n  if (isQArmRendered) {\n    return clipPath.concat(this._getQArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype.render = function(container, chrSetNumber, chrNumber) {\n    // Append bands container and apply clip-path on it\n\n  var self = this;\n\n  container = container.append('g')\n    .attr('class', 'bands')\n    .attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n    // Render chromosome arms\n  var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n  var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n    // Render range set\n  this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n    // Push arms shape string into clipPath array\n  var clipPath = [];\n  clipPath = this._addPArmShape(clipPath, isPArmRendered);\n  clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n  var opacity = '0';\n  var fill = '';\n  var isFullyBanded = this.isFullyBanded();\n  if ('ancestors' in this._ideo.config && !('rangeSet' in this._ideo.config)) {\n    // E.g. diploid human genome (with translucent overlay)\n    fill = self._color.getArmColor(chrSetNumber, chrNumber, 0);\n    if (isFullyBanded) {\n      opacity = '0.5';\n    }\n  } else if (isFullyBanded) {\n    // E.g. mouse reference genome\n    opacity = null;\n    fill = 'transparent';\n  } else if (!('ancestors' in this._ideo.config)) {\n    // E.g. chimpanzee assembly Pan_tro 3.0\n    opacity = '1';\n  }\n\n  // Render chromosome border\n  container.append('g')\n        .attr('class', 'chromosome-border')\n        .selectAll('path')\n        .data(clipPath)\n        .enter()\n        .append('path')\n        .attr('fill', fill)\n        .style('fill-opacity', opacity)\n        .attr('stroke', function(d, i) {\n          return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n        })\n        .attr('stroke-width', function(d) {\n          return ('strokeWidth' in d ? d.strokeWidth : 1);\n        })\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n\n  return clipPath;\n};\n\nChromosome.prototype._renderRangeSet = function(container, chrSetNumber,\n  chrNumber) {\n  if (!('rangeSet' in this._config)) {\n    return;\n  }\n\n  var rangeSet = this._config.rangeSet.filter(function(range) {\n    return range.chr - 1 === chrSetNumber;\n  }).map(function(range) {\n    return new Range(range);\n  });\n\n  var rangesContainer = container.append('g')\n        .attr('class', 'range-set');\n\n  var self = this;\n  var ideo = self._ideo;\n  var bandsXOffset = ideo._bandsXOffset;\n\n  rangesContainer.selectAll('rect.range')\n        .data(rangeSet)\n        .enter()\n        .append('rect')\n        .attr('class', 'range')\n        .attr('x', function(range) {\n          var startPx = ideo.convertBpToPx(self._model, range.getStart());\n          return startPx - bandsXOffset;\n        }).attr('y', 0)\n        .attr('width', function(range) {\n          var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n          return lengthPx - bandsXOffset;\n        }).attr('height', this._config.chrWidth)\n        .style('fill', function(range) {\n          return range.getColor(chrNumber);\n        });\n};\n\n// Get chromosome's shape main values\nChromosome.prototype._getShapeData = function() {\n    // First q band from bands sequence\n  var firstQBand;\n  for (var i = 0; i < this._model.bands.length; i++) {\n    if (this._model.bands[i].name[0] === 'q') {\n      firstQBand = this._model.bands[i];\n      break;\n    }\n  }\n\n  // Chromosome's right position\n  var lastBand = this._model.bands.length - 1;\n  var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n    // Properties description:\n    // x1 - left terminal start position\n    // x2 - centromere position\n    // x3 - right terminal end position\n    // w - chromosome width\n    // b - bump size\n  return {\n    x1: 0,\n    x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n    x3: rightTerminalPosition,\n    w: this._config.chrWidth,\n    b: this._config.chrWidth / this._bumpCoefficient\n  };\n};\n\nChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x2 - d.b;\n\n  if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n    // Encountered when chromosome has any of:\n    //  - One placeholder \"band\", e.g. pig genome GCF_000003025.5\n    //  - Many (> 2) bands, e.g. human reference genome\n    //  - Ancestor colors in ploidy configuration, as in ploidy_basic.html\n    return {\n      class: '',\n      path:\n        'M' + d.b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + d.b + ',' + d.w + ' ' +\n        'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      class: '',\n      path:\n        'M' + d.b + ',0 ' +\n        'L' + (x - 2) + ',0 ' +\n        'L' + (x - 2) + ',' + d.w + ' ' +\n        'L' + d.b + ',' + d.w + ' ' +\n        'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n    }, {\n      class: 'acen',\n      path:\n        'M' + x + ',0 ' +\n        'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x + ',' + d.w + ' ' +\n        'L' + (x - 2) + ',' + d.w + ' ' +\n        'L' + (x - 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b,\n    x2b = d.x2 + d.b;\n\n  if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n    return {\n      class: '',\n      path:\n        'M' + x2b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w + ' ' +\n        'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + x2b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      path:\n        'M' + x2b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w + ' ' +\n        'L' + x2b + ',0'\n    }, {\n      class: 'acen',\n      path:\n        'M' + x2b + ',0' +\n        'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + x2b + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w +\n        'L' + (x2b + 2) + ',' + d.w +\n        'L' + (x2b + 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype.isFullyBanded = function() {\n  return (\n    this._model.bands &&\n    (this._model.bands.length !== 2 || this._model.bands[0].name[0] === 'q')\n  );\n};\n\n// Render arm bands\nChromosome.prototype._renderBands = function(container, chrSetNumber,\n  chrNumber, bands, arm) {\n  var self = this;\n  var armNumber = arm === 'p' ? 0 : 1;\n  var fill = '';\n  if ('ancestors' in this._ideo.config && !(this.isFullyBanded())) {\n    fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n  }\n\n  container.selectAll(\"path.band.\" + arm)\n    .data(bands)\n    .enter()\n    .append(\"path\")\n    .attr(\"id\", function(d) {\n      return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n    })\n    .attr(\"class\", function(d) {\n      return 'band ' + arm + '-band ' + d.stain;\n    })\n    .attr(\"d\", function(d) {\n      var start = self._ideo.round(d.px.start);\n      var length = self._ideo.round(d.px.width);\n\n      x = start + length;\n\n      return \"M \" + start + \", 0\" +\n            \"l \" + length + \" 0 \" +\n            \"l 0 \" + self._config.chrWidth + \" \" +\n            \"l -\" + length + \" 0 z\";\n    })\n    .style('fill', fill);\n};\n\n// Render chromosome's p arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderPArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'p';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n  return Boolean(bands.length);\n};\n\n// Render chromosome's q arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderQArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'q';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n  return Boolean(bands.length);\n};\n","function TelocentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'TelocentricChromosome';\n  this._pArmOffset = 3;\n}\n\nTelocentricChromosome.prototype = Object.create(Chromosome.prototype);\n\nTelocentricChromosome.prototype._addPArmShape = function(clipPath) {\n  return clipPath.concat(this._getPArmShape());\n};\n\nTelocentricChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData();\n  d.o = this._pArmOffset;\n\n  return [{\n    class: 'acen',\n    path: 'M' + (d.x2 + 2) + ',1' +\n            'L' + (d.x2 + d.o + 3.25) + ',1 ' +\n            'L' + (d.x2 + d.o + 3.25) + ',' + (d.w - 1) + ' ' +\n            'L' + (d.x2 + 2) + ',' + (d.w - 1)\n  }, {\n    class: 'gpos66',\n    path: 'M' + (d.x2 - d.o + 5) + ',0' +\n        'L' + (d.x2 - d.o + 3) + ',0 ' +\n        'L' + (d.x2 - d.o + 3) + ',' + d.w + ' ' +\n        'L' + (d.x2 - d.o + 5) + ',' + d.w,\n    strokeWidth: 0.5\n  }];\n};\n\nTelocentricChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b,\n    o = this._pArmOffset + 3;\n\n  return {\n    class: '',\n    path:\n      'M' + (d.x2 + o) + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + (d.x2 + o) + ',' + d.w\n  };\n};\n","function MetacentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'MetacentricChromosome';\n}\n\nMetacentricChromosome.prototype = Object.create(Chromosome.prototype);\n","// https://github.com/stefanpenner/es6-promise\n(function(){\"use strict\";function t(t){return\"function\"==typeof t||\"object\"==typeof t&&null!==t}function e(t){return\"function\"==typeof t}function n(t){G=t}function r(t){Q=t}function o(){return function(){process.nextTick(a)}}function i(){return function(){B(a)}}function s(){var t=0,e=new X(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){t.port2.postMessage(0)}}function c(){return function(){setTimeout(a,1)}}function a(){for(var t=0;J>t;t+=2){var e=tt[t],n=tt[t+1];e(n),tt[t]=void 0,tt[t+1]=void 0}J=0}function f(){try{var t=require,e=t(\"vertx\");return B=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[rt]&&k(r);var o=n._state;if(o){var i=arguments[o-1];Q(function(){x(o,r,i,n._result)})}else E(n,r,t,e);return r}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function _(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function v(t){try{return t.then}catch(e){return ut.error=e,ut}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){Q(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===it?S(t,e._result):e._state===st?j(t,e._result):E(e,void 0,function(e){g(t,e)},function(e){j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===et&&constructor.resolve===nt?b(t,n):r===ut?j(t,ut.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,_()):t(n)?w(e,n,v(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===ot&&(t._result=e,t._state=it,0!==t._subscribers.length&&Q(T,t))}function j(t,e){t._state===ot&&(t._state=st,t._result=e,Q(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+it]=n,o[i+st]=r,0===i&&t._state&&Q(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r,o,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return ct.error=n,ct}}function x(t,n,r,o){var i,s,u,c,a=e(r);if(a){if(i=P(r,o),i===ct?(c=!0,s=i.error,i=null):u=!0,n===i)return void j(n,d())}else i=o,u=!0;n._state!==ot||(a&&u?g(n,i):c?j(n,s):t===it?S(n,i):t===st&&j(n,i))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return at++}function k(t){t[rt]=at++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t){return new _t(this,t).promise}function q(t){var e=this;return new e(I(t)?function(n,r){for(var o=t.length,i=0;o>i;i++)e.resolve(t[i]).then(n,r)}:function(t,e){e(new TypeError(\"You must pass an array to race.\"))})}function F(t){var e=this,n=new e(p);return j(n,t),n}function D(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function K(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function L(t){this[rt]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&D(),this instanceof L?C(this,t):K())}function N(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[rt]||k(this.promise),I(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,U())}function U(){return new Error(\"Array Methods must be provided an Array\")}function W(){var t;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;(!n||\"[object Promise]\"!==Object.prototype.toString.call(n.resolve())||n.cast)&&(t.Promise=pt)}var z;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B,G,H,I=z,J=0,Q=function(t,e){tt[J]=t,tt[J+1]=e,J+=2,2===J&&(G?G(a):H())},R=\"undefined\"!=typeof window?window:void 0,V=R||{},X=V.MutationObserver||V.WebKitMutationObserver,Z=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),$=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,tt=new Array(1e3);H=Z?o():X?s():$?u():void 0===R&&\"function\"==typeof require?f():c();var et=l,nt=h,rt=Math.random().toString(36).substring(16),ot=void 0,it=1,st=2,ut=new M,ct=new M,at=0,ft=Y,lt=q,ht=F,pt=L;L.all=ft,L.race=lt,L.resolve=nt,L.reject=ht,L._setScheduler=n,L._setAsap=r,L._asap=Q,L.prototype={constructor:L,then:et,\"catch\":function(t){return this.then(null,t)}};var _t=N;N.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===ot&&t>n;n++)this._eachEntry(e[n],n)},N.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===nt){var o=v(t);if(o===et&&t._state!==ot)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===pt){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){e(t)}),e)}else this._willSettleAt(r(t),e)},N.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===ot&&(this._remaining--,t===st?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},N.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){n._settledAt(it,e,t)},function(t){n._settledAt(st,e,t)})};var dt=W,vt={Promise:pt,polyfill:dt};\"function\"==typeof define&&define.amd?define(function(){return vt}):\"undefined\"!=typeof module&&module.exports?module.exports=vt:\"undefined\"!=typeof this&&(this.ES6Promise=vt),dt()}).call(this);\n\n// https://github.com/kristw/d3.promise\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"d3\"],b):\"object\"==typeof exports?module.exports=b(require(\"d3\")):a.d3.promise=b(a.d3)}(this,function(a){var b=function(){function b(a,b){return function(){var c=Array.prototype.slice.call(arguments);return new Promise(function(d,e){var f=function(a,b){return a?void e(Error(a)):void d(b)};b.apply(a,c.concat(f))})}}var c={};return[\"csv\",\"tsv\",\"json\",\"xml\",\"text\",\"html\",\"get\"].forEach(function(d){c[d]=b(a,a[d])}),c}();return a.promise=b,b});\n\n// https://github.com/overset/javascript-natural-sort\nfunction naturalSort(a,b){var q,r,c=/(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,d=/^\\s+|\\s+$/g,e=/\\s+/g,f=/(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,g=/^0x[0-9a-f]+$/i,h=/^0/,i=function(a){return(naturalSort.insensitive&&(\"\"+a).toLowerCase()||\"\"+a).replace(d,\"\")},j=i(a),k=i(b),l=j.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),m=k.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),n=parseInt(j.match(g),16)||1!==l.length&&Date.parse(j),o=parseInt(k.match(g),16)||n&&k.match(f)&&Date.parse(k)||null,p=function(a,b){return(!a.match(h)||1==b)&&parseFloat(a)||a.replace(e,\" \").replace(d,\"\")||0};if(o){if(n<o)return-1;if(n>o)return 1}for(var s=0,t=l.length,u=m.length,v=Math.max(t,u);s<v;s++){if(q=p(l[s]||\"\",t),r=p(m[s]||\"\",u),isNaN(q)!==isNaN(r))return isNaN(q)?1:-1;if(/[^\\x00-\\x80]/.test(q+r)&&q.localeCompare){var w=q.localeCompare(r);return w/Math.abs(w)}if(q<r)return-1;if(q>r)return 1}}\n\n// e.g. \"Homo sapiens\" -> \"homo-sapiens\"\nfunction slugify(value){return value.toLowerCase().replace(' ', '-')};\n","// Chromosome's view utility class\nfunction ChromosomeUtil(node) {\n  this._node = node;\n}\n\nChromosomeUtil.prototype.getLabel = function() {\n  var label =\n    d3\n      .select(this._node)\n      .select('text.chrLabel')\n      .text();\n  return label;\n};\n\n// Get chromosome set label\nChromosomeUtil.prototype.getSetLabel = function() {\n  var setLabel =\n    d3\n      .select(this._node.parentNode)\n      .select('text.chromosome-set-label')\n      .text();\n  return setLabel;\n};\n","// Developed by Eric Weitz (https://github.com/eweitz)\n\n/* Constructs a prototypal Ideogram class */\nvar Ideogram = function(config) {\n  var orientation,\n    chrWidth, chrHeight,\n    container, rect;\n\n  // Clone the config object, to allow multiple instantiations\n  // without picking up prior ideogram's settings\n  this.config = JSON.parse(JSON.stringify(config));\n\n  // TODO: Document this\n  this._bandsXOffset = 30;\n\n  this.debug = false;\n\n  if (!this.config.dataDir) {\n    this.config.dataDir = \"../data/bands/native/\";\n  }\n\n  if (!this.config.ploidy) {\n    this.config.ploidy = 1;\n  }\n\n  if (this.config.ploidy > 1) {\n    this.sexChromosomes = {};\n    if (!this.config.sex) {\n      // Default to 'male' per human, mouse reference genomes.\n      // TODO: The default sex value should probably be the heterogametic sex,\n      // i.e. whichever sex has allosomes that differ in morphology.\n      // In mammals and most insects that is the male.\n      // However, in birds and reptiles, that is female.\n      this.config.sex = 'male';\n    }\n    if (this.config.ploidy === 2 && !this.config.ancestors) {\n      this.config.ancestors = {M: \"#ffb6c1\", P: \"#add8e6\"};\n      this.config.ploidyDesc = \"MP\";\n    }\n  }\n\n  if (!this.config.container) {\n    this.config.container = \"body\";\n  }\n\n  this.selector = this.config.container + ' #_ideogram';\n\n  if (!this.config.resolution) {\n    this.config.resolution = 850;\n  }\n\n  if (\"showChromosomeLabels\" in this.config === false) {\n    this.config.showChromosomeLabels = true;\n  }\n\n  if (!this.config.orientation) {\n    orientation = \"vertical\";\n    this.config.orientation = orientation;\n  }\n\n  if (!this.config.chrHeight) {\n    container = this.config.container;\n    rect = document.querySelector(container).getBoundingClientRect();\n\n    if (orientation === \"vertical\") {\n      chrHeight = rect.height;\n    } else {\n      chrHeight = rect.width;\n    }\n\n    if (container === \"body\") {\n      chrHeight = 400;\n    }\n    this.config.chrHeight = chrHeight;\n  }\n\n  if (!this.config.chrWidth) {\n    chrWidth = 10;\n    chrHeight = this.config.chrHeight;\n\n    if (chrHeight < 900 && chrHeight > 500) {\n      chrWidth = Math.round(chrHeight / 40);\n    } else if (chrHeight >= 900) {\n      chrWidth = Math.round(chrHeight / 45);\n    }\n    this.config.chrWidth = chrWidth;\n  }\n\n  if (!this.config.chrMargin) {\n    if (this.config.ploidy === 1) {\n      this.config.chrMargin = 10;\n    } else {\n      // Defaults polyploid chromosomes to relatively small interchromatid gap\n      this.config.chrMargin = Math.round(this.config.chrWidth / 4);\n    }\n  }\n\n  if (!this.config.showBandLabels) {\n    this.config.showBandLabels = false;\n  }\n\n  if ('showFullyBanded' in this.config) {\n    this.config.showFullyBanded = this.config.showFullyBanded;\n  } else {\n    this.config.showFullyBanded = true;\n  }\n\n  if (!this.config.brush) {\n    this.config.brush = false;\n  }\n\n  if (!this.config.rows) {\n    this.config.rows = 1;\n  }\n\n  this.bump = Math.round(this.config.chrHeight / 125);\n  this.adjustedBump = false;\n  if (this.config.chrHeight < 200) {\n    this.adjustedBump = true;\n    this.bump = 4;\n  }\n\n  if (config.showBandLabels) {\n    this.config.chrMargin += 20;\n  }\n\n  if (config.chromosome) {\n    this.config.chromosomes = [config.chromosome];\n    if (\"showBandLabels\" in config === false) {\n      this.config.showBandLabels = true;\n    }\n    if (\"rotatable\" in config === false) {\n      this.config.rotatable = false;\n    }\n  }\n\n  if (!this.config.showNonNuclearChromosomes) {\n    this.config.showNonNuclearChromosomes = false;\n  }\n\n  this.initAnnotSettings();\n\n  this.config.chrMargin = (\n    this.config.chrMargin +\n    this.config.chrWidth +\n    this.config.annotTracksHeight * 2\n  );\n\n  if (config.onLoad) {\n    this.onLoadCallback = config.onLoad;\n  }\n\n  if (config.onDrawAnnots) {\n    this.onDrawAnnotsCallback = config.onDrawAnnots;\n  }\n\n  if (config.onBrushMove) {\n    this.onBrushMoveCallback = config.onBrushMove;\n  }\n\n  this.coordinateSystem = \"iscn\";\n\n  this.maxLength = {\n    bp: 0,\n    iscn: 0\n  };\n\n  // The E-Utilies In Depth: Parameters, Syntax and More:\n  // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n  this.eutils = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/\";\n  this.esearch = this.eutils + \"esearch.fcgi?retmode=json\";\n  this.esummary = this.eutils + \"esummary.fcgi?retmode=json\";\n  this.elink = this.eutils + \"elink.fcgi?retmode=json\";\n\n  this.organisms = {\n    9606: {\n      commonName: \"Human\",\n      scientificName: \"Homo sapiens\",\n      scientificNameAbbr: \"H. sapiens\",\n      assemblies: {\n        default: \"GCF_000001405.26\", // GRCh38\n        GRCh38: \"GCF_000001405.26\",\n        GRCh37: \"GCF_000001405.13\"\n      }\n    },\n    10090: {\n      commonName: \"Mouse\",\n      scientificName: \"Mus musculus\",\n      scientificNameAbbr: \"M. musculus\",\n      assemblies: {\n        default: \"GCF_000001635.20\"\n      }\n    },\n    4641: {\n      commonName: \"banana\",\n      scientificName: \"Musa acuminata\",\n      scientificNameAbbr: \"M. acuminata\",\n      assemblies: {\n        default: \"mock\"\n      }\n    }\n  };\n\n  // A flat array of chromosomes\n  // (this.chromosomes is an object of\n  // arrays of chromosomes, keyed by organism)\n  this.chromosomesArray = [];\n\n  this.bandsToShow = [];\n\n  this.chromosomes = {};\n  this.numChromosomes = 0;\n  this.bandData = {};\n\n  this.init();\n};\n\n/**\n* Gets chromosome band data from a\n* TSV file, or, if band data is prefetched, from an array\n*\n* UCSC: #chrom chromStart  chromEnd  name  gieStain\n* http://genome.ucsc.edu/cgi-bin/hgTables\n*  - group: Mapping and Sequencing\n*  - track: Chromosome Band (Ideogram)\n*\n* NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n* ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n*/\nIdeogram.prototype.getBands = function(content, taxid, chromosomes) {\n  var lines = {},\n    delimiter, tsvLines, columns, line, stain, chr,\n    i, init, tsvLinesLength, source,\n    start, stop, firstColumn, tmp;\n\n  if (content.slice(0, 8) === \"chrBands\") {\n    source = \"native\";\n  }\n\n  if (\n    chromosomes instanceof Array &&\n    typeof chromosomes[0] === 'object'\n  ) {\n    tmp = [];\n    for (i = 0; i < chromosomes.length; i++) {\n      tmp.push(chromosomes[i].name);\n    }\n    chromosomes = tmp;\n  }\n\n  if (typeof chrBands === \"undefined\" && source !== \"native\") {\n    delimiter = /\\t/;\n    tsvLines = content.split(/\\r\\n|\\n/);\n    init = 1;\n  } else {\n    delimiter = / /;\n    if (source === \"native\") {\n      tsvLines = eval(content);\n    } else {\n      tsvLines = content;\n    }\n    init = 0;\n  }\n\n  firstColumn = tsvLines[0].split(delimiter)[0];\n  if (firstColumn === '#chromosome') {\n    source = 'ncbi';\n  } else if (firstColumn === '#chrom') {\n    source = 'ucsc';\n  } else {\n    source = 'native';\n  }\n\n  tsvLinesLength = tsvLines.length;\n\n  if (source === 'ncbi' || source === 'native') {\n    for (i = init; i < tsvLinesLength; i++) {\n      columns = tsvLines[i].split(delimiter);\n\n      chr = columns[0];\n\n      if (\n        // If a specific set of chromosomes has been requested, and\n        // the current chromosome\n        typeof (chromosomes) !== \"undefined\" &&\n        chromosomes.indexOf(chr) === -1\n      ) {\n        continue;\n      }\n\n      if (chr in lines === false) {\n        lines[chr] = [];\n      }\n\n      stain = columns[7];\n      if (columns[8]) {\n        // For e.g. acen and gvar, columns[8] (density) is undefined\n        stain += columns[8];\n      }\n\n      line = {\n        chr: chr,\n        bp: {\n          start: parseInt(columns[5], 10),\n          stop: parseInt(columns[6], 10)\n        },\n        iscn: {\n          start: parseInt(columns[3], 10),\n          stop: parseInt(columns[4], 10)\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[1] + columns[2],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  } else if (source === 'ucsc') {\n    for (i = init; i < tsvLinesLength; i++) {\n      // #chrom chromStart  chromEnd  name  gieStain\n      // e.g. for fly:\n      // chr4\t69508\t108296\t102A1\tn/a\n      columns = tsvLines[i].split(delimiter);\n\n      if (columns[0] !== 'chr' + chromosomeName) {\n        continue;\n      }\n\n      stain = columns[4];\n      if (stain === 'n/a') {\n        stain = 'gpos100';\n      }\n      start = parseInt(columns[1], 10);\n      stop = parseInt(columns[2], 10);\n\n      line = {\n        chr: columns[0].split('chr')[1],\n        bp: {\n          start: start,\n          stop: stop\n        },\n        iscn: {\n          start: start,\n          stop: stop\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[3],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  }\n\n  return lines;\n};\n\n/**\n* Generates a model object for each chromosome\n* containing information on its name, DOM ID,\n* length in base pairs or ISCN coordinates,\n* cytogenetic bands, centromere position, etc.\n*/\nIdeogram.prototype.getChromosomeModel = function(bands, chromosome, taxid,\n  chrIndex) {\n  var chr = {},\n    band,\n    width, pxStop,\n    chrHeight = this.config.chrHeight,\n    maxLength = this.maxLength,\n    chrLength,\n    cs, hasBands;\n\n  cs = this.coordinateSystem;\n  hasBands = (typeof bands !== \"undefined\");\n\n  if (hasBands) {\n    chr.name = chromosome;\n    chr.length = bands[bands.length - 1][cs].stop;\n    chr.type = \"nuclear\";\n  } else {\n    chr = chromosome;\n  }\n\n  chr.chrIndex = chrIndex;\n\n  chr.id = \"chr\" + chr.name + \"-\" + taxid;\n\n  if (this.config.fullChromosomeLabels === true) {\n    var orgName = this.organisms[taxid].scientificNameAbbr;\n    chr.name = orgName + \" chr\" + chr.name;\n  }\n\n  chrLength = chr.length;\n\n  pxStop = 0;\n\n  if (hasBands) {\n    for (var i = 0; i < bands.length; i++) {\n      band = bands[i];\n      var csLength = band[cs].stop - band[cs].start;\n      width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n      bands[i].px = {start: pxStop, stop: pxStop + width, width: width};\n\n      pxStop = bands[i].px.stop;\n\n      if (hasBands && band.stain === \"acen\" && band.name[0] === \"p\") {\n        chr.pcenIndex = i;\n      }\n    }\n  } else {\n    pxStop = chrHeight * chr.length / maxLength[cs];\n  }\n\n  chr.width = pxStop;\n\n  chr.scale = {};\n\n  // TODO:\n  //\n  // A chromosome-level scale property is likely\n  // nonsensical for any chromosomes that have cytogenetic band data.\n  // Different bands tend to have ratios between number of base pairs\n  // and physical length.\n  //\n  // However, a chromosome-level scale property is likely\n  // necessary for chromosomes that do not have band data.\n  //\n  // This needs further review.\n  if (this.config.multiorganism === true) {\n    chr.scale.bp = 1;\n    // chr.scale.bp = band.iscn.stop / band.bp.stop;\n    chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n  } else {\n    chr.scale.bp = chrHeight / maxLength.bp;\n    if (hasBands) {\n      chr.scale.iscn = chrHeight / maxLength.iscn;\n    }\n  }\n  chr.bands = bands;\n\n  chr.centromerePosition = \"\";\n  if (\n    hasBands && bands[0].name[0] === 'p' && bands[1].name[0] === 'q' &&\n    bands[0].bp.stop - bands[0].bp.start < 2E6\n  ) {\n    // As with almost all mouse chromosome, chimpanzee chr22\n    chr.centromerePosition = \"telocentric\";\n\n    // Remove placeholder pter band\n    chr.bands = chr.bands.slice(1);\n  }\n\n  if (hasBands && chr.bands.length === 1) {\n    // Encountered when processing an assembly that has chromosomes with\n    // centromere data, but this chromosome does not.\n    // Example: chromosome F1 in Felis catus.\n    delete chr.bands;\n  }\n\n  return chr;\n};\n\n/**\n* Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n* If ideogram configuration has 'fullChromosomeLabels: True',\n* then labels includes name of taxon, which can help when\n* depicting orthologs.\n*/\nIdeogram.prototype.drawChromosomeLabels = function() {\n  var ideo = this;\n\n  var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n  var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n  var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes set's labels\n  d3.selectAll(ideo.selector + \" .chromosome-set-container\")\n        .append(\"text\")\n        .data(ideo.chromosomesArray)\n        .attr(\"class\", 'chromosome-set-label ' + chromosomeLabelClass)\n        .attr(\"transform\", chrSetLabelTranslate)\n        .attr(\"x\", chrSetLabelXPosition)\n        .attr(\"y\", function(d, i) {\n          return ideo._layout.getChromosomeSetLabelYPosition(i);\n        })\n        .attr(\"text-anchor\", ideo._layout.getChromosomeSetLabelAnchor())\n        .each(function(d, i) {\n            // Get label lines\n          var lines;\n          if (d.name.indexOf(' ') === -1) {\n            lines = [d.name];\n          } else {\n            lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n          }\n\n          if (\n            'sex' in ideo.config &&\n            ideo.config.ploidy === 2 &&\n            i === ideo.sexChromosomes.index\n          ) {\n            if (ideo.config.sex === 'male') {\n              lines = ['XY'];\n            } else {\n              lines = ['XX'];\n            }\n          }\n\n          // Render label lines\n          d3.select(this).selectAll('tspan')\n            .data(lines)\n            .enter()\n            .append('tspan')\n            .attr('dy', function(d, i) {\n              return i * -1.2 + 'em';\n            })\n            .attr('x', ideo._layout.getChromosomeSetLabelXPosition())\n            .attr('class', function(a, i) {\n              var fullLabels = ideo.config.fullChromosomeLabels;\n              return i === 1 && fullLabels ? 'italic' : null;\n            }).text(String);\n        });\n\n  var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes labels\n  d3.selectAll(ideo.selector + \" .chromosome-set-container\")\n        .each(function(a, chrSetNumber) {\n          d3.select(this).selectAll(\".chromosome\")\n                .append(\"text\")\n                .attr(\"class\", \"chrLabel\")\n                .attr(\"transform\", setLabelTranslate)\n                .attr(\"x\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelXPosition(i);\n                }).attr(\"y\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelYPosition(i);\n                }).text(function(d, chrNumber) {\n                  return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n                }).attr(\"text-anchor\", \"middle\");\n        });\n};\n\n/**\n* Draws labels and stalks for cytogenetic bands.\n*\n* Band labels are text like \"p11.11\".\n* Stalks are small lines that visually connect labels to their bands.\n*/\nIdeogram.prototype.drawBandLabels = function(chromosomes) {\n  var i, chr, chrs, taxid, ideo, chrModel;\n\n  ideo = this;\n\n  chrs = [];\n\n  for (taxid in chromosomes) {\n    for (chr in chromosomes[taxid]) {\n      chrs.push(chromosomes[taxid][chr]);\n    }\n  }\n\n  var textOffsets = {};\n\n  chrIndex = 0;\n  for (i = 0; i < chrs.length; i++) {\n    chrIndex += 1;\n\n    chrModel = chrs[i];\n\n    chr = d3.select(ideo.selector + \" #\" + chrModel.id);\n\n    // var chrMargin = this.config.chrMargin * chrIndex,\n    //   lineY1, lineY2;\n    //\n    // lineY1 = chrMargin;\n    // lineY2 = chrMargin - 8;\n    //\n    // if (\n    //   chrIndex === 1 &&\n    //   \"perspective\" in this.config && this.config.perspective === \"comparative\"\n    // ) {\n    //   lineY1 += 18;\n    //   lineY2 += 18;\n    // }\n\n    textOffsets[chrModel.id] = [];\n\n    chr.selectAll(\"text\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n        .attr(\"class\", function(d, i) {\n          return \"bandLabel bsbsl-\" + i;\n        })\n        .attr(\"transform\", function(d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          // var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        })\n        .append(\"text\")\n        .attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i))\n        .text(function(d) {\n          return d.name;\n        });\n\n    // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n    // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n    chr.selectAll(\"line.bandLabelStalk\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", function(d, i) {\n        return \"bandLabelStalk bsbsl-\" + i;\n      })\n      .attr(\"transform\", function(d) {\n        var x, y;\n\n        x = ideo.round(d.px.start + d.px.width / 2);\n\n        textOffsets[chrModel.id].push(x + 13);\n        y = -10;\n\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n        .append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", function() {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        }).attr(\"x2\", 0)\n        .attr(\"y2\", function() {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n  }\n\n  for (i = 0; i < chrs.length; i++) {\n    chrModel = chrs[i];\n\n    var textsLength = textOffsets[chrModel.id].length,\n      overlappingLabelXRight,\n      index,\n      indexesToShow = [],\n      prevHiddenBoxIndex,\n      xLeft,\n      prevLabelXRight,\n      textPadding;\n\n    overlappingLabelXRight = 0;\n\n    textPadding = 5;\n\n    for (index = 0; index < textsLength; index++) {\n      // Ensures band labels don't overlap\n\n      xLeft = textOffsets[chrModel.id][index];\n\n      if (xLeft < overlappingLabelXRight + textPadding === false) {\n        indexesToShow.push(index);\n      } else {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n        continue;\n      }\n\n      if (prevHiddenBoxIndex !== index) {\n        // This getBoundingClientRect() forces Chrome's\n        // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n        // TODO: This forced synchronous layout would be nice to eliminate.\n        // prevTextBox = texts[index].getBoundingClientRect();\n        // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n        // TODO: Account for number of characters in prevTextBoxWidth,\n        // maybe also zoom.\n        prevTextBoxLeft = textOffsets[chrModel.id][index];\n        prevTextBoxWidth = 36;\n\n        prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n      }\n\n      if (\n        xLeft < prevLabelXRight + textPadding\n      ) {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n      } else {\n        indexesToShow.push(index);\n      }\n    }\n\n    var selectorsToShow = [],\n      ithLength = indexesToShow.length,\n      j;\n\n    for (j = 0; j < ithLength; j++) {\n      index = indexesToShow[j];\n      selectorsToShow.push(\"#\" + chrModel.id + \" .bsbsl-\" + index);\n    }\n\n    this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n  }\n};\n\n// Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\nIdeogram.prototype.rotateChromosomeLabels = function(chr, chrIndex,\n  orientation, scale) {\n  var chrMargin, chrWidth, ideo, x, y,\n    numAnnotTracks, scaleSvg, tracksHeight;\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n  numAnnotTracks = this.config.numAnnotTracks;\n\n  ideo = this;\n\n  if (\n    typeof (scale) !== \"undefined\" &&\n    scale.hasOwnProperty(\"x\") &&\n    !(scale.x === 1 && scale.y === 1)\n  ) {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n    x = -6;\n    y = (scale === \"\" ? -16 : -14);\n  } else {\n    x = -8;\n    y = -16;\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  }\n\n  if (orientation === \"vertical\" || orientation === \"\") {\n    var ci = chrIndex - 1;\n\n    if (numAnnotTracks > 1 || orientation === \"\") {\n      ci -= 1;\n    }\n\n    chrMargin2 = -4;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n    }\n\n    chrMargin = ideo.config.chrMargin * ci;\n\n    if (numAnnotTracks > 1 === false) {\n      chrMargin += 1;\n    }\n\n    y = chrMargin + chrMargin2;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", scaleSvg)\n      .selectAll(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y);\n  } else {\n    chrIndex -= 1;\n\n    chrMargin2 = -chrWidth - 2;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + 8;\n    }\n\n    tracksHeight = ideo.config.annotTracksHeight;\n    if (ideo.config.annotationsLayout !== \"overlay\") {\n      tracksHeight *= 2;\n    }\n\n    chrMargin = ideo.config.chrMargin * chrIndex;\n    x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n    x /= scale.x;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", \"rotate(-90)\" + scaleSvg)\n      .selectAll(\"tspan\")\n      .attr(\"x\", x)\n      .attr(\"y\", y);\n  }\n};\n\n/**\n* Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n*\n* This method includes proportional scaling, which ensures that\n* while the parent chromosome group is scaled strongly in one dimension to fill\n* available space, the text in the chromosome's band labels is\n* not similarly distorted, and remains readable.\n*/\nIdeogram.prototype.rotateBandLabels = function(chr, chrIndex, scale) {\n  var chrMargin, scaleSvg,\n    orientation, bandLabels,\n    ideo = this;\n\n  bandLabels = chr.selectAll(\".bandLabel\");\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n\n  orientation = chr.attr(\"data-orientation\");\n\n  if (typeof (scale) === \"undefined\") {\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  } else {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n  }\n\n  if (\n    chrIndex === 1 &&\n    \"perspective\" in this.config && this.config.perspective === \"comparative\"\n  ) {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = (8 - chrMargin) - 26;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"text-anchor\", \"end\");\n  } else if (orientation === \"vertical\") {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = 8 - chrMargin;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n  } else {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n        y = chrMargin - 10;\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n\n    chr.selectAll(\".bandLabelStalk line\")\n      .attr(\"transform\", scaleSvg);\n  }\n};\n\nIdeogram.prototype.round = function(coord) {\n  // Rounds an SVG coordinates to two decimal places\n  // e.g. 42.1234567890 -> 42.12\n  // Per http://stackoverflow.com/a/9453447, below method is fastest\n  return Math.round(coord * 100) / 100;\n};\n\n/**\n* Renders all the bands and outlining boundaries of a chromosome.\n*/\nIdeogram.prototype.drawChromosome = function(chrModel, chrIndex, container, k) {\n  var chrMargin = this.config.chrMargin;\n\n    // Get chromosome model adapter class\n  var adapter = ModelAdapter.getInstance(chrModel);\n\n    // Append chromosome's container\n  var chromosome = container\n        .append(\"g\")\n        .attr(\"id\", chrModel.id)\n        .attr(\"class\", \"chromosome \" + adapter.getCssClass())\n        .attr(\"transform\", \"translate(0, \" + k * chrMargin + \")\");\n\n    // Render chromosome\n  return Chromosome.getInstance(adapter, this.config, this)\n        .render(chromosome, chrIndex, k);\n};\n\n/**\n* Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n* Useful for focusing or defocusing a particular chromosome\n*/\nIdeogram.prototype.rotateAndToggleDisplay = function(chromosome) {\n  /*\n   * Do nothing if taxId not defined. But it should be defined.\n   * To fix that bug we should have a way to find chromosome set number.\n   */\n  if (!this.config.taxid) {\n    return;\n  }\n\n  var chrSetNumber =\n    Number(d3.select(chromosome.parentNode).attr('data-set-number'));\n\n  var chrNumber = Array.prototype.slice.call(\n          d3.select(chromosome.parentNode).selectAll(\"g.chromosome\")._groups[0]\n      ).indexOf(chromosome);\n\n  return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertBpToPx = function(chr, bp) {\n  var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart,\n    iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    offset = this._bandsXOffset;\n    bpStart = band.bp.start;\n    bpStop = band.bp.stop;\n    bpLength = bpStop - bpStart;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n    iscnLength = iscnStop - iscnStart;\n    pxStart = band.px.start;\n    pxLength = band.px.width;\n\n    if (bp >= bpStart && bp <= bpStop) {\n      bpToIscnScale = iscnLength / bpLength;\n      iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n      px = offset + pxStart + (pxLength * (iscn - iscnStart) / (iscnLength));\n\n      return px;\n    }\n  }\n\n  throw new Error(\n    \"Base pair out of range.  \" +\n    \"bp: \" + bp + \"; length of chr\" + chr.name + \": \" + band.bp.stop\n  );\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertPxToBp = function(chr, px) {\n  var i, band, pxToIscnScale, iscn,\n    pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    pxStart = band.px.start;\n    pxStop = band.px.stop;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n\n    if (px >= pxStart && px <= pxStop) {\n      iscnLength = iscnStop - iscnStart;\n      pxLength = pxStop - pxStart;\n      bpLength = band.bp.stop - band.bp.start;\n\n      pxToIscnScale = iscnLength / pxLength;\n      iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n      bp = band.bp.start + (bpLength * (iscn - iscnStart) / iscnLength);\n\n      return Math.round(bp);\n    }\n  }\n\n  throw new Error(\n    \"Pixel out of range.  \" +\n    \"px: \" + bp + \"; length of chr\" + chr.name + \": \" + pxStop\n  );\n};\n\n/**\n* Draws a trapezoid connecting a genomic range on\n* one chromosome to a genomic range on another chromosome;\n* a syntenic region.\n*/\nIdeogram.prototype.drawSynteny = function(syntenicRegions) {\n  var t0 = new Date().getTime();\n\n  var r1, r2,\n    syntenies,\n    i, color, opacity,\n    regionID,\n    ideo = this;\n\n  syntenies = d3.select(ideo.selector)\n    .insert(\"g\", \":first-child\")\n    .attr(\"class\", \"synteny\");\n\n  for (i = 0; i < syntenicRegions.length; i++) {\n    regions = syntenicRegions[i];\n\n    r1 = regions.r1;\n    r2 = regions.r2;\n\n    color = \"#CFC\";\n    if (\"color\" in regions) {\n      color = regions.color;\n    }\n\n    opacity = 1;\n    if (\"opacity\" in regions) {\n      opacity = regions.opacity;\n    }\n\n    r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n    r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n    r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n    r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n    regionID = (\n      r1.chr.id + \"_\" + r1.start + \"_\" + r1.stop + \"_\" +\n      \"__\" +\n      r2.chr.id + \"_\" + r2.start + \"_\" + r2.stop\n    );\n\n    syntenicRegion = syntenies.append(\"g\")\n      .attr(\"class\", \"syntenicRegion\")\n      .attr(\"id\", regionID)\n      .on(\"click\", function() {\n        var activeRegion = this;\n        var others = d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          });\n\n        others.classed(\"hidden\", !others.classed(\"hidden\"));\n      })\n      .on(\"mouseover\", function() {\n        var activeRegion = this;\n        d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          })\n          .classed(\"ghost\", true);\n      })\n      .on(\"mouseout\", function() {\n        d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .classed(\"ghost\", false);\n      });\n\n    var x1 = this._layout.getChromosomeSetYTranslate(0);\n    var x2 = this._layout.getChromosomeSetYTranslate(1) - ideo.config.chrWidth;\n\n    syntenicRegion.append(\"polygon\")\n      .attr(\"points\",\n        x1 + ', ' + r1.startPx + ' ' +\n        x1 + ', ' + r1.stopPx + ' ' +\n        x2 + ', ' + r2.stopPx + ' ' +\n        x2 + ', ' + r2.startPx\n      )\n      .attr('style', \"fill: \" + color + \"; fill-opacity: \" + opacity);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.startPx)\n      .attr(\"y2\", r2.startPx);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.stopPx)\n      .attr(\"y2\", r2.stopPx);\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in drawSyntenicRegions: \" + (t1 - t0) + \" ms\");\n  }\n};\n\n/**\n* Initializes various annotation settings.  Constructor help function.\n*/\nIdeogram.prototype.initAnnotSettings = function() {\n  if (this.config.annotationsPath || this.config.localAnnotationsPath ||\n    this.annots || this.config.annotations) {\n    if (!this.config.annotationHeight) {\n      var annotHeight = Math.round(this.config.chrHeight / 100);\n      this.config.annotationHeight = annotHeight;\n    }\n\n    if (this.config.annotationTracks) {\n      this.config.numAnnotTracks = this.config.annotationTracks.length;\n    } else {\n      this.config.numAnnotTracks = 1;\n    }\n    this.config.annotTracksHeight =\n      this.config.annotationHeight * this.config.numAnnotTracks;\n\n    if (typeof this.config.barWidth === \"undefined\") {\n      this.config.barWidth = 3;\n    }\n  } else {\n    this.config.annotTracksHeight = 0;\n  }\n\n  if (typeof this.config.annotationsColor === \"undefined\") {\n    this.config.annotationsColor = \"#F00\";\n  }\n};\n\n\n/*\n* Parses a BED file, returns raw annotations\n*/\nIdeogram.prototype.parseBed = function(bed) {\n\n  var tsvLines, i, columns, chrs, chr, start, stop, chrIndex, annots, annot,\n    chrs, annots;\n\n  annots = [];\n\n  // Horrible.  Remove hard-coding.\n  chrs = [\n    \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\",\n    \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n    \"21\", \"22\", \"X\", \"Y\"\n  ];\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots.push({\"chr\": chr, \"annots\": []});\n  }\n\n\n  tsvLines = bed.split(/\\r\\n|\\n/);\n  for (i = 0; i < tsvLines.length; i++) {\n    columns = tsvLines[i].split(/\\s/g);\n    chr = columns[0];\n    start = parseInt(columns[1], 10);\n    stop = parseInt(columns[2], 10);\n    if (columns.length > 3) {\n      color = colorMap[columns[3]];\n    }\n    length = stop - start;\n    chrIndex = chrs.indexOf(chr);\n    if (chrIndex === -1) {\n      continue;\n    }\n    annot = [\"\", start, length, 0];\n    if (columns.length > 3) {\n      annot.push(color);\n    }\n    annots[chrIndex][\"annots\"].push(annot);\n  }\n  keys = ['name', 'start', 'length', 'trackIndex'];\n  if (tsvLines[1].length > 3) {\n    keys.push('color');\n  }\n  rawAnnots = {\n    keys: keys,\n    annots: annots\n  };\n  return rawAnnots;\n}\n\nIdeogram.prototype.fetchAnnots = function(annotsUrl) {\n\n  var ideo = this;\n\n  if (annotsUrl.slice(0, 4) !== 'http') {\n    d3.json(\n      ideo.config.annotationsPath,\n      function(data) {\n        ideo.rawAnnots = data;\n      }\n    );\n    return;\n  }\n\n  var tmp = annotsUrl.split('.');\n  var extension = tmp[tmp.length - 1];\n\n  if (extension !== 'bed') {\n    extension = extension.toUpperCase();\n    alert(\n      'This Ideogram.js feature is very new, and only supports BED at the ' +\n      'moment.  Sorry, check back soon for ' + extension + ' support!'\n    );\n    return;\n  }\n\n  d3.request(annotsUrl, function(data) {\n    ideo.rawAnnots = ideo.parseBed(data.response);\n  });\n\n}\n\n/**\n* Draws annotations defined by user\n*/\nIdeogram.prototype.drawAnnots = function(friendlyAnnots) {\n  var ideo = this,\n    i, j, annot,\n    rawAnnots = [],\n    rawAnnot, keys,\n    chr,\n    chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n  // Occurs when filtering\n  if (\"annots\" in friendlyAnnots[0]) {\n    return ideo.drawProcessedAnnots(friendlyAnnots);\n  }\n\n  for (chr in chrs) {\n    rawAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < friendlyAnnots.length; i++) {\n    annot = friendlyAnnots[i];\n\n    for (j = 0; j < rawAnnots.length; j++) {\n      if (annot.chr === rawAnnots[j].chr) {\n        rawAnnot = [\n          annot.name,\n          annot.start,\n          annot.stop - annot.start\n        ];\n        if (\"color\" in annot) {\n          rawAnnot.push(annot.color);\n        }\n        if (\"shape\" in annot) {\n          rawAnnot.push(annot.shape);\n        }\n        rawAnnots[j].annots.push(rawAnnot);\n        break;\n      }\n    }\n  }\n\n  keys = [\"name\", \"start\", \"length\"];\n  if (\"color\" in friendlyAnnots[0]) {\n    keys.push(\"color\");\n  }\n  if (\"shape\" in friendlyAnnots[0]) {\n    keys.push(\"shape\");\n  }\n  ideo.rawAnnots = {keys: keys, annots: rawAnnots};\n\n  ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n  ideo.drawProcessedAnnots(ideo.annots);\n};\n\n/**\n* Proccesses genome annotation data.\n* Genome annotations represent features like a gene, SNP, etc. as\n* a small graphical object on or beside a chromosome.\n* Converts raw annotation data from server, which is structured as\n* an array of arrays, into a more verbose data structure consisting\n* of an array of objects.\n* Also adds pixel offset information.\n*/\nIdeogram.prototype.processAnnotData = function(rawAnnots) {\n  var keys,\n    i, j, annot, annots, annotsByChr,\n    chr,\n    chrModel, ra,\n    startPx, stopPx, px,\n    color,\n    ideo = this;\n\n  keys = rawAnnots.keys;\n  rawAnnots = rawAnnots.annots;\n\n  annots = [];\n\n  for (i = 0; i < rawAnnots.length; i++) {\n    annotsByChr = rawAnnots[i];\n\n    annots.push({chr: annotsByChr.chr, annots: []});\n\n    for (j = 0; j < annotsByChr.annots.length; j++) {\n      chr = annotsByChr.chr;\n      ra = annotsByChr.annots[j];\n      annot = {};\n\n      for (var k = 0; k < keys.length; k++) {\n        annot[keys[k]] = ra[k];\n      }\n\n      annot.stop = annot.start + annot.length;\n\n      chrModel = ideo.chromosomes[ideo.config.taxid][chr];\n\n      startPx = ideo.convertBpToPx(chrModel, annot.start);\n      stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n      px = Math.round((startPx + stopPx) / 2) - 28;\n\n      color = ideo.config.annotationsColor;\n      if (ideo.config.annotationTracks) {\n        annot.trackIndex = ra[3];\n        color = ideo.config.annotationTracks[annot.trackIndex].color;\n      } else {\n        annot.trackIndex = 0;\n      }\n\n      if ('color' in annot) {\n        color = annot.color;\n      }\n\n      annot.chr = chr;\n      annot.chrIndex = i;\n      annot.px = px;\n      annot.startPx = startPx - 30;\n      annot.stopPx = stopPx - 30;\n      annot.color = color;\n\n      annots[i].annots.push(annot);\n    }\n  }\n\n  return annots;\n};\n\n/*\n* Can be used for bar chart or sparkline\n*/\nIdeogram.prototype.getHistogramBars = function(annots) {\n  var t0 = new Date().getTime();\n\n  var i, j, chr,\n    chrModels, chrPxStop, px,\n    chrAnnots, chrName, chrIndex, annot,\n    bars, bar, barPx, nextBarPx, barWidth,\n    maxAnnotsPerBar, color,\n    firstGet = false,\n    histogramScaling,\n    ideo = this;\n\n  bars = [];\n\n  barWidth = ideo.config.barWidth;\n  chrModels = ideo.chromosomes[ideo.config.taxid];\n  color = ideo.config.annotationsColor;\n\n  if (\"histogramScaling\" in ideo.config) {\n    histogramScaling = ideo.config.histogramScaling;\n  } else {\n    histogramScaling = \"relative\";\n  }\n\n  if (typeof ideo.maxAnnotsPerBar === \"undefined\") {\n    ideo.maxAnnotsPerBar = {};\n    firstGet = true;\n  }\n\n  for (chr in chrModels) {\n    chrModel = chrModels[chr];\n    chrIndex = chrModel.chrIndex;\n    lastBand = chrModel.bands[chrModel.bands.length - 1];\n    chrPxStop = lastBand.px.stop;\n    numBins = Math.round(chrPxStop / barWidth);\n    bar = {chr: chr, annots: []};\n    for (i = 0; i < numBins; i++) {\n      px = i * barWidth - ideo.bump;\n      bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n      bar.annots.push({\n        bp: bp,\n        px: px - ideo.bump,\n        count: 0,\n        chrIndex: chrIndex,\n        chrName: chr,\n        color: color,\n        annots: []\n      });\n    }\n    bars.push(bar);\n  }\n\n  for (chr in annots) {\n    chrAnnots = annots[chr].annots;\n    chrName = annots[chr].chr;\n    chrModel = chrModels[chrName];\n    chrIndex = chrModel.chrIndex - 1;\n    barAnnots = bars[chrIndex].annots;\n    for (i = 0; i < chrAnnots.length; i++) {\n      annot = chrAnnots[i];\n      px = annot.px - ideo.bump;\n      for (j = 0; j < barAnnots.length; j++) {\n        barPx = barAnnots[j].px;\n        nextBarPx = barPx + barWidth;\n        if (j === barAnnots.length - 1) {\n          nextBarPx += barWidth;\n        }\n        if (px >= barPx && px < nextBarPx) {\n          bars[chrIndex].annots[j].count += 1;\n          bars[chrIndex].annots[j].annots.push(annot);\n          break;\n        }\n      }\n    }\n  }\n\n  if (firstGet === true || histogramScaling === \"relative\") {\n    maxAnnotsPerBar = 0;\n    for (i = 0; i < bars.length; i++) {\n      annots = bars[i].annots;\n      for (j = 0; j < annots.length; j++) {\n        barCount = annots[j].count;\n        if (barCount > maxAnnotsPerBar) {\n          maxAnnotsPerBar = barCount;\n        }\n      }\n    }\n    ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n  }\n\n  // Set each bar's height to be proportional to\n  // the height of the bar with the most annotations\n  for (i = 0; i < bars.length; i++) {\n    annots = bars[i].annots;\n    for (j = 0; j < annots.length; j++) {\n      barCount = annots[j].count;\n      height = (barCount / ideo.maxAnnotsPerBar[chr]) * ideo.config.chrMargin;\n      // console.log(height)\n      bars[i].annots[j].height = height;\n    }\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time spent in getHistogramBars: \" + (t1 - t0) + \" ms\");\n  }\n\n  ideo.bars = bars;\n\n  return bars;\n};\n\n/**\n* Fills out annotations data structure such that its top-level list of arrays\n* matches that of this ideogram's chromosomes list in order and number\n* Fixes https://github.com/eweitz/ideogram/issues/66\n*/\nIdeogram.prototype.fillAnnots = function(annots) {\n  var filledAnnots, chrs, chrArray, i, chr, annot, chrIndex;\n\n  filledAnnots = [];\n  chrs = [];\n  chrArray = this.chromosomesArray;\n\n  for (i = 0; i < chrArray.length; i++) {\n    chr = chrArray[i].name;\n    chrs.push(chr);\n    filledAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < annots.length; i++) {\n    annot = annots[i];\n    chrIndex = chrs.indexOf(annot.chr);\n    if (chrIndex !== -1) {\n      filledAnnots[chrIndex] = annot;\n    }\n  }\n\n  return filledAnnots;\n};\n\n/**\n* Draws genome annotations on chromosomes.\n* Annotations can be rendered as either overlaid directly\n* on a chromosome, or along one or more \"tracks\"\n* running parallel to each chromosome.\n*/\nIdeogram.prototype.drawProcessedAnnots = function(annots) {\n  var chrWidth, layout,\n    annotHeight, triangle, circle, r, chrAnnot,\n    x1, x2, y1, y2,\n    filledAnnots,\n    ideo = this;\n\n  chrMargin = this.config.chrMargin;\n  chrWidth = this.config.chrWidth;\n\n  layout = \"tracks\";\n  if (this.config.annotationsLayout) {\n    layout = this.config.annotationsLayout;\n  }\n\n  if (layout === \"histogram\") {\n    annots = ideo.getHistogramBars(annots);\n  }\n\n  annotHeight = ideo.config.annotationHeight;\n\n  triangle =\n    'l -' + annotHeight + ' ' +\n    (2 * annotHeight) +\n    ' l ' + (2 * annotHeight) + ' 0 z';\n\n  // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n  // Circles are supported natively via <circle>, but having it as a path\n  // simplifies handling triangles, circles and other shapes in the same\n  // D3 call\n  r = annotHeight;\n  circle =\n    'm -' + r + ', ' + r +\n    'a ' + r + ',' + r + ' 0 1,0 ' + (r * 2) + ',0' +\n    'a ' + r + ',' + r + ' 0 1,0 -' + (r * 2) + ',0';\n\n  filledAnnots = ideo.fillAnnots(annots);\n\n  chrAnnot = d3.selectAll(ideo.selector + \" .chromosome\")\n    .data(filledAnnots)\n      .selectAll(\"path.annot\")\n      .data(function(d) {\n        return d.annots;\n      })\n      .enter();\n\n  if (layout === \"tracks\") {\n    chrAnnot\n      .append(\"g\")\n      .attr(\"id\", function(d) {\n        return d.id;\n      })\n      .attr(\"class\", \"annot\")\n      .attr(\"transform\", function(d) {\n        var y = ideo.config.chrWidth + (d.trackIndex * annotHeight * 2);\n        return \"translate(\" + d.px + \",\" + y + \")\";\n      })\n      .append(\"path\")\n      .attr(\"d\", function(d) {\n        if (!d.shape || d.shape === \"triangle\") {\n          return \"m0,0\" + triangle;\n        } else if (d.shape === \"circle\") {\n          return circle;\n        }\n      })\n      .attr(\"fill\", function(d) {\n        return d.color;\n      });\n  } else if (layout === \"overlay\") {\n      // Overlaid annotations appear directly on chromosomes\n\n    chrAnnot.append(\"polygon\")\n        .attr(\"id\", function(d) {\n          return d.id;\n        })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          if (d.stopPx - d.startPx > 1) {\n            x1 = d.startPx;\n            x2 = d.stopPx;\n          } else {\n            x1 = d.px - 0.5;\n            x2 = d.px + 0.5;\n          }\n          y1 = chrWidth;\n          y2 = 0;\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  } else if (layout === \"histogram\") {\n    chrAnnot.append(\"polygon\")\n        // .attr(\"id\", function(d, i) { return d.id; })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  }\n\n  if (ideo.onDrawAnnotsCallback) {\n    ideo.onDrawAnnotsCallback();\n  }\n};\n\nIdeogram.prototype.onBrushMove = function() {\n  call(this.onBrushMoveCallback);\n};\n\nIdeogram.prototype.createBrush = function(from, to) {\n  var ideo = this,\n    width = ideo.config.chrWidth + 6.5,\n    length = ideo.config.chrHeight,\n    chr = ideo.chromosomesArray[0],\n    chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n    x0, x1,\n    xOffset = this._layout.getMargin().left,\n    xScale = d3.scaleLinear()\n          .domain([0, d3.max(chr.bands, function(band) {\n            return band.bp.stop;\n          })]).range([xOffset, d3.max(chr.bands, function(band) {\n            return band.px.stop;\n          }) + xOffset]);\n\n  if (typeof from === \"undefined\") {\n    from = Math.floor(chrLengthBp / 10);\n  }\n\n  if (typeof right === \"undefined\") {\n    to = Math.ceil(from * 2);\n  }\n\n  x0 = ideo.convertBpToPx(chr, from);\n  x1 = ideo.convertBpToPx(chr, to);\n\n  ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n  ideo.brush = d3.brushX()\n    .extent([[xOffset, 0], [length + xOffset, width]])\n    .on(\"brush\", onBrushMove);\n\n  var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n  var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n  d3.select(ideo.selector).append(\"g\")\n    .attr(\"class\", \"brush\")\n    .attr(\"transform\", \"translate(0, \" + yOffset + \")\")\n    .call(ideo.brush)\n    .call(ideo.brush.move, [x0, x1]);\n\n  function onBrushMove() {\n    var extent = d3.event.selection.map(xScale.invert),\n      from = Math.floor(extent[0]),\n      to = Math.ceil(extent[1]);\n\n    ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n    if (ideo.onBrushMove) {\n      ideo.onBrushMoveCallback();\n    }\n  }\n};\n\n/**\n* Called when Ideogram has finished initializing.\n* Accounts for certain ideogram properties not being set until\n* asynchronous requests succeed, etc.\n*/\nIdeogram.prototype.onLoad = function() {\n  call(this.onLoadCallback);\n};\n\nIdeogram.prototype.onDrawAnnots = function() {\n  call(this.onDrawAnnotsCallback);\n};\n\nIdeogram.prototype.getBandColorGradients = function() {\n  var colors,\n    stain, color1, color2, color3,\n    css,\n    gradients = \"\";\n\n  colors = [\n    [\"gneg\", \"#FFF\", \"#FFF\", \"#DDD\"],\n    [\"gpos25\", \"#C8C8C8\", \"#DDD\", \"#BBB\"],\n    [\"gpos33\", \"#BBB\", \"#BBB\", \"#AAA\"],\n    [\"gpos50\", \"#999\", \"#AAA\", \"#888\"],\n    [\"gpos66\", \"#888\", \"#888\", \"#666\"],\n    [\"gpos75\", \"#777\", \"#777\", \"#444\"],\n    [\"gpos100\", \"#444\", \"#666\", \"#000\"],\n    [\"acen\", \"#FEE\", \"#FEE\", \"#FDD\"],\n    [\"noBands\", \"#BBB\", \"#BBB\", \"#AAA\"]\n  ];\n\n  for (var i = 0; i < colors.length; i++) {\n    stain = colors[i][0];\n    color1 = colors[i][1];\n    color2 = colors[i][2];\n    color3 = colors[i][3];\n    gradients +=\n      '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n    if (stain === \"gneg\") {\n      gradients +=\n        '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' +\n        '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n    } else {\n      gradients +=\n        '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' +\n        '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n    }\n    gradients +=\n      '</linearGradient>';\n  }\n\n  gradients +=\n    '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' +\n        'stroke-width:0.7;\" />' +\n    '</pattern>' +\n    '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(-30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' +\n          'stroke-width:0.7;\" />' +\n    '</pattern>';\n\n  gradients = \"<defs>\" + gradients + \"</defs>\";\n  css = \"<style>\" +\n    '.gneg {fill: url(\"#gneg\")} ' +\n    '.gpos25 {fill: url(\"#gpos25\")} ' +\n    '.gpos33 {fill: url(\"#gpos33\")} ' +\n    '.gpos50 {fill: url(\"#gpos50\")} ' +\n    '.gpos66 {fill: url(\"#gpos66\")} ' +\n    '.gpos75 {fill: url(\"#gpos75\")} ' +\n    '.gpos100 {fill: url(\"#gpos100\")} ' +\n    '.gpos {fill: url(\"#gpos100\")} ' +\n    '.acen {fill: url(\"#acen\")} ' +\n    '.stalk {fill: url(\"#stalk\")} ' +\n    '.gvar {fill: url(\"#gvar\")} ' +\n    '.noBands {fill: url(\"#noBands\")} ' +\n    '.chromosome {fill: url(\"#noBands\")} ' +\n  '</style>';\n  gradients = css + gradients;\n\n  // alert(gradients)\n\n  return gradients;\n};\n\n/*\n  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n*/\nIdeogram.prototype.getTaxidFromEutils = function(callback) {\n  var organism, taxonomySearch, taxid,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  taxonomySearch = ideo.esearch + \"&db=taxonomy&term=\" + organism;\n\n  d3.json(taxonomySearch, function(data) {\n    taxid = data.esearchresult.idlist[0];\n    return callback(taxid);\n  });\n};\n\n/**\n* Returns an array of taxids for the current ideogram\n* Also sets configuration parameters related to taxid(s), whether ideogram is\n* multiorganism, and adjusts chromosomes parameters as needed\n**/\nIdeogram.prototype.getTaxids = function(callback) {\n  var ideo = this,\n    taxid, taxids,\n    org, orgs, i,\n    taxidInit, tmpChrs,\n    assembly, chromosomes,\n    multiorganism;\n\n  taxidInit = \"taxid\" in ideo.config;\n\n  ideo.config.multiorganism = (\n    (\"organism\" in ideo.config && ideo.config.organism instanceof Array) ||\n    (taxidInit && ideo.config.taxid instanceof Array)\n  );\n\n  multiorganism = ideo.config.multiorganism;\n\n  if (\"organism\" in ideo.config) {\n    // Ideogram instance was constructed using common organism name(s)\n    if (multiorganism) {\n      orgs = ideo.config.organism;\n    } else {\n      orgs = [ideo.config.organism];\n    }\n\n    taxids = [];\n    tmpChrs = {};\n    for (i = 0; i < orgs.length; i++) {\n      // Gets a list of taxids from common organism names\n      org = orgs[i];\n      for (taxid in ideo.organisms) {\n        if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n          taxids.push(taxid);\n          if (multiorganism) {\n            // Adjusts 'chromosomes' configuration parameter to make object\n            // keys use taxid instead of common organism name\n            tmpChrs[taxid] = ideo.config.chromosomes[org];\n          }\n        }\n      }\n    }\n\n    if (taxids.length === 0) {\n      promise = new Promise(function(resolve) {\n        ideo.getTaxidFromEutils(resolve);\n      });\n\n      promise.then(function(data) {\n        var organism = ideo.config.organism,\n          dataDir = ideo.config.dataDir,\n          urlOrg = organism.replace(\" \", \"-\");\n\n        taxid = data;\n        taxids.push(taxid);\n\n        ideo.config.taxids = taxids;\n        ideo.organisms[taxid] = {\n          commonName: \"\",\n          scientificName: ideo.config.organism,\n          scientificNameAbbr: \"\"\n        };\n\n        var fullyBandedTaxids = ['9606', '10090', '10116'];\n        if (\n          fullyBandedTaxids.indexOf(taxid) !== -1 &&\n          ideo.config.showFullyBanded === false\n        ) {\n          urlOrg += '-no-bands';\n        }\n        var chromosomesUrl = dataDir + urlOrg + \".js\";\n\n        var promise = new Promise(function(resolve, reject) {\n          d3.request(chromosomesUrl).get(function(error, data) {\n            if (error) {\n              reject(Error(error));\n            }\n            resolve(data);\n          });\n        });\n\n        return promise\n          .then(\n            function(data) {\n              // Check if chromosome data exists locally.\n              // This is used for pre-processed centromere data,\n              // which is not accessible via EUtils.  See get_chromosomes.py.\n\n              var asmAndChrArray = [],\n                chromosomes = [],\n                seenChrs = {},\n                chr;\n\n              eval(data.response);\n\n              asmAndChrArray.push('');\n\n              for (var i = 0; i < chrBands.length; i++) {\n                chr = chrBands[i].split(' ')[0];\n                if (chr in seenChrs) {\n                  continue;\n                } else {\n                  chromosomes.push({name: chr, type: 'nuclear'});\n                  seenChrs[chr] = 1;\n                }\n              }\n              chromsomes = chromosomes.sort(ideo.sortChromosomes);\n              asmAndChrArray.push(chromosomes);\n              ideo.coordinateSystem = \"iscn\";\n              return asmAndChrArray;\n            },\n            function() {\n              return new Promise(function(resolve) {\n                ideo.coordinateSystem = \"bp\";\n                ideo.getAssemblyAndChromosomesFromEutils(resolve);\n              });\n            }\n          );\n      })\n      .then(function(asmChrArray) {\n        assembly = asmChrArray[0];\n        chromosomes = asmChrArray[1];\n\n        ideo.config.chromosomes = chromosomes;\n        ideo.organisms[taxid].assemblies = {\n          default: assembly\n        };\n\n        callback(taxids);\n      });\n    } else {\n      ideo.config.taxids = taxids;\n      if (multiorganism) {\n        ideo.config.chromosomes = tmpChrs;\n      }\n\n      callback(taxids);\n    }\n  } else {\n    if (multiorganism) {\n      ideo.coordinateSystem = \"bp\";\n      if (taxidInit) {\n        taxids = ideo.config.taxid;\n      }\n    } else {\n      if (taxidInit) {\n        taxids = [ideo.config.taxid];\n      }\n      ideo.config.taxids = taxids;\n    }\n\n    callback(taxids);\n  }\n};\n\nIdeogram.prototype.sortChromosomes = function(a, b) {\n  var aIsNuclear = a.type === \"nuclear\",\n    bIsNuclear = b.type === \"nuclear\",\n    aIsCP = a.type === \"chloroplast\",\n    bIsCP = b.type === \"chloroplast\",\n    aIsMT = a.type === \"mitochondrion\",\n    bIsMT = b.type === \"mitochondrion\";\n    // aIsPlastid = aIsMT && a.name !== \"MT\", // e.g. B1 in rice genome GCF_001433935.1\n    // bIsPlastid = bIsMT && b.name !== \"MT\";\n\n  if (aIsNuclear && bIsNuclear) {\n    return naturalSort(a.name, b.name);\n  } else if (!aIsNuclear && bIsNuclear) {\n    return 1;\n  } else if (aIsMT && bIsCP) {\n    return 1;\n  } else if (aIsCP && bIsMT) {\n    return -1;\n  } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n    return -1;\n  }\n};\n\n/**\n  Returns names and lengths of chromosomes for an organism's best-known\n  genome assembly.  Gets data from NCBI EUtils web API.\n*/\nIdeogram.prototype.getAssemblyAndChromosomesFromEutils = function(callback) {\n  var asmAndChrArray, // [assembly_accession, chromosome_objects_array]\n    assemblyAccession, chromosomes, asmSearch,\n    asmUid, asmSummary,\n    rsUid, nuccoreLink,\n    links, ntSummary,\n    results, result, cnIndex, chrName, chrLength, chromosome, type,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  asmAndChrArray = [];\n  chromosomes = [];\n\n  asmSearch =\n    ideo.esearch +\n    \"&db=assembly\" +\n    \"&term=%22\" + organism + \"%22[organism]\" +\n      \"AND%20(%22latest%20refseq%22[filter])%20\" +\n      \"AND%20(%22chromosome%20level%22[filter]%20\" +\n      \"OR%20%22complete%20genome%22[filter])\";\n\n  var promise = d3.promise.json(asmSearch);\n\n  promise\n      .then(function(data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + \"&db=assembly&id=\" + asmUid;\n\n        return d3.promise.json(asmSummary);\n      })\n      .then(function(data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        var qs = \"&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=\" + rsUid;\n        nuccoreLink = ideo.elink + qs;\n\n        return d3.promise.json(nuccoreLink);\n      })\n      .then(function(data) {\n        links = data.linksets[0].linksetdbs[0].links.join(\",\");\n        ntSummary = ideo.esummary + \"&db=nucleotide&id=\" + links;\n\n        return d3.promise.json(ntSummary);\n      })\n      .then(function(data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === \"uids\") {\n            continue;\n          }\n\n          if (result.genome === \"mitochondrion\") {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split(\"|\").indexOf(\"plasmid\");\n              if (cnIndex === -1) {\n                chrName = \"MT\";\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                  // genome: \"mitochondrion\",\n                  // subtype: \"cell_line|plasmid\",\n                  // subname: \"A-58 CMS|B1\",\n                chrName = result.subname.split(\"|\")[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (\n            result.genome === \"chloroplast\" ||\n            result.genome === \"plastid\"\n          ) {\n            type = \"chloroplast\";\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = \"CP\";\n            } else {\n              continue;\n            }\n          } else {\n            type = \"nuclear\";\n            cnIndex = result.subtype.split(\"|\").indexOf(\"chromosome\");\n\n            chrName = result.subname.split(\"|\")[cnIndex];\n\n            if (\n              typeof chrName !== \"undefined\" &&\n              chrName.substr(0, 3) === \"chr\"\n            ) {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = \"bp\";\n\n        return callback(asmAndChrArray);\n      });\n};\n\nIdeogram.prototype.drawSexChromosomes = function(bandsArray, taxid, container,\n  defs, j, chrs) {\n  var chromosome, bands, chrModel, shape, sci, k,\n    sexChromosomeIndexes,\n    ideo = this;\n\n  if (ideo.config.sex === 'male') {\n    sexChromosomeIndexes = [1, 0];\n  } else {\n    sexChromosomeIndexes = [0, 0];\n  }\n\n  for (k = 0; k < sexChromosomeIndexes.length; k++) {\n    sci = sexChromosomeIndexes[k] + j;\n    chromosome = chrs[sci];\n    bands = bandsArray[sci];\n    chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, sci);\n    shape = ideo.drawChromosome(chrModel, j, container, k);\n    defs.append(\"clipPath\")\n      .attr(\"id\", chrModel.id + \"-chromosome-set-clippath\")\n      .selectAll('path')\n      .data(shape)\n      .enter()\n      .append('path')\n      .attr('d', function(d) {\n        return d.path;\n      }).attr('class', function(d) {\n        return d.class;\n      });\n  }\n};\n\nIdeogram.prototype.initDrawChromosomes = function(bandsArray) {\n  var ideo = this,\n    taxids = ideo.config.taxids,\n    ploidy = ideo.config.ploidy,\n    taxid,\n    chrIndex = 0,\n    chrSetNumber = 0,\n    bands,\n    i, j, chrs, chromosome, chrModel,\n    defs, transform;\n\n  defs = d3.select(ideo.selector + \" defs\");\n\n  for (i = 0; i < taxids.length; i++) {\n    taxid = taxids[i];\n    chrs = ideo.config.chromosomes[taxid];\n\n    ideo.chromosomes[taxid] = {};\n\n    ideo.setSexChromosomes(chrs);\n\n    for (j = 0; j < chrs.length; j++) {\n      chromosome = chrs[j];\n      bands = bandsArray[chrIndex];\n      chrIndex += 1;\n\n      chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n      ideo.chromosomes[taxid][chromosome] = chrModel;\n      ideo.chromosomesArray.push(chrModel);\n\n      if (\n        'sex' in ideo.config &&\n        (\n          ploidy === 2 && ideo.sexChromosomes.index + 2 === chrIndex ||\n          ideo.config.sex === 'female' && chrModel.name === 'Y'\n        )\n      ) {\n        continue;\n      }\n\n      transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n      chrSetNumber += 1;\n\n      // Append chromosome set container\n      var container = d3.select(ideo.selector)\n        .append(\"g\")\n        .attr(\"class\", \"chromosome-set-container\")\n        .attr(\"data-set-number\", j)\n        .attr(\"transform\", transform)\n        .attr(\"id\", chrModel.id + \"-chromosome-set\");\n\n      if (\n          'sex' in ideo.config &&\n          ploidy === 2 &&\n          ideo.sexChromosomes.index + 1 === chrIndex\n      ) {\n        ideo.drawSexChromosomes(bandsArray, taxid, container, defs, j, chrs);\n        continue;\n      }\n\n      var shape;\n      var numChrsInSet = 1;\n      if (ploidy > 1) {\n        numChrsInSet = this._ploidy.getChromosomesNumber(j);\n      }\n      for (var k = 0; k < numChrsInSet; k++) {\n        shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n      }\n\n      defs.append(\"clipPath\")\n        .attr(\"id\", chrModel.id + \"-chromosome-set-clippath\")\n        .selectAll('path')\n        .data(shape)\n        .enter()\n        .append('path')\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n    }\n\n    if (ideo.config.showBandLabels === true) {\n      ideo.drawBandLabels(ideo.chromosomes);\n    }\n  }\n};\n\n// Get ideogram SVG container\nIdeogram.prototype.getSvg = function() {\n  return d3.select(this.selector).node();\n};\n\nIdeogram.prototype.setSexChromosomes = function(chrs) {\n  // Currently only supported for mammals\n  // TODO: Support all sexually reproducing taxa\n  //  XY sex-determination (mammals):\n  //  - Male: XY <- heterogametic\n  //  - Female: XX\n  //  ZW sex-determination (birds):\n  //  - Male: ZZ\n  //  - Female: ZW <- heterogametic\n  //  X0 sex-determination (some insects):\n  //  - Male: X0, i.e. only X <- heterogametic?\n  //  - Female: XX\n  // TODO: Support sex chromosome aneuploidies in mammals\n  //  - Turner syndrome: X0\n  //  - Klinefelter syndome: XXY\n  //  More types:\n  //  https://en.wikipedia.org/wiki/Category:Sex_chromosome_aneuploidies\n\n  if (this.config.ploidy !== 2 || !this.config.sex) {\n    return;\n  }\n\n  var ideo = this,\n    sexChrs = {X: 1, Y: 1},\n    chr, i;\n\n  ideo.sexChromosomes.list = [];\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n\n    if (ideo.config.sex === 'male' && chr in sexChrs) {\n      ideo.sexChromosomes.list.push(chr);\n      if (!ideo.sexChromosomes.index) {\n        ideo.sexChromosomes.index = i;\n      }\n    } else if (chr === 'X') {\n      ideo.sexChromosomes.list.push(chr, chr);\n      ideo.sexChromosomes.index = i;\n    }\n  }\n};\n\n/*\n* Completes default ideogram initialization\n* by calling downstream functions to\n* process raw band data into full JSON objects,\n* render chromosome and cytoband figures and labels,\n* apply initial graphical transformations,\n* hide overlapping band labels, and\n* execute callbacks defined by client code\n*/\nIdeogram.prototype.processBandData = function() {\n  var bandsArray, j, k, chromosome, bands,\n    chrLength, chr,\n    bandData, bandsByChr,\n    taxid, taxids, chrs, chrsByTaxid,\n    ideo = this;\n\n  bandsArray = [];\n  maxLength = 0;\n\n  if (ideo.config.multiorganism === true) {\n    ideo.coordinateSystem = \"bp\";\n    taxids = ideo.config.taxids;\n    for (i = 0; i < taxids.length; i++) {\n      taxid = taxids[i];\n    }\n  } else {\n    if (typeof ideo.config.taxid === \"undefined\") {\n      ideo.config.taxid = ideo.config.taxids[0];\n    }\n    taxid = ideo.config.taxid;\n    taxids = [taxid];\n    ideo.config.taxids = taxids;\n  }\n\n  if (\"chromosomes\" in ideo.config) {\n    chrs = ideo.config.chromosomes;\n  }\n  if (ideo.config.multiorganism) {\n    chrsByTaxid = chrs;\n  }\n\n  ideo.config.chromosomes = {};\n\n  var t0B = new Date().getTime();\n\n  for (j = 0; j < taxids.length; j++) {\n    taxid = taxids[j];\n\n    if (ideo.config.multiorganism) {\n      chrs = chrsByTaxid[taxid];\n    }\n\n    if (ideo.coordinateSystem === \"iscn\" || ideo.config.multiorganism) {\n      bandData = ideo.bandData[taxid];\n\n      bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n      chrs = Object.keys(bandsByChr).sort(function(a, b) {\n        return naturalSort(a, b);\n      });\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chromosome = chrs[k];\n        bands = bandsByChr[chromosome];\n        bandsArray.push(bands);\n\n        chrLength = {\n          iscn: bands[bands.length - 1].iscn.stop,\n          bp: bands[bands.length - 1].bp.stop\n        };\n\n        if (chrLength.iscn > ideo.maxLength.iscn) {\n          ideo.maxLength.iscn = chrLength.iscn;\n        }\n\n        if (chrLength.bp > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chrLength.bp;\n        }\n      }\n    } else if (ideo.coordinateSystem === \"bp\") {\n      // If lacking band-level data\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chr = chrs[k];\n        if (chr.length > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chr.length;\n        }\n      }\n    }\n  }\n\n  var t1B = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in processBandData: \" + (t1B - t0B) + \" ms\");\n  }\n\n  return bandsArray;\n};\n\n/**\n* Initializes an ideogram.\n* Sets some high-level properties based on instance configuration,\n* fetches band and annotation data if needed, and\n* writes an SVG element to the document to contain the ideogram\n*\n*/\nIdeogram.prototype.init = function() {\n  var taxid, i, svgClass;\n\n  var ideo = this;\n\n  var t0 = new Date().getTime();\n\n  var bandsArray = [],\n    numBandDataResponses = 0,\n    resolution = this.config.resolution,\n    accession;\n\n  var promise = new Promise(function(resolve) {\n    ideo.getTaxids(resolve);\n  });\n\n  promise.then(function(taxids) {\n    taxid = taxids[0];\n    ideo.config.taxid = taxid;\n    ideo.config.taxids = taxids;\n\n    var assemblies,\n      bandFileName;\n\n    var bandDataFileNames = {\n      9606: '',\n      10090: ''\n    };\n\n    for (i = 0; i < taxids.length; i++) {\n      taxid = String(taxids[i]);\n\n      if (!ideo.config.assembly) {\n        ideo.config.assembly = \"default\";\n      }\n      assemblies = ideo.organisms[taxid].assemblies;\n      accession = assemblies[ideo.config.assembly];\n\n      bandFileName = [];\n      bandFileName.push(slugify(ideo.organisms[taxid].scientificName));\n      if (accession !== assemblies.default) {\n        bandFileName.push(accession);\n      }\n      if (\n        taxid === '9606' &&\n        (accession !== assemblies.default || resolution !== 850)\n      ) {\n        bandFileName.push(resolution);\n      }\n      bandFileName = bandFileName.join('-') + '.js';\n\n      if (taxid === '9606' || taxid === '10090') {\n        bandDataFileNames[taxid] = bandFileName;\n      }\n\n      if (typeof chrBands === \"undefined\" && taxid in bandDataFileNames) {\n        d3.request(ideo.config.dataDir + bandDataFileNames[taxid])\n        .on(\"beforesend\", function(data) {\n          // Ensures correct taxid is processed in response callback; using\n          // simply 'taxid' variable gives the last *requested* taxid, which\n          // fails when dealing with multiple taxa.\n          data.taxid = taxid;\n        })\n        .get(function(error, data) {\n          eval(data.response);\n\n          ideo.bandData[data.taxid] = chrBands;\n          numBandDataResponses += 1;\n\n          if (numBandDataResponses === taxids.length) {\n            bandsArray = ideo.processBandData();\n            writeContainer();\n          }\n        });\n      } else {\n        if (typeof chrBands !== \"undefined\") {\n          // If bands already available,\n          // e.g. via <script> tag in initial page load\n          ideo.bandData[taxid] = chrBands;\n        }\n        bandsArray = ideo.processBandData();\n        writeContainer();\n      }\n    }\n  });\n\n  function writeContainer() {\n\n    if (ideo.config.annotationsPath) {\n      ideo.fetchAnnots(ideo.config.annotationsPath);\n    }\n\n    // If ploidy description is a string, then convert it to the canonical\n    // array format.  String ploidyDesc is used when depicting e.g. parental\n    // origin each member of chromosome pair in a human genome.\n    // See ploidy_basic.html for usage example.\n    if (\n      'ploidyDesc' in ideo.config &&\n      typeof ideo.config.ploidyDesc === \"string\"\n    ) {\n      var tmp = [];\n      for (var i = 0; i < ideo.numChromosomes; i++) {\n        tmp.push(ideo.config.ploidyDesc);\n      }\n      ideo.config.ploidyDesc = tmp;\n    }\n    // Organism ploidy description\n    ideo._ploidy = new Ploidy(ideo.config);\n\n    // Chromosome's layout\n    ideo._layout = Layout.getInstance(ideo.config, ideo);\n\n    svgClass = \"\";\n    if (ideo.config.showChromosomeLabels) {\n      if (ideo.config.orientation === \"horizontal\") {\n        svgClass += \"labeledLeft \";\n      } else {\n        svgClass += \"labeled \";\n      }\n    }\n\n    if (\n      ideo.config.annotationsLayout &&\n      ideo.config.annotationsLayout === \"overlay\"\n    ) {\n      svgClass += \"faint\";\n    }\n\n    var gradients = ideo.getBandColorGradients();\n    var svgWidth = ideo._layout.getWidth(taxid);\n    var svgHeight = ideo._layout.getHeight(taxid);\n    var svgWidth = ideo._layout.getWidth(taxid);\n\n    d3.select(ideo.config.container)\n      .append('div')\n        .append(\"svg\")\n          .attr(\"id\", \"_ideogram\")\n          .attr(\"class\", svgClass)\n          .attr(\"width\", svgWidth)\n          .attr(\"height\", svgHeight)\n          .html(gradients);\n\n    finishInit();\n  }\n\n  function finishInit() {\n    try {\n      var t0A = new Date().getTime();\n\n      var i;\n\n      ideo.initDrawChromosomes(bandsArray);\n\n      // Waits for potentially large annotation dataset\n      // to be received by the client, then triggers annotation processing\n      if (ideo.config.annotationsPath) {\n        function pa() {\n          if (typeof ideo.timeout !== \"undefined\") {\n            window.clearTimeout(ideo.timeout);\n          }\n\n          ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n          ideo.drawProcessedAnnots(ideo.annots);\n\n          if (typeof crossfilter !== 'undefined' && ideo.initCrossFilter) {\n            ideo.initCrossFilter();\n          }\n        }\n\n        if (ideo.rawAnnots) {\n          pa();\n        } else {\n          (function checkAnnotData() {\n            ideo.timeout = setTimeout(function() {\n              if (!ideo.rawAnnots) {\n                checkAnnotData();\n              } else {\n                pa();\n              }\n            },\n            50\n          );\n          })();\n        }\n      }\n\n      if (ideo.config.showBandLabels === true) {\n        var bandsToShow = ideo.bandsToShow.join(\",\");\n\n      // d3.selectAll resolves to querySelectorAll (QSA).\n      // QSA takes a surprisingly long time to complete,\n      // and scales with the number of selectors.\n      // Most bands are hidden, so we can optimize by\n      // Hiding all bands, then QSA'ing and displaying the\n      // relatively few bands that are shown.\n        var t0C = new Date().getTime();\n        d3.selectAll(ideo.selector + \" .bandLabel, .bandLabelStalk\")\n          .style(\"display\", \"none\");\n        d3.selectAll(bandsToShow).style(\"display\", \"\");\n        var t1C = new Date().getTime();\n        if (ideo.debug) {\n          console.log(\"Time in showing bands: \" + (t1C - t0C) + \" ms\");\n        }\n\n        if (ideo.config.orientation === \"vertical\") {\n          var chrID;\n          for (i = 0; i < ideo.chromosomesArray.length; i++) {\n            chrID = \"#\" + ideo.chromosomesArray[i].id;\n            ideo.rotateChromosomeLabels(d3.select(chrID), i);\n          }\n        }\n      }\n\n      if (ideo.config.showChromosomeLabels === true) {\n        ideo.drawChromosomeLabels(ideo.chromosomes);\n      }\n\n      if (ideo.config.brush === true) {\n        ideo.createBrush();\n      }\n\n      if (ideo.config.annotations) {\n        ideo.drawAnnots(ideo.config.annotations);\n      }\n\n      var t1A = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time in drawChromosome: \" + (t1A - t0A) + \" ms\");\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time constructing ideogram: \" + (t1 - t0) + \" ms\");\n      }\n\n      if (ideo.onLoadCallback) {\n        ideo.onLoadCallback();\n      }\n\n      if (!(\"rotatable\" in ideo.config && ideo.config.rotatable === false)) {\n        d3.selectAll(ideo.selector + \" .chromosome\").on(\"click\", function() {\n          ideo.rotateAndToggleDisplay(this);\n        });\n      } else {\n        d3.selectAll(ideo.selector + \" .chromosome\").style(\"cursor\", \"default\");\n      }\n    } catch (e) {\n      // console.log(e);\n      throw e;\n    }\n  }\n};\n","/* Decompresses ideogram's annotations for crossfilter initialization\nBy default, annotations are clustered by chromosome, e.g.\n[\n  {\"chr\": \"1\", \"annots\": [{\"from\": 100, \"to\", 101, \"chr\": \"1\", ...}, ...]},\n  {\"chr\": \"2\", \"annots\": [{\"from\": 500, \"to\", 501, \"chr\": \"2\", ...}, ...]},\n  ...\n]\nThis method flattens that structure to e.g.\n[\n  {\"from\": 100, \"to\": 101, \"chr\": \"1\", ...},\n  ...\n  {\"from\": 500, \"to\": 501, \"chr\": \"2\", ...},\n]\nSee also: packAnnots\n*/\nIdeogram.prototype.unpackAnnots = function() {\n  var chr, annots, i,\n    unpackedAnnots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots = chr.annots;\n    unpackedAnnots = unpackedAnnots.concat(annots);\n  }\n\n  return unpackedAnnots;\n};\n\n/*\n  Compresses annots back to default state.  Inverse of unpackAnnots.\n*/\nIdeogram.prototype.packAnnots = function(unpackedAnnots) {\n  var chr, annot, i,\n    annots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (chr in chrs) {\n    annots.push({chr: chrs[chr].chr, annots: []});\n  }\n\n  for (i = 0; i < unpackedAnnots.length; i++) {\n    annot = unpackedAnnots[i];\n    annots[annot.chrIndex].annots.push(annot);\n  }\n\n  return annots;\n};\n\n/*\n  Initializes crossfilter.  Needed for client-side filtering.\n  More: https://github.com/square/crossfilter/wiki/API-Reference\n*/\nIdeogram.prototype.initCrossFilter = function() {\n  var ideo = this,\n    keys = ideo.rawAnnots.keys,\n    i, facet;\n\n  ideo.unpackedAnnots = ideo.unpackAnnots();\n  ideo.crossfilter = crossfilter(ideo.unpackedAnnots);\n\n  ideo.annotsByFacet = {};\n\n  ideo.facets = keys.slice(3, keys.length);\n\n  for (i = 0; i < ideo.facets.length; i++) {\n    facet = ideo.facets[i];\n    ideo.annotsByFacet[facet] =\n      ideo.crossfilter\n        .dimension(function(d) {\n          return d[facet];\n        });\n  }\n};\n\n/*\n  Filters annotations based on the given selections\n  \"selections\" is an object of objects, e.g.\n\n    {\n      \"tissue-type\": {          <-- a facet\n        \"cerebral-cortex\": 1,   <-- a filter; \"1\" means it is selected\n        \"liver\": 1\n      },\n      \"gene-type\": {\n        mirna\": 1\n      }\n    }\n\n  Translation:\n  select where:\n      (tissue-type is cerebral-cortex OR liver) and (gene-type is mirna)\n\n  TODO:\n    * Filter counts\n    * Range filters\n    * Integrate server-side filtering for very large datasets\n*/\nIdeogram.prototype.filterAnnots = function(selections) {\n  var t0 = Date.now();\n\n  var i, facet,\n    // prevFacet = null,\n    results, fn,\n    counts = {},\n    ideo = this;\n\n  if (Object.keys(selections).length === 0) {\n    results = ideo.unpackedAnnots;\n  } else {\n    for (i = 0; i < ideo.facets.length; i++) {\n      facet = ideo.facets[i];\n      if (facet in selections) {\n        fn = function(d) {\n          if (d in selections[facet]) {\n            return true;\n          }\n        };\n      } else {\n        fn = null;\n      }\n      ideo.annotsByFacet[facet].filter(fn);\n      counts[facet] = ideo.annotsByFacet[facet].group().top(Infinity);\n    }\n\n    results = ideo.annotsByFacet[facet].top(Infinity);\n  }\n\n  for (i < 0; i < ideo.facets.length; i++) {\n    ideo.annotsByFacet[facet].filterAll(); // clear filters\n  }\n\n  results = ideo.packAnnots(results);\n\n  d3.selectAll(ideo.selector + \" polygon.annot\").remove();\n  ideo.drawAnnots(results);\n\n  console.log(\"Time in filterAnnots: \" + (Date.now() - t0) + \" ms\");\n\n  return counts;\n};\n"]}