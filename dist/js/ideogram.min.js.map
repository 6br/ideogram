{"version":3,"sources":["range.js","model-adapter.js","model-no-bands-adapter.js","layouts/layout.js","layouts/horizontal-layout.js","layouts/vertical-layout.js","layouts/paired-layout.js","layouts/small-layout.js","ploidy.js","color.js","views/chromosome.js","views/telocentric-chromosome.js","views/metacentric-chromosome.js","lib.js","views/chromosome-util.js","core.js","filter.js"],"names":["Range","data","this","_data","ModelAdapter","model","_model","_class","ModelNoBandsAdapter","call","Layout","config","ideo","_config","_ideo","_ploidy","_translate","undefined","_tickSize","_isRotated","HorizontalLayout","_margin","left","top","VerticalLayout","PairedLayout","SmallLayout","Ploidy","_description","_normilize","ploidyDesc","Color","Chromosome","adapter","_adapter","getModel","_color","_bumpCoefficient","TelocentricChromosome","_pArmOffset","MetacentricChromosome","naturalSort","a","b","q","r","c","d","e","f","g","h","i","insensitive","toLowerCase","replace","j","k","l","split","m","n","parseInt","match","length","Date","parse","o","p","parseFloat","s","t","u","v","Math","max","isNaN","test","localeCompare","w","abs","ChromosomeUtil","node","_node","prototype","getStart","start","getStop","stop","getLength","getColor","chrNumber","ploidy","_getColor","Array","isArray","color","getInstance","bands","getCssClass","Object","create","width","push","name","px","perspective","rows","orientation","_getLeftMargin","_getYScale","chrWidth","getChromosomeLabels","chrElement","util","getSetLabel","getLabel","filter","rotateBack","chrSetNumber","callback","Error","rotateForward","rotate","otherChrs","d3","selectAll","style","getChromosomeLabelClass","_getAdditionalOffset","annotationHeight","numAnnotTracks","_getChromosomeSetSize","setSize","getSetSize","getMargin","getHeight","taxId","getChromosomeBandTickY1","getChromosomeBandTickY2","getChromosomeBandLabelTranslate","band","getChromosomeSetLabelAnchor","getChromosomeBandLabelAnchor","getChromosomeLabelXPosition","getChromosomeLabelYPosition","getChromosomeSetLabelYPosition","getChromosomeSetLabelXPosition","getChromosomeSetLabelTranslate","getChromosomeSetTranslate","setNumber","getChromosomeSetYTranslate","margin","xOffset","ideoBox","select","getBoundingClientRect","chrBox","scaleX","height","scaleY","yOffset","transform","parentNode","transition","attr","on","labels","getSvg","append","enter","text","String","translate","remove","lastSetOffset","chromosomes","lastSetSize","x","round","y","chrMargin","self","chrHeight","additionalPadding","annotationsLayout","Number","organisms","getTaxids","taxIdList","size","rowSize","getChromosomesNumber","chrSetCode","keys","description","normalized","key","ancestors","existance","_getExistanceArray","array","getAncestor","isExists","armNumber","getArmColor","chrNmber","armColors","_getPolyploidArmColor","getBorderColor","centromerePosition","_addPArmShape","clipPath","isPArmRendered","concat","_getPArmShape","_addQArmShape","isQArmRendered","_getQArmShape","render","container","id","_renderPArm","_renderQArm","_renderRangeSet","path","rangeSet","range","chr","map","rangesContainer","convertBpToPx","_bandsXOffset","_getShapeData","firstQBand","rightTerminalPosition","x1","x2","x3","class","_renderBands","arm","stain","Boolean","G","Q","process","nextTick","B","X","document","createTextNode","observe","characterData","MessageChannel","port1","onmessage","port2","postMessage","setTimeout","J","tt","require","runOnLoop","runOnContext","constructor","rt","_state","arguments","_result","E","_","TypeError","then","ut","error","S","_label","it","st","et","resolve","nt","A","_onerror","T","ot","_subscribers","M","P","ct","C","O","at","Y","_t","promise","I","F","D","K","L","N","_instanceConstructor","_input","_remaining","_enumerate","U","W","global","Function","Promise","toString","cast","pt","z","H","R","window","V","MutationObserver","WebKitMutationObserver","Z","$","Uint8ClampedArray","importScripts","random","substring","ft","lt","ht","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","_settledAt","_willSettleAt","dt","vt","polyfill","define","amd","module","exports","ES6Promise","slice","apply","forEach","Ideogram","JSON","stringify","_layout","debug","bandDir","resolution","showChromosomeLabels","rect","querySelector","showBandLabels","brush","bump","adjustedBump","chromosome","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","9606","commonName","scientificName","scientificNameAbbr","assemblies","default","GRCh38","GRCh37","10090","7227","4641","chromosomesArray","bandsToShow","numChromosomes","bandData","init","getBands","content","taxid","lines","delimiter","tsvLines","columns","line","tsvLinesLength","source","firstColumn","chrBands","eval","indexOf","chromosomeName","getChromosomeModel","chrIndex","pxStop","chrLength","cs","hasBands","type","fullChromosomeLabels","orgName","pcenIndex","scale","multiorganism","drawChromosomeLabels","each","reverse","drawBandLabels","chrs","chrModel","textOffsets","lineY1","lineY2","overlappingLabelXRight","index","prevHiddenBoxIndex","xLeft","prevLabelXRight","textPadding","textsLength","indexesToShow","prevTextBoxLeft","prevTextBoxWidth","selectorsToShow","ithLength","rotateChromosomeLabels","scaleSvg","tracksHeight","hasOwnProperty","ci","chrMargin2","rotateBandLabels","bandLabels","coord","drawChromosome","rotateAndToggleDisplay","_groups","bpToIscnScale","convertPxToBp","pxToIscnScale","drawSynteny","syntenicRegions","r1","r2","syntenies","opacity","regionID","t0","getTime","insert","regions","startPx","stopPx","syntenicRegion","activeRegion","others","classed","t1","console","log","annotationsPath","localAnnotationsPath","annots","annotations","annotHeight","annotationTracks","barWidth","annotationsColor","drawAnnots","friendlyAnnots","annot","rawAnnot","rawAnnots","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","getHistogramBars","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","histogramScaling","firstGet","lastBand","numBins","count","barAnnots","barCount","layout","triangle","circle","chrAnnot","y1","y2","thisChrWidth","createBrush","from","to","extent","event","selection","xScale","invert","floor","ceil","selectedRegion","x0","chrLengthBp","scaleLinear","domain","right","brushX","move","getBandColorGradients","colors","color1","color2","color3","css","gradients","getTaxidFromEutils","organism","taxonomySearch","json","esearchresult","idlist","taxids","org","orgs","taxidInit","tmpChrs","assembly","getAssemblyAndChromosomesFromEutils","asmChrArray","sortChromosomes","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","asmAndChrArray","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","links","ntSummary","results","result","cnIndex","rsuid","assemblyaccession","linksets","linksetdbs","join","genome","subtype","subname","substr","slen","sort","initDrawChromosomes","bandsArray","chromosomeModel","defs","writeContainer","svgClass","svgHeight","html","finishInit","processBandData","bandsByChr","chrsByTaxid","t0_b","t1_b","pa","timeout","clearTimeout","initCrossFilter","t0_a","checkAnnotData","t0_c","t1_c","t1_a","ideogram","bandDataFileNames","accession","numBandDataResponses","request","get","response","unpackAnnots","unpackedAnnots","packAnnots","facet","crossfilter","annotsByFacet","facets","dimension","filterAnnots","selections","fn","now","counts","group","Infinity","filterAll"],"mappings":"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","file":"ideogram.min.js","sourcesContent":["/**\n * Chromosome range.\n * @public\n * @class\n * @param {Object} data - range data.\n * @param {Integer} data.chr - chromosome index.\n * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n * @param {Integer} data.start - range start.\n * @param {Integer} data.stop - range end.\n * @param {String} data.color - range color.\n */\nfunction Range(data) {\n    this._data = data;\n}\n\nRange.prototype.getStart = function() {\n    return this._data.start;\n};\n\nRange.prototype.getStop = function() {\n    return this._data.stop;\n};\n\nRange.prototype.getLength = function() {\n    return this._data.stop - this._data.start;\n};\n\nRange.prototype.getColor = function(chrNumber) {\n    if (! ('ploidy' in this._data)) {\n        return this._getColor(chrNumber);\n    } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n        return this._getColor(chrNumber);\n    } else {\n        return 'transparent';\n    }\n};\n\nRange.prototype._getColor = function(chrNumber) {\n    if (Array.isArray(this._data.color)) {\n        return this._data.color[chrNumber];\n    } else {\n        return this._data.color;\n    }\n};\n","function ModelAdapter(model) {\n    this._model = model;\n    this._class = 'ModelAdapter';\n}\n\nModelAdapter.getInstance = function(model) {\n    if (model.bands) {\n        return new ModelAdapter(model);\n    } else {\n        return new ModelNoBandsAdapter(model);\n    }\n};\n\nModelAdapter.prototype.getModel = function() {\n    return this._model;\n};\n\nModelAdapter.prototype.getCssClass = function() {\n    return '';\n};\n","function ModelNoBandsAdapter(model) {\n    /*\n     * Call parent constructor.\n     */\n    ModelAdapter.call(this, model);\n    this._class = 'ModelNoBandsAdapter';\n}\n\n\nModelNoBandsAdapter.prototype = Object.create(ModelAdapter.prototype);\n\n\nModelNoBandsAdapter.prototype.getModel = function() {\n\n    this._model.bands = [];\n\n    // If chromosome width more, then 1 add single band to bands array\n    if (this._model.width > 1) {\n        this._model.bands.push({\n            name: 'p',\n            px: {\n                start : 0,\n                stop : this._model.width,\n                width : this._model.width\n            }\n        });\n    }\n\n    return this._model;\n};\n\n\nModelNoBandsAdapter.prototype.getCssClass = function() {\n    return 'noBands';\n};\n","function Layout(config, ideo) {\n    this._config = config;\n    this._ideo = ideo;\n    this._ploidy = this._ideo._ploidy;\n    this._translate = undefined;\n\n     // Chromosome band's size.\n    this._tickSize = 8;\n\n    // Chromosome rotation state.\n    this._isRotated = false;\n}\n\n\n// Factory method\nLayout.getInstance = function(config, ideo) {\n\n    if (\"perspective\" in config && config.perspective == \"comparative\") {\n        return new PairedLayout(config, ideo);\n    } else if (\"rows\" in config && config.rows > 1) {\n        return new SmallLayout(config, ideo);\n    } else if (config.orientation === 'vertical') {\n        return new VerticalLayout(config, ideo);\n    } else if (config.orientation === 'horizontal') {\n        return new HorizontalLayout(config, ideo);\n    } else {\n        return new VerticalLayout(config, ideo);\n    }\n};\n\n\n// Get chart left margin\nLayout.prototype._getLeftMargin = function() {\n    return this._margin.left;\n};\n\n\n// Get rotated chromosome y scale\nLayout.prototype._getYScale = function() {\n    // 20 is width of rotated chromosome.\n    return 20 / this._config.chrWidth;\n};\n\n\n// Get chromosome labels\nLayout.prototype.getChromosomeLabels = function(chrElement) {\n\n    var util = new ChromosomeUtil(chrElement);\n\n    return [util.getSetLabel(), util.getLabel()].filter(function(d) {\n        return d.length > 0;\n    });\n};\n\n\n// Rotate chromosome to original position\nLayout.prototype.rotateBack = function(chrSetNumber, chrNumber, chrElement, callback) {\n\n    throw new Error(this._class + '#rotateBack not implemented');\n};\n\n\n// Rotate chromosome to opposite position\nLayout.prototype.rotateForward = function(chrSetNumber, chrNumber, chrElement, callback) {\n\n    throw new Error(this._class + '#rotateForward not implemented');\n};\n\n\nLayout.prototype.rotate = function(chrSetNumber, chrNumber, chrElement) {\n    // Find chromosomes which should be hidden\n    var otherChrs = d3.selectAll(\"g.chromosome\").filter(function(d, i) {\n        return this !== chrElement;\n    });\n\n    if (this._isRotated) {\n\n        // Reset _isRotated flag\n        this._isRotated = false;\n        // Rotate chromosome back\n        this.rotateBack(chrSetNumber, chrNumber, chrElement, function() {\n            // Show all other chromosomes and chromosome labels\n            otherChrs.style(\"display\", null);\n            d3.selectAll(\".chrSetLabel, .chrLabel\").style(\"display\", null);\n        });\n    } else {\n        // Set _isRotated flag\n        this._isRotated = true;\n\n        // Hide all other chromosomes and chromosome labels\n        otherChrs.style(\"display\", \"none\");\n        d3.selectAll(\".chrSetLabel, .chrLabel\").style(\"display\", \"none\");\n\n        // Rotate chromosome\n        this.rotateForward(chrSetNumber, chrNumber, chrElement);\n    }\n};\n\n\nLayout.prototype.getChromosomeLabelClass = function() {\n\n    if (this._config.ploidy === 1) {\n        return 'chrLabel';\n    } else {\n        return 'chrSetLabel';\n    }\n};\n\n\nLayout.prototype._getAdditionalOffset = function() {\n\n    return (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1);\n};\n\n\nLayout.prototype._getChromosomeSetSize = function(chrSetNumber) {\n\n    // Get last chromosome set size.\n    var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n    // Increase offset by last chromosome set size\n    return setSize * this._config.chrWidth * 2 + (this._config.ploidy > 1 ? 20 : 0);\n};\n\n\n// Get layout margin\nLayout.prototype.getMargin = function() {\n\n    return this._margin;\n};\n\n\n// Get SVG element height\nLayout.prototype.getHeight = function(taxId) {\n\n    throw new Error(this._class + '#getHeight not implemented');\n};\n\n\nLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n\n    throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n};\n\n\nLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n\n    throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n};\n\n\n// Get chromosome's band translate attribute\nLayout.prototype.getChromosomeBandLabelTranslate = function(band, chrNumber) {\n\n    throw new Error(this._class + '#getChromosomeBandLabelTranslate not implemented');\n};\n\n\n// Get chromosome set label anchor property\nLayout.prototype.getChromosomeSetLabelAnchor = function() {\n\n    return 'middle';\n};\n\n\n// Get chromosome's band label text-anchor value\nLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n\n    throw new Error(this._class + '#getChromosomeBandLabelAnchor not implemented');\n};\n\n\nLayout.prototype.getChromosomeLabelXPosition = function(i) {\n\n    throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n};\n\n\n// Get chromosome label y position. \"i\" is chromosome number\nLayout.prototype.getChromosomeLabelYPosition = function(i) {\n\n    return -5.5;\n};\n\n\nLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n\n    if (this._config.ploidy === 1) {\n        return this.getChromosomeLabelYPosition(i);\n    } else {\n        return -2 * this._config.chrWidth;\n    }\n};\n\n\nLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n\n    throw new Error(this._class + '#getChromosomeSetLabelXPosition not implemented');\n};\n\n\nLayout.prototype.getChromosomeSetLabelTranslate = function() {\n\n    throw new Error(this._class + '#getChromosomeSetLabelTranslate not implemented');\n};\n\n\n\n// Get chromosome set translate attribute.\nLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n\n    throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n};\n\n\n// Get chromosome set translate's y offset\nLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n\n    throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n};\n","function HorizontalLayout(config, ideo) {\n    Layout.call(this, config, ideo);\n    this._class = 'HorizontalLayout';\n    this._margin = {\n        left : 20,\n        top : 30\n    };\n}\n\n\nHorizontalLayout.prototype = Object.create(Layout.prototype);\n\nHorizontalLayout.prototype._getLeftMargin = function() {\n\n    var margin = Layout.prototype._getLeftMargin.call(this);\n    if (this._config.ploidy > 1) {\n        margin = margin * 1.8;\n    }\n\n    return margin;\n};\n\nHorizontalLayout.prototype.rotateForward = function(setNumber, chrNumber, chrElement, callback) {\n\n    var self = this;\n\n    var xOffset = 30;\n\n    var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n    var chrBox = chrElement.getBoundingClientRect();\n\n    var scaleX = (ideoBox.height / (chrBox.width + xOffset / 2)) * 0.9;\n    var scaleY = this._getYScale();\n\n    var yOffset = (chrNumber + 1) * ((this._config.chrWidth * 2) * scaleY);\n\n    var transform = 'rotate(90) translate(' + xOffset + ', -' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n    d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n    var labels = this.getChromosomeLabels(chrElement);\n    d3.select(this._ideo.getSvg())\n        .append('g')\n        .attr('class', 'tmp')\n        .selectAll('text')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', function(d, i) {\n            return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n        }).attr('x', function(d, i) {\n            return 30;\n        }).attr('y', function(d, i) {\n            return (i + 1 + labels.length % 2) * 12;\n        }).style('text-anchor', 'middle')\n        .style('opacity', 0)\n        .text(String)\n        .transition()\n        .style('opacity', 1);\n};\n\n\nHorizontalLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement, callback) {\n\n    var translate = this.getChromosomeSetTranslate(setNumber);\n\n    d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n    d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\n\nHorizontalLayout.prototype.getHeight = function(taxId) {\n\n    // Get last chromosome set offset.\n    var lastSetOffset = this.getChromosomeSetYTranslate(this._config.chromosomes[taxId].length - 1);\n\n    // Get last chromosome set size.\n    var lastSetSize = this._getChromosomeSetSize(this._config.chromosomes[taxId].length - 1);\n\n    // Increase offset by last chromosome set size\n    lastSetOffset += lastSetSize;\n\n    return lastSetOffset + this._getAdditionalOffset() * 2;\n};\n\n\nHorizontalLayout.prototype.getChromosomeSetLabelAnchor = function() {\n    return 'end';\n};\n\n\nHorizontalLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n    return null;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n    return 2;\n};\n\n\nHorizontalLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n    return 10;\n};\n\n\nHorizontalLayout.prototype.getChromosomeBandLabelTranslate = function(band) {\n\n    var x = this._ideo.round(- this._tickSize + band.px.start + band.px.width / 2);\n    var y = -10;\n\n    return {\n        x: x,\n        y: y,\n        translate: 'translate(' + x + ',' + y + ')'\n    };\n};\n\n\nHorizontalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n    return null;\n};\n\n\nHorizontalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n    return \"translate(\" + this._getLeftMargin() + \", \" + this.getChromosomeSetYTranslate(setNumber) + \")\";\n};\n\nHorizontalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n\n    // If no detailed description provided just use one formula for all cases.\n    if (! this._config.ploidyDesc) {\n        return this._config.chrMargin * (setNumber + 1);\n    }\n\n    // Id detailed description provided start to calculate offsets\n    //  for each chromosome set separately. This should be done only once.\n    if (! this._translate) {\n\n        // First offset equals to zero.\n        this._translate = [1];\n\n        // Loop through description set\n        for (var i = 1; i < this._config.ploidyDesc.length; i ++) {\n            this._translate[i] = this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n        }\n    }\n\n    return this._translate[setNumber];\n};\n\n\nHorizontalLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n    if (this._config.ploidy === 1) {\n        return this.getChromosomeLabelXPosition(i);\n    } else {\n        return -20;\n    }\n};\n\n\nHorizontalLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n\n    if (this._config.ploidy === 1) {\n        return (this._ploidy.getSetSize(i) * this._config.chrWidth) / 2 + 3;\n    } else {\n        return this._ploidy.getSetSize(i) * this._config.chrWidth;\n    }\n};\n\n\nHorizontalLayout.prototype.getChromosomeLabelXPosition = function(i) {\n    return -8;\n};\n\n\nHorizontalLayout.prototype.getChromosomeLabelYPosition = function(i) {\n    return this._config.chrWidth;\n};\n","\nfunction VerticalLayout(config, ideo) {\n    Layout.call(this, config, ideo);\n    this._class = 'VerticalLayout';\n    // Layout margins\n    this._margin = {\n        top: 30,\n        left: 15\n    };\n}\n\n\nVerticalLayout.prototype = Object.create(Layout.prototype);\n\n\nVerticalLayout.prototype.rotateForward = function(setNumber, chrNumber, chrElement, callback) {\n\n    var self = this;\n\n    var xOffset = 20;\n\n    var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n    var chrBox = chrElement.getBoundingClientRect();\n\n    var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n    var scaleY = this._getYScale();\n\n    var transform = \"translate(\" + xOffset + \", 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n    d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n    var labels = this.getChromosomeLabels(chrElement);\n    d3.select(this._ideo.getSvg())\n        .append('g')\n        .attr('class', 'tmp')\n        .selectAll('text')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', function(d, i) {\n            return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n        }).attr('x', function(d, i) {\n            return 0;\n        }).attr('y', function(d, i) {\n            return (xOffset + self._config.chrWidth) * 1.3;\n        }).style('opacity', 0)\n        .text(String)\n        .transition()\n        .style('opacity', 1);\n};\n\n\nVerticalLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement, callback) {\n\n    var translate = this.getChromosomeSetTranslate(setNumber);\n\n    d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n    d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\n\nVerticalLayout.prototype.getHeight = function(taxId) {\n\n    return this._config.chrHeight + this._margin.top * 1.5;\n};\n\n\nVerticalLayout.prototype.getChromosomeBandLabelTranslate = function(band) {\n\n};\n\n\nVerticalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n\n    return 'rotate(-90)';\n};\n\n\nVerticalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n\n    return 'rotate(90) translate(' + this._margin.top + ', -' + this.getChromosomeSetYTranslate(setNumber) + ')';\n};\n\n\nVerticalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation/histogram tracks\n    var additionalPadding = this._getAdditionalOffset();\n    // If no detailed description provided just use one formula for all cases\n    if (! this._config.ploidyDesc) {\n\n         // TODO:\n         // This part of code contains a lot magic numbers and if\n         // statements for exactly corresponing to original ideogram examples.\n         // But all this stuff should be removed. Calculation of translate\n         // should be a simple formula applied for all cases listed below.\n         // Now they are diffirent because of Layout:_getAdditionalOffset do\n         // not meet for cases when no annotation, when annotation exists and\n         // when histogram used\n        var translate;\n        if (this._config.annotationsLayout === \"histogram\") {\n            translate = this._config.chrMargin / 2 + setNumber * (this._config.chrMargin + this._config.chrWidth + 2) + additionalPadding * 2 + 1;\n        } else if (additionalPadding > 0) {\n            translate = this._config.chrWidth + setNumber * (this._config.chrMargin + this._config.chrWidth) + additionalPadding * 2;\n        } else {\n            translate = this._config.chrWidth + setNumber * (this._config.chrMargin + this._config.chrWidth) + additionalPadding * 2 + 4 + (2 * setNumber);\n        }\n\n        return translate;\n    }\n\n    // If detailed description provided start to calculate offsets\n    // for each chromosome set separately. This should be done only once\n    if (! this._translate) {\n        // First offset equals to zero\n        this._translate = [this._ploidy.getSetSize(0) * this._config.chrWidth * 2];\n        // Loop through description set\n        for (var i = 1; i < this._config.ploidyDesc.length; i ++) {\n            this._translate[i] = this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n        }\n    }\n\n    return this._translate[setNumber];\n};\n\n\nVerticalLayout.prototype.getChromosomeSetLabelXPosition = function(setNumber) {\n\n    return this._config.chrWidth / -2;\n};\n\n\nVerticalLayout.prototype.getChromosomeLabelXPosition = function(i) {\n\n    return this._config.chrWidth / - 2;\n};\n","function PairedLayout(config, ideo) {\n\n    Layout.call(this, config, ideo);\n\n    this._class = 'PairedLayout';\n\n    this._margin = {\n        left : 30\n    };\n}\n\n\nPairedLayout.prototype = Object.create(Layout.prototype);\n\n\nPairedLayout.prototype.rotateForward = function(setNumber, chrNumber, chrElement, callback) {\n\n    var self = this;\n\n    // Get ideo container and chromosome set dimensions\n    var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n    var chrBox = chrElement.getBoundingClientRect();\n    // Evaluate dimensions scale coefficients\n    var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n    var scaleY = this._getYScale();\n    // Evaluate y offset of chromosome. It is different for first and the second one\n    var yOffset = setNumber ? 150 : 25;\n\n    var transform = 'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n    // Run rotation procedure\n    d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', function() {\n            // Run callback function if provided\n            if (callback) {\n                callback();\n            }\n            // Rotate band labels\n            d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n                .attr('transform', 'rotate(90) translate(0, ' + (6 * Number(! setNumber)) + ')')\n                .attr(\"text-anchor\", \"middle\");\n            // Hide syntenic regions\n            d3.selectAll('.syntenicRegion').style(\"display\", 'none');\n        });\n\n    // Append new chromosome labels\n    var labels = this.getChromosomeLabels(chrElement);\n    d3.select(this._ideo.getSvg())\n        .append('g')\n        .attr('class', 'tmp')\n        .selectAll('text')\n        .data(this.getChromosomeLabels(chrElement))\n        .enter()\n        .append('text')\n        .attr('class', function(d, i) {\n            return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n        }).attr('x', function(d, i) {\n            return 0;\n        }).attr('y', function(d, i) {\n            return yOffset + (self._config.chrWidth * scaleX / 2) * 1.15;\n        }).style('opacity', 0)\n        .text(String)\n        .transition()\n        .style('opacity', 1);\n};\n\n\nPairedLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement, callback) {\n\n    // Get intial transformation string for chromosome set\n    var translate = this.getChromosomeSetTranslate(setNumber);\n\n    // Run rotation procedure\n    d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', function() {\n            // Run callback fnuction if provided\n            callback();\n            // Show syntenic regions\n            d3.selectAll('.syntenicRegion').style(\"display\", null);\n            // Reset changed attributes to original state\n            d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n                .attr('transform', null)\n                .attr(\"text-anchor\", setNumber ? null : 'end');\n        });\n\n    d3.selectAll('g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\n\nPairedLayout.prototype.getHeight = function(taxId) {\n\n    return this._config.chrHeight + this._margin.left * 1.5;\n};\n\n\nPairedLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n\n    return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n};\n\n\nPairedLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n\n    return chrNumber % 2 ? this._config.chrWidth - this._tickSize : this._config.chrWidth * 2 + this._tickSize;\n};\n\n\nPairedLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n\n    return chrNumber % 2 ? null : 'end';\n};\n\n\nPairedLayout.prototype.getChromosomeBandLabelTranslate = function(band, chrNumber) {\n\n    var x = chrNumber % 2 ? 10 : - this._config.chrWidth - 10;\n    var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n    return {\n        x : y,\n        y : y,\n        translate : 'rotate(-90) translate(' + x + ', ' + y + ')'\n    };\n};\n\n\nPairedLayout.prototype.getChromosomeLabelXPosition = function(i) {\n\n    return - this._tickSize;\n};\n\n\nPairedLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n\n    return this._config.chrWidth / - 2;\n};\n\n\nPairedLayout.prototype.getChromosomeSetLabelTranslate = function() {\n\n    return 'rotate(-90)';\n};\n\n\nPairedLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n\n    return 'rotate(90) translate(' + this._margin.left + ', -' + this.getChromosomeSetYTranslate(setNumber) + ')';\n};\n\n\nPairedLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n\n    return 200 * (setNumber + 1);\n};\n","function SmallLayout(config, ideo) {\n\n    Layout.call(this, config, ideo);\n\n    this._class = 'SmallLayout';\n\n    this._margin = {\n        left : 36.5,\n        top : 10\n    };\n}\n\n\nSmallLayout.prototype = Object.create(Layout.prototype);\n\n\nSmallLayout.prototype.rotateForward = function(setNumber, chrNumber, chrElement, callback) {\n\n    var ideoBox = d3.select(\"#_ideogram\").node().getBoundingClientRect();\n    var chrBox = chrElement.getBoundingClientRect();\n\n    var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n    var scaleY = this._getYScale();\n\n    transform = \"translate(5, 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n    d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n};\n\n\nSmallLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement, callback) {\n\n    var translate = this.getChromosomeSetTranslate(setNumber);\n\n    d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n};\n\n\nSmallLayout.prototype.getHeight = function(taxId) {\n\n    return this._config.rows * (this._config.chrHeight + this._margin.top * 1.5);\n};\n\n\nSmallLayout.prototype.getChromosomeBandLabelTranslate = function(band) {\n\n};\n\n\nSmallLayout.prototype.getChromosomeSetLabelTranslate = function() {\n\n    return 'rotate(-90)';\n};\n\n\nSmallLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n    // Get organisms id list\n    var organisms = [];\n    this._ideo.getTaxids(function(taxIdList) {\n        organisms = taxIdList;\n    });\n    // Get first organism chromosomes amount\n    var size = this._ideo.config.chromosomes[organisms[0]].length;\n    // Amount of chromosomes per number\n    var rowSize = size / this._config.rows;\n\n    var xOffset;\n    var yOffset;\n\n    if (setNumber > rowSize - 1) {\n        xOffset = this._margin.left + this._config.chrHeight * 1.4;\n        yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n    } else {\n        xOffset = this._margin.left;\n        yOffset = this.getChromosomeSetYTranslate(setNumber);\n    }\n\n    return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n};\n\n\nSmallLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation tracks\n    var additionalPadding = this._getAdditionalOffset();\n    // If no detailed description provided just use one formula for all cases\n    return this._margin.left * (setNumber) + this._config.chrWidth + additionalPadding * 2 + additionalPadding * setNumber;\n};\n\n\nSmallLayout.prototype.getChromosomeSetLabelXPosition = function(setNumber) {\n\n    return ((this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / - 2) + (this._config.ploidy > 1 ? 0 : this._config.chrWidth);\n};\n\n\nSmallLayout.prototype.getChromosomeLabelXPosition = function(i) {\n\n    return this._config.chrWidth / - 2;\n};\n","function Ploidy(config) {\n    this._config = config;\n    this._description = this._normilize(this._config.ploidyDesc);\n}\n\n\n// Get number of chromosomes in a chromosome set\nPloidy.prototype.getChromosomesNumber = function(setNumber) {\n\n    if (this._config.ploidyDesc) {\n        var chrSetCode = this._config.ploidyDesc[setNumber];\n        if (chrSetCode instanceof Object) {\n            return Object.keys(chrSetCode)[0].length;\n        } else {\n            return chrSetCode.length;\n        }\n    } else {\n        return this._config.ploidy || 1;\n    }\n};\n\n\n// Normalize use defined description\nPloidy.prototype._normilize = function(description) {\n\n    // Return the same if no description provided\n    if (! description) {\n        return description;\n    }\n\n    // Array of normalized description objects\n    var normalized = [];\n\n     // Loop through description and normalize\n    for (var key in description) {\n        if (typeof description[key] == 'string') {\n            normalized.push({\n                ancestors : description[key],\n                existance : this._getExistanceArray(description[key].length)\n            });\n        } else {\n            normalized.push({\n                ancestors : Object.keys(description[key])[0],\n                existance : description[key][Object.keys(description[key])[0]]\n            });\n        }\n    }\n\n    return normalized;\n};\n\n\n// Get array filled by '11' elements\nPloidy.prototype._getExistanceArray = function(length) {\n\n    var array = [];\n\n    for (var i = 0; i < length; i ++) {\n        array.push('11');\n    }\n\n    return array;\n};\n\nPloidy.prototype.getSetSize = function(chrSetNumber) {\n\n    if (this._description) {\n        return this._description[chrSetNumber].ancestors.length;\n    } else {\n        return 1;\n    }\n};\n\n\n// Get ancestor letter\nPloidy.prototype.getAncestor = function(chrSetNumber, chrNumber) {\n\n    if (this._description) {\n        return this._description[chrSetNumber].ancestors[chrNumber];\n    } else {\n        return '';\n    }\n};\n\n\n// Check if chromosome's arm should be rendered.\n// If no description was provided, method returns true and\n// something another depending on user provided description.\nPloidy.prototype.isExists = function(chrSetNumber, chrNumber, armNumber) {\n\n    if (this._description) {\n        return Number(this._description[chrSetNumber].existance[chrNumber][armNumber]) > 0;\n    } else {\n        return true;\n    }\n};\n","function Color(config) {\n    // Ideogram config\n    this._config = config;\n    this._ploidy = new Ploidy(this._config);\n}\n\n\nColor.prototype.getArmColor = function(chrSetNumber, chrNmber, armNumber) {\n\n    if (this._config.armColors) {\n        return this._config.armColors[armNumber];\n    } else if (this._config.ancestors) {\n        return this._getPolyploidArmColor(chrSetNumber, chrNmber, armNumber);\n    } else {\n        return null;\n    }\n};\n\n\nColor.prototype.getBorderColor = function(chrSetNumber, chrNmber, armNumber) {\n\n    if (chrNmber < this._config.ploidy) {\n        return '#000';\n    } else if (this._ploidy.isExists(chrSetNumber, chrNmber, armNumber)) {\n        return '#000';\n    } else {\n        return '#fff';\n    }\n};\n\n\nColor.prototype._getPolyploidArmColor = function(chrSetNumber, chrNmber, armNumber) {\n\n    if (! this._ploidy.isExists(chrSetNumber, chrNmber, armNumber)) {\n        return 'transparent';\n    } else {\n        return this._config.ancestors[this._ploidy.getAncestor(chrSetNumber, chrNmber, armNumber)];\n    }\n};\n","function Chromosome(adapter, config, ideo) {\n\n    this._adapter = adapter;\n    this._model = this._adapter.getModel();\n    this._config = config;\n    this._ideo = ideo;\n    this._color = new Color(this._config);\n    this._bumpCoefficient = 5;\n}\n\n\n// Factory method\nChromosome.getInstance = function(adapter, config, ideo) {\n\n    if (adapter.getModel().centromerePosition == 'telocentric') {\n        return new TelocentricChromosome(adapter, config, ideo);\n    } else {\n        return new MetacentricChromosome(adapter, config, ideo);\n    }\n};\n\n\nChromosome.prototype._addPArmShape = function(clipPath, isPArmRendered) {\n\n    if (isPArmRendered) {\n        return clipPath.concat(this._getPArmShape());\n    } else {\n         return clipPath;\n    }\n};\n\n\nChromosome.prototype._addQArmShape = function(clipPath, isQArmRendered) {\n\n    if (isQArmRendered) {\n        return clipPath.concat(this._getQArmShape());\n    } else {\n        return clipPath;\n    }\n};\n\n\nChromosome.prototype.render = function(container, chrSetNumber, chrNumber) {\n\n    // Append bands container and apply clip-path on it\n    container = container.append('g')\n        .attr('class', 'bands')\n        .attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n    // Render chromosome arms\n    var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n    var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n    // Render range set\n    this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n    // Push arms shape string into clipPath array\n    var clipPath = [];\n    clipPath = this._addPArmShape(clipPath, isPArmRendered);\n    clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n    // Render chromosome border\n    var self = this;\n    container.append('g')\n        .attr('class', 'chromosome-border')\n        .selectAll('path')\n        .data(clipPath)\n        .enter()\n        .append('path')\n        .attr('fill', 'transparent')\n        .attr('stroke', function(d, i) {\n            return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n        }).attr('stroke-width', 1)\n        .attr('d', function(d) {\n            return d.path;\n        }).attr('class', function(d) {\n            return d['class'];\n        });\n\n    return clipPath;\n};\n\n\nChromosome.prototype._renderRangeSet = function(container, chrSetNumber, chrNumber) {\n\n    if (! ('rangeSet' in this._config)) {\n        return;\n    }\n\n    var rangeSet = this._config.rangeSet.filter(function(range) {\n        return range.chr - 1 == chrSetNumber;\n    }).map(function(range) {\n        return new Range(range);\n    });\n\n    var rangesContainer = container.append('g')\n        .attr('class', 'range-set');\n\n    var self = this;\n    rangesContainer.selectAll('rect.range')\n        .data(rangeSet)\n        .enter()\n        .append('rect')\n        .attr('class', 'range')\n        .attr('x', function(range) {\n            return self._ideo.convertBpToPx(self._model, range.getStart()) - self._ideo._bandsXOffset;\n        }).attr('y', 0)\n        .attr('width', function(range) {\n            return self._ideo.convertBpToPx(self._model, range.getLength()) - self._ideo._bandsXOffset;\n        }).attr('height', this._config.chrWidth)\n        .style('fill', function(range) {\n            return range.getColor(chrNumber);\n        });\n};\n\n\n// Get chromosome's shape main values\nChromosome.prototype._getShapeData = function() {\n\n    // First q band from bands sequence\n    var firstQBand;\n    for (var i = 0; i < this._model.bands.length; i ++) {\n        if (this._model.bands[i].name[0] == 'q') {\n            firstQBand = this._model.bands[i];\n            break;\n        }\n    }\n\n    // Chromosome's right position\n    var rightTerminalPosition = this._model.bands[this._model.bands.length - 1].px.stop;\n\n    // Properties description:\n    // x1 - left terminal start position\n    // x2 - centromere position\n    // x3 - right terminal end position\n    // w - chromosome width\n    // b - bump size\n    return {\n        x1: 0,\n        x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n        x3: rightTerminalPosition,\n        w: this._config.chrWidth,\n        b: this._config.chrWidth / this._bumpCoefficient\n    };\n};\n\n\nChromosome.prototype._getPArmShape = function() {\n\n    var d = this._getShapeData();\n\n    return {\n        'class' : '',\n        'path' : 'M' + d.b + ',0 ' +\n            'L' + (d.x2 - d.b) + ',0 ' +\n            'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + (d.x2 - d.b) + ',' + d.w + ' ' +\n            'L' + d.b + ',' + d.w + ' ' +\n            'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n    };\n};\n\n\nChromosome.prototype._getQArmShape = function() {\n\n    var d = this._getShapeData();\n\n    return {\n        'class' : '',\n        'path' : 'M' + (d.x2 + d.b) + ',0 ' +\n            'L' + (d.x3 - d.b) + ',0 ' +\n            'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + (d.x3 - d.b) + ',' + d.w + ' ' +\n            'L' + (d.x2 + d.b) + ',' + d.w + ' ' +\n            'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + (d.x2 + d.b) + ',0'\n    };\n};\n\n\n// Render arm bands\nChromosome.prototype._renderBands = function(container, chrSetNumber, chrNumber, bands, arm) {\n\n    var self = this;\n\n    container.selectAll(\"path.band.\" + arm)\n        .data(bands)\n        .enter()\n        .append(\"path\")\n        .attr(\"id\", function(d, i) {\n            return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n        }).attr(\"class\", function(d, i) {\n            return 'band ' + arm + '-band ' + d.stain;\n        }).attr(\"d\", function(d, i) {\n\n            var start = self._ideo.round(d.px.start);\n            var length = self._ideo.round(d.px.width);\n\n            x = start + length;\n\n            return \"M \" + start + \", 0\" +\n                \"l \" + length + \" 0 \" +\n                \"l 0 \" + self._config.chrWidth + \" \" +\n                \"l -\" + length + \" 0 z\";\n        }).style('fill', function(d) {\n            return self._color.getArmColor(chrSetNumber, chrNumber, arm == 'p' ? 0 : 1);\n        });\n};\n\n\n// Render chromosome's p arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderPArm = function(container, chrSetNumber, chrNumber) {\n\n    var bands = this._model.bands.filter(function(band) {\n        return band.name[0] == 'p';\n    });\n\n    this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n    return Boolean(bands.length);\n};\n\n\n// Render chromosome's q arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderQArm = function(container, chrSetNumber, chrNumber) {\n\n    var bands = this._model.bands.filter(function(band) {\n        return band.name[0] == 'q';\n    });\n\n    this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n    return Boolean(bands.length);\n};\n","function TelocentricChromosome(model, config, ideo) {\n\n    Chromosome.call(this, model, config, ideo);\n    this._class = 'TelocentricChromosome';\n    this._pArmOffset = 3;\n}\n\n\nTelocentricChromosome.prototype = Object.create(Chromosome.prototype);\n\n\nTelocentricChromosome.prototype._addPArmShape = function(clipPath, isPArmRendered) {\n    return clipPath.concat(this._getPArmShape());\n};\n\n\nTelocentricChromosome.prototype._getPArmShape = function() {\n\n    var d = this._getShapeData();\n    d.o = this._pArmOffset;\n\n    return [{\n        'class' : 'acen',\n        'path' : 'M' + d.x2 + ',1' +\n            'L' + (d.x2 - d.o) + ',1 ' +\n            'L' + (d.x2 - d.o) + ',' + (d.w - 1) + ' ' +\n            'L' + d.x2 + ',' + (d.w - 1)\n    }, {\n        'class' : 'gpos100',\n        'path' : 'M' + (d.x2 - d.o + 1) + ',0' +\n        'L' + (d.x2 - d.o) + ',0 ' +\n        'L' + (d.x2 - d.o) + ',' + d.w + ' ' +\n        'L' + (d.x2 - d.o + 1) + ',' + d.w\n    }];\n};\n\n\nTelocentricChromosome.prototype._getQArmShape = function() {\n\n    var d = this._getShapeData();\n\n    return {\n        'class' : '',\n        'path' : 'M' + d.x2 + ',0 ' +\n            'L' + (d.x3 - d.b) + ',0 ' +\n            'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + (d.x3 - d.b) + ',' + d.w + ' ' +\n            'L' + d.x2 + ',' + d.w\n    };\n};\n","function MetacentricChromosome(model, config, ideo) {\n    Chromosome.call(this, model, config, ideo);\n    this._class = 'MetacentricChromosome';\n}\n\n\nMetacentricChromosome.prototype = Object.create(Chromosome.prototype);\n","// https://github.com/stefanpenner/es6-promise\n(function(){\"use strict\";function t(t){return\"function\"==typeof t||\"object\"==typeof t&&null!==t}function e(t){return\"function\"==typeof t}function n(t){G=t}function r(t){Q=t}function o(){return function(){process.nextTick(a)}}function i(){return function(){B(a)}}function s(){var t=0,e=new X(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){t.port2.postMessage(0)}}function c(){return function(){setTimeout(a,1)}}function a(){for(var t=0;J>t;t+=2){var e=tt[t],n=tt[t+1];e(n),tt[t]=void 0,tt[t+1]=void 0}J=0}function f(){try{var t=require,e=t(\"vertx\");return B=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[rt]&&k(r);var o=n._state;if(o){var i=arguments[o-1];Q(function(){x(o,r,i,n._result)})}else E(n,r,t,e);return r}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function _(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function v(t){try{return t.then}catch(e){return ut.error=e,ut}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){Q(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===it?S(t,e._result):e._state===st?j(t,e._result):E(e,void 0,function(e){g(t,e)},function(e){j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===et&&constructor.resolve===nt?b(t,n):r===ut?j(t,ut.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,_()):t(n)?w(e,n,v(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===ot&&(t._result=e,t._state=it,0!==t._subscribers.length&&Q(T,t))}function j(t,e){t._state===ot&&(t._state=st,t._result=e,Q(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+it]=n,o[i+st]=r,0===i&&t._state&&Q(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r,o,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return ct.error=n,ct}}function x(t,n,r,o){var i,s,u,c,a=e(r);if(a){if(i=P(r,o),i===ct?(c=!0,s=i.error,i=null):u=!0,n===i)return void j(n,d())}else i=o,u=!0;n._state!==ot||(a&&u?g(n,i):c?j(n,s):t===it?S(n,i):t===st&&j(n,i))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return at++}function k(t){t[rt]=at++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t){return new _t(this,t).promise}function q(t){var e=this;return new e(I(t)?function(n,r){for(var o=t.length,i=0;o>i;i++)e.resolve(t[i]).then(n,r)}:function(t,e){e(new TypeError(\"You must pass an array to race.\"))})}function F(t){var e=this,n=new e(p);return j(n,t),n}function D(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function K(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function L(t){this[rt]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&D(),this instanceof L?C(this,t):K())}function N(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[rt]||k(this.promise),I(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,U())}function U(){return new Error(\"Array Methods must be provided an Array\")}function W(){var t;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;(!n||\"[object Promise]\"!==Object.prototype.toString.call(n.resolve())||n.cast)&&(t.Promise=pt)}var z;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B,G,H,I=z,J=0,Q=function(t,e){tt[J]=t,tt[J+1]=e,J+=2,2===J&&(G?G(a):H())},R=\"undefined\"!=typeof window?window:void 0,V=R||{},X=V.MutationObserver||V.WebKitMutationObserver,Z=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),$=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,tt=new Array(1e3);H=Z?o():X?s():$?u():void 0===R&&\"function\"==typeof require?f():c();var et=l,nt=h,rt=Math.random().toString(36).substring(16),ot=void 0,it=1,st=2,ut=new M,ct=new M,at=0,ft=Y,lt=q,ht=F,pt=L;L.all=ft,L.race=lt,L.resolve=nt,L.reject=ht,L._setScheduler=n,L._setAsap=r,L._asap=Q,L.prototype={constructor:L,then:et,\"catch\":function(t){return this.then(null,t)}};var _t=N;N.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===ot&&t>n;n++)this._eachEntry(e[n],n)},N.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===nt){var o=v(t);if(o===et&&t._state!==ot)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===pt){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){e(t)}),e)}else this._willSettleAt(r(t),e)},N.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===ot&&(this._remaining--,t===st?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},N.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){n._settledAt(it,e,t)},function(t){n._settledAt(st,e,t)})};var dt=W,vt={Promise:pt,polyfill:dt};\"function\"==typeof define&&define.amd?define(function(){return vt}):\"undefined\"!=typeof module&&module.exports?module.exports=vt:\"undefined\"!=typeof this&&(this.ES6Promise=vt),dt()}).call(this);\n\n// https://github.com/kristw/d3.promise\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"d3\"],b):\"object\"==typeof exports?module.exports=b(require(\"d3\")):a.d3.promise=b(a.d3)}(this,function(a){var b=function(){function b(a,b){return function(){var c=Array.prototype.slice.call(arguments);return new Promise(function(d,e){var f=function(a,b){return a?void e(Error(a)):void d(b)};b.apply(a,c.concat(f))})}}var c={};return[\"csv\",\"tsv\",\"json\",\"xml\",\"text\",\"html\"].forEach(function(d){c[d]=b(a,a[d])}),c}();return a.promise=b,b});\n\n// https://github.com/overset/javascript-natural-sort\nfunction naturalSort(a,b){var q,r,c=/(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,d=/^\\s+|\\s+$/g,e=/\\s+/g,f=/(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,g=/^0x[0-9a-f]+$/i,h=/^0/,i=function(a){return(naturalSort.insensitive&&(\"\"+a).toLowerCase()||\"\"+a).replace(d,\"\")},j=i(a),k=i(b),l=j.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),m=k.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),n=parseInt(j.match(g),16)||1!==l.length&&Date.parse(j),o=parseInt(k.match(g),16)||n&&k.match(f)&&Date.parse(k)||null,p=function(a,b){return(!a.match(h)||1==b)&&parseFloat(a)||a.replace(e,\" \").replace(d,\"\")||0};if(o){if(n<o)return-1;if(n>o)return 1}for(var s=0,t=l.length,u=m.length,v=Math.max(t,u);s<v;s++){if(q=p(l[s]||\"\",t),r=p(m[s]||\"\",u),isNaN(q)!==isNaN(r))return isNaN(q)?1:-1;if(/[^\\x00-\\x80]/.test(q+r)&&q.localeCompare){var w=q.localeCompare(r);return w/Math.abs(w)}if(q<r)return-1;if(q>r)return 1}}\n","// Chromosome's view utility class\nfunction ChromosomeUtil(node) {\n    this._node = node;\n}\n\n\nChromosomeUtil.prototype.getLabel = function() {\n    return d3.select(this._node).select('text.chrLabel').text();\n};\n\n\n// Get chromosome set label\nChromosomeUtil.prototype.getSetLabel = function() {\n    return d3.select(this._node.parentNode).select('text.chromosome-set-label').text();\n};\n","// Developed by Eric Weitz (https://github.com/eweitz)\n\n/* Constructs a prototypal Ideogram class */\nvar Ideogram = function(config) {\n  // Clone the config object, to allow multiple instantiations\n  // without picking up prior ideogram's settings\n  this.config = JSON.parse(JSON.stringify(config));\n\n  // Organism ploidy description\n  this._ploidy = new Ploidy(this.config);\n\n  // Chromosome's layout\n  this._layout = Layout.getInstance(this.config, this);\n\n  // TODO: Document this\n  this._bandsXOffset = 30;\n\n  this.debug = false;\n\n  if (!this.config.ploidy) {\n    this.config.ploidy = 1;\n  }\n\n  if (!this.config.bandDir) {\n    this.config.bandDir = \"../data/bands/\";\n  }\n\n  if (!this.config.container) {\n    this.config.container = \"body\";\n  }\n\n  if (!this.config.resolution) {\n    this.config.resolution = 850;\n  }\n\n  if (\"showChromosomeLabels\" in this.config === false) {\n    this.config.showChromosomeLabels = true;\n  }\n\n  if (!this.config.chrMargin) {\n    this.config.chrMargin = 10;\n  }\n\n  if (!this.config.orientation) {\n    var orientation = \"vertical\";\n    this.config.orientation = orientation;\n  }\n\n  if (!this.config.chrHeight) {\n    var chrHeight,\n      container = this.config.container,\n      rect = document.querySelector(container).getBoundingClientRect();\n\n    if (orientation === \"vertical\") {\n      chrHeight = rect.height;\n    } else {\n      chrHeight = rect.width;\n    }\n\n    if (container === \"body\") {\n      chrHeight = 500;\n    }\n    this.config.chrHeight = chrHeight;\n  }\n\n  if (!this.config.chrWidth) {\n    var chrWidth = 10,\n      chrHeight = this.config.chrHeight;\n    if (900 > chrHeight && chrHeight > 500) {\n      chrWidth = Math.round(chrHeight / 40);\n    } else if (chrHeight >= 900) {\n      chrWidth = Math.round(chrHeight / 45);\n    }\n    this.config.chrWidth = chrWidth;\n  }\n\n  if (!this.config.showBandLabels) {\n    this.config.showBandLabels = false;\n  }\n\n  if (!this.config.brush) {\n    this.config.brush = false;\n  }\n\n  if (!this.config.rows) {\n  \tthis.config.rows = 1;\n  }\n\n  this.bump = Math.round(this.config.chrHeight / 125);\n  this.adjustedBump = false;\n  if (this.config.chrHeight < 200) {\n    this.adjustedBump = true;\n    this.bump = 4;\n  }\n\n  if (config.showBandLabels) {\n    this.config.chrMargin += 20;\n  }\n\n  if (config.chromosome) {\n    this.config.chromosomes = [config.chromosome];\n    if (\"showBandLabels\" in config === false) {\n      this.config.showBandLabels = true;\n    }\n    if (\"rotatable\" in config === false) {\n      this.config.rotatable = false;\n    }\n  }\n\n  if (!this.config.showNonNuclearChromosomes) {\n    this.config.showNonNuclearChromosomes = false;\n  }\n\n  this.initAnnotSettings();\n\n  this.config.chrMargin = (\n    this.config.chrMargin +\n    this.config.chrWidth +\n    this.config.annotTracksHeight * 2\n  );\n\n  if (config.onLoad) {\n    this.onLoadCallback = config.onLoad;\n  }\n\n  if (config.onDrawAnnots) {\n    this.onDrawAnnotsCallback = config.onDrawAnnots;\n  }\n\n  if (config.onBrushMove) {\n    this.onBrushMoveCallback = config.onBrushMove;\n  }\n\n  this.coordinateSystem = \"iscn\";\n\n  this.maxLength = {\n    bp: 0,\n    iscn: 0\n  };\n\n  // The E-Utilies In Depth: Parameters, Syntax and More:\n  // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n  var eutils = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/\";\n  this.esearch = eutils + \"esearch.fcgi?retmode=json\";\n  this.esummary = eutils + \"esummary.fcgi?retmode=json\";\n  this.elink = eutils + \"elink.fcgi?retmode=json\";\n\n  this.organisms = {\n    9606: {\n      commonName: \"Human\",\n      scientificName: \"Homo sapiens\",\n      scientificNameAbbr: \"H. sapiens\",\n      assemblies: { // technically, primary assembly unit of assembly\n        default: \"GCF_000001305.14\", // GRCh38\n        GRCh38: \"GCF_000001305.14\",\n        GRCh37: \"GCF_000001305.13\"\n      }\n    },\n    10090: {\n      commonName: \"Mouse\",\n      scientificName: \"Mus musculus\",\n      scientificNameAbbr: \"M. musculus\",\n      assemblies: {\n        default: \"GCF_000000055.19\"\n      }\n    },\n    7227: {\n      commonName: \"Fly\",\n      scientificName: \"Drosophlia melanogaster\",\n      scientificNameAbbr: \"D. melanogaster\"\n    },\n    4641: {\n      commonName: \"banana\",\n      scientificName: \"Musa acuminata\",\n      scientificNameAbbr: \"M. acuminata\",\n      assemblies: {\n        default: \"mock\"\n      }\n    }\n  };\n\n  // A flat array of chromosomes\n  // (this.chromosomes is an object of\n  // arrays of chromosomes, keyed by organism)\n  this.chromosomesArray = [];\n\n  this.bandsToShow = [];\n\n  this.chromosomes = {};\n  this.numChromosomes = 0;\n  this.bandData = {};\n\n  this.init();\n};\n\n/**\n* Gets chromosome band data from a\n* TSV file, or, if band data is prefetched, from an array\n*\n* UCSC: #chrom chromStart  chromEnd  name  gieStain\n* http://genome.ucsc.edu/cgi-bin/hgTables\n*  - group: Mapping and Sequencing\n*  - track: Chromosome Band (Ideogram)\n*\n* NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n* ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n*/\nIdeogram.prototype.getBands = function(content, taxid, chromosomes) {\n  var lines = {},\n    delimiter, tsvLines, columns, line, stain, chr,\n    i, init, tsvLinesLength, source,\n    start, stop, firstColumn;\n\n  if (content.slice(0, 8) === \"chrBands\") {\n    source = \"native\";\n  }\n\n  if (typeof chrBands === \"undefined\" && source !== \"native\") {\n    delimiter = /\\t/;\n    tsvLines = content.split(/\\r\\n|\\n/);\n    init = 1;\n  } else {\n    delimiter = / /;\n    if (source === \"native\") {\n      tsvLines = eval(content);\n    } else {\n      tsvLines = content;\n    }\n    init = 0;\n  }\n\n  firstColumn = tsvLines[0].split(delimiter)[0];\n  if (firstColumn === '#chromosome') {\n    source = 'ncbi';\n  } else if (firstColumn === '#chrom') {\n    source = 'ucsc';\n  } else {\n    source = 'native';\n  }\n\n  tsvLinesLength = tsvLines.length;\n\n  if (source === 'ncbi' || source === 'native') {\n    for (i = init; i < tsvLinesLength; i++) {\n      columns = tsvLines[i].split(delimiter);\n\n      chr = columns[0];\n\n      if (\n        // If a specific set of chromosomes has been requested, and\n        // the current chromosome\n        typeof (chromosomes) !== \"undefined\" &&\n        chromosomes.indexOf(chr) === -1\n      ) {\n        continue;\n      }\n\n      if (chr in lines === false) {\n        lines[chr] = [];\n      }\n\n      stain = columns[7];\n      if (columns[8]) {\n        // For e.g. acen and gvar, columns[8] (density) is undefined\n        stain += columns[8];\n      }\n\n      line = {\n        chr: chr,\n        bp: {\n          start: parseInt(columns[5], 10),\n          stop: parseInt(columns[6], 10)\n        },\n        iscn: {\n          start: parseInt(columns[3], 10),\n          stop: parseInt(columns[4], 10)\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[1] + columns[2],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  } else if (source === 'ucsc') {\n    for (i = init; i < tsvLinesLength; i++) {\n      // #chrom chromStart  chromEnd  name  gieStain\n      // e.g. for fly:\n      // chr4\t69508\t108296\t102A1\tn/a\n      columns = tsvLines[i].split(delimiter);\n\n      if (columns[0] !== 'chr' + chromosomeName) {\n        continue;\n      }\n\n      stain = columns[4];\n      if (stain === 'n/a') {\n        stain = 'gpos100';\n      }\n      start = parseInt(columns[1], 10);\n      stop = parseInt(columns[2], 10);\n\n      line = {\n        chr: columns[0].split('chr')[1],\n        bp: {\n          start: start,\n          stop: stop\n        },\n        iscn: {\n          start: start,\n          stop: stop\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[3],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  }\n\n  return lines;\n};\n\n/**\n* Generates a model object for each chromosome\n* containing information on its name, DOM ID,\n* length in base pairs or ISCN coordinates,\n* cytogenetic bands, centromere position, etc.\n*/\nIdeogram.prototype.getChromosomeModel = function(bands, chromosome, taxid, chrIndex) {\n  var chr = {},\n    band,\n    width, pxStop,\n    chrHeight = this.config.chrHeight,\n    maxLength = this.maxLength,\n    chrLength,\n    cs, hasBands;\n\n  cs = this.coordinateSystem;\n  hasBands = (typeof bands !== \"undefined\");\n\n  if (hasBands) {\n    chr.name = chromosome;\n    chr.length = bands[bands.length - 1][cs].stop;\n    chr.type = \"nuclear\";\n  } else {\n    chr = chromosome;\n  }\n\n  chr.chrIndex = chrIndex;\n\n  chr.id = \"chr\" + chr.name + \"-\" + taxid;\n\n  if (this.config.fullChromosomeLabels === true) {\n    var orgName = this.organisms[taxid].scientificNameAbbr;\n    chr.name = orgName + \" chr\" + chr.name;\n  }\n\n  chrLength = chr.length;\n\n  pxStop = 0;\n\n  if (hasBands) {\n    for (var i = 0; i < bands.length; i++) {\n      band = bands[i];\n\n      width = chrHeight * chr.length / maxLength[cs] * (band[cs].stop - band[cs].start) / chrLength;\n\n      bands[i].px = {start: pxStop, stop: pxStop + width, width: width};\n\n      pxStop = bands[i].px.stop;\n\n      if (hasBands && band.stain === \"acen\" && band.name[0] === \"p\") {\n        chr.pcenIndex = i;\n      }\n    }\n  } else {\n    pxStop = chrHeight * chr.length / maxLength[cs];\n  }\n\n  chr.width = pxStop;\n\n  chr.scale = {};\n\n  // TODO:\n  //\n  // A chromosome-level scale property is likely\n  // nonsensical for any chromosomes that have cytogenetic band data.\n  // Different bands tend to have ratios between number of base pairs\n  // and physical length.\n  //\n  // However, a chromosome-level scale property is likely\n  // necessary for chromosomes that do not have band data.\n  //\n  // This needs further review.\n  if (this.config.multiorganism === true) {\n    chr.scale.bp = 1;\n    // chr.scale.bp = band.iscn.stop / band.bp.stop;\n    chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n  } else {\n    chr.scale.bp = chrHeight / maxLength.bp;\n    if (hasBands) {\n      chr.scale.iscn = chrHeight / maxLength.iscn;\n    }\n  }\n  chr.bands = bands;\n\n  chr.centromerePosition = \"\";\n  if (hasBands && bands[0].bp.stop - bands[0].bp.start === 1) {\n    // As with mouse\n    chr.centromerePosition = \"telocentric\";\n\n    // Remove placeholder pter band\n    chr.bands = chr.bands.slice(1);\n  }\n\n  return chr;\n};\n\n/**\n* Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n* If ideogram configuration has 'fullChromosomeLabels: True',\n* then labels includes name of taxon, which can help when\n* depicting orthologs.\n*/\nIdeogram.prototype.drawChromosomeLabels = function() {\n  var ideo = this;\n\n    // Append chromosomes set's labels\n  d3.selectAll(\".chromosome-set-container\")\n        .append(\"text\")\n        .data(ideo.chromosomesArray)\n        .attr(\"class\", 'chromosome-set-label ' + ideo._layout.getChromosomeLabelClass())\n        .attr(\"transform\", ideo._layout.getChromosomeSetLabelTranslate())\n        .attr(\"x\", function(d, i) {\n          return ideo._layout.getChromosomeSetLabelXPosition(i);\n        }).attr(\"y\", function(d, i) {\n          return ideo._layout.getChromosomeSetLabelYPosition(i);\n        }).attr(\"text-anchor\", ideo._layout.getChromosomeSetLabelAnchor())\n        .each(function(d, i) {\n            // Get label lines\n          var lines;\n          if (d.name.indexOf(' ') === -1) {\n            lines = [d.name];\n          } else {\n            lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n          }\n\n            // Render label lines\n          d3.select(this).selectAll('tspan')\n                .data(lines)\n                .enter()\n                .append('tspan')\n                .attr('dy', function(d, i) {\n                  return i * -1.2 + 'em';\n                }).attr('x', ideo._layout.getChromosomeSetLabelXPosition(i))\n                .attr('class', function(a, i) {\n                  return i === 1 && ideo.config.fullChromosomeLabels ? 'italic' : null;\n                }).text(String);\n        });\n\n    // Append chromosomes labels\n  d3.selectAll(\".chromosome-set-container\")\n        .each(function(a, chrSetNumber) {\n          d3.select(this).selectAll(\".chromosome\")\n                .append(\"text\")\n                .attr(\"class\", \"chrLabel\")\n                .attr(\"transform\", ideo._layout.getChromosomeSetLabelTranslate())\n                .attr(\"x\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelXPosition(i);\n                }).attr(\"y\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelYPosition(i);\n                }).text(function(d, chrNumber) {\n                  return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n                }).attr(\"text-anchor\", \"middle\");\n        });\n};\n\n/**\n* Draws labels and stalks for cytogenetic bands.\n*\n* Band labels are text like \"p11.11\".\n* Stalks are small lines that visually connect labels to their bands.\n*/\nIdeogram.prototype.drawBandLabels = function(chromosomes) {\n\n  var i, chr, chrs, taxid, ideo, chrModel;\n\n  ideo = this;\n\n  chrs = [];\n\n  for (taxid in chromosomes) {\n    for (chr in chromosomes[taxid]) {\n      chrs.push(chromosomes[taxid][chr]);\n    }\n  }\n\n  var textOffsets = {};\n\n  chrIndex = 0;\n  for (var i = 0; i < chrs.length; i++) {\n    chrIndex += 1;\n\n    chrModel = chrs[i];\n\n    chr = d3.select(\"#\" + chrModel.id);\n\n    var chrMargin = this.config.chrMargin * chrIndex,\n      lineY1, lineY2,\n      ideo = this;\n\n    lineY1 = chrMargin;\n    lineY2 = chrMargin - 8;\n\n    if (\n      chrIndex === 1 &&\n      \"perspective\" in this.config && this.config.perspective === \"comparative\"\n    ) {\n      lineY1 += 18;\n      lineY2 += 18;\n    }\n\n    textOffsets[chrModel.id] = [];\n\n    chr.selectAll(\"text\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n        .attr(\"class\", function(d, i) { return \"bandLabel bsbsl-\" + i; })\n        .attr(\"transform\", function(d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          //var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        })\n        .append(\"text\")\n        .attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i))\n        .text(function(d) { return d.name; });\n\n    //var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n    //var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n    chr.selectAll(\"line.bandLabelStalk\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", function(d, i) { return \"bandLabelStalk bsbsl-\" + i; })\n      .attr(\"transform\", function(d) {\n        var x, y;\n\n        x = ideo.round(d.px.start + d.px.width / 2);\n\n        textOffsets[chrModel.id].push(x + 13);\n        y = -10;\n\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n        .append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", function() {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        }).attr(\"x2\", 0)\n        .attr(\"y2\", function() {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n  }\n\n  for (var i = 0; i < chrs.length; i++) {\n    chrModel = chrs[i];\n\n    var textsLength = textOffsets[chrModel.id].length,\n      overlappingLabelXRight,\n      index,\n      indexesToShow = [],\n      prevHiddenBoxIndex,\n      xLeft,\n      prevLabelXRight,\n      textPadding;\n\n    overlappingLabelXRight = 0;\n\n    textPadding = 5;\n\n    for (index = 0; index < textsLength; index++) {\n      // Ensures band labels don't overlap\n\n      xLeft = textOffsets[chrModel.id][index];\n\n      if (xLeft < overlappingLabelXRight + textPadding === false) {\n        indexesToShow.push(index);\n      } else {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n        continue;\n      }\n\n      if (prevHiddenBoxIndex !== index) {\n        // This getBoundingClientRect() forces Chrome's\n        // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n        // TODO: This forced synchronous layout would be nice to eliminate.\n        // prevTextBox = texts[index].getBoundingClientRect();\n        // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n        // TODO: Account for number of characters in prevTextBoxWidth,\n        // maybe also zoom.\n        prevTextBoxLeft = textOffsets[chrModel.id][index];\n        prevTextBoxWidth = 36;\n\n        prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n      }\n\n      if (\n        xLeft < prevLabelXRight + textPadding\n      ) {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n      } else {\n        indexesToShow.push(index);\n      }\n    }\n\n    var selectorsToShow = [],\n      ithLength = indexesToShow.length,\n      j;\n\n    for (var j = 0; j < ithLength; j++) {\n      index = indexesToShow[j];\n      selectorsToShow.push(\"#\" + chrModel.id + \" .bsbsl-\" + index);\n    }\n\n    this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n  }\n};\n\n// Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\nIdeogram.prototype.rotateChromosomeLabels = function(chr, chrIndex, orientation, scale) {\n  var chrMargin, chrWidth, ideo, x, y,\n    numAnnotTracks, scaleSvg, tracksHeight;\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n  numAnnotTracks = this.config.numAnnotTracks;\n\n  ideo = this;\n\n  if (typeof (scale) !== \"undefined\" && scale.hasOwnProperty(\"x\") && !(scale.x === 1 && scale.y === 1)) {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n    x = -6;\n    y = (scale === \"\" ? -16 : -14);\n  } else {\n    x = -8;\n    y = -16;\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  }\n\n  if (orientation === \"vertical\" || orientation === \"\") {\n\n    var ci = chrIndex - 1;\n\n    if (numAnnotTracks > 1 || orientation === \"\") {\n      ci -= 1;\n    }\n\n    chrMargin2 = -4;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n    }\n\n    var chrMargin = ideo.config.chrMargin * ci;\n\n    if (numAnnotTracks > 1 === false) {\n      chrMargin += 1;\n    }\n\n    y = chrMargin + chrMargin2;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", scaleSvg)\n      .selectAll(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y);\n  } else {\n    chrIndex -= 1;\n\n    chrMargin2 = -chrWidth - 2;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + 8;\n    }\n\n    tracksHeight = ideo.config.annotTracksHeight;\n    if (ideo.config.annotationsLayout !== \"overlay\") {\n      tracksHeight = tracksHeight * 2;\n    }\n\n    chrMargin = ideo.config.chrMargin * chrIndex;\n    x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n    x = x / scale.x;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", \"rotate(-90)\" + scaleSvg)\n      .selectAll(\"tspan\")\n      .attr(\"x\", x)\n      .attr(\"y\", y);\n  }\n};\n\n/**\n* Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n*\n* This method includes proportional scaling, which ensures that\n* while the parent chromosome group is scaled strongly in one dimension to fill\n* available space, the text in the chromosome's band labels is\n* not similarly distorted, and remains readable.\n*/\nIdeogram.prototype.rotateBandLabels = function(chr, chrIndex, scale) {\n  var chrMargin, scaleSvg,\n    orientation, bandLabels,\n    ideo = this;\n\n  bandLabels = chr.selectAll(\".bandLabel\");\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n\n  orientation = chr.attr(\"data-orientation\");\n\n  if (typeof (scale) === \"undefined\") {\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  } else {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n  }\n\n  if (\n    chrIndex === 1 &&\n    \"perspective\" in this.config && this.config.perspective === \"comparative\"\n  ) {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = (8 - chrMargin) - 26;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"text-anchor\", \"end\");\n  } else if (orientation === \"vertical\") {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = 8 - chrMargin;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n  } else {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n        y = chrMargin - 10;\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n\n    chr.selectAll(\".bandLabelStalk line\")\n      .attr(\"transform\", scaleSvg);\n  }\n};\n\nIdeogram.prototype.round = function(coord) {\n  // Rounds an SVG coordinates to two decimal places\n  // e.g. 42.1234567890 -> 42.12\n  // Per http://stackoverflow.com/a/9453447, below method is fastest\n  return Math.round(coord * 100) / 100;\n};\n\n/**\n* Renders all the bands and outlining boundaries of a chromosome.\n*/\nIdeogram.prototype.drawChromosome = function(chrModel, chrIndex, container, k) {\n    // Get chromosome model adapter class\n  var adapter = ModelAdapter.getInstance(chrModel);\n\n    // Append chromosome's container\n  var chromosome = container\n        .append(\"g\")\n        .attr(\"id\", chrModel.id)\n        .attr(\"class\", \"chromosome \" + adapter.getCssClass())\n        .attr(\"transform\", \"translate(0, \" + k * 20 + \")\");\n\n    // Render chromosome\n  return Chromosome.getInstance(adapter, this.config, this)\n        .render(chromosome, chrIndex, k);\n};\n\n/**\n* Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n* Useful for focusing or defocusing a particular chromosome\n*/\nIdeogram.prototype.rotateAndToggleDisplay = function(chromosome) {\n  /*\n   * Do nothing if taxId not defined. But it should be defined.\n   * To fix that bug we should have a way to find chromosome set number.\n   */\n  if (!this.config.taxid) {\n    return;\n  }\n\n  var chrSetNumber = Number(d3.select(chromosome.parentNode).attr('data-set-number'));\n\n  var chrNumber = Array.prototype.slice.call(\n          d3.select(chromosome.parentNode).selectAll(\"g.chromosome\")._groups[0]\n      ).indexOf(chromosome);\n\n  return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertBpToPx = function(chr, bp) {\n  var i, band, bpToIscnScale, iscn, px;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n    if (bp >= band.bp.start && bp <= band.bp.stop) {\n      bpToIscnScale = (band.iscn.stop - band.iscn.start) / (band.bp.stop - band.bp.start);\n      iscn = band.iscn.start + (bp - band.bp.start) * bpToIscnScale;\n\n      px = this._bandsXOffset + band.px.start + (band.px.width * (iscn - band.iscn.start) / (band.iscn.stop - band.iscn.start));\n\n      return px;\n    }\n  }\n\n  throw new Error(\n    \"Base pair out of range.  \" +\n    \"bp: \" + bp + \"; length of chr\" + chr.name + \": \" + band.bp.stop\n  );\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertPxToBp = function(chr, px) {\n  var i, band, pxToIscnScale, iscn;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n    if (px >= band.px.start && px <= band.px.stop) {\n      pxToIscnScale = (band.iscn.stop - band.iscn.start) / (band.px.stop - band.px.start);\n      iscn = band.iscn.start + (px - band.px.start) * pxToIscnScale;\n\n      bp = band.bp.start + ((band.bp.stop - band.bp.start) * (iscn - band.iscn.start) / (band.iscn.stop - band.iscn.start));\n\n      return Math.round(bp);\n    }\n  }\n\n  throw new Error(\n    \"Pixel out of range.  \" +\n    \"px: \" + bp + \"; length of chr\" + chr.name + \": \" + band.px.stop\n  );\n};\n\n/**\n* Draws a trapezoid connecting a genomic range on\n* one chromosome to a genomic range on another chromosome;\n* a syntenic region.\n*/\nIdeogram.prototype.drawSynteny = function(syntenicRegions) {\n  var t0 = new Date().getTime();\n\n  var r1, r2,\n    syntenies,\n    i, color, opacity,\n    regionID,\n    ideo = this;\n\n  syntenies = d3.select(\"svg\")\n    .insert(\"g\", \":first-child\")\n    .attr(\"class\", \"synteny\");\n\n  for (i = 0; i < syntenicRegions.length; i++) {\n    regions = syntenicRegions[i];\n\n    r1 = regions.r1;\n    r2 = regions.r2;\n\n    color = \"#CFC\";\n    if (\"color\" in regions) {\n      color = regions.color;\n    }\n\n    opacity = 1;\n    if (\"opacity\" in regions) {\n      opacity = regions.opacity;\n    }\n\n    r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n    r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n    r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n    r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n    regionID = (\n      r1.chr.id + \"_\" + r1.start + \"_\" + r1.stop + \"_\" +\n      \"__\" +\n      r2.chr.id + \"_\" + r2.start + \"_\" + r2.stop\n    );\n\n    syntenicRegion = syntenies.append(\"g\")\n      .attr(\"class\", \"syntenicRegion\")\n      .attr(\"id\", regionID)\n      .on(\"click\", function() {\n        var activeRegion = this;\n        var others = d3.selectAll(\".syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          });\n\n        others.classed(\"hidden\", !others.classed(\"hidden\"));\n      })\n      .on(\"mouseover\", function() {\n        var activeRegion = this;\n        d3.selectAll(\".syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          })\n          .classed(\"ghost\", true);\n      })\n      .on(\"mouseout\", function() {\n        d3.selectAll(\".syntenicRegion\").classed(\"ghost\", false);\n      });\n\n    var x1 = this._layout.getChromosomeSetYTranslate(0);\n    var x2 = this._layout.getChromosomeSetYTranslate(1) - ideo.config.chrWidth;\n\n    syntenicRegion.append(\"polygon\")\n      .attr(\"points\",\n        x1 + ', ' + r1.startPx + ' ' +\n        x1 + ', ' + r1.stopPx + ' ' +\n        x2 + ', ' + r2.stopPx + ' ' +\n        x2 + ', ' + r2.startPx\n      )\n      .attr('style', \"fill: \" + color + \"; fill-opacity: \" + opacity);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.startPx)\n      .attr(\"y2\", r2.startPx);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.stopPx)\n      .attr(\"y2\", r2.stopPx);\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in drawSyntenicRegions: \" + (t1 - t0) + \" ms\");\n  }\n};\n\n/**\n* Initializes various annotation settings.  Constructor help function.\n*/\nIdeogram.prototype.initAnnotSettings = function() {\n  if (this.config.annotationsPath || this.config.localAnnotationsPath\n    || this.annots || this.config.annotations) {\n    if (!this.config.annotationHeight) {\n      var annotHeight = Math.round(this.config.chrHeight / 100);\n      this.config.annotationHeight = annotHeight;\n    }\n\n    if (this.config.annotationTracks) {\n      this.config.numAnnotTracks = this.config.annotationTracks.length;\n    } else {\n      this.config.numAnnotTracks = 1;\n    }\n    this.config.annotTracksHeight = this.config.annotationHeight * this.config.numAnnotTracks;\n\n    if (typeof this.config.barWidth === \"undefined\") {\n      this.config.barWidth = 3;\n    }\n  } else {\n    this.config.annotTracksHeight = 0;\n  }\n\n  if (typeof this.config.annotationsColor === \"undefined\") {\n    this.config.annotationsColor = \"#F00\";\n  }\n};\n\n/**\n* Draws annotations defined by user\n*/\nIdeogram.prototype.drawAnnots = function(friendlyAnnots) {\n  var ideo = this,\n    i, j, annot,\n    rawAnnots = [],\n    rawAnnot, keys,\n    chr,\n    chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n  // Occurs when filtering\n  if (\"annots\" in friendlyAnnots[0]) {\n    return ideo.drawProcessedAnnots(friendlyAnnots);\n  }\n\n  for (chr in chrs) {\n    rawAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < friendlyAnnots.length; i++) {\n    annot = friendlyAnnots[i];\n\n    for (j = 0; j < rawAnnots.length; j++) {\n      if (annot.chr === rawAnnots[j].chr) {\n        rawAnnot = [\n          annot.name,\n          annot.start,\n          annot.stop - annot.start\n        ];\n        if (\"color\" in annot) {\n          rawAnnot.push(annot.color);\n        }\n        if (\"shape\" in annot) {\n          rawAnnot.push(annot.shape);\n        }\n        rawAnnots[j].annots.push(rawAnnot);\n        break;\n      }\n    }\n  }\n\n  keys = [\"name\", \"start\", \"length\"];\n  if (\"color\" in friendlyAnnots[0]) {\n    keys.push(\"color\");\n  }\n  if (\"shape\" in friendlyAnnots[0]) {\n    keys.push(\"shape\");\n  }\n  ideo.rawAnnots = {keys: keys, annots: rawAnnots};\n\n  ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n  ideo.drawProcessedAnnots(ideo.annots);\n};\n\n/**\n* Proccesses genome annotation data.\n* Genome annotations represent features like a gene, SNP, etc. as\n* a small graphical object on or beside a chromosome.\n* Converts raw annotation data from server, which is structured as\n* an array of arrays, into a more verbose data structure consisting\n* of an array of objects.\n* Also adds pixel offset information.\n*/\nIdeogram.prototype.processAnnotData = function(rawAnnots) {\n  var keys = rawAnnots.keys,\n    rawAnnots = rawAnnots.annots,\n    i, j, annot, annots, annotsByChr,\n    chr,\n    chrModel, ra,\n    startPx, stopPx, px,\n    color,\n    ideo = this;\n\n  annots = [];\n\n  for (i = 0; i < rawAnnots.length; i++) {\n    annotsByChr = rawAnnots[i];\n\n    annots.push({chr: annotsByChr.chr, annots: []});\n\n    for (j = 0; j < annotsByChr.annots.length; j++) {\n      chr = annotsByChr.chr;\n      ra = annotsByChr.annots[j];\n      annot = {};\n\n      for (var k = 0; k < keys.length; k++) {\n        annot[keys[k]] = ra[k];\n      }\n\n      annot.stop = annot.start + annot.length;\n\n      chrModel = ideo.chromosomes[\"9606\"][chr];\n\n      startPx = ideo.convertBpToPx(chrModel, annot.start);\n      stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n      px = Math.round((startPx + stopPx) / 2) - 28;\n\n      color = ideo.config.annotationsColor;\n      if (ideo.config.annotationTracks) {\n        annot.trackIndex = ra[3];\n        color = ideo.config.annotationTracks[annot.trackIndex].color;\n      } else {\n        annot.trackIndex = 0;\n      }\n\n      if ('color' in annot) {\n        color = annot.color;\n      }\n\n      annot.chr = chr;\n      annot.chrIndex = i;\n      annot.px = px;\n      annot.color = color;\n\n      annots[i].annots.push(annot);\n    }\n  }\n\n  return annots;\n};\n\n/*\n* Can be used for bar chart or sparkline\n*/\nIdeogram.prototype.getHistogramBars = function(annots) {\n  var t0 = new Date().getTime();\n\n  var i, j, chr,\n    chrModels, chrPxStop, px,\n    chrAnnots, chrName, chrIndex, annot,\n    bars, bar, barPx, nextBarPx, barWidth,\n    maxAnnotsPerBar, color,\n    firstGet = false,\n    histogramScaling,\n    ideo = this;\n\n  bars = [];\n\n  barWidth = ideo.config.barWidth;\n  chrModels = ideo.chromosomes[ideo.config.taxid];\n  color = ideo.config.annotationsColor;\n\n  if (\"histogramScaling\" in ideo.config) {\n    histogramScaling = ideo.config.histogramScaling;\n  } else {\n    histogramScaling = \"relative\";\n  }\n\n  if (typeof ideo.maxAnnotsPerBar === \"undefined\") {\n    ideo.maxAnnotsPerBar = {};\n    firstGet = true;\n  }\n\n  for (chr in chrModels) {\n    chrModel = chrModels[chr];\n    chrIndex = chrModel.chrIndex;\n    lastBand = chrModel.bands[chrModel.bands.length - 1];\n    chrPxStop = lastBand.px.stop;\n    numBins = Math.round(chrPxStop / barWidth);\n    bar = {chr: chr, annots: []};\n    for (i = 0; i < numBins; i++) {\n      px = i * barWidth - ideo.bump;\n      bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n      bar.annots.push({\n        bp: bp,\n        px: px - ideo.bump,\n        count: 0,\n        chrIndex: chrIndex,\n        chrName: chr,\n        color: color,\n        annots: []\n      });\n    }\n    bars.push(bar);\n  }\n\n  for (chr in annots) {\n    chrAnnots = annots[chr].annots;\n    chrName = annots[chr].chr;\n    chrModel = chrModels[chrName];\n    chrIndex = chrModel.chrIndex - 1;\n    barAnnots = bars[chrIndex].annots;\n    for (i = 0; i < chrAnnots.length; i++) {\n      annot = chrAnnots[i];\n      px = annot.px - ideo.bump;\n      for (j = 0; j < barAnnots.length; j++) {\n        barPx = barAnnots[j].px;\n        nextBarPx = barPx + barWidth;\n        if (j === barAnnots.length - 1) {\n          nextBarPx += barWidth;\n        }\n        if (px >= barPx && px < nextBarPx) {\n          bars[chrIndex].annots[j].count += 1;\n          bars[chrIndex].annots[j].annots.push(annot);\n          break;\n        }\n      }\n    }\n  }\n\n  if (firstGet === true || histogramScaling === \"relative\") {\n    maxAnnotsPerBar = 0;\n    for (i = 0; i < bars.length; i++) {\n      annots = bars[i].annots;\n      for (j = 0; j < annots.length; j++) {\n        barCount = annots[j].count;\n        if (barCount > maxAnnotsPerBar) {\n          maxAnnotsPerBar = barCount;\n        }\n      }\n    }\n    ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n  }\n\n  // Set each bar's height to be proportional to\n  // the height of the bar with the most annotations\n  for (i = 0; i < bars.length; i++) {\n    annots = bars[i].annots;\n    for (j = 0; j < annots.length; j++) {\n      barCount = annots[j].count;\n      height = (barCount / ideo.maxAnnotsPerBar[chr]) * ideo.config.chrMargin;\n      // console.log(height)\n      bars[i].annots[j].height = height;\n    }\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time spent in getHistogramBars: \" + (t1 - t0) + \" ms\");\n  }\n\n  ideo.bars = bars;\n\n  return bars;\n};\n\n/**\n* Draws genome annotations on chromosomes.\n* Annotations can be rendered as either overlaid directly\n* on a chromosome, or along one or more \"tracks\"\n* running parallel to each chromosome.\n*/\nIdeogram.prototype.drawProcessedAnnots = function(annots) {\n  var chrWidth, layout,\n    annotHeight, triangle, circle, r, chrAnnot,\n    x1, x2, y1, y2,\n    ideo = this;\n\n  chrMargin = this.config.chrMargin;\n  chrWidth = this.config.chrWidth;\n\n  layout = \"tracks\";\n  if (this.config.annotationsLayout) {\n    layout = this.config.annotationsLayout;\n  }\n\n  if (layout === \"histogram\") {\n    annots = ideo.getHistogramBars(annots);\n  }\n\n  annotHeight = ideo.config.annotationHeight;\n\n  triangle = 'l -' + annotHeight + ' ' + (2 * annotHeight) + ' l ' + (2 * annotHeight) + ' 0 z';\n\n  // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n  // Circles are supported natively via <circle>, but having it as a path\n  // simplifies handling triangles, circles and other shapes in the same\n  // D3 call\n  r = annotHeight;\n  circle =\n    'm -' + r + ', ' + r +\n    'a ' + r + ',' + r + ' 0 1,0 ' + (r * 2) + ',0' +\n    'a ' + r + ',' + r + ' 0 1,0 -' + (r * 2) + ',0';\n\n  chrAnnot = d3.selectAll(\".chromosome\")\n    .data(annots)\n      .selectAll(\"path.annot\")\n      .data(function(d) {\n        return d.annots;\n      })\n      .enter();\n\n  if (layout === \"tracks\") {\n    chrAnnot\n      .append(\"g\")\n      .attr(\"id\", function(d) { return d.id; })\n      .attr(\"class\", \"annot\")\n      .attr(\"transform\", function(d) {\n        var y = ideo.config.chrWidth + (d.trackIndex * annotHeight * 2);\n        return \"translate(\" + d.px + \",\" + y + \")\";\n      })\n      .append(\"path\")\n      .attr(\"d\", function(d) {\n        if (!d.shape || d.shape === \"triangle\") {\n          return \"m0,0\" + triangle;\n        } else if (d.shape === \"circle\") {\n          return circle;\n        }\n      })\n      .attr(\"fill\", function(d) { return d.color; });\n  } else if (layout === \"overlay\") {\n      // Overlaid annotations appear directly on chromosomes\n\n    chrAnnot.append(\"polygon\")\n        .attr(\"id\", function(d) { return d.id; })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px - 0.5;\n          x2 = d.px + 0.5;\n          y1 = chrWidth;\n          y2 = 0;\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) { return d.color; });\n  } else if (layout === \"histogram\") {\n    chrAnnot.append(\"polygon\")\n        // .attr(\"id\", function(d, i) { return d.id; })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) { return d.color; });\n  }\n\n  if (ideo.onDrawAnnotsCallback) {\n    ideo.onDrawAnnotsCallback();\n  }\n};\n\nIdeogram.prototype.onBrushMove = function() {\n  call(this.onBrushMoveCallback);\n};\n\nIdeogram.prototype.createBrush = function(from, to) {\n  var ideo = this,\n    width = ideo.config.chrWidth + 6.5,\n    length = ideo.config.chrHeight,\n    chr = ideo.chromosomesArray[0],\n    chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n    x0, x1,\n    xOffset = this._layout.getMargin().left,\n    xScale = d3.scaleLinear()\n          .domain([0, d3.max(chr.bands, function(band) {\n            return band.bp.stop;\n          })]).range([xOffset, d3.max(chr.bands, function(band) {\n            return band.px.stop;\n          }) + xOffset]);\n\n  if (typeof from === \"undefined\") {\n    from = Math.floor(chrLengthBp / 10);\n  }\n\n  if (typeof right === \"undefined\") {\n    to = Math.ceil(from * 2);\n  }\n\n  x0 = ideo.convertBpToPx(chr, from);\n  x1 = ideo.convertBpToPx(chr, to);\n\n  ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n  ideo.brush = d3.brushX()\n    .extent([[xOffset, 0], [length + xOffset, width]])\n    .on(\"brush\", onBrushMove);\n\n  var yOffset = this._layout.getChromosomeSetYTranslate(0) + (ideo.config.chrWidth - width) / 2;\n  d3.select(\"#_ideogram\").append(\"g\")\n    .attr(\"class\", \"brush\")\n    .attr(\"transform\", \"translate(0, \" + yOffset + \")\")\n    .call(ideo.brush)\n    .call(ideo.brush.move, [x0, x1]);\n\n  function onBrushMove() {\n    var extent = d3.event.selection.map(xScale.invert),\n      from = Math.floor(extent[0]),\n      to = Math.ceil(extent[1]);\n\n    ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n    if (ideo.onBrushMove) {\n      ideo.onBrushMoveCallback();\n    }\n  }\n};\n\n/**\n* Called when Ideogram has finished initializing.\n* Accounts for certain ideogram properties not being set until\n* asynchronous requests succeed, etc.\n*/\nIdeogram.prototype.onLoad = function() {\n  call(this.onLoadCallback);\n};\n\nIdeogram.prototype.onDrawAnnots = function() {\n  call(this.onDrawAnnotsCallback);\n};\n\nIdeogram.prototype.getBandColorGradients = function() {\n  var colors,\n    stain, color1, color2, color3,\n    css,\n    gradients = \"\";\n\n  colors = [\n    [\"gneg\", \"#FFF\", \"#FFF\", \"#DDD\"],\n    [\"gpos25\", \"#C8C8C8\", \"#DDD\", \"#BBB\"],\n    [\"gpos33\", \"#BBB\", \"#BBB\", \"#AAA\"],\n    [\"gpos50\", \"#999\", \"#AAA\", \"#888\"],\n    [\"gpos66\", \"#888\", \"#888\", \"#666\"],\n    [\"gpos75\", \"#777\", \"#777\", \"#444\"],\n    [\"gpos100\", \"#444\", \"#666\", \"#000\"],\n    [\"acen\", \"#FEE\", \"#FEE\", \"#FDD\"],\n    [\"noBands\", \"#BBB\", \"#BBB\", \"#AAA\"]\n  ];\n\n  for (var i = 0; i < colors.length; i++) {\n    stain = colors[i][0];\n    color1 = colors[i][1];\n    color2 = colors[i][2];\n    color3 = colors[i][3];\n    gradients +=\n      '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n    if (stain === \"gneg\") {\n      gradients +=\n        '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' +\n        '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n    } else {\n      gradients +=\n        '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' +\n        '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n    }\n    gradients +=\n      '</linearGradient>';\n  }\n\n  gradients +=\n    '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; stroke-width:0.7;\" />' +\n    '</pattern>' +\n    '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(-30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; stroke-width:0.7;\" />' +\n    '</pattern>';\n\n  gradients = \"<defs>\" + gradients + \"</defs>\";\n  css = \"<style>\" +\n    '.gneg {fill: url(\"#gneg\")} ' +\n    '.gpos25 {fill: url(\"#gpos25\")} ' +\n    '.gpos33 {fill: url(\"#gpos33\")} ' +\n    '.gpos50 {fill: url(\"#gpos50\")} ' +\n    '.gpos66 {fill: url(\"#gpos66\")} ' +\n    '.gpos75 {fill: url(\"#gpos75\")} ' +\n    '.gpos100 {fill: url(\"#gpos100\")} ' +\n    '.acen {fill: url(\"#acen\")} ' +\n    '.stalk {fill: url(\"#stalk\")} ' +\n    '.gvar {fill: url(\"#gvar\")} ' +\n    '.noBands {fill: url(\"#noBands\")} ' +\n  '</style>';\n  gradients = css + gradients;\n\n  // alert(gradients)\n\n  return gradients;\n};\n\n/*\n  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n*/\nIdeogram.prototype.getTaxidFromEutils = function(callback) {\n  var organism, taxonomySearch, taxid,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  taxonomySearch = ideo.esearch + \"&db=taxonomy&term=\" + organism;\n\n  d3.json(taxonomySearch, function(data) {\n    taxid = data.esearchresult.idlist[0];\n    return callback(taxid);\n  });\n};\n\n/**\n* Returns an array of taxids for the current ideogram\n* Also sets configuration parameters related to taxid(s), whether ideogram is\n* multiorganism, and adjusts chromosomes parameters as needed\n**/\nIdeogram.prototype.getTaxids = function(callback) {\n  var ideo = this,\n    taxid, taxids,\n    org, orgs, i,\n    taxidInit, tmpChrs,\n    assembly, chromosomes,\n    multiorganism;\n\n  taxidInit = \"taxid\" in ideo.config;\n\n  ideo.config.multiorganism = (\n    (\"organism\" in ideo.config && ideo.config.organism instanceof Array) ||\n    (taxidInit && ideo.config.taxid instanceof Array)\n  );\n\n  multiorganism = ideo.config.multiorganism;\n\n  if (\"organism\" in ideo.config) {\n    // Ideogram instance was constructed using common organism name(s)\n    if (multiorganism) {\n      orgs = ideo.config.organism;\n    } else {\n      orgs = [ideo.config.organism];\n    }\n\n    taxids = [];\n    tmpChrs = {};\n    for (i = 0; i < orgs.length; i++) {\n      // Gets a list of taxids from common organism names\n      org = orgs[i];\n      for (taxid in ideo.organisms) {\n        if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n          taxids.push(taxid);\n          if (multiorganism) {\n            // Adjusts 'chromosomes' configuration parameter to make object\n            // keys use taxid instead of common organism name\n            tmpChrs[taxid] = ideo.config.chromosomes[org];\n          }\n        }\n      }\n    }\n\n    if (taxids.length === 0) {\n      promise = new Promise(function(resolve) {\n        ideo.getTaxidFromEutils(resolve);\n      });\n      promise.then(function(data) {\n        taxid = data;\n        taxids.push(taxid);\n\n        ideo.config.taxids = taxids;\n        ideo.organisms[taxid] = {\n          commonName: \"\",\n          scientificName: ideo.config.organism,\n          scientificNameAbbr: \"\"\n        };\n        return new Promise(function(resolve) {\n          ideo.getAssemblyAndChromosomesFromEutils(resolve);\n        });\n      })\n      .then(function(asmChrArray) {\n        assembly = asmChrArray[0];\n        chromosomes = asmChrArray[1];\n\n        ideo.config.chromosomes = chromosomes;\n        ideo.organisms[taxid].assemblies = {\n          default: assembly\n        };\n\n        callback(taxids);\n      });\n    } else {\n      ideo.config.taxids = taxids;\n      if (multiorganism) {\n        ideo.config.chromosomes = tmpChrs;\n      }\n\n      callback(taxids);\n    }\n  } else {\n    if (multiorganism) {\n      ideo.coordinateSystem = \"bp\";\n      if (taxidInit) {\n        taxids = ideo.config.taxid;\n      }\n    } else {\n      if (taxidInit) {\n        taxids = [ideo.config.taxid];\n      }\n      ideo.config.taxids = taxids;\n    }\n\n    callback(taxids);\n  }\n};\n\nIdeogram.prototype.sortChromosomes = function(a, b) {\n  var aIsNuclear = a.type === \"nuclear\",\n    bIsNuclear = b.type === \"nuclear\",\n    aIsCP = a.type === \"chloroplast\",\n    bIsCP = b.type === \"chloroplast\",\n    aIsMT = a.type === \"mitochondrion\",\n    bIsMT = b.type === \"mitochondrion\";\n    //aIsPlastid = aIsMT && a.name !== \"MT\", // e.g. B1 in rice genome GCF_001433935.1\n    //bIsPlastid = bIsMT && b.name !== \"MT\";\n\n  if (aIsNuclear && bIsNuclear) {\n    return naturalSort(a.name, b.name);\n  } else if (!aIsNuclear && bIsNuclear) {\n    return 1;\n  } else if (aIsMT && bIsCP) {\n    return 1;\n  } else if (aIsCP && bIsMT) {\n    return -1;\n  } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n    return -1;\n  }\n};\n\n/**\n  Returns names and lengths of chromosomes for an organism's best-known\n  genome assembly.  Gets data from NCBI EUtils web API.\n*/\nIdeogram.prototype.getAssemblyAndChromosomesFromEutils = function(callback) {\n  var asmAndChrArray, // [assembly_accession, chromosome_objects_array]\n    assemblyAccession, chromosomes, asmSearch,\n    asmUid, asmSummary,\n    rsUid, nuccoreLink,\n    links, ntSummary,\n    results, result, cnIndex, chrName, chrLength, chromosome, type,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  asmAndChrArray = [];\n  chromosomes = [];\n\n  asmSearch =\n      ideo.esearch +\n      \"&db=assembly\" +\n      \"&term=%22\" + organism + \"%22[organism]\" +\n      \"AND%20(%22latest%20refseq%22[filter])%20AND%20%22chromosome%20level%22[filter]\";\n\n  var promise = d3.promise.json(asmSearch);\n\n  promise\n      .then(function(data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + \"&db=assembly&id=\" + asmUid;\n\n        return d3.promise.json(asmSummary);\n      })\n      .then(function(data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        nuccoreLink = ideo.elink + \"&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=\" + rsUid;\n\n        return d3.promise.json(nuccoreLink);\n      })\n      .then(function(data) {\n        links = data.linksets[0].linksetdbs[0].links.join(\",\");\n        ntSummary = ideo.esummary + \"&db=nucleotide&id=\" + links;\n\n        return d3.promise.json(ntSummary);\n      })\n      .then(function(data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === \"uids\") {\n            continue;\n          }\n\n          if (result.genome === \"mitochondrion\") {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split(\"|\").indexOf(\"plasmid\");\n              if (cnIndex === -1) {\n                chrName = \"MT\";\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                  // genome: \"mitochondrion\",\n                  // subtype: \"cell_line|plasmid\",\n                  // subname: \"A-58 CMS|B1\",\n                chrName = result.subname.split(\"|\")[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (result.genome === \"chloroplast\" || result.genome === \"plastid\") {\n            type = \"chloroplast\";\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = \"CP\";\n            } else {\n              continue;\n            }\n          } else {\n            type = \"nuclear\";\n            cnIndex = result.subtype.split(\"|\").indexOf(\"chromosome\");\n\n            chrName = result.subname.split(\"|\")[cnIndex];\n            if (typeof chrName !== \"undefined\" && chrName.substr(0, 3) === \"chr\") {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = \"bp\";\n\n        return callback(asmAndChrArray);\n      });\n};\n\nIdeogram.prototype.initDrawChromosomes = function(bandsArray) {\n  var ideo = this,\n    taxids = ideo.config.taxids,\n    taxid,\n    chrIndex = 0,\n    chrSetNumber = 0,\n    i, j, chrs, chromosome, chromosomeModel;\n\n  var defs = d3.select(\"defs\");\n\n  for (i = 0; i < taxids.length; i++) {\n    taxid = taxids[i];\n    chrs = ideo.config.chromosomes[taxid];\n\n    ideo.chromosomes[taxid] = {};\n\n    for (j = 0; j < chrs.length; j++) {\n      chromosome = chrs[j];\n      bands = bandsArray[chrIndex];\n      chrIndex += 1;\n\n      chromosomeModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n      ideo.chromosomes[taxid][chromosome] = chromosomeModel;\n      ideo.chromosomesArray.push(chromosomeModel);\n\n      // Append chromosome set container\n      var container = d3.select(\"svg\")\n        .append(\"g\")\n        .attr(\"class\", \"chromosome-set-container\")\n        .attr(\"data-set-number\", j)\n        .attr(\"transform\", ideo._layout.getChromosomeSetTranslate(chrSetNumber++))\n        .attr(\"id\", chromosomeModel.id + \"-chromosome-set\");\n\n      var shape;\n      for (var k = 0; k < this._ploidy.getChromosomesNumber(j); k++) {\n        shape = ideo.drawChromosome(chromosomeModel, chrIndex - 1, container, k);\n      }\n\n      defs.append(\"clipPath\")\n        .attr(\"id\", chromosomeModel.id + \"-chromosome-set-clippath\")\n        .selectAll('path')\n        .data(shape)\n        .enter()\n        .append('path')\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n    }\n\n    if (ideo.config.showBandLabels === true) {\n      ideo.drawBandLabels(ideo.chromosomes);\n    }\n  }\n};\n\n// Get ideogram SVG container\nIdeogram.prototype.getSvg = function() {\n  return d3.select('#_ideogram').node();\n};\n\n/**\n* Initializes an ideogram.\n* Sets some high-level properties based on instance configuration,\n* fetches band and annotation data if needed, and\n* writes an SVG element to the document to contain the ideogram\n*\n*/\nIdeogram.prototype.init = function() {\n  var bandDataFileNames,\n    taxid, i, svgClass;\n\n  var ideo = this;\n\n  var t0 = new Date().getTime();\n\n  var bandsArray = [],\n    numBandDataResponses = 0,\n    resolution = this.config.resolution,\n    accession;\n\n  var promise = new Promise(function(resolve) {\n    ideo.getTaxids(resolve);\n  });\n\n  promise.then(function(taxids) {\n    taxid = taxids[0];\n    ideo.config.taxid = taxid;\n    ideo.config.taxids = taxids;\n\n    for (i = 0; i < taxids.length; i++) {\n      taxid = taxids[i];\n\n      if (!ideo.config.assembly) {\n        ideo.config.assembly = \"default\";\n      }\n      accession = ideo.organisms[taxid].assemblies[ideo.config.assembly];\n\n      bandDataFileNames = {\n      // Homo sapiens (human)\n        9606: \"native/ideogram_9606_\" + accession + \"_\" + resolution + \"_V1.js\",\n      // 9606: \"ncbi/ideogram_9606_\" + accession + \"_\" + resolution + \"_V1.tsv\",\n\n      // Mus musculus (mouse)\n        10090: \"native/ideogram_10090_\" + accession + \"_NA_V2.js\"\n\n      // Drosophila melanogaster (fly)\n      // 7227: \"ucsc/drosophila_melanogaster_dm6.tsv\"\n      };\n\n      if (typeof chrBands === \"undefined\" && taxid in bandDataFileNames) {\n        d3.request(ideo.config.bandDir + bandDataFileNames[taxid])\n        .on(\"beforesend\", function(data) {\n          // Ensures correct taxid is processed in response callback; using\n          // simply 'taxid' variable gives the last *requested* taxid, which\n          // fails when dealing with multiple taxa.\n          data.taxid = taxid;\n        })\n        .get(function(error, data) {\n          ideo.bandData[data.taxid] = data.response;\n          numBandDataResponses += 1;\n\n          if (numBandDataResponses === taxids.length) {\n            processBandData();\n            writeContainer();\n          }\n        });\n      } else {\n        if (typeof chrBands !== \"undefined\") {\n        // If bands already available,\n        // e.g. via <script> tag in initial page load\n          ideo.bandData[taxid] = chrBands;\n        }\n        processBandData();\n        writeContainer();\n      }\n    }\n  });\n\n  function writeContainer() {\n    if (ideo.config.annotationsPath) {\n      d3.json(\n        ideo.config.annotationsPath, // URL\n        function(data) { // Callback\n          ideo.rawAnnots = data;\n        }\n      );\n    }\n\n    svgClass = \"\";\n    if (ideo.config.showChromosomeLabels) {\n      if (ideo.config.orientation === \"horizontal\") {\n        svgClass += \"labeledLeft \";\n      } else {\n        svgClass += \"labeled \";\n      }\n    }\n\n    if (\n      ideo.config.annotationsLayout &&\n      ideo.config.annotationsLayout === \"overlay\"\n    ) {\n      svgClass += \"faint\";\n    }\n\n    var gradients = ideo.getBandColorGradients();\n    var svgHeight = ideo._layout.getHeight(taxid);\n\n    d3.select(ideo.config.container)\n      .append(\"svg\")\n        .attr(\"id\", \"_ideogram\")\n        .attr(\"class\", svgClass)\n        .attr(\"width\", \"97%\")\n        .attr(\"height\", svgHeight)\n        .html(gradients);\n\n    finishInit();\n  }\n\n  /*\n  * Completes default ideogram initialization\n  * by calling downstream functions to\n  * process raw band data into full JSON objects,\n  * render chromosome and cytoband figures and labels,\n  * apply initial graphical transformations,\n  * hide overlapping band labels, and\n  * execute callbacks defined by client code\n  */\n  function processBandData() {\n    var j, k, chromosome, bands,\n      chrLength, chr,\n      bandData, bands, bandsByChr,\n      taxid, taxids, chrs, chrsByTaxid;\n\n    bandsArray = [];\n    maxLength = 0;\n\n    if (ideo.config.multiorganism === true) {\n      ideo.coordinateSystem = \"bp\";\n      taxids = ideo.config.taxids;\n      for (i = 0; i < taxids.length; i++) {\n        taxid = taxids[i];\n      }\n    } else {\n      if (typeof ideo.config.taxid === \"undefined\") {\n        ideo.config.taxid = ideo.config.taxids[0];\n      }\n      taxid = ideo.config.taxid;\n      taxids = [taxid];\n      ideo.config.taxids = taxids;\n    }\n\n    if (\"chromosomes\" in ideo.config) {\n      chrs = ideo.config.chromosomes;\n    }\n    if (ideo.config.multiorganism) {\n      chrsByTaxid = chrs;\n    }\n\n    ideo.config.chromosomes = {};\n\n    var t0_b = new Date().getTime();\n\n    for (j = 0; j < taxids.length; j++) {\n      taxid = taxids[j];\n\n      if (ideo.config.multiorganism) {\n        chrs = chrsByTaxid[taxid];\n      }\n\n      if (ideo.coordinateSystem === \"iscn\" || ideo.config.multiorganism) {\n        bandData = ideo.bandData[taxid];\n\n        bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n        chrs = Object.keys(bandsByChr);\n\n        ideo.config.chromosomes[taxid] = chrs.slice();\n        ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n        for (k = 0; k < chrs.length; k++) {\n          chromosome = chrs[k];\n          bands = bandsByChr[chromosome];\n          bandsArray.push(bands);\n\n          chrLength = {\n            iscn: bands[bands.length - 1].iscn.stop,\n            bp: bands[bands.length - 1].bp.stop\n          };\n\n          if (chrLength.iscn > ideo.maxLength.iscn) {\n            ideo.maxLength.iscn = chrLength.iscn;\n          }\n\n          if (chrLength.bp > ideo.maxLength.bp) {\n            ideo.maxLength.bp = chrLength.bp;\n          }\n        }\n      } else if (ideo.coordinateSystem === \"bp\") {\n        // If lacking band-level data\n\n        ideo.config.chromosomes[taxid] = chrs.slice();\n        ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n        for (k = 0; k < chrs.length; k++) {\n          chr = chrs[k];\n          if (chr.length > ideo.maxLength.bp) {\n            ideo.maxLength.bp = chr.length;\n          }\n        }\n      }\n    }\n\n    var t1_b = new Date().getTime();\n    if (ideo.debug) {\n      console.log(\"Time in processBandData: \" + (t1_b - t0_b) + \" ms\");\n    }\n  }\n\n  function finishInit() {\n    try {\n      var t0_a = new Date().getTime();\n\n      var i;\n\n      ideo.initDrawChromosomes(bandsArray);\n\n      // Waits for potentially large annotation dataset\n      // to be received by the client, then triggers annotation processing\n      if (ideo.config.annotationsPath) {\n        function pa() {\n          if (typeof timeout !== \"undefined\") {\n            window.clearTimeout(timeout);\n          }\n\n          ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n          ideo.drawProcessedAnnots(ideo.annots);\n\n          if (ideo.initCrossFilter) {\n            ideo.initCrossFilter();\n          }\n        }\n\n        if (ideo.rawAnnots) {\n          pa();\n        } else {\n          (function checkAnnotData() {\n            timeout = setTimeout(function() {\n              if (!ideo.rawAnnots) {\n                checkAnnotData();\n              } else {\n                pa();\n              }\n            },\n            50\n          );\n          })();\n        }\n      }\n\n      if (ideo.config.showBandLabels === true) {\n        var bandsToShow = ideo.bandsToShow.join(\",\");\n\n      // d3.selectAll resolves to querySelectorAll (QSA).\n      // QSA takes a surprisingly long time to complete,\n      // and scales with the number of selectors.\n      // Most bands are hidden, so we can optimize by\n      // Hiding all bands, then QSA'ing and displaying the\n      // relatively few bands that are shown.\n        var t0_c = new Date().getTime();\n        d3.selectAll(\".bandLabel, .bandLabelStalk\").style(\"display\", \"none\");\n        d3.selectAll(bandsToShow).style(\"display\", \"\");\n        var t1_c = new Date().getTime();\n        if (ideo.debug) {\n          console.log(\"Time in showing bands: \" + (t1_c - t0_c) + \" ms\");\n        }\n\n        if (ideo.config.orientation === \"vertical\") {\n          for (var i = 0; i < ideo.chromosomesArray.length; i++) {\n            ideo.rotateChromosomeLabels(d3.select(\"#\" + ideo.chromosomesArray[i].id), i);\n          }\n        }\n      }\n\n      if (ideo.config.showChromosomeLabels === true) {\n        ideo.drawChromosomeLabels(ideo.chromosomes);\n      }\n\n      if (ideo.config.brush === true) {\n        ideo.createBrush();\n      }\n\n      if (ideo.config.annotations) {\n        ideo.drawAnnots(ideo.config.annotations);\n      }\n\n      var t1_a = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time in drawChromosome: \" + (t1_a - t0_a) + \" ms\");\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time constructing ideogram: \" + (t1 - t0) + \" ms\");\n      }\n\n      if (ideo.onLoadCallback) {\n        ideo.onLoadCallback();\n      }\n\n      if (!(\"rotatable\" in ideo.config && ideo.config.rotatable === false)) {\n        d3.selectAll(\".chromosome\").on(\"click\", function() {\n          ideogram.rotateAndToggleDisplay(this);\n        });\n      } else {\n        d3.selectAll(\".chromosome\").style(\"cursor\", \"default\");\n      }\n    } catch (e) {\n      console.log(e);\n      //  throw e;\n    }\n  }\n};\n","/* Decompresses ideogram's annotations for crossfilter initialization\nBy default, annotations are clustered by chromosome, e.g.\n[\n  {\"chr\": \"1\", \"annots\": [{\"from\": 100, \"to\", 101, \"chr\": \"1\", ...}, ...]},\n  {\"chr\": \"2\", \"annots\": [{\"from\": 500, \"to\", 501, \"chr\": \"2\", ...}, ...]},\n  ...\n]\nThis method flattens that structure to e.g.\n[\n  {\"from\": 100, \"to\": 101, \"chr\": \"1\", ...},\n  ...\n  {\"from\": 500, \"to\": 501, \"chr\": \"2\", ...},\n]\nSee also: packAnnots\n*/\nIdeogram.prototype.unpackAnnots = function() {\n\n  var chr, annots, i,\n      unpackedAnnots = [],\n      ideo = this,\n      chrs = ideo.annots;\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots = chr.annots;\n    unpackedAnnots = unpackedAnnots.concat(annots);\n  }\n\n  return unpackedAnnots;\n\n};\n\n/*\n  Compresses annots back to default state.  Inverse of unpackAnnots.\n*/\nIdeogram.prototype.packAnnots = function(unpackedAnnots) {\n\n  var chr, annot, i,\n      annots = [],\n      ideo = this,\n      chrs = ideo.annots;\n\n  for (chr in chrs) {\n    annots.push({'chr': chrs[chr].chr, annots: []});\n  }\n\n  for (i = 0; i < unpackedAnnots.length; i++) {\n    annot = unpackedAnnots[i];\n    annots[annot.chrIndex].annots.push(annot);\n  }\n\n  return annots;\n\n};\n\n/*\n  Initializes crossfilter.  Needed for client-side filtering.\n  More: https://github.com/square/crossfilter/wiki/API-Reference\n*/\nIdeogram.prototype.initCrossFilter = function() {\n  var ideo = this,\n      keys = ideo.rawAnnots.keys,\n      i, facet;\n\n  ideo.unpackedAnnots = ideo.unpackAnnots();\n  ideo.crossfilter = crossfilter(ideo.unpackedAnnots);\n\n  ideo.annotsByFacet = {};\n\n  ideo.facets = keys.slice(3, keys.length);\n\n  for (i = 0; i < ideo.facets.length; i++) {\n    facet = ideo.facets[i];\n    ideo.annotsByFacet[facet] =\n      ideo.crossfilter\n        .dimension(function(d) {\n          return d[facet];\n        });\n  }\n};\n\n/*\n  Filters annotations based on the given selections\n  \"selections\" is an object of objects, e.g.\n\n    {\n      \"tissue-type\": {          <-- a facet\n        \"cerebral-cortex\": 1,   <-- a filter; \"1\" means it is selected\n        \"liver\": 1\n      },\n      \"gene-type\": {\n        mirna\": 1\n      }\n    }\n\n  Translation:\n  select where:\n      (tissue-type is cerebral-cortex OR liver) and (gene-type is mirna)\n\n  TODO:\n    * Filter counts\n    * Range filters\n    * Integrate server-side filtering for very large datasets\n*/\nIdeogram.prototype.filterAnnots = function(selections) {\n\n  var t0 = Date.now();\n\n  var i, facet,\n      prevFacet = null,\n      results, fn,\n      counts = {},\n      ideo = this;\n\n  if (Object.keys(selections).length === 0) {\n    results = ideo.unpackedAnnots;\n  } else {\n    for (i = 0; i < ideo.facets.length; i++) {\n      facet = ideo.facets[i];\n      if (facet in selections) {\n        fn = function(d) {\n          if (d in selections[facet]) {\n            return true;\n          }\n        };\n      } else {\n        fn = null;\n      }\n      ideo.annotsByFacet[facet].filter(fn);\n      counts[facet] = ideo.annotsByFacet[facet].group().top(Infinity);\n    }\n\n    results = ideo.annotsByFacet[facet].top(Infinity);\n  }\n\n  for (i < 0; i < ideo.facets.length; i++) {\n    ideo.annotsByFacet[facet].filterAll(); // clear filters\n  }\n\n  results = ideo.packAnnots(results);\n\n  d3.selectAll(\"polygon.annot\").remove();\n  ideo.drawAnnots(results);\n\n  console.log(\"Time in filterAnnots: \" + (Date.now() - t0) + \" ms\");\n\n  return counts;\n};\n"]}