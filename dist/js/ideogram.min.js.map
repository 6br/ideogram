{"version":3,"sources":["range.js","model-adapter.js","model-no-bands-adapter.js","layouts/layout.js","layouts/horizontal-layout.js","layouts/vertical-layout.js","layouts/paired-layout.js","layouts/small-layout.js","ploidy.js","color.js","views/chromosome.js","views/telocentric-chromosome.js","views/metacentric-chromosome.js","lib.js","views/chromosome-util.js","core.js","filter.js"],"names":["Range","data","this","_data","ModelAdapter","model","_model","_class","ModelNoBandsAdapter","call","Layout","config","ideo","_config","_ideo","_ploidy","_translate","undefined","chrSetMargin","k","chrMargin","ploidy","_tickSize","_isRotated","HorizontalLayout","_margin","left","top","VerticalLayout","PairedLayout","SmallLayout","Ploidy","_description","_normalize","ploidyDesc","Color","Chromosome","adapter","_adapter","getModel","_color","_bumpCoefficient","TelocentricChromosome","_pArmOffset","MetacentricChromosome","naturalSort","a","b","q","r","c","d","e","f","g","h","i","insensitive","toLowerCase","replace","j","l","split","m","n","parseInt","match","length","Date","parse","o","p","parseFloat","s","t","u","v","Math","max","isNaN","test","localeCompare","w","abs","slugify","value","ChromosomeUtil","node","_node","prototype","getStart","start","getStop","stop","getLength","getColor","chrNumber","_getColor","Array","isArray","color","getInstance","bands","getCssClass","Object","create","width","push","name","px","perspective","rows","orientation","_getLeftMargin","_getYScale","chrWidth","getChromosomeLabels","chrElement","util","getSetLabel","getLabel","filter","rotateBack","Error","rotateForward","rotate","chrSetNumber","otherChrs","d3","selectAll","selector","style","getChromosomeLabelClass","_getAdditionalOffset","annotationHeight","numAnnotTracks","_getChromosomeSetSize","setSize","getSetSize","getMargin","getHeight","getChromosomeBandTickY1","getChromosomeBandTickY2","getChromosomeBandLabelTranslate","getChromosomeSetLabelAnchor","getChromosomeBandLabelAnchor","getChromosomeLabelXPosition","getChromosomeLabelYPosition","getChromosomeSetLabelYPosition","getChromosomeSetLabelXPosition","getChromosomeSetLabelTranslate","getChromosomeSetTranslate","getChromosomeSetYTranslate","margin","setNumber","callback","xOffset","ideoBox","select","getBoundingClientRect","chrBox","scaleX","height","scaleY","yOffset","transform","parentNode","transition","attr","on","labels","getSvg","append","enter","text","String","translate","remove","taxId","numChromosomes","chromosomes","lastSetOffset","lastSetSize","getWidth","chrHeight","band","x","round","y","leftMargin","chromosomeSetYTranslate","showBandLabels","self","marginTop","pad","annotationsLayout","prevTranslate","translateY","Number","organisms","getTaxids","taxIdList","size","rowSize","additionalPadding","getChromosomesNumber","chrSetCode","keys","description","normalized","key","descValue","reverse","ancestors","existence","_getexistenceArray","array","getAncestor","exists","armNumber","desc","getArmColor","armColors","_getPolyploidArmColor","getBorderColor","ancestor","centromerePosition","_addPArmShape","clipPath","isPArmRendered","concat","_getPArmShape","_addQArmShape","isQArmRendered","_getQArmShape","render","container","id","_renderPArm","_renderQArm","_renderRangeSet","opacity","fill","isFullyBanded","strokeWidth","path","class","rangeSet","range","chr","map","rangesContainer","bandsXOffset","_bandsXOffset","startPx","convertBpToPx","lengthPx","_getShapeData","firstQBand","lastBand","rightTerminalPosition","x1","x2","x3","x2b","_renderBands","arm","stain","Boolean","G","Q","process","nextTick","B","X","document","createTextNode","observe","characterData","MessageChannel","port1","onmessage","port2","postMessage","setTimeout","J","tt","require","runOnLoop","runOnContext","constructor","rt","_state","arguments","_result","E","_","TypeError","then","ut","error","S","_label","it","st","et","resolve","nt","A","_onerror","T","ot","_subscribers","M","P","ct","C","O","at","Y","_t","promise","I","F","D","K","L","N","_instanceConstructor","_input","_remaining","_enumerate","U","W","global","Function","Promise","toString","cast","pt","z","H","R","window","V","MutationObserver","WebKitMutationObserver","Z","$","Uint8ClampedArray","importScripts","random","substring","ft","lt","ht","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","_settledAt","_willSettleAt","dt","vt","polyfill","define","amd","module","exports","ES6Promise","slice","apply","forEach","Ideogram","rect","JSON","stringify","debug","dataDir","resolution","showChromosomeLabels","querySelector","showFullyBanded","brush","bump","adjustedBump","chromosome","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","9606","commonName","scientificName","scientificNameAbbr","assemblies","default","GRCh38","GRCh37","10090","4641","chromosomesArray","bandsToShow","bandData","init","getBands","content","taxid","lines","delimiter","tsvLines","columns","line","tsvLinesLength","source","firstColumn","tmp","chrBands","eval","indexOf","chromosomeName","getChromosomeModel","chrIndex","pxStop","chrLength","cs","hasBands","type","fullChromosomeLabels","orgName","csLength","pcenIndex","scale","multiorganism","drawChromosomeLabels","chromosomeLabelClass","_layout","chrSetLabelXPosition","chrSetLabelTranslate","each","fullLabels","setLabelTranslate","drawBandLabels","chrs","chrModel","textOffsets","overlappingLabelXRight","index","prevHiddenBoxIndex","xLeft","prevLabelXRight","textPadding","textsLength","indexesToShow","prevTextBoxLeft","prevTextBoxWidth","selectorsToShow","ithLength","rotateChromosomeLabels","scaleSvg","tracksHeight","hasOwnProperty","ci","chrMargin2","rotateBandLabels","bandLabels","coord","drawChromosome","rotateAndToggleDisplay","_groups","bpToIscnScale","offset","pxStart","pxLength","iscnStart","iscnStop","iscnLength","bpStart","bpStop","bpLength","convertPxToBp","pxToIscnScale","drawSynteny","syntenicRegions","r1","r2","syntenies","regionID","t0","getTime","insert","regions","stopPx","syntenicRegion","activeRegion","others","classed","t1","console","log","annotationsPath","localAnnotationsPath","annots","annotations","annotHeight","annotationTracks","barWidth","annotationsColor","drawAnnots","friendlyAnnots","annot","rawAnnot","rawAnnots","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","getHistogramBars","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","histogramScaling","firstGet","numBins","count","barAnnots","barCount","fillAnnots","filledAnnots","chrArray","layout","triangle","circle","chrAnnot","y1","y2","thisChrWidth","createBrush","from","to","extent","event","selection","xScale","invert","floor","ceil","selectedRegion","x0","chrLengthBp","scaleLinear","domain","right","brushX","yTranslate","move","getBandColorGradients","colors","color1","color2","color3","css","gradients","getTaxidFromEutils","organism","taxonomySearch","json","esearchresult","idlist","taxids","org","orgs","taxidInit","tmpChrs","assembly","urlOrg","fullyBandedTaxids","chromosomesUrl","request","get","asmAndChrArray","seenChrs","response","chromsomes","sort","sortChromosomes","getAssemblyAndChromosomesFromEutils","asmChrArray","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","links","ntSummary","results","result","cnIndex","rsuid","assemblyaccession","qs","linksets","linksetdbs","join","genome","subtype","subname","substr","slen","initDrawChromosomes","bandsArray","defs","numChrsInSet","processBandData","bandsByChr","chrsByTaxid","t0B","t1B","writeContainer","svgClass","svgWidth","svgHeight","html","finishInit","pa","timeout","clearTimeout","crossfilter","initCrossFilter","t0A","checkAnnotData","t0C","t1C","chrID","t1A","numBandDataResponses","accession","bandFileName","bandDataFileNames","unpackAnnots","unpackedAnnots","packAnnots","facet","annotsByFacet","facets","dimension","filterAnnots","selections","fn","now","counts","group","Infinity","filterAll","label","setLabel"],"mappings":"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","file":"ideogram.min.js","sourcesContent":["/**\n * Chromosome range.\n * @public\n * @class\n * @param {Object} data - range data.\n * @param {Integer} data.chr - chromosome index.\n * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n * @param {Integer} data.start - range start.\n * @param {Integer} data.stop - range end.\n * @param {String} data.color - range color.\n */\nfunction Range(data) {\n  this._data = data;\n}\n\nRange.prototype.getStart = function() {\n  return this._data.start;\n};\n\nRange.prototype.getStop = function() {\n  return this._data.stop;\n};\n\nRange.prototype.getLength = function() {\n  return this._data.stop - this._data.start;\n};\n\nRange.prototype.getColor = function(chrNumber) {\n  if (!('ploidy' in this._data)) {\n    return this._getColor(chrNumber);\n  } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n    return this._getColor(chrNumber);\n  } else {\n    return 'transparent';\n  }\n};\n\nRange.prototype._getColor = function(chrNumber) {\n  if (Array.isArray(this._data.color)) {\n    return this._data.color[chrNumber];\n  } else {\n    return this._data.color;\n  }\n};\n","function ModelAdapter(model) {\n  this._model = model;\n  this._class = 'ModelAdapter';\n}\n\nModelAdapter.getInstance = function(model) {\n  if (model.bands) {\n    return new ModelAdapter(model);\n  } else {\n    return new ModelNoBandsAdapter(model);\n  }\n};\n\nModelAdapter.prototype.getModel = function() {\n  return this._model;\n};\n\nModelAdapter.prototype.getCssClass = function() {\n  return '';\n};\n","function ModelNoBandsAdapter(model) {\n    /*\n     * Call parent constructor.\n     */\n  ModelAdapter.call(this, model);\n  this._class = 'ModelNoBandsAdapter';\n}\n\nModelNoBandsAdapter.prototype = Object.create(ModelAdapter.prototype);\n\nModelNoBandsAdapter.prototype.getModel = function() {\n  this._model.bands = [];\n\n    // If chromosome width more, then 1 add single band to bands array\n  if (this._model.width > 1) {\n    this._model.bands.push({\n      name: 'q',\n      px: {\n        start: 0,\n        stop: this._model.width,\n        width: this._model.width\n      }\n    });\n  }\n\n  return this._model;\n};\n\nModelNoBandsAdapter.prototype.getCssClass = function() {\n  return 'noBands';\n};\n","function Layout(config, ideo) {\n  this._config = config;\n  this._ideo = ideo;\n  this._ploidy = this._ideo._ploidy;\n  this._translate = undefined;\n\n  if ('chrSetMargin' in config) {\n    this.chrSetMargin = config.chrSetMargin;\n  } else {\n    var k = this._config.chrMargin;\n    this.chrSetMargin = (this._config.ploidy > 1 ? k : 0);\n  }\n\n  // Chromosome band's size.\n  this._tickSize = 8;\n\n  // Chromosome rotation state.\n  this._isRotated = false;\n}\n\n// Factory method\nLayout.getInstance = function(config, ideo) {\n  if (\"perspective\" in config && config.perspective === \"comparative\") {\n    return new PairedLayout(config, ideo);\n  } else if (\"rows\" in config && config.rows > 1) {\n    return new SmallLayout(config, ideo);\n  } else if (config.orientation === 'vertical') {\n    return new VerticalLayout(config, ideo);\n  } else if (config.orientation === 'horizontal') {\n    return new HorizontalLayout(config, ideo);\n  } else {\n    return new VerticalLayout(config, ideo);\n  }\n};\n\n// Get chart left margin\nLayout.prototype._getLeftMargin = function() {\n  return this._margin.left;\n};\n\n// Get rotated chromosome y scale\nLayout.prototype._getYScale = function() {\n    // 20 is width of rotated chromosome.\n  return 20 / this._config.chrWidth;\n};\n\n// Get chromosome labels\nLayout.prototype.getChromosomeLabels = function(chrElement) {\n  var util = new ChromosomeUtil(chrElement);\n\n  return [util.getSetLabel(), util.getLabel()].filter(function(d) {\n    return d.length > 0;\n  });\n};\n\n// Rotate chromosome to original position\nLayout.prototype.rotateBack = function() {\n  throw new Error(this._class + '#rotateBack not implemented');\n};\n\n// Rotate chromosome to opposite position\nLayout.prototype.rotateForward = function() {\n  throw new Error(this._class + '#rotateForward not implemented');\n};\n\nLayout.prototype.rotate = function(chrSetNumber, chrNumber, chrElement) {\n  var ideo = this._ideo;\n\n    // Find chromosomes which should be hidden\n  var otherChrs = d3.selectAll(ideo.selector + \" g.chromosome\")\n    .filter(function() {\n      return this !== chrElement;\n    });\n\n  if (this._isRotated) {\n        // Reset _isRotated flag\n    this._isRotated = false;\n        // Rotate chromosome back\n    this.rotateBack(chrSetNumber, chrNumber, chrElement, function() {\n            // Show all other chromosomes and chromosome labels\n      otherChrs.style(\"display\", null);\n      d3.selectAll(ideo.selector + \" .chrSetLabel, .chrLabel\")\n        .style(\"display\", null);\n    });\n  } else {\n        // Set _isRotated flag\n    this._isRotated = true;\n\n        // Hide all other chromosomes and chromosome labels\n    otherChrs.style(\"display\", \"none\");\n    d3.selectAll(ideo.selector + \" .chrSetLabel, .chrLabel\")\n      .style(\"display\", \"none\");\n\n        // Rotate chromosome\n    this.rotateForward(chrSetNumber, chrNumber, chrElement);\n  }\n};\n\nLayout.prototype.getChromosomeLabelClass = function() {\n  if (this._config.ploidy === 1) {\n    return 'chrLabel';\n  } else {\n    return 'chrSetLabel';\n  }\n};\n\nLayout.prototype._getAdditionalOffset = function() {\n  return (\n    (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1)\n  );\n};\n\nLayout.prototype._getChromosomeSetSize = function(chrSetNumber) {\n  // Get last chromosome set size.\n  var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n  // Increase offset by last chromosome set size\n  return (\n    setSize * this._config.chrWidth * 2 + (this.chrSetMargin)\n  );\n};\n\n// Get layout margin\nLayout.prototype.getMargin = function() {\n  return this._margin;\n};\n\n// Get SVG element height\nLayout.prototype.getHeight = function() {\n  throw new Error(this._class + '#getHeight not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY1 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n};\n\nLayout.prototype.getChromosomeBandTickY2 = function() {\n  throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n};\n\n// Get chromosome's band translate attribute\nLayout.prototype.getChromosomeBandLabelTranslate = function() {\n  throw new Error(\n    this._class + '#getChromosomeBandLabelTranslate not implemented'\n  );\n};\n\n// Get chromosome set label anchor property\nLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'middle';\n};\n\n// Get chromosome's band label text-anchor value\nLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  throw (\n    new Error(this._class + '#getChromosomeBandLabelAnchor not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeLabelXPosition = function() {\n  throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n};\n\n// Get chromosome label y position.\nLayout.prototype.getChromosomeLabelYPosition = function() {\n  return -5.5;\n};\n\n// \"i\" is chromosome number\nLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelYPosition(i);\n  } else {\n    return -2 * this._config.chrWidth;\n  }\n};\n\nLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelXPosition not implemented')\n  );\n};\n\nLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  throw (\n    new Error(this._class + '#getChromosomeSetLabelTranslate not implemented')\n  );\n};\n\n// Get chromosome set translate attribute\nLayout.prototype.getChromosomeSetTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n};\n\n// Get chromosome set translate's y offset\nLayout.prototype.getChromosomeSetYTranslate = function() {\n  throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n};\n","function HorizontalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'HorizontalLayout';\n  this._margin = {\n    left: 20,\n    top: 30\n  };\n}\n\nHorizontalLayout.prototype = Object.create(Layout.prototype);\n\nHorizontalLayout.prototype._getLeftMargin = function() {\n  var margin = Layout.prototype._getLeftMargin.call(this);\n  if (this._config.ploidy > 1) {\n    margin *= 1.8;\n  }\n\n  return margin;\n};\n\nHorizontalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var xOffset = 30;\n\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.height / (chrBox.width + xOffset / 2)) * 0.9;\n  var scaleY = this._getYScale();\n\n  var yOffset = (chrNumber + 1) * ((this._config.chrWidth * 2) * scaleY);\n\n  var transform = (\n    'rotate(90) ' +\n    'translate(' + xOffset + ', -' + yOffset + ') ' +\n    'scale(' + scaleX + ', ' + scaleY + ')'\n  );\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  d3.select(this._ideo.getSvg())\n        .append('g')\n        .attr('class', 'tmp')\n        .selectAll('text')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', function(d, i) {\n          return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n        })\n        .attr('x', 30)\n        .attr('y', function(d, i) {\n          return (i + 1 + labels.length % 2) * 12;\n        })\n        .style('text-anchor', 'middle')\n        .style('opacity', 0)\n        .text(String)\n        .transition()\n        .style('opacity', 1);\n};\n\nHorizontalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll(this._ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nHorizontalLayout.prototype.getHeight = function(taxId) {\n    // Get last chromosome set offset.\n  var numChromosomes = this._config.chromosomes[taxId].length;\n  var lastSetOffset = this.getChromosomeSetYTranslate(numChromosomes - 1);\n\n    // Get last chromosome set size.\n  var lastSetSize = this._getChromosomeSetSize(numChromosomes - 1);\n\n    // Increase offset by last chromosome set size\n  lastSetOffset += lastSetSize;\n\n  return lastSetOffset + this._getAdditionalOffset() * 2;\n};\n\nHorizontalLayout.prototype.getWidth = function() {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelAnchor = function() {\n  return 'end';\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelAnchor = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY1 = function() {\n  return 2;\n};\n\nHorizontalLayout.prototype.getChromosomeBandTickY2 = function() {\n  return 10;\n};\n\nHorizontalLayout.prototype.getChromosomeBandLabelTranslate = function(band) {\n  var x = this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n  var y = -10;\n\n  return {\n    x: x,\n    y: y,\n    translate: 'translate(' + x + ',' + y + ')'\n  };\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return null;\n};\n\nHorizontalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var leftMargin = this._getLeftMargin();\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return \"translate(\" + leftMargin + \", \" + chromosomeSetYTranslate + \")\";\n};\n\nHorizontalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  // If no detailed description provided just use one formula for all cases.\n  if (!this._config.ploidyDesc) {\n    return this._config.chrMargin * (setNumber + 1);\n  }\n\n  // Id detailed description provided start to calculate offsets\n  //  for each chromosome set separately. This should be done only once.\n  if (!this._translate) {\n    // First offset equals to zero.\n    this._translate = [1];\n\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      this._translate[i] =\n        this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelXPosition = function(i) {\n  if (this._config.ploidy === 1) {\n    return this.getChromosomeLabelXPosition(i);\n  } else {\n    return -20;\n  }\n};\n\nHorizontalLayout.prototype.getChromosomeSetLabelYPosition = function(i) {\n\n  var setSize = this._ploidy.getSetSize(i),\n      chrMargin = this._config.chrMargin,\n      y = (setSize * chrMargin) / 2;\n\n  if (this._config.showBandLabels === true) {\n    y = this._config.chrWidth/2 + 3;\n  }\n\n  return y;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -8;\n};\n\nHorizontalLayout.prototype.getChromosomeLabelYPosition = function() {\n  return this._config.chrWidth;\n};\n","\nfunction VerticalLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n  this._class = 'VerticalLayout';\n    // Layout margins\n  this._margin = {\n    top: 30,\n    left: 15\n  };\n}\n\nVerticalLayout.prototype = Object.create(Layout.prototype);\n\nVerticalLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n\n  var xOffset = 20;\n\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  var transform =\n    \"translate(\" + xOffset + \", 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n  var y = (xOffset + self._config.chrWidth) * 1.3;\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(labels)\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', y).style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nVerticalLayout.prototype.rotateBack = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n\n  d3.selectAll(this._ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nVerticalLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.top * 1.5;\n};\n\nVerticalLayout.prototype.getWidth = function() {\n  return '97%';\n};\n\nVerticalLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nVerticalLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var marginTop = this._margin.top;\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nVerticalLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation/histogram tracks\n  var pad = this._getAdditionalOffset(),\n    margin = this._config.chrMargin,\n    width = this._config.chrWidth,\n    translate;\n\n    // If no detailed description provided just use one formula for all cases\n  if (!this._config.ploidyDesc) {\n   // TODO:\n   // This part of code contains a lot magic numbers and if\n   // statements for exactly corresponing to original ideogram examples.\n   // But all this stuff should be removed. Calculation of translate\n   // should be a simple formula applied for all cases listed below.\n   // Now they are diffirent because of Layout:_getAdditionalOffset do\n   // not meet for cases when no annotation, when annotation exists and\n   // when histogram used\n\n    if (this._config.annotationsLayout === \"histogram\") {\n      return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n    } else {\n      translate = width + setNumber * (margin + width) + pad * 2;\n      if (pad > 0) {\n        return translate;\n      } else {\n        return translate + 4 + (2 * setNumber);\n      }\n    }\n  }\n\n    // If detailed description provided start to calculate offsets\n    // for each chromosome set separately. This should be done only once\n  if (!this._translate) {\n    // First offset equals to zero\n    this._translate = [this._ploidy.getSetSize(0) * width * 2];\n    var prevTranslate;\n    // Loop through description set\n    for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n      prevTranslate = this._translate[i - 1];\n      this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n    }\n  }\n\n  return this._translate[setNumber];\n};\n\nVerticalLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return (this._config.chrWidth * this._config.ploidy) / -2;\n};\n\nVerticalLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function PairedLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'PairedLayout';\n\n  this._margin = {\n    left: 30\n  };\n}\n\nPairedLayout.prototype = Object.create(Layout.prototype);\n\nPairedLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var self = this;\n  var ideo = this._ideo;\n\n    // Get ideo container and chromosome set dimensions\n  var ideoBox = d3.select(ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n    // Evaluate dimensions scale coefficients\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n    // Evaluate y offset of chromosome. It is different for first and the second one\n  var yOffset = setNumber ? 150 : 25;\n\n  var transform =\n    'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n    .transition()\n    .attr(\"transform\", transform)\n    .on('end', function() {\n        // Run callback function if provided\n      if (callback) {\n        callback();\n      }\n\n      var translateY = (6 * Number(!setNumber));\n\n      // Rotate band labels\n      d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n        .attr('transform', 'rotate(90) translate(0, ' + translateY + ')')\n        .attr(\"text-anchor\", \"middle\");\n\n      // Hide syntenic regions\n      d3.selectAll(ideo.selector + ' .syntenicRegion').style(\"display\", 'none');\n    });\n\n    // Append new chromosome labels\n  var labels = this.getChromosomeLabels(chrElement);\n\n  d3.select(this._ideo.getSvg())\n    .append('g')\n    .attr('class', 'tmp')\n    .selectAll('text')\n    .data(this.getChromosomeLabels(chrElement))\n    .enter()\n    .append('text')\n    .attr('class', function(d, i) {\n      return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n    })\n    .attr('x', 0)\n    .attr('y', yOffset + (self._config.chrWidth * scaleX / 2) * 1.15)\n    .style('opacity', 0)\n    .text(String)\n    .transition()\n    .style('opacity', 1);\n};\n\nPairedLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n  var ideo = this._ideo;\n\n    // Get intial transformation string for chromosome set\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n    // Run rotation procedure\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', function() {\n            // Run callback fnuction if provided\n          callback();\n            // Show syntenic regions\n          d3.selectAll(ideo.select + ' .syntenicRegion').style(\"display\", null);\n            // Reset changed attributes to original state\n          d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n            .attr('transform', null)\n            .attr(\"text-anchor\", setNumber ? null : 'end');\n        });\n\n  d3.selectAll(ideo.selector + ' g.tmp')\n        .style('opacity', 0)\n        .remove();\n};\n\nPairedLayout.prototype.getHeight = function() {\n  return this._config.chrHeight + this._margin.left * 1.5;\n};\n\nPairedLayout.prototype.getWidth = function() {\n  return '97%';\n};\n\nPairedLayout.prototype.getChromosomeBandTickY1 = function(chrNumber) {\n  return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n};\n\nPairedLayout.prototype.getChromosomeBandTickY2 = function(chrNumber) {\n  var width = this._config.chrWidth;\n  return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeBandLabelAnchor = function(chrNumber) {\n  return chrNumber % 2 ? null : 'end';\n};\n\nPairedLayout.prototype.getChromosomeBandLabelTranslate = function(band,\n  chrNumber) {\n  var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n  var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n  return {\n    x: y,\n    y: y,\n    translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n  };\n};\n\nPairedLayout.prototype.getChromosomeLabelXPosition = function() {\n  return -this._tickSize;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n\nPairedLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nPairedLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n  var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n  return (\n    'rotate(90) ' +\n    'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')'\n  );\n};\n\nPairedLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n  return 200 * (setNumber + 1);\n};\n","function SmallLayout(config, ideo) {\n  Layout.call(this, config, ideo);\n\n  this._class = 'SmallLayout';\n\n  this._margin = {\n    left: 36.5,\n    top: 10\n  };\n}\n\nSmallLayout.prototype = Object.create(Layout.prototype);\n\nSmallLayout.prototype.rotateForward = function(setNumber, chrNumber,\n  chrElement, callback) {\n  var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n  var chrBox = chrElement.getBoundingClientRect();\n\n  var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n  var scaleY = this._getYScale();\n\n  transform = \"translate(5, 25) scale(\" + scaleX + \", \" + scaleY + \")\";\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", transform)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.rotateBack = function(setNumber, chrNumber, chrElement,\n  callback) {\n  var translate = this.getChromosomeSetTranslate(setNumber);\n\n  d3.select(chrElement.parentNode)\n        .transition()\n        .attr(\"transform\", translate)\n        .on('end', callback);\n};\n\nSmallLayout.prototype.getHeight = function() {\n  return this._config.rows * (this._config.chrHeight + this._margin.top * 1.5);\n};\n\nSmallLayout.prototype.getWidth = function() {\n  return '97%';\n};\n\nSmallLayout.prototype.getChromosomeBandLabelTranslate = function() {\n\n};\n\nSmallLayout.prototype.getChromosomeSetLabelTranslate = function() {\n  return 'rotate(-90)';\n};\n\nSmallLayout.prototype.getChromosomeSetTranslate = function(setNumber) {\n    // Get organisms id list\n  var organisms = [];\n  this._ideo.getTaxids(function(taxIdList) {\n    organisms = taxIdList;\n  });\n    // Get first organism chromosomes amount\n  var size = this._ideo.config.chromosomes[organisms[0]].length;\n    // Amount of chromosomes per number\n  var rowSize = size / this._config.rows;\n\n  var xOffset;\n  var yOffset;\n\n  if (setNumber > rowSize - 1) {\n    xOffset = this._margin.left + this._config.chrHeight * 1.4;\n    yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n  } else {\n    xOffset = this._margin.left;\n    yOffset = this.getChromosomeSetYTranslate(setNumber);\n  }\n\n  return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n};\n\nSmallLayout.prototype.getChromosomeSetYTranslate = function(setNumber) {\n    // Get additional padding caused by annotation tracks\n  var additionalPadding = this._getAdditionalOffset();\n    // If no detailed description provided just use one formula for all cases\n  return (\n    this._margin.left * (setNumber) + this._config.chrWidth +\n    additionalPadding * 2 + additionalPadding * setNumber\n  );\n};\n\nSmallLayout.prototype.getChromosomeSetLabelXPosition = function(setNumber) {\n  return (\n    ((this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2) +\n    (this._config.ploidy > 1 ? 0 : this._config.chrWidth)\n  );\n};\n\nSmallLayout.prototype.getChromosomeLabelXPosition = function() {\n  return this._config.chrWidth / -2;\n};\n","function Ploidy(config) {\n  this._config = config;\n  this._description = this._normalize(this._config.ploidyDesc);\n}\n\n// Get number of chromosomes in a chromosome set\nPloidy.prototype.getChromosomesNumber = function(setNumber) {\n  if (this._config.ploidyDesc) {\n    var chrSetCode = this._config.ploidyDesc[setNumber];\n    if (chrSetCode instanceof Object) {\n      return Object.keys(chrSetCode)[0].length;\n    } else {\n      return chrSetCode.length;\n    }\n  } else {\n    return this._config.ploidy || 1;\n  }\n};\n\n// Normalize use defined description\nPloidy.prototype._normalize = function(description) {\n\n  var normalized, key, descValue;\n\n  // Return the same if no description provided\n  if (!description) {\n    return description;\n  }\n\n  // Array of normalized description objects\n  normalized = [];\n\n  // Loop through description and normalize\n  for (key in description) {\n    descValue = description[key];\n    if (typeof descValue === 'string') {\n      if (this._config.orientation === 'vertical') {\n        descValue = descValue.split('').reverse();\n      }\n      normalized.push({\n        ancestors: descValue,\n        existence: this._getexistenceArray(descValue.length)\n      });\n    } else {\n      normalized.push({\n        ancestors: Object.keys(descValue)[0],\n        existence: descValue[Object.keys(descValue)[0]]\n      });\n    }\n  }\n\n  return normalized;\n};\n\n// Get array filled by '11' elements\nPloidy.prototype._getexistenceArray = function(length) {\n  var array = [];\n\n  for (var i = 0; i < length; i++) {\n    array.push('11');\n  }\n\n  return array;\n};\n\nPloidy.prototype.getSetSize = function(chrSetNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors.length;\n  } else {\n    return 1;\n  }\n};\n\n// Get ancestor letter\nPloidy.prototype.getAncestor = function(chrSetNumber, chrNumber) {\n  if (this._description) {\n    return this._description[chrSetNumber].ancestors[chrNumber];\n  } else {\n    return '';\n  }\n};\n\n// Check if chromosome's arm should be rendered.\n// If no description was provided, method returns true and\n// something another depending on user provided description.\nPloidy.prototype.exists = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._description) {\n    var desc = this._description[chrSetNumber].existence[chrNumber][armNumber];\n    return Number(desc) > 0;\n  } else {\n    return true;\n  }\n};\n","function Color(config) {\n    // Ideogram config\n  this._config = config;\n  this._ploidy = new Ploidy(this._config);\n}\n\nColor.prototype.getArmColor = function(chrSetNumber, chrNumber, armNumber) {\n  if (this._config.armColors) {\n    return this._config.armColors[armNumber];\n  } else if (this._config.ancestors) {\n    return this._getPolyploidArmColor(chrSetNumber, chrNumber, armNumber);\n  } else {\n    return null;\n  }\n};\n\nColor.prototype.getBorderColor = function(chrSetNumber, chrNumber, armNumber) {\n  if (chrNumber < this._config.ploidy) {\n    return '#000';\n  } else if (this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return '#000';\n  } else {\n    return '#fff';\n  }\n};\n\nColor.prototype._getPolyploidArmColor = function(chrSetNumber, chrNumber,\n  armNumber) {\n  if (!this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n    return 'transparent';\n  } else {\n    var ancestor = this._ploidy.getAncestor(chrSetNumber, chrNumber, armNumber);\n    return this._config.ancestors[ancestor];\n  }\n};\n","function Chromosome(adapter, config, ideo) {\n  this._adapter = adapter;\n  this._model = this._adapter.getModel();\n  this._config = config;\n  this._ideo = ideo;\n  this._color = new Color(this._config);\n  this._bumpCoefficient = 5;\n}\n\n// Factory method\nChromosome.getInstance = function(adapter, config, ideo) {\n  if (adapter.getModel().centromerePosition === 'telocentric') {\n    return new TelocentricChromosome(adapter, config, ideo);\n  } else {\n    return new MetacentricChromosome(adapter, config, ideo);\n  }\n};\n\nChromosome.prototype._addPArmShape = function(clipPath, isPArmRendered) {\n  if (isPArmRendered) {\n    return clipPath.concat(this._getPArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype._addQArmShape = function(clipPath, isQArmRendered) {\n  if (isQArmRendered) {\n    return clipPath.concat(this._getQArmShape());\n  } else {\n    return clipPath;\n  }\n};\n\nChromosome.prototype.render = function(container, chrSetNumber, chrNumber) {\n    // Append bands container and apply clip-path on it\n\n  var self = this;\n\n  container = container.append('g')\n    .attr('class', 'bands')\n    .attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n    // Render chromosome arms\n  var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n  var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n    // Render range set\n  this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n    // Push arms shape string into clipPath array\n  var clipPath = [];\n  clipPath = this._addPArmShape(clipPath, isPArmRendered);\n  clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n  var opacity = '0';\n  var fill = '';\n  var isFullyBanded = this.isFullyBanded();\n  if ('ancestors' in this._ideo.config && !('rangeSet' in this._ideo.config)) {\n    // E.g. diploid human genome (with translucent overlay)\n    fill = self._color.getArmColor(chrSetNumber, chrNumber, 0);\n    if (isFullyBanded) {\n      opacity = '0.5';\n    }\n  } else if (isFullyBanded) {\n    // E.g. mouse reference genome\n    opacity = null;\n    fill = 'transparent';\n  } else if (!('ancestors' in this._ideo.config)) {\n    // E.g. chimpanzee assembly Pan_tro 3.0\n    opacity = '1';\n  }\n\n  // Render chromosome border\n  container.append('g')\n        .attr('class', 'chromosome-border')\n        .selectAll('path')\n        .data(clipPath)\n        .enter()\n        .append('path')\n        .attr('fill', fill)\n        .style('fill-opacity', opacity)\n        .attr('stroke', function(d, i) {\n          return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n        })\n        .attr('stroke-width', function(d) {\n          return ('strokeWidth' in d ? d.strokeWidth : 1);\n        })\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n\n  return clipPath;\n};\n\nChromosome.prototype._renderRangeSet = function(container, chrSetNumber,\n  chrNumber) {\n  if (!('rangeSet' in this._config)) {\n    return;\n  }\n\n  var rangeSet = this._config.rangeSet.filter(function(range) {\n    return range.chr - 1 === chrSetNumber;\n  }).map(function(range) {\n    return new Range(range);\n  });\n\n  var rangesContainer = container.append('g')\n        .attr('class', 'range-set');\n\n  var self = this;\n  var ideo = self._ideo;\n  var bandsXOffset = ideo._bandsXOffset;\n\n  rangesContainer.selectAll('rect.range')\n        .data(rangeSet)\n        .enter()\n        .append('rect')\n        .attr('class', 'range')\n        .attr('x', function(range) {\n          var startPx = ideo.convertBpToPx(self._model, range.getStart());\n          return startPx - bandsXOffset;\n        }).attr('y', 0)\n        .attr('width', function(range) {\n          var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n          return lengthPx - bandsXOffset;\n        }).attr('height', this._config.chrWidth)\n        .style('fill', function(range) {\n          return range.getColor(chrNumber);\n        });\n};\n\n// Get chromosome's shape main values\nChromosome.prototype._getShapeData = function() {\n    // First q band from bands sequence\n  var firstQBand;\n  for (var i = 0; i < this._model.bands.length; i++) {\n    if (this._model.bands[i].name[0] === 'q') {\n      firstQBand = this._model.bands[i];\n      break;\n    }\n  }\n\n  // Chromosome's right position\n  var lastBand = this._model.bands.length - 1;\n  var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n    // Properties description:\n    // x1 - left terminal start position\n    // x2 - centromere position\n    // x3 - right terminal end position\n    // w - chromosome width\n    // b - bump size\n  return {\n    x1: 0,\n    x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n    x3: rightTerminalPosition,\n    w: this._config.chrWidth,\n    b: this._config.chrWidth / this._bumpCoefficient\n  };\n};\n\nChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x2 - d.b;\n\n  if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n    // Encountered when chromosome has any of:\n    //  - One placeholder \"band\", e.g. pig genome GCF_000003025.5\n    //  - Many (> 2) bands, e.g. human reference genome\n    //  - Ancestor colors in ploidy configuration, as in ploidy_basic.html\n    return {\n      class: '',\n      path:\n        'M' + d.b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + d.b + ',' + d.w + ' ' +\n        'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      class: '',\n      path:\n        'M' + d.b + ',0 ' +\n        'L' + (x - 2) + ',0 ' +\n        'L' + (x - 2) + ',' + d.w + ' ' +\n        'L' + d.b + ',' + d.w + ' ' +\n        'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n    }, {\n      class: 'acen',\n      path:\n        'M' + x + ',0 ' +\n        'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x + ',' + d.w + ' ' +\n        'L' + (x - 2) + ',' + d.w + ' ' +\n        'L' + (x - 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b,\n    x2b = d.x2 + d.b;\n\n  if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n    return {\n      class: '',\n      path:\n        'M' + x2b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w + ' ' +\n        'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + x2b + ',0'\n    };\n  } else {\n    // e.g. chimpanzee assembly Pan_tro 3.0\n    return [{\n      path:\n        'M' + x2b + ',0 ' +\n        'L' + x + ',0 ' +\n        'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w + ' ' +\n        'L' + x2b + ',0'\n    }, {\n      class: 'acen',\n      path:\n        'M' + x2b + ',0' +\n        'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + x2b + ',' + d.w + ' ' +\n        'L' + x2b + ',' + d.w +\n        'L' + (x2b + 2) + ',' + d.w +\n        'L' + (x2b + 2) + ',0'\n    }];\n  }\n};\n\nChromosome.prototype.isFullyBanded = function() {\n  return (\n    this._model.bands &&\n    (this._model.bands.length !== 2 || this._model.bands[0].name[0] === 'q')\n  );\n}\n\n// Render arm bands\nChromosome.prototype._renderBands = function(container, chrSetNumber,\n  chrNumber, bands, arm) {\n  var self = this;\n  var armNumber = arm === 'p' ? 0 : 1;\n  var fill = '';\n  if ('ancestors' in this._ideo.config && !(this.isFullyBanded())) {\n    fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n  }\n\n  container.selectAll(\"path.band.\" + arm)\n    .data(bands)\n    .enter()\n    .append(\"path\")\n    .attr(\"id\", function(d) {\n      return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n    })\n    .attr(\"class\", function(d) {\n      return 'band ' + arm + '-band ' + d.stain;\n    })\n    .attr(\"d\", function(d) {\n      var start = self._ideo.round(d.px.start);\n      var length = self._ideo.round(d.px.width);\n\n      x = start + length;\n\n      return \"M \" + start + \", 0\" +\n            \"l \" + length + \" 0 \" +\n            \"l 0 \" + self._config.chrWidth + \" \" +\n            \"l -\" + length + \" 0 z\";\n    })\n    .style('fill', fill);\n};\n\n// Render chromosome's p arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderPArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'p';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n  return Boolean(bands.length);\n};\n\n// Render chromosome's q arm.\n// Returns boolean which indicates is any bands was rendered\nChromosome.prototype._renderQArm = function(container, chrSetNumber,\n  chrNumber) {\n  var bands = this._model.bands.filter(function(band) {\n    return band.name[0] === 'q';\n  });\n\n  this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n  return Boolean(bands.length);\n};\n","function TelocentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'TelocentricChromosome';\n  this._pArmOffset = 3;\n}\n\nTelocentricChromosome.prototype = Object.create(Chromosome.prototype);\n\nTelocentricChromosome.prototype._addPArmShape = function(clipPath) {\n  return clipPath.concat(this._getPArmShape());\n};\n\nTelocentricChromosome.prototype._getPArmShape = function() {\n  var d = this._getShapeData();\n  d.o = this._pArmOffset;\n\n  return [{\n    class: 'acen',\n    path: 'M' + (d.x2 + 2) + ',1' +\n            'L' + (d.x2 + d.o + 3.25) + ',1 ' +\n            'L' + (d.x2 + d.o + 3.25) + ',' + (d.w - 1) + ' ' +\n            'L' + (d.x2 + 2) + ',' + (d.w - 1)\n  }, {\n    class: 'gpos66',\n    path: 'M' + (d.x2 - d.o + 5) + ',0' +\n        'L' + (d.x2 - d.o + 3) + ',0 ' +\n        'L' + (d.x2 - d.o + 3) + ',' + d.w + ' ' +\n        'L' + (d.x2 - d.o + 5) + ',' + d.w,\n    strokeWidth: 0.5\n  }];\n};\n\nTelocentricChromosome.prototype._getQArmShape = function() {\n  var d = this._getShapeData(),\n    x = d.x3 - d.b,\n    o = this._pArmOffset + 3;\n\n  return {\n    class: '',\n    path:\n      'M' + (d.x2 + o) + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + (d.x2 + o) + ',' + d.w\n  };\n};\n","function MetacentricChromosome(model, config, ideo) {\n  Chromosome.call(this, model, config, ideo);\n  this._class = 'MetacentricChromosome';\n}\n\nMetacentricChromosome.prototype = Object.create(Chromosome.prototype);\n","// https://github.com/stefanpenner/es6-promise\n(function(){\"use strict\";function t(t){return\"function\"==typeof t||\"object\"==typeof t&&null!==t}function e(t){return\"function\"==typeof t}function n(t){G=t}function r(t){Q=t}function o(){return function(){process.nextTick(a)}}function i(){return function(){B(a)}}function s(){var t=0,e=new X(a),n=document.createTextNode(\"\");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){t.port2.postMessage(0)}}function c(){return function(){setTimeout(a,1)}}function a(){for(var t=0;J>t;t+=2){var e=tt[t],n=tt[t+1];e(n),tt[t]=void 0,tt[t+1]=void 0}J=0}function f(){try{var t=require,e=t(\"vertx\");return B=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[rt]&&k(r);var o=n._state;if(o){var i=arguments[o-1];Q(function(){x(o,r,i,n._result)})}else E(n,r,t,e);return r}function h(t){var e=this;if(t&&\"object\"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function _(){return new TypeError(\"You cannot resolve a promise with itself\")}function d(){return new TypeError(\"A promises callback cannot return that same promise.\")}function v(t){try{return t.then}catch(e){return ut.error=e,ut}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){Q(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},\"Settle: \"+(t._label||\" unknown promise\"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===it?S(t,e._result):e._state===st?j(t,e._result):E(e,void 0,function(e){g(t,e)},function(e){j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===et&&constructor.resolve===nt?b(t,n):r===ut?j(t,ut.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,_()):t(n)?w(e,n,v(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===ot&&(t._result=e,t._state=it,0!==t._subscribers.length&&Q(T,t))}function j(t,e){t._state===ot&&(t._state=st,t._result=e,Q(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+it]=n,o[i+st]=r,0===i&&t._state&&Q(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r,o,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return ct.error=n,ct}}function x(t,n,r,o){var i,s,u,c,a=e(r);if(a){if(i=P(r,o),i===ct?(c=!0,s=i.error,i=null):u=!0,n===i)return void j(n,d())}else i=o,u=!0;n._state!==ot||(a&&u?g(n,i):c?j(n,s):t===it?S(n,i):t===st&&j(n,i))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return at++}function k(t){t[rt]=at++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t){return new _t(this,t).promise}function q(t){var e=this;return new e(I(t)?function(n,r){for(var o=t.length,i=0;o>i;i++)e.resolve(t[i]).then(n,r)}:function(t,e){e(new TypeError(\"You must pass an array to race.\"))})}function F(t){var e=this,n=new e(p);return j(n,t),n}function D(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function K(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function L(t){this[rt]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&(\"function\"!=typeof t&&D(),this instanceof L?C(this,t):K())}function N(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[rt]||k(this.promise),I(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,U())}function U(){return new Error(\"Array Methods must be provided an Array\")}function W(){var t;if(\"undefined\"!=typeof global)t=global;else if(\"undefined\"!=typeof self)t=self;else try{t=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var n=t.Promise;(!n||\"[object Promise]\"!==Object.prototype.toString.call(n.resolve())||n.cast)&&(t.Promise=pt)}var z;z=Array.isArray?Array.isArray:function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};var B,G,H,I=z,J=0,Q=function(t,e){tt[J]=t,tt[J+1]=e,J+=2,2===J&&(G?G(a):H())},R=\"undefined\"!=typeof window?window:void 0,V=R||{},X=V.MutationObserver||V.WebKitMutationObserver,Z=\"undefined\"==typeof self&&\"undefined\"!=typeof process&&\"[object process]\"==={}.toString.call(process),$=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel,tt=new Array(1e3);H=Z?o():X?s():$?u():void 0===R&&\"function\"==typeof require?f():c();var et=l,nt=h,rt=Math.random().toString(36).substring(16),ot=void 0,it=1,st=2,ut=new M,ct=new M,at=0,ft=Y,lt=q,ht=F,pt=L;L.all=ft,L.race=lt,L.resolve=nt,L.reject=ht,L._setScheduler=n,L._setAsap=r,L._asap=Q,L.prototype={constructor:L,then:et,\"catch\":function(t){return this.then(null,t)}};var _t=N;N.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===ot&&t>n;n++)this._eachEntry(e[n],n)},N.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===nt){var o=v(t);if(o===et&&t._state!==ot)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof o)this._remaining--,this._result[e]=t;else if(n===pt){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){e(t)}),e)}else this._willSettleAt(r(t),e)},N.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===ot&&(this._remaining--,t===st?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},N.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){n._settledAt(it,e,t)},function(t){n._settledAt(st,e,t)})};var dt=W,vt={Promise:pt,polyfill:dt};\"function\"==typeof define&&define.amd?define(function(){return vt}):\"undefined\"!=typeof module&&module.exports?module.exports=vt:\"undefined\"!=typeof this&&(this.ES6Promise=vt),dt()}).call(this);\n\n// https://github.com/kristw/d3.promise\n!function(a,b){\"function\"==typeof define&&define.amd?define([\"d3\"],b):\"object\"==typeof exports?module.exports=b(require(\"d3\")):a.d3.promise=b(a.d3)}(this,function(a){var b=function(){function b(a,b){return function(){var c=Array.prototype.slice.call(arguments);return new Promise(function(d,e){var f=function(a,b){return a?void e(Error(a)):void d(b)};b.apply(a,c.concat(f))})}}var c={};return[\"csv\",\"tsv\",\"json\",\"xml\",\"text\",\"html\",\"get\"].forEach(function(d){c[d]=b(a,a[d])}),c}();return a.promise=b,b});\n\n// https://github.com/overset/javascript-natural-sort\nfunction naturalSort(a,b){var q,r,c=/(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,d=/^\\s+|\\s+$/g,e=/\\s+/g,f=/(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,g=/^0x[0-9a-f]+$/i,h=/^0/,i=function(a){return(naturalSort.insensitive&&(\"\"+a).toLowerCase()||\"\"+a).replace(d,\"\")},j=i(a),k=i(b),l=j.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),m=k.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),n=parseInt(j.match(g),16)||1!==l.length&&Date.parse(j),o=parseInt(k.match(g),16)||n&&k.match(f)&&Date.parse(k)||null,p=function(a,b){return(!a.match(h)||1==b)&&parseFloat(a)||a.replace(e,\" \").replace(d,\"\")||0};if(o){if(n<o)return-1;if(n>o)return 1}for(var s=0,t=l.length,u=m.length,v=Math.max(t,u);s<v;s++){if(q=p(l[s]||\"\",t),r=p(m[s]||\"\",u),isNaN(q)!==isNaN(r))return isNaN(q)?1:-1;if(/[^\\x00-\\x80]/.test(q+r)&&q.localeCompare){var w=q.localeCompare(r);return w/Math.abs(w)}if(q<r)return-1;if(q>r)return 1}}\n\n// e.g. \"Homo sapiens\" -> \"homo-sapiens\"\nfunction slugify(value){return value.toLowerCase().replace(' ', '-')};\n","// Chromosome's view utility class\nfunction ChromosomeUtil(node) {\n  this._node = node;\n}\n\nChromosomeUtil.prototype.getLabel = function() {\n  var label =\n    d3\n      .select(this._node)\n      .select('text.chrLabel')\n      .text();\n  return label;\n};\n\n// Get chromosome set label\nChromosomeUtil.prototype.getSetLabel = function() {\n  var setLabel =\n    d3\n      .select(this._node.parentNode)\n      .select('text.chromosome-set-label')\n      .text();\n  return setLabel;\n};\n","// Developed by Eric Weitz (https://github.com/eweitz)\n\n/* Constructs a prototypal Ideogram class */\nvar Ideogram = function(config) {\n  var orientation,\n    chrWidth, chrHeight,\n    container, rect;\n\n  // Clone the config object, to allow multiple instantiations\n  // without picking up prior ideogram's settings\n  this.config = JSON.parse(JSON.stringify(config));\n\n  // TODO: Document this\n  this._bandsXOffset = 30;\n\n  this.debug = false;\n\n  if (!this.config.dataDir) {\n    this.config.dataDir = \"../data/bands/native/\";\n  }\n\n  if (!this.config.ploidy) {\n    this.config.ploidy = 1;\n  }\n\n  if (!this.config.container) {\n    this.config.container = \"body\";\n  }\n\n  this.selector = this.config.container + ' #_ideogram';\n\n  if (!this.config.resolution) {\n    this.config.resolution = 850;\n  }\n\n  if (\"showChromosomeLabels\" in this.config === false) {\n    this.config.showChromosomeLabels = true;\n  }\n\n  if (!this.config.orientation) {\n    orientation = \"vertical\";\n    this.config.orientation = orientation;\n  }\n\n  if (!this.config.chrHeight) {\n    container = this.config.container;\n    rect = document.querySelector(container).getBoundingClientRect();\n\n    if (orientation === \"vertical\") {\n      chrHeight = rect.height;\n    } else {\n      chrHeight = rect.width;\n    }\n\n    if (container === \"body\") {\n      chrHeight = 500;\n    }\n    this.config.chrHeight = chrHeight;\n  }\n\n  if (!this.config.chrWidth) {\n    chrWidth = 10;\n    chrHeight = this.config.chrHeight;\n\n    if (chrHeight < 900 && chrHeight > 500) {\n      chrWidth = Math.round(chrHeight / 40);\n    } else if (chrHeight >= 900) {\n      chrWidth = Math.round(chrHeight / 45);\n    }\n    this.config.chrWidth = chrWidth;\n  }\n\n\n  if (!this.config.chrMargin) {\n    if (this.config.ploidy === 1) {\n      this.config.chrMargin = 10;\n    } else {\n      // Defaults polyploid chromosomes to relatively small interchromatid gap\n      this.config.chrMargin = Math.round(this.config.chrWidth/4);\n    }\n  }\n\n  if (!this.config.showBandLabels) {\n    this.config.showBandLabels = false;\n  }\n\n  if ('showFullyBanded' in this.config) {\n    this.config.showFullyBanded = this.config.showFullyBanded;\n  } else {\n    this.config.showFullyBanded = true;\n  }\n\n  if (!this.config.brush) {\n    this.config.brush = false;\n  }\n\n  if (!this.config.rows) {\n    this.config.rows = 1;\n  }\n\n  this.bump = Math.round(this.config.chrHeight / 125);\n  this.adjustedBump = false;\n  if (this.config.chrHeight < 200) {\n    this.adjustedBump = true;\n    this.bump = 4;\n  }\n\n  if (config.showBandLabels) {\n    this.config.chrMargin += 20;\n  }\n\n  if (config.chromosome) {\n    this.config.chromosomes = [config.chromosome];\n    if (\"showBandLabels\" in config === false) {\n      this.config.showBandLabels = true;\n    }\n    if (\"rotatable\" in config === false) {\n      this.config.rotatable = false;\n    }\n  }\n\n  if (!this.config.showNonNuclearChromosomes) {\n    this.config.showNonNuclearChromosomes = false;\n  }\n\n  this.initAnnotSettings();\n\n  this.config.chrMargin = (\n    this.config.chrMargin +\n    this.config.chrWidth +\n    this.config.annotTracksHeight * 2\n  );\n\n  if (config.onLoad) {\n    this.onLoadCallback = config.onLoad;\n  }\n\n  if (config.onDrawAnnots) {\n    this.onDrawAnnotsCallback = config.onDrawAnnots;\n  }\n\n  if (config.onBrushMove) {\n    this.onBrushMoveCallback = config.onBrushMove;\n  }\n\n  this.coordinateSystem = \"iscn\";\n\n  this.maxLength = {\n    bp: 0,\n    iscn: 0\n  };\n\n  // The E-Utilies In Depth: Parameters, Syntax and More:\n  // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n  this.eutils = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/\";\n  this.esearch = this.eutils + \"esearch.fcgi?retmode=json\";\n  this.esummary = this.eutils + \"esummary.fcgi?retmode=json\";\n  this.elink = this.eutils + \"elink.fcgi?retmode=json\";\n\n  this.organisms = {\n    9606: {\n      commonName: \"Human\",\n      scientificName: \"Homo sapiens\",\n      scientificNameAbbr: \"H. sapiens\",\n      assemblies: {\n        default: \"GCF_000001405.26\", // GRCh38\n        GRCh38: \"GCF_000001405.26\",\n        GRCh37: \"GCF_000001405.13\"\n      }\n    },\n    10090: {\n      commonName: \"Mouse\",\n      scientificName: \"Mus musculus\",\n      scientificNameAbbr: \"M. musculus\",\n      assemblies: {\n        default: \"GCF_000001635.20\"\n      }\n    },\n    4641: {\n      commonName: \"banana\",\n      scientificName: \"Musa acuminata\",\n      scientificNameAbbr: \"M. acuminata\",\n      assemblies: {\n        default: \"mock\"\n      }\n    }\n  };\n\n  // A flat array of chromosomes\n  // (this.chromosomes is an object of\n  // arrays of chromosomes, keyed by organism)\n  this.chromosomesArray = [];\n\n  this.bandsToShow = [];\n\n  this.chromosomes = {};\n  this.numChromosomes = 0;\n  this.bandData = {};\n\n  this.init();\n};\n\n/**\n* Gets chromosome band data from a\n* TSV file, or, if band data is prefetched, from an array\n*\n* UCSC: #chrom chromStart  chromEnd  name  gieStain\n* http://genome.ucsc.edu/cgi-bin/hgTables\n*  - group: Mapping and Sequencing\n*  - track: Chromosome Band (Ideogram)\n*\n* NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n* ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n*/\nIdeogram.prototype.getBands = function(content, taxid, chromosomes) {\n  var lines = {},\n    delimiter, tsvLines, columns, line, stain, chr,\n    i, init, tsvLinesLength, source,\n    start, stop, firstColumn, tmp;\n\n  if (content.slice(0, 8) === \"chrBands\") {\n    source = \"native\";\n  }\n\n  if (\n    chromosomes instanceof Array &&\n    typeof chromosomes[0] === 'object'\n  ) {\n    tmp = [];\n    for (i = 0; i < chromosomes.length; i++) {\n      tmp.push(chromosomes[i].name);\n    }\n    chromosomes = tmp;\n  }\n\n  if (typeof chrBands === \"undefined\" && source !== \"native\") {\n    delimiter = /\\t/;\n    tsvLines = content.split(/\\r\\n|\\n/);\n    init = 1;\n  } else {\n    delimiter = / /;\n    if (source === \"native\") {\n      tsvLines = eval(content);\n    } else {\n      tsvLines = content;\n    }\n    init = 0;\n  }\n\n  firstColumn = tsvLines[0].split(delimiter)[0];\n  if (firstColumn === '#chromosome') {\n    source = 'ncbi';\n  } else if (firstColumn === '#chrom') {\n    source = 'ucsc';\n  } else {\n    source = 'native';\n  }\n\n  tsvLinesLength = tsvLines.length;\n\n  if (source === 'ncbi' || source === 'native') {\n    for (i = init; i < tsvLinesLength; i++) {\n      columns = tsvLines[i].split(delimiter);\n\n      chr = columns[0];\n\n      if (\n        // If a specific set of chromosomes has been requested, and\n        // the current chromosome\n        typeof (chromosomes) !== \"undefined\" &&\n        chromosomes.indexOf(chr) === -1\n      ) {\n        continue;\n      }\n\n      if (chr in lines === false) {\n        lines[chr] = [];\n      }\n\n      stain = columns[7];\n      if (columns[8]) {\n        // For e.g. acen and gvar, columns[8] (density) is undefined\n        stain += columns[8];\n      }\n\n      line = {\n        chr: chr,\n        bp: {\n          start: parseInt(columns[5], 10),\n          stop: parseInt(columns[6], 10)\n        },\n        iscn: {\n          start: parseInt(columns[3], 10),\n          stop: parseInt(columns[4], 10)\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[1] + columns[2],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  } else if (source === 'ucsc') {\n    for (i = init; i < tsvLinesLength; i++) {\n      // #chrom chromStart  chromEnd  name  gieStain\n      // e.g. for fly:\n      // chr4\t69508\t108296\t102A1\tn/a\n      columns = tsvLines[i].split(delimiter);\n\n      if (columns[0] !== 'chr' + chromosomeName) {\n        continue;\n      }\n\n      stain = columns[4];\n      if (stain === 'n/a') {\n        stain = 'gpos100';\n      }\n      start = parseInt(columns[1], 10);\n      stop = parseInt(columns[2], 10);\n\n      line = {\n        chr: columns[0].split('chr')[1],\n        bp: {\n          start: start,\n          stop: stop\n        },\n        iscn: {\n          start: start,\n          stop: stop\n        },\n        px: {\n          start: -1,\n          stop: -1,\n          width: -1\n        },\n        name: columns[3],\n        stain: stain,\n        taxid: taxid\n      };\n\n      lines[chr].push(line);\n    }\n  }\n\n  return lines;\n};\n\n/**\n* Generates a model object for each chromosome\n* containing information on its name, DOM ID,\n* length in base pairs or ISCN coordinates,\n* cytogenetic bands, centromere position, etc.\n*/\nIdeogram.prototype.getChromosomeModel = function(bands, chromosome, taxid,\n  chrIndex) {\n  var chr = {},\n    band,\n    width, pxStop,\n    chrHeight = this.config.chrHeight,\n    maxLength = this.maxLength,\n    chrLength,\n    cs, hasBands;\n\n  cs = this.coordinateSystem;\n  hasBands = (typeof bands !== \"undefined\");\n\n  if (hasBands) {\n    chr.name = chromosome;\n    chr.length = bands[bands.length - 1][cs].stop;\n    chr.type = \"nuclear\";\n  } else {\n    chr = chromosome;\n  }\n\n  chr.chrIndex = chrIndex;\n\n  chr.id = \"chr\" + chr.name + \"-\" + taxid;\n\n  if (this.config.fullChromosomeLabels === true) {\n    var orgName = this.organisms[taxid].scientificNameAbbr;\n    chr.name = orgName + \" chr\" + chr.name;\n  }\n\n  chrLength = chr.length;\n\n  pxStop = 0;\n\n  if (hasBands) {\n    for (var i = 0; i < bands.length; i++) {\n      band = bands[i];\n      var csLength = band[cs].stop - band[cs].start;\n      width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n      bands[i].px = {start: pxStop, stop: pxStop + width, width: width};\n\n      pxStop = bands[i].px.stop;\n\n      if (hasBands && band.stain === \"acen\" && band.name[0] === \"p\") {\n        chr.pcenIndex = i;\n      }\n    }\n  } else {\n    pxStop = chrHeight * chr.length / maxLength[cs];\n  }\n\n  chr.width = pxStop;\n\n  chr.scale = {};\n\n  // TODO:\n  //\n  // A chromosome-level scale property is likely\n  // nonsensical for any chromosomes that have cytogenetic band data.\n  // Different bands tend to have ratios between number of base pairs\n  // and physical length.\n  //\n  // However, a chromosome-level scale property is likely\n  // necessary for chromosomes that do not have band data.\n  //\n  // This needs further review.\n  if (this.config.multiorganism === true) {\n    chr.scale.bp = 1;\n    // chr.scale.bp = band.iscn.stop / band.bp.stop;\n    chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n  } else {\n    chr.scale.bp = chrHeight / maxLength.bp;\n    if (hasBands) {\n      chr.scale.iscn = chrHeight / maxLength.iscn;\n    }\n  }\n  chr.bands = bands;\n\n  chr.centromerePosition = \"\";\n  if (\n    hasBands && bands[0].name[0] === 'p' && bands[1].name[0] === 'q' &&\n    bands[0].bp.stop - bands[0].bp.start < 2E6\n  ) {\n    // As with almost all mouse chromosome, chimpanzee chr22\n    chr.centromerePosition = \"telocentric\";\n\n    // Remove placeholder pter band\n    chr.bands = chr.bands.slice(1);\n  }\n\n  if (hasBands && chr.bands.length === 1) {\n    // Encountered when processing an assembly that has chromosomes with\n    // centromere data, but this chromosome does not.\n    // Example: chromosome F1 in Felis catus.\n    delete chr.bands;\n  }\n\n  return chr;\n};\n\n/**\n* Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n* If ideogram configuration has 'fullChromosomeLabels: True',\n* then labels includes name of taxon, which can help when\n* depicting orthologs.\n*/\nIdeogram.prototype.drawChromosomeLabels = function() {\n  var ideo = this;\n\n  var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n  var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n  var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes set's labels\n  d3.selectAll(ideo.selector + \" .chromosome-set-container\")\n        .append(\"text\")\n        .data(ideo.chromosomesArray)\n        .attr(\"class\", 'chromosome-set-label ' + chromosomeLabelClass)\n        .attr(\"transform\", chrSetLabelTranslate)\n        .attr(\"x\", chrSetLabelXPosition)\n        .attr(\"y\", function(d, i) {\n          return ideo._layout.getChromosomeSetLabelYPosition(i);\n        })\n        .attr(\"text-anchor\", ideo._layout.getChromosomeSetLabelAnchor())\n        .each(function(d) {\n            // Get label lines\n          var lines;\n          if (d.name.indexOf(' ') === -1) {\n            lines = [d.name];\n          } else {\n            lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n          }\n\n          // Render label lines\n          d3.select(this).selectAll('tspan')\n            .data(lines)\n            .enter()\n            .append('tspan')\n            .attr('dy', function(d, i) {\n              return i * -1.2 + 'em';\n            })\n            .attr('x', ideo._layout.getChromosomeSetLabelXPosition())\n            .attr('class', function(a, i) {\n              var fullLabels = ideo.config.fullChromosomeLabels;\n              return i === 1 && fullLabels ? 'italic' : null;\n            }).text(String);\n        });\n\n  var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n  // Append chromosomes labels\n  d3.selectAll(ideo.selector + \" .chromosome-set-container\")\n        .each(function(a, chrSetNumber) {\n          d3.select(this).selectAll(\".chromosome\")\n                .append(\"text\")\n                .attr(\"class\", \"chrLabel\")\n                .attr(\"transform\", setLabelTranslate)\n                .attr(\"x\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelXPosition(i);\n                }).attr(\"y\", function(d, i) {\n                  return ideo._layout.getChromosomeLabelYPosition(i);\n                }).text(function(d, chrNumber) {\n                  return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n                }).attr(\"text-anchor\", \"middle\");\n        });\n};\n\n/**\n* Draws labels and stalks for cytogenetic bands.\n*\n* Band labels are text like \"p11.11\".\n* Stalks are small lines that visually connect labels to their bands.\n*/\nIdeogram.prototype.drawBandLabels = function(chromosomes) {\n  var i, chr, chrs, taxid, ideo, chrModel;\n\n  ideo = this;\n\n  chrs = [];\n\n  for (taxid in chromosomes) {\n    for (chr in chromosomes[taxid]) {\n      chrs.push(chromosomes[taxid][chr]);\n    }\n  }\n\n  var textOffsets = {};\n\n  chrIndex = 0;\n  for (i = 0; i < chrs.length; i++) {\n    chrIndex += 1;\n\n    chrModel = chrs[i];\n\n    chr = d3.select(ideo.selector + \" #\" + chrModel.id);\n\n    // var chrMargin = this.config.chrMargin * chrIndex,\n    //   lineY1, lineY2;\n    //\n    // lineY1 = chrMargin;\n    // lineY2 = chrMargin - 8;\n    //\n    // if (\n    //   chrIndex === 1 &&\n    //   \"perspective\" in this.config && this.config.perspective === \"comparative\"\n    // ) {\n    //   lineY1 += 18;\n    //   lineY2 += 18;\n    // }\n\n    textOffsets[chrModel.id] = [];\n\n    chr.selectAll(\"text\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n        .attr(\"class\", function(d, i) {\n          return \"bandLabel bsbsl-\" + i;\n        })\n        .attr(\"transform\", function(d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          // var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        })\n        .append(\"text\")\n        .attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i))\n        .text(function(d) {\n          return d.name;\n        });\n\n    // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n    // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n    chr.selectAll(\"line.bandLabelStalk\")\n      .data(chrModel.bands)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", function(d, i) {\n        return \"bandLabelStalk bsbsl-\" + i;\n      })\n      .attr(\"transform\", function(d) {\n        var x, y;\n\n        x = ideo.round(d.px.start + d.px.width / 2);\n\n        textOffsets[chrModel.id].push(x + 13);\n        y = -10;\n\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n        .append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", function() {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        }).attr(\"x2\", 0)\n        .attr(\"y2\", function() {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n  }\n\n  for (i = 0; i < chrs.length; i++) {\n    chrModel = chrs[i];\n\n    var textsLength = textOffsets[chrModel.id].length,\n      overlappingLabelXRight,\n      index,\n      indexesToShow = [],\n      prevHiddenBoxIndex,\n      xLeft,\n      prevLabelXRight,\n      textPadding;\n\n    overlappingLabelXRight = 0;\n\n    textPadding = 5;\n\n    for (index = 0; index < textsLength; index++) {\n      // Ensures band labels don't overlap\n\n      xLeft = textOffsets[chrModel.id][index];\n\n      if (xLeft < overlappingLabelXRight + textPadding === false) {\n        indexesToShow.push(index);\n      } else {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n        continue;\n      }\n\n      if (prevHiddenBoxIndex !== index) {\n        // This getBoundingClientRect() forces Chrome's\n        // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n        // TODO: This forced synchronous layout would be nice to eliminate.\n        // prevTextBox = texts[index].getBoundingClientRect();\n        // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n        // TODO: Account for number of characters in prevTextBoxWidth,\n        // maybe also zoom.\n        prevTextBoxLeft = textOffsets[chrModel.id][index];\n        prevTextBoxWidth = 36;\n\n        prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n      }\n\n      if (\n        xLeft < prevLabelXRight + textPadding\n      ) {\n        prevHiddenBoxIndex = index;\n        overlappingLabelXRight = prevLabelXRight;\n      } else {\n        indexesToShow.push(index);\n      }\n    }\n\n    var selectorsToShow = [],\n      ithLength = indexesToShow.length,\n      j;\n\n    for (j = 0; j < ithLength; j++) {\n      index = indexesToShow[j];\n      selectorsToShow.push(\"#\" + chrModel.id + \" .bsbsl-\" + index);\n    }\n\n    this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n  }\n};\n\n// Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\nIdeogram.prototype.rotateChromosomeLabels = function(chr, chrIndex,\n  orientation, scale) {\n  var chrMargin, chrWidth, ideo, x, y,\n    numAnnotTracks, scaleSvg, tracksHeight;\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n  numAnnotTracks = this.config.numAnnotTracks;\n\n  ideo = this;\n\n  if (\n    typeof (scale) !== \"undefined\" &&\n    scale.hasOwnProperty(\"x\") &&\n    !(scale.x === 1 && scale.y === 1)\n  ) {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n    x = -6;\n    y = (scale === \"\" ? -16 : -14);\n  } else {\n    x = -8;\n    y = -16;\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  }\n\n  if (orientation === \"vertical\" || orientation === \"\") {\n    var ci = chrIndex - 1;\n\n    if (numAnnotTracks > 1 || orientation === \"\") {\n      ci -= 1;\n    }\n\n    chrMargin2 = -4;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n    }\n\n    chrMargin = ideo.config.chrMargin * ci;\n\n    if (numAnnotTracks > 1 === false) {\n      chrMargin += 1;\n    }\n\n    y = chrMargin + chrMargin2;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", scaleSvg)\n      .selectAll(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y);\n  } else {\n    chrIndex -= 1;\n\n    chrMargin2 = -chrWidth - 2;\n    if (ideo.config.showBandLabels === true) {\n      chrMargin2 = ideo.config.chrMargin + 8;\n    }\n\n    tracksHeight = ideo.config.annotTracksHeight;\n    if (ideo.config.annotationsLayout !== \"overlay\") {\n      tracksHeight *= 2;\n    }\n\n    chrMargin = ideo.config.chrMargin * chrIndex;\n    x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n    x /= scale.x;\n\n    chr.selectAll(\"text.chrLabel\")\n      .attr(\"transform\", \"rotate(-90)\" + scaleSvg)\n      .selectAll(\"tspan\")\n      .attr(\"x\", x)\n      .attr(\"y\", y);\n  }\n};\n\n/**\n* Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n*\n* This method includes proportional scaling, which ensures that\n* while the parent chromosome group is scaled strongly in one dimension to fill\n* available space, the text in the chromosome's band labels is\n* not similarly distorted, and remains readable.\n*/\nIdeogram.prototype.rotateBandLabels = function(chr, chrIndex, scale) {\n  var chrMargin, scaleSvg,\n    orientation, bandLabels,\n    ideo = this;\n\n  bandLabels = chr.selectAll(\".bandLabel\");\n\n  chrWidth = this.config.chrWidth;\n  chrMargin = this.config.chrMargin * chrIndex;\n\n  orientation = chr.attr(\"data-orientation\");\n\n  if (typeof (scale) === \"undefined\") {\n    scale = {x: 1, y: 1};\n    scaleSvg = \"\";\n  } else {\n    scaleSvg = \"scale(\" + scale.x + \",\" + scale.y + \")\";\n  }\n\n  if (\n    chrIndex === 1 &&\n    \"perspective\" in this.config && this.config.perspective === \"comparative\"\n  ) {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = (8 - chrMargin) - 26;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"text-anchor\", \"end\");\n  } else if (orientation === \"vertical\") {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = 8 - chrMargin;\n        y = ideo.round(2 + d.px.start + d.px.width / 2);\n        return \"rotate(-90)translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n  } else {\n    bandLabels\n      .attr(\"transform\", function(d) {\n        var x, y;\n        x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n        y = chrMargin - 10;\n        return \"translate(\" + x + \",\" + y + \")\";\n      })\n      .selectAll(\"text\")\n        .attr(\"transform\", scaleSvg);\n\n    chr.selectAll(\".bandLabelStalk line\")\n      .attr(\"transform\", scaleSvg);\n  }\n};\n\nIdeogram.prototype.round = function(coord) {\n  // Rounds an SVG coordinates to two decimal places\n  // e.g. 42.1234567890 -> 42.12\n  // Per http://stackoverflow.com/a/9453447, below method is fastest\n  return Math.round(coord * 100) / 100;\n};\n\n/**\n* Renders all the bands and outlining boundaries of a chromosome.\n*/\nIdeogram.prototype.drawChromosome = function(chrModel, chrIndex, container, k) {\n\n  var chrMargin = this.config.chrMargin;\n\n    // Get chromosome model adapter class\n  var adapter = ModelAdapter.getInstance(chrModel);\n\n    // Append chromosome's container\n  var chromosome = container\n        .append(\"g\")\n        .attr(\"id\", chrModel.id)\n        .attr(\"class\", \"chromosome \" + adapter.getCssClass())\n        .attr(\"transform\", \"translate(0, \" + k * chrMargin + \")\");\n\n    // Render chromosome\n  return Chromosome.getInstance(adapter, this.config, this)\n        .render(chromosome, chrIndex, k);\n};\n\n/**\n* Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n* Useful for focusing or defocusing a particular chromosome\n*/\nIdeogram.prototype.rotateAndToggleDisplay = function(chromosome) {\n  /*\n   * Do nothing if taxId not defined. But it should be defined.\n   * To fix that bug we should have a way to find chromosome set number.\n   */\n  if (!this.config.taxid) {\n    return;\n  }\n\n  var chrSetNumber =\n    Number(d3.select(chromosome.parentNode).attr('data-set-number'));\n\n  var chrNumber = Array.prototype.slice.call(\n          d3.select(chromosome.parentNode).selectAll(\"g.chromosome\")._groups[0]\n      ).indexOf(chromosome);\n\n  return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertBpToPx = function(chr, bp) {\n  var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart,\n    iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    offset = this._bandsXOffset;\n    bpStart = band.bp.start;\n    bpStop = band.bp.stop;\n    bpLength = bpStop - bpStart;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n    iscnLength = iscnStop - iscnStart;\n    pxStart = band.px.start;\n    pxLength = band.px.width;\n\n    if (bp >= bpStart && bp <= bpStop) {\n      bpToIscnScale = iscnLength / bpLength;\n      iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n      px = offset + pxStart + (pxLength * (iscn - iscnStart) / (iscnLength));\n\n      return px;\n    }\n  }\n\n  throw new Error(\n    \"Base pair out of range.  \" +\n    \"bp: \" + bp + \"; length of chr\" + chr.name + \": \" + band.bp.stop\n  );\n};\n\n/**\n* Converts base pair coordinates to pixel offsets.\n* Bp-to-pixel scales differ among cytogenetic bands.\n*/\nIdeogram.prototype.convertPxToBp = function(chr, px) {\n  var i, band, pxToIscnScale, iscn,\n    pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n  for (i = 0; i < chr.bands.length; i++) {\n    band = chr.bands[i];\n\n    pxStart = band.px.start;\n    pxStop = band.px.stop;\n    iscnStart = band.iscn.start;\n    iscnStop = band.iscn.stop;\n\n    if (px >= pxStart && px <= pxStop) {\n      iscnLength = iscnStop - iscnStart;\n      pxLength = pxStop - pxStart;\n      bpLength = band.bp.stop - band.bp.start;\n\n      pxToIscnScale = iscnLength / pxLength;\n      iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n      bp = band.bp.start + (bpLength * (iscn - iscnStart) / iscnLength);\n\n      return Math.round(bp);\n    }\n  }\n\n  throw new Error(\n    \"Pixel out of range.  \" +\n    \"px: \" + bp + \"; length of chr\" + chr.name + \": \" + pxStop\n  );\n};\n\n/**\n* Draws a trapezoid connecting a genomic range on\n* one chromosome to a genomic range on another chromosome;\n* a syntenic region.\n*/\nIdeogram.prototype.drawSynteny = function(syntenicRegions) {\n  var t0 = new Date().getTime();\n\n  var r1, r2,\n    syntenies,\n    i, color, opacity,\n    regionID,\n    ideo = this;\n\n  syntenies = d3.select(ideo.selector)\n    .insert(\"g\", \":first-child\")\n    .attr(\"class\", \"synteny\");\n\n  for (i = 0; i < syntenicRegions.length; i++) {\n    regions = syntenicRegions[i];\n\n    r1 = regions.r1;\n    r2 = regions.r2;\n\n    color = \"#CFC\";\n    if (\"color\" in regions) {\n      color = regions.color;\n    }\n\n    opacity = 1;\n    if (\"opacity\" in regions) {\n      opacity = regions.opacity;\n    }\n\n    r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n    r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n    r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n    r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n    regionID = (\n      r1.chr.id + \"_\" + r1.start + \"_\" + r1.stop + \"_\" +\n      \"__\" +\n      r2.chr.id + \"_\" + r2.start + \"_\" + r2.stop\n    );\n\n    syntenicRegion = syntenies.append(\"g\")\n      .attr(\"class\", \"syntenicRegion\")\n      .attr(\"id\", regionID)\n      .on(\"click\", function() {\n        var activeRegion = this;\n        var others = d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          });\n\n        others.classed(\"hidden\", !others.classed(\"hidden\"));\n      })\n      .on(\"mouseover\", function() {\n        var activeRegion = this;\n        d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .filter(function() {\n            return (this !== activeRegion);\n          })\n          .classed(\"ghost\", true);\n      })\n      .on(\"mouseout\", function() {\n        d3.selectAll(ideo.selector + \" .syntenicRegion\")\n          .classed(\"ghost\", false);\n      });\n\n    var x1 = this._layout.getChromosomeSetYTranslate(0);\n    var x2 = this._layout.getChromosomeSetYTranslate(1) - ideo.config.chrWidth;\n\n    syntenicRegion.append(\"polygon\")\n      .attr(\"points\",\n        x1 + ', ' + r1.startPx + ' ' +\n        x1 + ', ' + r1.stopPx + ' ' +\n        x2 + ', ' + r2.stopPx + ' ' +\n        x2 + ', ' + r2.startPx\n      )\n      .attr('style', \"fill: \" + color + \"; fill-opacity: \" + opacity);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.startPx)\n      .attr(\"y2\", r2.startPx);\n\n    syntenicRegion.append(\"line\")\n      .attr(\"class\", \"syntenyBorder\")\n      .attr(\"x1\", x1)\n      .attr(\"x2\", x2)\n      .attr(\"y1\", r1.stopPx)\n      .attr(\"y2\", r2.stopPx);\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in drawSyntenicRegions: \" + (t1 - t0) + \" ms\");\n  }\n};\n\n/**\n* Initializes various annotation settings.  Constructor help function.\n*/\nIdeogram.prototype.initAnnotSettings = function() {\n  if (this.config.annotationsPath || this.config.localAnnotationsPath ||\n    this.annots || this.config.annotations) {\n    if (!this.config.annotationHeight) {\n      var annotHeight = Math.round(this.config.chrHeight / 100);\n      this.config.annotationHeight = annotHeight;\n    }\n\n    if (this.config.annotationTracks) {\n      this.config.numAnnotTracks = this.config.annotationTracks.length;\n    } else {\n      this.config.numAnnotTracks = 1;\n    }\n    this.config.annotTracksHeight =\n      this.config.annotationHeight * this.config.numAnnotTracks;\n\n    if (typeof this.config.barWidth === \"undefined\") {\n      this.config.barWidth = 3;\n    }\n  } else {\n    this.config.annotTracksHeight = 0;\n  }\n\n  if (typeof this.config.annotationsColor === \"undefined\") {\n    this.config.annotationsColor = \"#F00\";\n  }\n};\n\n/**\n* Draws annotations defined by user\n*/\nIdeogram.prototype.drawAnnots = function(friendlyAnnots) {\n  var ideo = this,\n    i, j, annot,\n    rawAnnots = [],\n    rawAnnot, keys,\n    chr,\n    chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n  // Occurs when filtering\n  if (\"annots\" in friendlyAnnots[0]) {\n    return ideo.drawProcessedAnnots(friendlyAnnots);\n  }\n\n  for (chr in chrs) {\n    rawAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < friendlyAnnots.length; i++) {\n    annot = friendlyAnnots[i];\n\n    for (j = 0; j < rawAnnots.length; j++) {\n      if (annot.chr === rawAnnots[j].chr) {\n        rawAnnot = [\n          annot.name,\n          annot.start,\n          annot.stop - annot.start\n        ];\n        if (\"color\" in annot) {\n          rawAnnot.push(annot.color);\n        }\n        if (\"shape\" in annot) {\n          rawAnnot.push(annot.shape);\n        }\n        rawAnnots[j].annots.push(rawAnnot);\n        break;\n      }\n    }\n  }\n\n  keys = [\"name\", \"start\", \"length\"];\n  if (\"color\" in friendlyAnnots[0]) {\n    keys.push(\"color\");\n  }\n  if (\"shape\" in friendlyAnnots[0]) {\n    keys.push(\"shape\");\n  }\n  ideo.rawAnnots = {keys: keys, annots: rawAnnots};\n\n  ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n  ideo.drawProcessedAnnots(ideo.annots);\n};\n\n/**\n* Proccesses genome annotation data.\n* Genome annotations represent features like a gene, SNP, etc. as\n* a small graphical object on or beside a chromosome.\n* Converts raw annotation data from server, which is structured as\n* an array of arrays, into a more verbose data structure consisting\n* of an array of objects.\n* Also adds pixel offset information.\n*/\nIdeogram.prototype.processAnnotData = function(rawAnnots) {\n  var keys,\n    i, j, annot, annots, annotsByChr,\n    chr,\n    chrModel, ra,\n    startPx, stopPx, px,\n    color,\n    ideo = this;\n\n  keys = rawAnnots.keys;\n  rawAnnots = rawAnnots.annots;\n\n  annots = [];\n\n  for (i = 0; i < rawAnnots.length; i++) {\n    annotsByChr = rawAnnots[i];\n\n    annots.push({chr: annotsByChr.chr, annots: []});\n\n    for (j = 0; j < annotsByChr.annots.length; j++) {\n      chr = annotsByChr.chr;\n      ra = annotsByChr.annots[j];\n      annot = {};\n\n      for (var k = 0; k < keys.length; k++) {\n        annot[keys[k]] = ra[k];\n      }\n\n      annot.stop = annot.start + annot.length;\n\n      chrModel = ideo.chromosomes[ideo.config.taxid][chr];\n\n      startPx = ideo.convertBpToPx(chrModel, annot.start);\n      stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n      px = Math.round((startPx + stopPx) / 2) - 28;\n\n      color = ideo.config.annotationsColor;\n      if (ideo.config.annotationTracks) {\n        annot.trackIndex = ra[3];\n        color = ideo.config.annotationTracks[annot.trackIndex].color;\n      } else {\n        annot.trackIndex = 0;\n      }\n\n      if ('color' in annot) {\n        color = annot.color;\n      }\n\n      annot.chr = chr;\n      annot.chrIndex = i;\n      annot.px = px;\n      annot.startPx = startPx - 30;\n      annot.stopPx = stopPx - 30;\n      annot.color = color;\n\n      annots[i].annots.push(annot);\n    }\n  }\n\n  return annots;\n};\n\n/*\n* Can be used for bar chart or sparkline\n*/\nIdeogram.prototype.getHistogramBars = function(annots) {\n  var t0 = new Date().getTime();\n\n  var i, j, chr,\n    chrModels, chrPxStop, px,\n    chrAnnots, chrName, chrIndex, annot,\n    bars, bar, barPx, nextBarPx, barWidth,\n    maxAnnotsPerBar, color,\n    firstGet = false,\n    histogramScaling,\n    ideo = this;\n\n  bars = [];\n\n  barWidth = ideo.config.barWidth;\n  chrModels = ideo.chromosomes[ideo.config.taxid];\n  color = ideo.config.annotationsColor;\n\n  if (\"histogramScaling\" in ideo.config) {\n    histogramScaling = ideo.config.histogramScaling;\n  } else {\n    histogramScaling = \"relative\";\n  }\n\n  if (typeof ideo.maxAnnotsPerBar === \"undefined\") {\n    ideo.maxAnnotsPerBar = {};\n    firstGet = true;\n  }\n\n  for (chr in chrModels) {\n    chrModel = chrModels[chr];\n    chrIndex = chrModel.chrIndex;\n    lastBand = chrModel.bands[chrModel.bands.length - 1];\n    chrPxStop = lastBand.px.stop;\n    numBins = Math.round(chrPxStop / barWidth);\n    bar = {chr: chr, annots: []};\n    for (i = 0; i < numBins; i++) {\n      px = i * barWidth - ideo.bump;\n      bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n      bar.annots.push({\n        bp: bp,\n        px: px - ideo.bump,\n        count: 0,\n        chrIndex: chrIndex,\n        chrName: chr,\n        color: color,\n        annots: []\n      });\n    }\n    bars.push(bar);\n  }\n\n  for (chr in annots) {\n    chrAnnots = annots[chr].annots;\n    chrName = annots[chr].chr;\n    chrModel = chrModels[chrName];\n    chrIndex = chrModel.chrIndex - 1;\n    barAnnots = bars[chrIndex].annots;\n    for (i = 0; i < chrAnnots.length; i++) {\n      annot = chrAnnots[i];\n      px = annot.px - ideo.bump;\n      for (j = 0; j < barAnnots.length; j++) {\n        barPx = barAnnots[j].px;\n        nextBarPx = barPx + barWidth;\n        if (j === barAnnots.length - 1) {\n          nextBarPx += barWidth;\n        }\n        if (px >= barPx && px < nextBarPx) {\n          bars[chrIndex].annots[j].count += 1;\n          bars[chrIndex].annots[j].annots.push(annot);\n          break;\n        }\n      }\n    }\n  }\n\n  if (firstGet === true || histogramScaling === \"relative\") {\n    maxAnnotsPerBar = 0;\n    for (i = 0; i < bars.length; i++) {\n      annots = bars[i].annots;\n      for (j = 0; j < annots.length; j++) {\n        barCount = annots[j].count;\n        if (barCount > maxAnnotsPerBar) {\n          maxAnnotsPerBar = barCount;\n        }\n      }\n    }\n    ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n  }\n\n  // Set each bar's height to be proportional to\n  // the height of the bar with the most annotations\n  for (i = 0; i < bars.length; i++) {\n    annots = bars[i].annots;\n    for (j = 0; j < annots.length; j++) {\n      barCount = annots[j].count;\n      height = (barCount / ideo.maxAnnotsPerBar[chr]) * ideo.config.chrMargin;\n      // console.log(height)\n      bars[i].annots[j].height = height;\n    }\n  }\n\n  var t1 = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time spent in getHistogramBars: \" + (t1 - t0) + \" ms\");\n  }\n\n  ideo.bars = bars;\n\n  return bars;\n};\n\n/**\n* Fills out annotations data structure such that its top-level list of arrays\n* matches that of this ideogram's chromosomes list in order and number\n* Fixes https://github.com/eweitz/ideogram/issues/66\n*/\nIdeogram.prototype.fillAnnots = function(annots) {\n  var filledAnnots, chrs, chrArray, i, chr, annot, chrIndex;\n\n  filledAnnots = [];\n  chrs = [];\n  chrArray = this.chromosomesArray;\n\n  for (i = 0; i < chrArray.length; i++) {\n    chr = chrArray[i].name;\n    chrs.push(chr);\n    filledAnnots.push({chr: chr, annots: []});\n  }\n\n  for (i = 0; i < annots.length; i++) {\n    annot = annots[i];\n    chrIndex = chrs.indexOf(annot.chr);\n    if (chrIndex !== -1) {\n      filledAnnots[chrIndex] = annot;\n    }\n  }\n\n  return filledAnnots;\n};\n\n/**\n* Draws genome annotations on chromosomes.\n* Annotations can be rendered as either overlaid directly\n* on a chromosome, or along one or more \"tracks\"\n* running parallel to each chromosome.\n*/\nIdeogram.prototype.drawProcessedAnnots = function(annots) {\n  var chrWidth, layout,\n    annotHeight, triangle, circle, r, chrAnnot,\n    x1, x2, y1, y2,\n    filledAnnots,\n    ideo = this;\n\n  chrMargin = this.config.chrMargin;\n  chrWidth = this.config.chrWidth;\n\n  layout = \"tracks\";\n  if (this.config.annotationsLayout) {\n    layout = this.config.annotationsLayout;\n  }\n\n  if (layout === \"histogram\") {\n    annots = ideo.getHistogramBars(annots);\n  }\n\n  annotHeight = ideo.config.annotationHeight;\n\n  triangle =\n    'l -' + annotHeight + ' ' +\n    (2 * annotHeight) +\n    ' l ' + (2 * annotHeight) + ' 0 z';\n\n  // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n  // Circles are supported natively via <circle>, but having it as a path\n  // simplifies handling triangles, circles and other shapes in the same\n  // D3 call\n  r = annotHeight;\n  circle =\n    'm -' + r + ', ' + r +\n    'a ' + r + ',' + r + ' 0 1,0 ' + (r * 2) + ',0' +\n    'a ' + r + ',' + r + ' 0 1,0 -' + (r * 2) + ',0';\n\n  filledAnnots = ideo.fillAnnots(annots);\n\n  chrAnnot = d3.selectAll(ideo.selector + \" .chromosome\")\n    .data(filledAnnots)\n      .selectAll(\"path.annot\")\n      .data(function(d) {\n        return d.annots;\n      })\n      .enter();\n\n  if (layout === \"tracks\") {\n    chrAnnot\n      .append(\"g\")\n      .attr(\"id\", function(d) {\n        return d.id;\n      })\n      .attr(\"class\", \"annot\")\n      .attr(\"transform\", function(d) {\n        var y = ideo.config.chrWidth + (d.trackIndex * annotHeight * 2);\n        return \"translate(\" + d.px + \",\" + y + \")\";\n      })\n      .append(\"path\")\n      .attr(\"d\", function(d) {\n        if (!d.shape || d.shape === \"triangle\") {\n          return \"m0,0\" + triangle;\n        } else if (d.shape === \"circle\") {\n          return circle;\n        }\n      })\n      .attr(\"fill\", function(d) {\n        return d.color;\n      });\n  } else if (layout === \"overlay\") {\n      // Overlaid annotations appear directly on chromosomes\n\n    chrAnnot.append(\"polygon\")\n        .attr(\"id\", function(d) {\n          return d.id;\n        })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          if (d.stopPx - d.startPx > 1) {\n            x1 = d.startPx;\n            x2 = d.stopPx;\n          } else {\n            x1 = d.px - 0.5;\n            x2 = d.px + 0.5;\n          }\n          y1 = chrWidth;\n          y2 = 0;\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  } else if (layout === \"histogram\") {\n    chrAnnot.append(\"polygon\")\n        // .attr(\"id\", function(d, i) { return d.id; })\n        .attr(\"class\", \"annot\")\n        .attr(\"points\", function(d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return (\n            x1 + \",\" + y1 + \" \" +\n            x2 + \",\" + y1 + \" \" +\n            x2 + \",\" + y2 + \" \" +\n            x1 + \",\" + y2\n          );\n        })\n        .attr(\"fill\", function(d) {\n          return d.color;\n        });\n  }\n\n  if (ideo.onDrawAnnotsCallback) {\n    ideo.onDrawAnnotsCallback();\n  }\n};\n\nIdeogram.prototype.onBrushMove = function() {\n  call(this.onBrushMoveCallback);\n};\n\nIdeogram.prototype.createBrush = function(from, to) {\n  var ideo = this,\n    width = ideo.config.chrWidth + 6.5,\n    length = ideo.config.chrHeight,\n    chr = ideo.chromosomesArray[0],\n    chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n    x0, x1,\n    xOffset = this._layout.getMargin().left,\n    xScale = d3.scaleLinear()\n          .domain([0, d3.max(chr.bands, function(band) {\n            return band.bp.stop;\n          })]).range([xOffset, d3.max(chr.bands, function(band) {\n            return band.px.stop;\n          }) + xOffset]);\n\n  if (typeof from === \"undefined\") {\n    from = Math.floor(chrLengthBp / 10);\n  }\n\n  if (typeof right === \"undefined\") {\n    to = Math.ceil(from * 2);\n  }\n\n  x0 = ideo.convertBpToPx(chr, from);\n  x1 = ideo.convertBpToPx(chr, to);\n\n  ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n  ideo.brush = d3.brushX()\n    .extent([[xOffset, 0], [length + xOffset, width]])\n    .on(\"brush\", onBrushMove);\n\n  var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n  var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n  d3.select(ideo.selector).append(\"g\")\n    .attr(\"class\", \"brush\")\n    .attr(\"transform\", \"translate(0, \" + yOffset + \")\")\n    .call(ideo.brush)\n    .call(ideo.brush.move, [x0, x1]);\n\n  function onBrushMove() {\n    var extent = d3.event.selection.map(xScale.invert),\n      from = Math.floor(extent[0]),\n      to = Math.ceil(extent[1]);\n\n    ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n    if (ideo.onBrushMove) {\n      ideo.onBrushMoveCallback();\n    }\n  }\n};\n\n/**\n* Called when Ideogram has finished initializing.\n* Accounts for certain ideogram properties not being set until\n* asynchronous requests succeed, etc.\n*/\nIdeogram.prototype.onLoad = function() {\n  call(this.onLoadCallback);\n};\n\nIdeogram.prototype.onDrawAnnots = function() {\n  call(this.onDrawAnnotsCallback);\n};\n\nIdeogram.prototype.getBandColorGradients = function() {\n  var colors,\n    stain, color1, color2, color3,\n    css,\n    gradients = \"\";\n\n  colors = [\n    [\"gneg\", \"#FFF\", \"#FFF\", \"#DDD\"],\n    [\"gpos25\", \"#C8C8C8\", \"#DDD\", \"#BBB\"],\n    [\"gpos33\", \"#BBB\", \"#BBB\", \"#AAA\"],\n    [\"gpos50\", \"#999\", \"#AAA\", \"#888\"],\n    [\"gpos66\", \"#888\", \"#888\", \"#666\"],\n    [\"gpos75\", \"#777\", \"#777\", \"#444\"],\n    [\"gpos100\", \"#444\", \"#666\", \"#000\"],\n    [\"acen\", \"#FEE\", \"#FEE\", \"#FDD\"],\n    [\"noBands\", \"#BBB\", \"#BBB\", \"#AAA\"]\n  ];\n\n  for (var i = 0; i < colors.length; i++) {\n    stain = colors[i][0];\n    color1 = colors[i][1];\n    color2 = colors[i][2];\n    color3 = colors[i][3];\n    gradients +=\n      '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n    if (stain === \"gneg\") {\n      gradients +=\n        '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' +\n        '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n    } else {\n      gradients +=\n        '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' +\n        '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n    }\n    gradients +=\n      '</linearGradient>';\n  }\n\n  gradients +=\n    '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' +\n        'stroke-width:0.7;\" />' +\n    '</pattern>' +\n    '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(-30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' +\n          'stroke-width:0.7;\" />' +\n    '</pattern>';\n\n  gradients = \"<defs>\" + gradients + \"</defs>\";\n  css = \"<style>\" +\n    '.gneg {fill: url(\"#gneg\")} ' +\n    '.gpos25 {fill: url(\"#gpos25\")} ' +\n    '.gpos33 {fill: url(\"#gpos33\")} ' +\n    '.gpos50 {fill: url(\"#gpos50\")} ' +\n    '.gpos66 {fill: url(\"#gpos66\")} ' +\n    '.gpos75 {fill: url(\"#gpos75\")} ' +\n    '.gpos100 {fill: url(\"#gpos100\")} ' +\n    '.gpos {fill: url(\"#gpos100\")} ' +\n    '.acen {fill: url(\"#acen\")} ' +\n    '.stalk {fill: url(\"#stalk\")} ' +\n    '.gvar {fill: url(\"#gvar\")} ' +\n    '.noBands {fill: url(\"#noBands\")} ' +\n    '.chromosome {fill: url(\"#noBands\")} ' +\n  '</style>';\n  gradients = css + gradients;\n\n  // alert(gradients)\n\n  return gradients;\n};\n\n/*\n  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n*/\nIdeogram.prototype.getTaxidFromEutils = function(callback) {\n  var organism, taxonomySearch, taxid,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  taxonomySearch = ideo.esearch + \"&db=taxonomy&term=\" + organism;\n\n  d3.json(taxonomySearch, function(data) {\n    taxid = data.esearchresult.idlist[0];\n    return callback(taxid);\n  });\n};\n\n/**\n* Returns an array of taxids for the current ideogram\n* Also sets configuration parameters related to taxid(s), whether ideogram is\n* multiorganism, and adjusts chromosomes parameters as needed\n**/\nIdeogram.prototype.getTaxids = function(callback) {\n  var ideo = this,\n    taxid, taxids,\n    org, orgs, i,\n    taxidInit, tmpChrs,\n    assembly, chromosomes,\n    multiorganism;\n\n  taxidInit = \"taxid\" in ideo.config;\n\n  ideo.config.multiorganism = (\n    (\"organism\" in ideo.config && ideo.config.organism instanceof Array) ||\n    (taxidInit && ideo.config.taxid instanceof Array)\n  );\n\n  multiorganism = ideo.config.multiorganism;\n\n  if (\"organism\" in ideo.config) {\n    // Ideogram instance was constructed using common organism name(s)\n    if (multiorganism) {\n      orgs = ideo.config.organism;\n    } else {\n      orgs = [ideo.config.organism];\n    }\n\n    taxids = [];\n    tmpChrs = {};\n    for (i = 0; i < orgs.length; i++) {\n      // Gets a list of taxids from common organism names\n      org = orgs[i];\n      for (taxid in ideo.organisms) {\n        if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n          taxids.push(taxid);\n          if (multiorganism) {\n            // Adjusts 'chromosomes' configuration parameter to make object\n            // keys use taxid instead of common organism name\n            tmpChrs[taxid] = ideo.config.chromosomes[org];\n          }\n        }\n      }\n    }\n\n    if (taxids.length === 0) {\n      promise = new Promise(function(resolve) {\n        ideo.getTaxidFromEutils(resolve);\n      });\n\n      promise.then(function(data) {\n        var organism = ideo.config.organism,\n          dataDir = ideo.config.dataDir,\n          urlOrg = organism.replace(\" \", \"-\");\n\n        taxid = data;\n        taxids.push(taxid);\n\n        ideo.config.taxids = taxids;\n        ideo.organisms[taxid] = {\n          commonName: \"\",\n          scientificName: ideo.config.organism,\n          scientificNameAbbr: \"\"\n        };\n\n        var fullyBandedTaxids = ['9606', '10090', '10116'];\n        if (\n          fullyBandedTaxids.indexOf(taxid) !== -1 &&\n          ideo.config.showFullyBanded === false\n        ) {\n          urlOrg += '-no-bands';\n        }\n        var chromosomesUrl = dataDir + urlOrg + \".js\";\n\n        var promise = new Promise(function(resolve, reject) {\n          d3.request(chromosomesUrl).get(function(error, data) {\n            if (error) {\n              reject(Error(error));\n            }\n            resolve(data);\n          });\n        });\n\n        return promise\n          .then(\n            function(data) {\n              // Check if chromosome data exists locally.\n              // This is used for pre-processed centromere data,\n              // which is not accessible via EUtils.  See get_chromosomes.py.\n\n              var asmAndChrArray = [],\n                chromosomes = [],\n                seenChrs = {},\n                chr;\n\n              eval(data.response);\n\n              asmAndChrArray.push('');\n\n              for (var i = 0; i < chrBands.length; i++) {\n                chr = chrBands[i].split(' ')[0];\n                if (chr in seenChrs) {\n                  continue;\n                } else {\n                  chromosomes.push({name: chr, type: 'nuclear'});\n                  seenChrs[chr] = 1;\n                }\n              }\n              chromsomes = chromosomes.sort(ideo.sortChromosomes);\n              asmAndChrArray.push(chromosomes);\n              ideo.coordinateSystem = \"iscn\";\n              return asmAndChrArray;\n            },\n            function() {\n              return new Promise(function(resolve) {\n                ideo.coordinateSystem = \"bp\";\n                ideo.getAssemblyAndChromosomesFromEutils(resolve);\n              });\n            }\n          );\n      })\n      .then(function(asmChrArray) {\n        assembly = asmChrArray[0];\n        chromosomes = asmChrArray[1];\n\n        ideo.config.chromosomes = chromosomes;\n        ideo.organisms[taxid].assemblies = {\n          default: assembly\n        };\n\n        callback(taxids);\n      });\n    } else {\n      ideo.config.taxids = taxids;\n      if (multiorganism) {\n        ideo.config.chromosomes = tmpChrs;\n      }\n\n      callback(taxids);\n    }\n  } else {\n    if (multiorganism) {\n      ideo.coordinateSystem = \"bp\";\n      if (taxidInit) {\n        taxids = ideo.config.taxid;\n      }\n    } else {\n      if (taxidInit) {\n        taxids = [ideo.config.taxid];\n      }\n      ideo.config.taxids = taxids;\n    }\n\n    callback(taxids);\n  }\n};\n\nIdeogram.prototype.sortChromosomes = function(a, b) {\n  var aIsNuclear = a.type === \"nuclear\",\n    bIsNuclear = b.type === \"nuclear\",\n    aIsCP = a.type === \"chloroplast\",\n    bIsCP = b.type === \"chloroplast\",\n    aIsMT = a.type === \"mitochondrion\",\n    bIsMT = b.type === \"mitochondrion\";\n    // aIsPlastid = aIsMT && a.name !== \"MT\", // e.g. B1 in rice genome GCF_001433935.1\n    // bIsPlastid = bIsMT && b.name !== \"MT\";\n\n  if (aIsNuclear && bIsNuclear) {\n    return naturalSort(a.name, b.name);\n  } else if (!aIsNuclear && bIsNuclear) {\n    return 1;\n  } else if (aIsMT && bIsCP) {\n    return 1;\n  } else if (aIsCP && bIsMT) {\n    return -1;\n  } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n    return -1;\n  }\n};\n\n/**\n  Returns names and lengths of chromosomes for an organism's best-known\n  genome assembly.  Gets data from NCBI EUtils web API.\n*/\nIdeogram.prototype.getAssemblyAndChromosomesFromEutils = function(callback) {\n  var asmAndChrArray, // [assembly_accession, chromosome_objects_array]\n    assemblyAccession, chromosomes, asmSearch,\n    asmUid, asmSummary,\n    rsUid, nuccoreLink,\n    links, ntSummary,\n    results, result, cnIndex, chrName, chrLength, chromosome, type,\n    ideo = this;\n\n  organism = ideo.config.organism;\n\n  asmAndChrArray = [];\n  chromosomes = [];\n\n  asmSearch =\n    ideo.esearch +\n    \"&db=assembly\" +\n    \"&term=%22\" + organism + \"%22[organism]\" +\n      \"AND%20(%22latest%20refseq%22[filter])%20\" +\n      \"AND%20(%22chromosome%20level%22[filter]%20\" +\n      \"OR%20%22complete%20genome%22[filter])\";\n\n  var promise = d3.promise.json(asmSearch);\n\n  promise\n      .then(function(data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + \"&db=assembly&id=\" + asmUid;\n\n        return d3.promise.json(asmSummary);\n      })\n      .then(function(data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        var qs = \"&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=\" + rsUid;\n        nuccoreLink = ideo.elink + qs;\n\n        return d3.promise.json(nuccoreLink);\n      })\n      .then(function(data) {\n        links = data.linksets[0].linksetdbs[0].links.join(\",\");\n        ntSummary = ideo.esummary + \"&db=nucleotide&id=\" + links;\n\n        return d3.promise.json(ntSummary);\n      })\n      .then(function(data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === \"uids\") {\n            continue;\n          }\n\n          if (result.genome === \"mitochondrion\") {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split(\"|\").indexOf(\"plasmid\");\n              if (cnIndex === -1) {\n                chrName = \"MT\";\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                  // genome: \"mitochondrion\",\n                  // subtype: \"cell_line|plasmid\",\n                  // subname: \"A-58 CMS|B1\",\n                chrName = result.subname.split(\"|\")[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (\n            result.genome === \"chloroplast\" ||\n            result.genome === \"plastid\"\n          ) {\n            type = \"chloroplast\";\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = \"CP\";\n            } else {\n              continue;\n            }\n          } else {\n            type = \"nuclear\";\n            cnIndex = result.subtype.split(\"|\").indexOf(\"chromosome\");\n\n            chrName = result.subname.split(\"|\")[cnIndex];\n\n            if (\n              typeof chrName !== \"undefined\" &&\n              chrName.substr(0, 3) === \"chr\"\n            ) {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = \"bp\";\n\n        return callback(asmAndChrArray);\n      });\n};\n\nIdeogram.prototype.initDrawChromosomes = function(bandsArray) {\n  var ideo = this,\n    taxids = ideo.config.taxids,\n    taxid,\n    chrIndex = 0,\n    chrSetNumber = 0,\n    bands,\n    i, j, chrs, chromosome, chrModel,\n    defs, transform;\n\n  defs = d3.select(ideo.selector + \" defs\");\n\n  for (i = 0; i < taxids.length; i++) {\n    taxid = taxids[i];\n    chrs = ideo.config.chromosomes[taxid];\n\n    ideo.chromosomes[taxid] = {};\n\n    for (j = 0; j < chrs.length; j++) {\n      chromosome = chrs[j];\n      bands = bandsArray[chrIndex];\n      chrIndex += 1;\n\n      chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n      ideo.chromosomes[taxid][chromosome] = chrModel;\n      ideo.chromosomesArray.push(chrModel);\n\n      transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n      chrSetNumber += 1;\n\n      // Append chromosome set container\n      var container = d3.select(ideo.selector)\n        .append(\"g\")\n        .attr(\"class\", \"chromosome-set-container\")\n        .attr(\"data-set-number\", j)\n        .attr(\"transform\", transform)\n        .attr(\"id\", chrModel.id + \"-chromosome-set\");\n\n      var shape;\n      var numChrsInSet = 1;\n      if (ideo.ploidy > 1) {\n        numChrsInSet = this._ploidy.getChromosomesNumber(j);\n      }\n      for (var k = 0; k < this._ploidy.getChromosomesNumber(j); k++) {\n        shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n      }\n\n      defs.append(\"clipPath\")\n        .attr(\"id\", chrModel.id + \"-chromosome-set-clippath\")\n        .selectAll('path')\n        .data(shape)\n        .enter()\n        .append('path')\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n    }\n\n    if (ideo.config.showBandLabels === true) {\n      ideo.drawBandLabels(ideo.chromosomes);\n    }\n  }\n};\n\n// Get ideogram SVG container\nIdeogram.prototype.getSvg = function() {\n  return d3.select(this.selector).node();\n};\n\n/*\n* Completes default ideogram initialization\n* by calling downstream functions to\n* process raw band data into full JSON objects,\n* render chromosome and cytoband figures and labels,\n* apply initial graphical transformations,\n* hide overlapping band labels, and\n* execute callbacks defined by client code\n*/\nIdeogram.prototype.processBandData = function() {\n  var bandsArray, j, k, chromosome, bands,\n    chrLength, chr,\n    bandData, bandsByChr,\n    taxid, taxids, chrs, chrsByTaxid,\n    ideo = this;\n\n  bandsArray = [];\n  maxLength = 0;\n\n  if (ideo.config.multiorganism === true) {\n    ideo.coordinateSystem = \"bp\";\n    taxids = ideo.config.taxids;\n    for (i = 0; i < taxids.length; i++) {\n      taxid = taxids[i];\n    }\n  } else {\n    if (typeof ideo.config.taxid === \"undefined\") {\n      ideo.config.taxid = ideo.config.taxids[0];\n    }\n    taxid = ideo.config.taxid;\n    taxids = [taxid];\n    ideo.config.taxids = taxids;\n  }\n\n  if (\"chromosomes\" in ideo.config) {\n    chrs = ideo.config.chromosomes;\n  }\n  if (ideo.config.multiorganism) {\n    chrsByTaxid = chrs;\n  }\n\n  ideo.config.chromosomes = {};\n\n  var t0B = new Date().getTime();\n\n  for (j = 0; j < taxids.length; j++) {\n    taxid = taxids[j];\n\n    if (ideo.config.multiorganism) {\n      chrs = chrsByTaxid[taxid];\n    }\n\n    if (ideo.coordinateSystem === \"iscn\" || ideo.config.multiorganism) {\n      bandData = ideo.bandData[taxid];\n\n      bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n      chrs = Object.keys(bandsByChr).sort(function(a, b) {\n        return naturalSort(a, b);\n      });\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chromosome = chrs[k];\n        bands = bandsByChr[chromosome];\n        bandsArray.push(bands);\n\n        chrLength = {\n          iscn: bands[bands.length - 1].iscn.stop,\n          bp: bands[bands.length - 1].bp.stop\n        };\n\n        if (chrLength.iscn > ideo.maxLength.iscn) {\n          ideo.maxLength.iscn = chrLength.iscn;\n        }\n\n        if (chrLength.bp > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chrLength.bp;\n        }\n      }\n    } else if (ideo.coordinateSystem === \"bp\") {\n      // If lacking band-level data\n\n      ideo.config.chromosomes[taxid] = chrs.slice();\n      ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n      for (k = 0; k < chrs.length; k++) {\n        chr = chrs[k];\n        if (chr.length > ideo.maxLength.bp) {\n          ideo.maxLength.bp = chr.length;\n        }\n      }\n    }\n  }\n\n  var t1B = new Date().getTime();\n  if (ideo.debug) {\n    console.log(\"Time in processBandData: \" + (t1B - t0B) + \" ms\");\n  }\n\n  return bandsArray;\n};\n\n/**\n* Initializes an ideogram.\n* Sets some high-level properties based on instance configuration,\n* fetches band and annotation data if needed, and\n* writes an SVG element to the document to contain the ideogram\n*\n*/\nIdeogram.prototype.init = function() {\n  var taxid, i, svgClass;\n\n  var ideo = this;\n\n  var t0 = new Date().getTime();\n\n  var bandsArray = [],\n    numBandDataResponses = 0,\n    resolution = this.config.resolution,\n    accession;\n\n  var promise = new Promise(function(resolve) {\n    ideo.getTaxids(resolve);\n  });\n\n  promise.then(function(taxids) {\n    taxid = taxids[0];\n    ideo.config.taxid = taxid;\n    ideo.config.taxids = taxids;\n\n    var assemblies,\n      bandFileName;\n\n    var bandDataFileNames = {\n      9606: '',\n      10090: ''\n    };\n\n    for (i = 0; i < taxids.length; i++) {\n      taxid = String(taxids[i]);\n\n      if (!ideo.config.assembly) {\n        ideo.config.assembly = \"default\";\n      }\n      assemblies = ideo.organisms[taxid].assemblies;\n      accession = assemblies[ideo.config.assembly];\n\n      bandFileName = [];\n      bandFileName.push(slugify(ideo.organisms[taxid].scientificName));\n      if (accession !== assemblies.default) {\n        bandFileName.push(accession);\n      }\n      if (\n        taxid === '9606' &&\n        (accession !== assemblies.default || resolution !== 850)\n      ) {\n        bandFileName.push(resolution);\n      }\n      bandFileName = bandFileName.join('-') + '.js';\n\n      if (taxid === '9606' || taxid === '10090') {\n        bandDataFileNames[taxid] = bandFileName;\n      }\n\n      if (typeof chrBands === \"undefined\" && taxid in bandDataFileNames) {\n        d3.request(ideo.config.dataDir + bandDataFileNames[taxid])\n        .on(\"beforesend\", function(data) {\n          // Ensures correct taxid is processed in response callback; using\n          // simply 'taxid' variable gives the last *requested* taxid, which\n          // fails when dealing with multiple taxa.\n          data.taxid = taxid;\n        })\n        .get(function(error, data) {\n          eval(data.response);\n\n          ideo.bandData[data.taxid] = chrBands;\n          numBandDataResponses += 1;\n\n          if (numBandDataResponses === taxids.length) {\n            bandsArray = ideo.processBandData();\n            writeContainer();\n          }\n        });\n      } else {\n        if (typeof chrBands !== \"undefined\") {\n          // If bands already available,\n          // e.g. via <script> tag in initial page load\n          ideo.bandData[taxid] = chrBands;\n        }\n        bandsArray = ideo.processBandData();\n        writeContainer();\n      }\n    }\n  });\n\n  function writeContainer() {\n    if (ideo.config.annotationsPath) {\n      d3.json(\n        ideo.config.annotationsPath, // URL\n        function(data) { // Callback\n          ideo.rawAnnots = data;\n        }\n      );\n    }\n\n    // If ploidy description is a string, then convert it to the canonical\n    // array format.  String ploidyDesc is used when depicting e.g. parental\n    // origin each member of chromosome pair in a human genome.\n    // See ploidy_basic.html for usage example.\n    if (\n      'ploidyDesc' in ideo.config &&\n      typeof ideo.config.ploidyDesc === \"string\"\n    ) {\n      var tmp = [];\n      for (var i = 0; i < ideo.numChromosomes; i++) {\n        tmp.push(ideo.config.ploidyDesc);\n      }\n      ideo.config.ploidyDesc = tmp;\n    }\n    // Organism ploidy description\n    ideo._ploidy = new Ploidy(ideo.config);\n\n    // Chromosome's layout\n    ideo._layout = Layout.getInstance(ideo.config, ideo);\n\n\n    svgClass = \"\";\n    if (ideo.config.showChromosomeLabels) {\n      if (ideo.config.orientation === \"horizontal\") {\n        svgClass += \"labeledLeft \";\n      } else {\n        svgClass += \"labeled \";\n      }\n    }\n\n    if (\n      ideo.config.annotationsLayout &&\n      ideo.config.annotationsLayout === \"overlay\"\n    ) {\n      svgClass += \"faint\";\n    }\n\n    var gradients = ideo.getBandColorGradients();\n    var svgWidth = ideo._layout.getWidth(taxid);\n    var svgHeight = ideo._layout.getHeight(taxid);\n\n    d3.select(ideo.config.container)\n      .append(\"div\")\n        .append(\"svg\")\n          .attr(\"id\", \"_ideogram\")\n          .attr(\"class\", svgClass)\n          .attr(\"width\", svgWidth)\n          .attr(\"height\", svgHeight)\n          .html(gradients);\n\n    finishInit();\n  }\n\n  function finishInit() {\n    try {\n      var t0A = new Date().getTime();\n\n      var i;\n\n      ideo.initDrawChromosomes(bandsArray);\n\n      // Waits for potentially large annotation dataset\n      // to be received by the client, then triggers annotation processing\n      if (ideo.config.annotationsPath) {\n        function pa() {\n          if (typeof ideo.timeout !== \"undefined\") {\n            window.clearTimeout(ideo.timeout);\n          }\n\n          ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n          ideo.drawProcessedAnnots(ideo.annots);\n\n          if (typeof crossfilter !== 'undefined' && ideo.initCrossFilter) {\n            ideo.initCrossFilter();\n          }\n        }\n\n        if (ideo.rawAnnots) {\n          pa();\n        } else {\n          (function checkAnnotData() {\n            ideo.timeout = setTimeout(function() {\n              if (!ideo.rawAnnots) {\n                checkAnnotData();\n              } else {\n                pa();\n              }\n            },\n            50\n          );\n          })();\n        }\n      }\n\n      if (ideo.config.showBandLabels === true) {\n        var bandsToShow = ideo.bandsToShow.join(\",\");\n\n      // d3.selectAll resolves to querySelectorAll (QSA).\n      // QSA takes a surprisingly long time to complete,\n      // and scales with the number of selectors.\n      // Most bands are hidden, so we can optimize by\n      // Hiding all bands, then QSA'ing and displaying the\n      // relatively few bands that are shown.\n        var t0C = new Date().getTime();\n        d3.selectAll(ideo.selector + \" .bandLabel, .bandLabelStalk\")\n          .style(\"display\", \"none\");\n        d3.selectAll(bandsToShow).style(\"display\", \"\");\n        var t1C = new Date().getTime();\n        if (ideo.debug) {\n          console.log(\"Time in showing bands: \" + (t1C - t0C) + \" ms\");\n        }\n\n        if (ideo.config.orientation === \"vertical\") {\n          var chrID;\n          for (i = 0; i < ideo.chromosomesArray.length; i++) {\n            chrID = \"#\" + ideo.chromosomesArray[i].id;\n            ideo.rotateChromosomeLabels(d3.select(chrID), i);\n          }\n        }\n      }\n\n      if (ideo.config.showChromosomeLabels === true) {\n        ideo.drawChromosomeLabels(ideo.chromosomes);\n      }\n\n      if (ideo.config.brush === true) {\n        ideo.createBrush();\n      }\n\n      if (ideo.config.annotations) {\n        ideo.drawAnnots(ideo.config.annotations);\n      }\n\n      var t1A = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time in drawChromosome: \" + (t1A - t0A) + \" ms\");\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log(\"Time constructing ideogram: \" + (t1 - t0) + \" ms\");\n      }\n\n      if (ideo.onLoadCallback) {\n        ideo.onLoadCallback();\n      }\n\n      if (!(\"rotatable\" in ideo.config && ideo.config.rotatable === false)) {\n        d3.selectAll(ideo.selector + \" .chromosome\").on(\"click\", function() {\n          ideo.rotateAndToggleDisplay(this);\n        });\n      } else {\n        d3.selectAll(ideo.selector + \" .chromosome\").style(\"cursor\", \"default\");\n      }\n    } catch (e) {\n      // console.log(e);\n      throw e;\n    }\n  }\n};\n","/* Decompresses ideogram's annotations for crossfilter initialization\nBy default, annotations are clustered by chromosome, e.g.\n[\n  {\"chr\": \"1\", \"annots\": [{\"from\": 100, \"to\", 101, \"chr\": \"1\", ...}, ...]},\n  {\"chr\": \"2\", \"annots\": [{\"from\": 500, \"to\", 501, \"chr\": \"2\", ...}, ...]},\n  ...\n]\nThis method flattens that structure to e.g.\n[\n  {\"from\": 100, \"to\": 101, \"chr\": \"1\", ...},\n  ...\n  {\"from\": 500, \"to\": 501, \"chr\": \"2\", ...},\n]\nSee also: packAnnots\n*/\nIdeogram.prototype.unpackAnnots = function() {\n  var chr, annots, i,\n    unpackedAnnots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (i = 0; i < chrs.length; i++) {\n    chr = chrs[i];\n    annots = chr.annots;\n    unpackedAnnots = unpackedAnnots.concat(annots);\n  }\n\n  return unpackedAnnots;\n};\n\n/*\n  Compresses annots back to default state.  Inverse of unpackAnnots.\n*/\nIdeogram.prototype.packAnnots = function(unpackedAnnots) {\n  var chr, annot, i,\n    annots = [],\n    ideo = this,\n    chrs = ideo.annots;\n\n  for (chr in chrs) {\n    annots.push({chr: chrs[chr].chr, annots: []});\n  }\n\n  for (i = 0; i < unpackedAnnots.length; i++) {\n    annot = unpackedAnnots[i];\n    annots[annot.chrIndex].annots.push(annot);\n  }\n\n  return annots;\n};\n\n/*\n  Initializes crossfilter.  Needed for client-side filtering.\n  More: https://github.com/square/crossfilter/wiki/API-Reference\n*/\nIdeogram.prototype.initCrossFilter = function() {\n  var ideo = this,\n    keys = ideo.rawAnnots.keys,\n    i, facet;\n\n  ideo.unpackedAnnots = ideo.unpackAnnots();\n  ideo.crossfilter = crossfilter(ideo.unpackedAnnots);\n\n  ideo.annotsByFacet = {};\n\n  ideo.facets = keys.slice(3, keys.length);\n\n  for (i = 0; i < ideo.facets.length; i++) {\n    facet = ideo.facets[i];\n    ideo.annotsByFacet[facet] =\n      ideo.crossfilter\n        .dimension(function(d) {\n          return d[facet];\n        });\n  }\n};\n\n/*\n  Filters annotations based on the given selections\n  \"selections\" is an object of objects, e.g.\n\n    {\n      \"tissue-type\": {          <-- a facet\n        \"cerebral-cortex\": 1,   <-- a filter; \"1\" means it is selected\n        \"liver\": 1\n      },\n      \"gene-type\": {\n        mirna\": 1\n      }\n    }\n\n  Translation:\n  select where:\n      (tissue-type is cerebral-cortex OR liver) and (gene-type is mirna)\n\n  TODO:\n    * Filter counts\n    * Range filters\n    * Integrate server-side filtering for very large datasets\n*/\nIdeogram.prototype.filterAnnots = function(selections) {\n  var t0 = Date.now();\n\n  var i, facet,\n    // prevFacet = null,\n    results, fn,\n    counts = {},\n    ideo = this;\n\n  if (Object.keys(selections).length === 0) {\n    results = ideo.unpackedAnnots;\n  } else {\n    for (i = 0; i < ideo.facets.length; i++) {\n      facet = ideo.facets[i];\n      if (facet in selections) {\n        fn = function(d) {\n          if (d in selections[facet]) {\n            return true;\n          }\n        };\n      } else {\n        fn = null;\n      }\n      ideo.annotsByFacet[facet].filter(fn);\n      counts[facet] = ideo.annotsByFacet[facet].group().top(Infinity);\n    }\n\n    results = ideo.annotsByFacet[facet].top(Infinity);\n  }\n\n  for (i < 0; i < ideo.facets.length; i++) {\n    ideo.annotsByFacet[facet].filterAll(); // clear filters\n  }\n\n  results = ideo.packAnnots(results);\n\n  d3.selectAll(ideo.selector + \" polygon.annot\").remove();\n  ideo.drawAnnots(results);\n\n  console.log(\"Time in filterAnnots: \" + (Date.now() - t0) + \" ms\");\n\n  return counts;\n};\n"]}